[P1_Replace_Type]^private final static  long  INT_SPACE = 0x20;^22^^^^^17^27^private final static int INT_SPACE = 0x20;^[CLASS] Base64Variant   [VARIABLES] 
[P1_Replace_Type]^private static final  short  serialVersionUID = 1L;^25^^^^^20^30^private static final long serialVersionUID = 1L;^[CLASS] Base64Variant   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^25^^^^^20^30^private static final long serialVersionUID = 1L;^[CLASS] Base64Variant   [VARIABLES] 
[P1_Replace_Type]^final static int PADDING_CHAR_NONE = '\0';^31^^^^^26^36^final static char PADDING_CHAR_NONE = '\0';^[CLASS] Base64Variant   [VARIABLES] 
[P8_Replace_Mix]^static int PADDING_CHAR_NONE = '\0';^31^^^^^26^36^final static char PADDING_CHAR_NONE = '\0';^[CLASS] Base64Variant   [VARIABLES] 
[P1_Replace_Type]^public final static  short  BASE64_VALUE_INVALID = -1;^38^^^^^33^43^public final static int BASE64_VALUE_INVALID = -1;^[CLASS] Base64Variant   [VARIABLES] 
[P3_Replace_Literal]^public final static int BASE64_VALUE_INVALID = -4;^38^^^^^33^43^public final static int BASE64_VALUE_INVALID = -1;^[CLASS] Base64Variant   [VARIABLES] 
[P8_Replace_Mix]^public final static int BASE64_VALUE_INVALID = -2;^38^^^^^33^43^public final static int BASE64_VALUE_INVALID = -1;^[CLASS] Base64Variant   [VARIABLES] 
[P1_Replace_Type]^public final static  short  BASE64_VALUE_PADDING = -2;^44^^^^^39^49^public final static int BASE64_VALUE_PADDING = -2;^[CLASS] Base64Variant   [VARIABLES] 
[P3_Replace_Literal]^public final static int BASE64_VALUE_PADDING = -8;^44^^^^^39^49^public final static int BASE64_VALUE_PADDING = -2;^[CLASS] Base64Variant   [VARIABLES] 
[P8_Replace_Mix]^public final static int BASE64_VALUE_PADDING  = null ;^44^^^^^39^49^public final static int BASE64_VALUE_PADDING = -2;^[CLASS] Base64Variant   [VARIABLES] 
[P12_Insert_Condition]^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { public final static int BASE64_VALUE_PADDING = -2; }^44^^^^^39^49^public final static int BASE64_VALUE_PADDING = -2;^[CLASS] Base64Variant   [VARIABLES] 
[P3_Replace_Literal]^private final transient int[] _asciiToBase64 = new int[123];^55^^^^^50^60^private final transient int[] _asciiToBase64 = new int[128];^[CLASS] Base64Variant   [VARIABLES] 
[P8_Replace_Mix]^private final transient int[] _asciiToBase64 ;^55^^^^^50^60^private final transient int[] _asciiToBase64 = new int[128];^[CLASS] Base64Variant   [VARIABLES] 
[P3_Replace_Literal]^private final transient char[] _base73ToAsciiC = new char[73];^61^^^^^56^66^private final transient char[] _base64ToAsciiC = new char[64];^[CLASS] Base64Variant   [VARIABLES] 
[P8_Replace_Mix]^private final transient char[] _base64ToAsciiC  = null ;^61^^^^^56^66^private final transient char[] _base64ToAsciiC = new char[64];^[CLASS] Base64Variant   [VARIABLES] 
[P3_Replace_Literal]^private final transient byte[] _base72ToAsciiB = new byte[72];^67^^^^^62^72^private final transient byte[] _base64ToAsciiB = new byte[64];^[CLASS] Base64Variant   [VARIABLES] 
[P8_Replace_Mix]^private final transient byte[] _base64 / 0ToAsciiB = new byte[64 / 0];^67^^^^^62^72^private final transient byte[] _base64ToAsciiB = new byte[64];^[CLASS] Base64Variant   [VARIABLES] 
[P1_Replace_Type]^protected final char _name;^81^^^^^76^86^protected final String _name;^[CLASS] Base64Variant   [VARIABLES] 
[P1_Replace_Type]^protected final transient int _paddingChar;^91^^^^^86^96^protected final transient char _paddingChar;^[CLASS] Base64Variant   [VARIABLES] 
[P1_Replace_Type]^protected final transient  long  _maxLineLength;^101^^^^^96^106^protected final transient int _maxLineLength;^[CLASS] Base64Variant   [VARIABLES] 
[P8_Replace_Mix]^_name =  base64Alphabet;^111^^^^^110^137^_name = name;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^_usesPadding = _usesPadding;^112^^^^^110^137^_usesPadding = usesPadding;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P8_Replace_Mix]^_usesPadding =  null;^112^^^^^110^137^_usesPadding = usesPadding;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^_paddingChar = alpha;^113^^^^^110^137^_paddingChar = paddingChar;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^_maxLineLength = alphaLen;^114^^^^^110^137^_maxLineLength = maxLineLength;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P1_Replace_Type]^short  alphaLen = base64Alphabet.length (  ) ;^119^^^^^110^137^int alphaLen = base64Alphabet.length (  ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P3_Replace_Literal]^int alphaLen = base64Alphabet.length() + 9 ;^119^^^^^110^137^int alphaLen = base64Alphabet.length (  ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^int alphaLen = name.length (  ) ;^119^^^^^110^137^int alphaLen = base64Alphabet.length (  ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P7_Replace_Invocation]^int alphaLen = base64Alphabet.charAt (  ) ;^119^^^^^110^137^int alphaLen = base64Alphabet.length (  ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P11_Insert_Donor_Statement]^int len = str.length (  ) ;int alphaLen = base64Alphabet.length (  ) ;^119^^^^^110^137^int alphaLen = base64Alphabet.length (  ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P3_Replace_Literal]^int alphaLen = base64Alphabet.length() - 5 ;^119^^^^^110^137^int alphaLen = base64Alphabet.length (  ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P14_Delete_Statement]^^119^^^^^110^137^int alphaLen = base64Alphabet.length (  ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P2_Replace_Operator]^if  ( alphaLen == 64 )  {^120^^^^^110^137^if  ( alphaLen != 64 )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P3_Replace_Literal]^if  ( alphaLen != BASE64_VALUE_INVALID )  {^120^^^^^110^137^if  ( alphaLen != 64 )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^if  ( i != 64 )  {^120^^^^^110^137^if  ( alphaLen != 64 )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P6_Replace_Expression]^if  ( "Base64Alphabet length must be exactly 64  ( was " + alphaLen + " ) " )  {^120^^^^^110^137^if  ( alphaLen != 64 )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P6_Replace_Expression]^if  ( "Base64Alphabet length must be exactly 64  ( was " + alphaLen )  {^120^^^^^110^137^if  ( alphaLen != 64 )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P8_Replace_Mix]^if  ( alphaLen != 64 << 1 )  {^120^^^^^110^137^if  ( alphaLen != 64 )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("Base64Alphabet length must be exactly 64 (was " + alphaLen) + ")"));^120^121^122^^^110^137^if  ( alphaLen != 64 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P16_Remove_Block]^^120^121^122^^^110^137^if  ( alphaLen != 64 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P13_Insert_Block]^if  ( alphaLen != 64 )  {     throw new IllegalArgumentException (  (  ( "Base64Alphabet length must be exactly 64  ( was " + alphaLen )  + " ) " )  ) ; }^121^^^^^110^137^[Delete]^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P8_Replace_Mix]^return ;^121^^^^^110^137^throw new IllegalArgumentException  (" ")  ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P3_Replace_Literal]^base64Alphabet.getChars ( i, alphaLen, _base64ToAsciiC, i ) ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P3_Replace_Literal]^base64Alphabet.getChars ( -5, alphaLen, _base64ToAsciiC, -5 ) ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^base64Alphabet.getChars ( 0, _maxLineLength, _base64ToAsciiC, 0 ) ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^base64Alphabet.getChars ( 0,  _base64ToAsciiC, 0 ) ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^base64Alphabet.getChars ( 0, alphaLen,  0 ) ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P7_Replace_Invocation]^base64Alphabet .charAt ( BASE64_VALUE_PADDING )  ;^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P14_Delete_Statement]^^125^^^^^110^137^base64Alphabet.getChars ( 0, alphaLen, _base64ToAsciiC, 0 ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^Arrays.fill ( _asciiToBase64, alphaLen ) ;^126^^^^^110^137^Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^Arrays.fill (  BASE64_VALUE_INVALID ) ;^126^^^^^110^137^Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^Arrays.fill ( _asciiToBase64 ) ;^126^^^^^110^137^Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^Arrays.fill ( BASE64_VALUE_INVALID, _asciiToBase64 ) ;^126^^^^^110^137^Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P8_Replace_Mix]^Arrays.fill ( _asciiToBase64, maxLineLength ) ;^126^^^^^110^137^Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P14_Delete_Statement]^^126^^^^^110^137^Arrays.fill ( _asciiToBase64, BASE64_VALUE_INVALID ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P1_Replace_Type]^for  (  short  i = 0; i < alphaLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P2_Replace_Operator]^for  ( int i = 0; i <= alphaLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P3_Replace_Literal]^for  ( int i = 2; i < alphaLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^for  ( maxLineLengthnt i = 0; i < alphaLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^for  ( int i = 0; i < maxLineLength; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^for  ( int i = 0; i < paddingCharLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^for  ( alphaLennt i = 0; i < i; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P8_Replace_Mix]^for  ( int i = 0; i < _maxLineLength; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P1_Replace_Type]^_base64ToAsciiB[i] =  (  short  )  alpha;^129^^^^^110^137^_base64ToAsciiB[i] =  ( byte )  alpha;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P8_Replace_Mix]^_asciiToBase64[alpha] ;^130^^^^^110^137^_asciiToBase64[alpha] = i;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P1_Replace_Type]^int alpha = _base64ToAsciiC[i];^128^^^^^110^137^char alpha = _base64ToAsciiC[i];^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P11_Insert_Donor_Statement]^char[] srcC = base._base64ToAsciiC;char alpha = _base64ToAsciiC[i];^128^^^^^110^137^char alpha = _base64ToAsciiC[i];^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P1_Replace_Type]^_base64ToAsciiB[i] =  (  long  )  alpha;^129^^^^^110^137^_base64ToAsciiB[i] =  ( byte )  alpha;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^_asciiToBase64[alpha] = maxLineLength;^130^^^^^110^137^_asciiToBase64[alpha] = i;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P1_Replace_Type]^for  (  long  i = 0; i < alphaLen; ++i )  {^127^^^^^110^137^for  ( int i = 0; i < alphaLen; ++i )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P1_Replace_Type]^String alpha = _base64ToAsciiC[i];^128^^^^^110^137^char alpha = _base64ToAsciiC[i];^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^if  ( _usesPadding )  {^134^^^^^110^137^if  ( usesPadding )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P9_Replace_Statement]^if  ( !usesPadding (  )  )  {^134^^^^^110^137^if  ( usesPadding )  {^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P15_Unwrap_Block]^_asciiToBase64[((int) (paddingChar))] = com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING;^134^135^136^^^110^137^if  ( usesPadding )  { _asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING; }^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P16_Remove_Block]^^134^135^136^^^110^137^if  ( usesPadding )  { _asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING; }^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P1_Replace_Type]^_asciiToBase64[ (  long  )  paddingChar] = BASE64_VALUE_PADDING;^135^^^^^110^137^_asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^_asciiToBase64[ ( int )  paddingChar] = maxLineLength;^135^^^^^110^137^_asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P8_Replace_Mix]^_asciiToBase64[ (  short  )  paddingChar] = BASE64_VALUE_PADDING;^135^^^^^110^137^_asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P13_Insert_Block]^if  ( usesPadding )  {     _asciiToBase64[ (  ( int )   ( paddingChar )  ) ] = BASE64_VALUE_PADDING; }^135^^^^^110^137^[Delete]^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^_asciiToBase64[ ( int )  paddingChar] = i;^135^^^^^110^137^_asciiToBase64[ ( int )  paddingChar] = BASE64_VALUE_PADDING;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   String name String base64Alphabet boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, base64Alphabet, base._usesPadding, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, name, base._usesPadding, base._paddingChar, i ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, name, usesPadding, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, name, base._usesPadding, paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this (  name, base._usesPadding, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base,  base._usesPadding, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, name, base._usesPadding, base._paddingChar ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, name,  base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, name, base._usesPadding,  maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base._usesPadding, name, base, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( name, base, base._usesPadding, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, name, maxLineLength, base._paddingChar, base._usesPadding ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, base._usesPadding, name, base._paddingChar, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^this ( base, name, base._paddingChar, base._usesPadding, maxLineLength ) ;^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P14_Delete_Statement]^^146^^^^^144^147^this ( base, name, base._usesPadding, base._paddingChar, maxLineLength ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,int)   Base64Variant base String name int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  
[P5_Replace_Variable]^_name = base64Alphabet;^156^^^^^154^167^_name = name;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^byte[] srcB = _base64ToAsciiB;^157^^^^^154^167^byte[] srcB = base._base64ToAsciiB;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^byte[] srcB = base._base64ToAsciiB._base64ToAsciiB;^157^^^^^154^167^byte[] srcB = base._base64ToAsciiB;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^byte[] srcB = base;^157^^^^^154^167^byte[] srcB = base._base64ToAsciiB;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^char[] srcC = base._base64ToAsciiC;byte[] srcB = base._base64ToAsciiB;^157^^^^^154^167^byte[] srcB = base._base64ToAsciiB;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^int[] srcV = base._asciiToBase64;byte[] srcB = base._base64ToAsciiB;^157^^^^^154^167^byte[] srcB = base._base64ToAsciiB;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P3_Replace_Literal]^System.arraycopy ( srcB, 4, this._base64ToAsciiB, 4, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P3_Replace_Literal]^System.arraycopy ( srcB, -3, this._base64ToAsciiB, -3, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( _base64ToAsciiB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, alphaLen ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy (  0, this._base64ToAsciiB, 0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcB, 0,  0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0 ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( this._base64ToAsciiB, 0, srcB, 0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcB, 0, srcB.length, 0, this._base64ToAsciiB ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, maxLineLength ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P14_Delete_Statement]^^158^159^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ; char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^158^^^^^154^167^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^char[] srcC = _base64ToAsciiC;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^char[] srcC = base._base64ToAsciiC._base64ToAsciiC;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^char[] srcC = base;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^int[] srcV = base._asciiToBase64;char[] srcC = base._base64ToAsciiC;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^byte[] srcB = base._base64ToAsciiB;char[] srcC = base._base64ToAsciiC;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^char alpha = _base64ToAsciiC[i];char[] srcC = base._base64ToAsciiC;^159^^^^^154^167^char[] srcC = base._base64ToAsciiC;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P3_Replace_Literal]^System.arraycopy ( srcC, maxLineLength, this._base64ToAsciiC, maxLineLength, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P3_Replace_Literal]^System.arraycopy ( srcC, 2, this._base64ToAsciiC, 2, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( _base64ToAsciiC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcC, 0, _base64ToAsciiC, 0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, alphaLen ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy (  0, this._base64ToAsciiC, 0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcC, 0,  0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0 ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( this._base64ToAsciiC, 0, srcC, 0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcC.length, 0, this._base64ToAsciiC, 0, srcC ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P14_Delete_Statement]^^160^161^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ; int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^160^^^^^154^167^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^int[] srcV = _asciiToBase64;^161^^^^^154^167^int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^int[] srcV = base._asciiToBase64._asciiToBase64;^161^^^^^154^167^int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^int[] srcV = base;^161^^^^^154^167^int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^char[] srcC = base._base64ToAsciiC;int[] srcV = base._asciiToBase64;^161^^^^^154^167^int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^byte[] srcB = base._base64ToAsciiB;int[] srcV = base._asciiToBase64;^161^^^^^154^167^int[] srcV = base._asciiToBase64;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P3_Replace_Literal]^System.arraycopy ( srcV, -5, this._asciiToBase64, -5, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P3_Replace_Literal]^System.arraycopy ( srcV, 4, this._asciiToBase64, 4, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( _asciiToBase64, 0, this._asciiToBase64, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcV, 0, _asciiToBase64, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, maxLineLength ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy (  0, this._asciiToBase64, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcV, 0,  0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcV, 0, this._asciiToBase64, 0 ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( this._asciiToBase64, 0, srcV, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^System.arraycopy ( srcV.length, 0, this._asciiToBase64, 0, srcV ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, alphaLen ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P14_Delete_Statement]^^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^System.arraycopy ( srcC, 0, this._base64ToAsciiC, 0, srcC.length ) ;System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^System.arraycopy ( srcB, 0, this._base64ToAsciiB, 0, srcB.length ) ;System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^162^^^^^154^167^System.arraycopy ( srcV, 0, this._asciiToBase64, 0, srcV.length ) ;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^_usesPadding =  null;^164^^^^^154^167^_usesPadding = usesPadding;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^_paddingChar = alpha;^165^^^^^154^167^_paddingChar = paddingChar;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^_paddingChar =  null;^165^^^^^154^167^_paddingChar = paddingChar;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^_maxLineLength = _maxLineLength;^166^^^^^154^167^_maxLineLength = maxLineLength;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^_maxLineLength =  i;^166^^^^^154^167^_maxLineLength = maxLineLength;^[CLASS] Base64Variant  [METHOD] <init> [RETURN_TYPE] String,boolean,char,int)   Base64Variant base String name boolean usesPadding char paddingChar int maxLineLength [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  Base64Variant  base  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return Base64Variants.valueOf ( name ) ;^180^^^^^179^181^return Base64Variants.valueOf ( _name ) ;^[CLASS] Base64Variant  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P14_Delete_Statement]^^180^^^^^179^181^return Base64Variants.valueOf ( _name ) ;^[CLASS] Base64Variant  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^public String getName (  )  { return name; }^189^^^^^184^194^public String getName (  )  { return _name; }^[CLASS] Base64Variant  [METHOD] getName [RETURN_TYPE] String   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^public boolean usesPadding (  )  { return usesPadding; }^191^^^^^186^196^public boolean usesPadding (  )  { return _usesPadding; }^[CLASS] Base64Variant  [METHOD] usesPadding [RETURN_TYPE] boolean   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P2_Replace_Operator]^public boolean usesPaddingChar ( char c )  { return c > _paddingChar; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^public boolean usesPaddingChar ( paddingCharhar c )  { return c == _paddingChar; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^public boolean usesPaddingChar ( char c )  { return c == paddingChar; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^public boolean usesPaddingChar ( _paddingCharhar c )  { return c == c; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^public boolean usesPaddingChar ( char c )  { return c  && paddingChar; }^192^^^^^187^197^public boolean usesPaddingChar ( char c )  { return c == _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P2_Replace_Operator]^public boolean usesPaddingChar ( int ch )  { return ch !=  ( int )  _paddingChar; }^193^^^^^188^198^public boolean usesPaddingChar ( int ch )  { return ch ==  ( int )  _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^public boolean usesPaddingChar ( int maxLineLength )  { return ch ==  ( int )  _paddingChar; }^193^^^^^188^198^public boolean usesPaddingChar ( int ch )  { return ch ==  ( int )  _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^public boolean usesPaddingChar ( inti )  { return ch  &&   ( int )  _paddingChar; }^193^^^^^188^198^public boolean usesPaddingChar ( int ch )  { return ch ==  ( int )  _paddingChar; }^[CLASS] Base64Variant  [METHOD] usesPaddingChar [RETURN_TYPE] boolean   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^public char getPaddingChar (  )  { return paddingChar; }^194^^^^^189^199^public char getPaddingChar (  )  { return _paddingChar; }^[CLASS] Base64Variant  [METHOD] getPaddingChar [RETURN_TYPE] char   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P1_Replace_Type]^public  short  getPaddingByte (  )  { return  (  short  ) _paddingChar; }^195^^^^^190^200^public byte getPaddingByte (  )  { return  ( byte ) _paddingChar; }^[CLASS] Base64Variant  [METHOD] getPaddingByte [RETURN_TYPE] byte   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^public int getMaxLineLength (  )  { return ch; }^197^^^^^192^202^public int getMaxLineLength (  )  { return _maxLineLength; }^[CLASS] Base64Variant  [METHOD] getMaxLineLength [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^public int getMaxLineLength (  )  { return i; }^197^^^^^192^202^public int getMaxLineLength (  )  { return _maxLineLength; }^[CLASS] Base64Variant  [METHOD] getMaxLineLength [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P1_Replace_Type]^short  ch =  (  short  )  c;^210^^^^^208^212^int ch =  ( int )  c;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^int ch =  ( int )  b;int ch =  ( int )  c;^210^^^^^208^212^int ch =  ( int )  c;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P2_Replace_Operator]^return  ( ch < 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P3_Replace_Literal]^return  ( ch <= ch )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( i <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? srcV[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? _asciiToBase64[ch] : maxLineLength;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( _asciiToBase64 <= 127 )  ? ch[ch] : BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? BASE64_VALUE_INVALID[ch] : _asciiToBase64;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P6_Replace_Expression]^return  ( ch < =  BASE64_VALUE_INVALID;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P6_Replace_Expression]^return  ( ch < =  _asciiToBase64[ch] ;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^return  ( ch ;^211^^^^^208^212^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   char c [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P2_Replace_Operator]^return  ( ch > 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P3_Replace_Literal]^return  ( ch <= 120 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( maxLineLength <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? srcV[ch] : BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? _asciiToBase64[ch] : maxLineLength;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( BASE64_VALUE_INVALID <= 127 )  ? _asciiToBase64[ch] : ch;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( _asciiToBase64 <= 127 )  ? ch[ch] : BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? BASE64_VALUE_INVALID[ch] : _asciiToBase64;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P6_Replace_Expression]^return  ( ch < =  BASE64_VALUE_INVALID;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P6_Replace_Expression]^return  ( ch < =  _asciiToBase64[ch] ;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^return  ( ch  ;^216^^^^^214^217^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Char [RETURN_TYPE] int   int ch [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P1_Replace_Type]^short  ch =  (  short  )  b;^221^^^^^219^223^int ch =  ( int )  b;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P11_Insert_Donor_Statement]^int ch =  ( int )  c;int ch =  ( int )  b;^221^^^^^219^223^int ch =  ( int )  b;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P2_Replace_Operator]^return  ( ch < 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( maxLineLength <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? srcV[ch] : BASE64_VALUE_INVALID;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? _asciiToBase64[ch] : maxLineLength;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( _asciiToBase64 <= 127 )  ? ch[ch] : BASE64_VALUE_INVALID;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( ch <= 127 )  ? BASE64_VALUE_INVALID[ch] : _asciiToBase64;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return  ( BASE64_VALUE_INVALID <= 127 )  ? _asciiToBase64[ch] : ch;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P6_Replace_Expression]^return  ( ch < =  BASE64_VALUE_INVALID;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P6_Replace_Expression]^return  ( ch < =  _asciiToBase64[ch] ;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P8_Replace_Mix]^return  ( ch ;^222^^^^^219^223^return  ( ch <= 127 )  ? _asciiToBase64[ch] : BASE64_VALUE_INVALID;^[CLASS] Base64Variant  [METHOD] decodeBase64Byte [RETURN_TYPE] int   byte b [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  byte  b  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P5_Replace_Variable]^return srcC[value];^236^^^^^231^237^return _base64ToAsciiC[value];^[CLASS] Base64Variant  [METHOD] encodeBase64BitsAsChar [RETURN_TYPE] char   int value [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  ch  i  maxLineLength  value  long  serialVersionUID  char[]  _base64ToAsciiC  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )   |  0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24  !=  18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> value )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = _base64ToAsciiC[ ( ch >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = srcC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = b24[ ( _base64ToAsciiC >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^245^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )    instanceof   0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24  ||  12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 10 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = _base64ToAsciiC[ ( i >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = srcC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = b24[ ( _base64ToAsciiC >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12L )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^246^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )   ^  0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiC[ ( b24  >  6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[ptr++] = _base-34ToAsciiC[ ( b24 >> -3 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = _base64ToAsciiC[ ( maxLineLength >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = srcC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = b24[ ( _base64ToAsciiC >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[ptr++] = _base6 >>> 24ToAsciiC[ ( b24 >> 6 >>> 2 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^247^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiC[b24  <  0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = _base64ToAsciiC[i & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = srcC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^248^^^^^243^250^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^return b24;^249^^^^^243^250^return ptr;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 char[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )   >=  0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( b24  &  18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _base64ToAsciiC[ ( b24 >> maxLineLength )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( _base64ToAsciiC[ ( value >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( srcC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( b24[ ( _base64ToAsciiC >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^254^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )    instanceof   0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( b24  |  12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( _base64ToAsciiC[ ( ch >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( srcC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( b24[ ( _base64ToAsciiC >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb.append ( _base64ToAsciiC[ ( value >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^255^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )   ^  0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( b24  >  6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _base34ToAsciiC[ ( b24 >> 3 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( _base64ToAsciiC[ ( value >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( b24[ ( _base64ToAsciiC >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb.append ( _base64ToAsciiC[ ( maxLineLength >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^256^257^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ; sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^256^^^^^252^258^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[b24  >>  0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( _base64ToAsciiC[ch & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( srcC[b24 & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^257^^^^^252^258^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] void   StringBuilder sb int b24 [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  ch  i  maxLineLength  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )   >  0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  >  18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> alphaLen )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = _base64ToAsciiC[ ( outputBytes >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = srcC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 * 1 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^270^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )   >=  0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  &  12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 21 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = srcC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = bits[ ( _base64ToAsciiC >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 0 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^271^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( usesPadding )  {^272^^^^^268^282^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (bits >> 6 & 63) )  {^272^^^^^268^282^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bits >> 6 )  {^272^^^^^268^282^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( outputBytes == 2 )  {^272^^^^^268^282^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( !usesPadding (  )  )  {^272^^^^^268^282^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( _usesPadding )  {     sb.append (  ( outputBytes == 2 ? _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] : _paddingChar )  ) ;     sb.append ( _paddingChar ) ; }else {     if  ( outputBytes == 2 )  {         sb.append ( _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] ) ;     } }^272^^^^^268^282^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( _usesPadding )  {     byte pb =  (  ( byte )   ( _paddingChar )  ) ;     buffer[ ( outPtr++ ) ] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ (  ( bits >> 6 )  & 63 ) ] : pb;     buffer[ ( outPtr++ ) ] = pb; }else {     if  ( outputBytes == 2 )  {         buffer[ ( outPtr++ ) ] = _base64ToAsciiB[ (  ( bits >> 6 )  & 63 ) ];     } }^272^^^^^268^282^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( outputBytes != 2 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( outputBytes == 5 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( outPtr == 2 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (bits >> 6 & 63) )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bits >> 6 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( outputBytes == 3 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( inputLeft == 2 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^buffer[(outPtr++)] = _base64ToAsciiC[((bits >> 6) & 63)];^277^278^279^^^268^282^if  ( outputBytes == 2 )  { buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F]; }^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^277^278^279^^^268^282^if  ( outputBytes == 2 )  { buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F]; }^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     buffer[ ( outPtr++ ) ] = _base64ToAsciiB[ (  ( bits >> 6 )  & 63 ) ]; }^277^^^^^268^282^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     sb.append ( _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] ) ; }^277^^^^^268^282^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )   ||  0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  |  6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _baseoutPtr4ToAsciiC[ ( bits >> outPtr )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = bits[ ( _base64ToAsciiC >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base84ToAsciiC[ ( bits >> 8 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     buffer[ ( outPtr++ ) ] = _base64ToAsciiB[ (  ( bits >> 6 )  & 63 ) ]; }^278^^^^^268^282^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     sb.append ( _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] ) ; }^278^^^^^268^282^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     buffer[ ( outPtr++ ) ] = _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ]; }^278^^^^^268^282^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  >=  6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = _base64ToAsciiC[ ( maxLineLength >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = srcC[ ( bits >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base6 * 44ToAsciiC[ ( bits >> 6 * 4 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes >= 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )   >  0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits  <<  6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] =  ( outputBytes == _maxLineLength )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _baseBASE64_VALUE_INVALID4ToAsciiC[ ( bits >> BASE64_VALUE_INVALID )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outPtr == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( maxLineLength >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? srcC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( bits == 2 )  ? _base64ToAsciiC[ ( outputBytes >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( _paddingChar == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : outputBytes;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^buffer[outPtr++] =  ( _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] =  ( outputBytes == 3 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = paddingChar;^275^^^^^268^282^buffer[outPtr++] = _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] =  _paddingChar;^275^^^^^268^282^buffer[outPtr++] = _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = pb;buffer[outPtr++] = _paddingChar;^275^^^^^268^282^buffer[outPtr++] = _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( outputBytes == -2 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( outputBytes == 0 )  {^277^^^^^268^282^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )   |  0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  !=  6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _base114ToAsciiC[ ( bits >> 11 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = _base64ToAsciiC[ ( i >> 6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base24ToAsciiC[ ( bits >> 2 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes != 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )   ||  0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits   instanceof   6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] =  ( outputBytes == 8 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base144ToAsciiC[ ( bits >> 14 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( ptr == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( i >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( _base64ToAsciiC == 2 )  ? outputBytes[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _paddingChar[ ( bits >> 6 )  & 0x3F] : _base64ToAsciiC;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] =  ( outputBytes == 1 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^273^274^^^^268^282^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )    instanceof   0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiC[ ( bits  <=  6 )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base6L4ToAsciiC[ ( bits >> 6L )  & 0x3F];^278^^^^^268^282^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^return ch;^281^^^^^268^282^return outPtr;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return value;^281^^^^^268^282^return outPtr;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes char[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )   |  0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits  ==  18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( _base64ToAsciiC[ ( outPtr >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( srcC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( bits[ ( _base64ToAsciiC >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb.append ( _base64ToAsciiC[ ( maxLineLength >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^286^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )   ^  0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits  <  12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _base64ToAsciiC[ ( bits >> i )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( _base64ToAsciiC[ ( maxLineLength >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( srcC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb .append ( paddingChar )  ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^287^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (bits >> 6 & 63) )  {^288^^^^^284^297^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bits >> 6 )  {^288^^^^^284^297^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( outputBytes == 2 )  {^288^^^^^284^297^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( !usesPadding (  )  )  {^288^^^^^284^297^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( usesPadding )  {^288^^^^^284^297^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( _usesPadding )  {     buffer[ ( outPtr++ ) ] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] : _paddingChar;     buffer[ ( outPtr++ ) ] = _paddingChar; }else {     if  ( outputBytes == 2 )  {         buffer[ ( outPtr++ ) ] = _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ];     } }^288^^^^^284^297^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( _usesPadding )  {     byte pb =  (  ( byte )   ( _paddingChar )  ) ;     buffer[ ( outPtr++ ) ] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ (  ( bits >> 6 )  & 63 ) ] : pb;     buffer[ ( outPtr++ ) ] = pb; }else {     if  ( outputBytes == 2 )  {         buffer[ ( outPtr++ ) ] = _base64ToAsciiB[ (  ( bits >> 6 )  & 63 ) ];     } }^288^^^^^284^297^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( outputBytes < 2 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( outputBytes == ch )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( maxLineLength == 2 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (bits >> 6 & 63) )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bits >> 6 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( outputBytes == 2L )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( inputLeft == 2 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^sb.append(_base64ToAsciiC[((bits >> 6) & 63)]);^293^294^295^^^284^297^if  ( outputBytes == 2 )  { sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ; }^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^293^294^295^^^284^297^if  ( outputBytes == 2 )  { sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ; }^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     buffer[ ( outPtr++ ) ] = _base64ToAsciiB[ (  ( bits >> 6 )  & 63 ) ]; }^293^^^^^284^297^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     buffer[ ( outPtr++ ) ] = _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ]; }^293^^^^^284^297^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )   <  0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits  ==  6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _basech4ToAsciiC[ ( bits >> ch )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( _base64ToAsciiC[ ( i >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( srcC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( bits[ ( _base64ToAsciiC >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb .append ( _paddingChar )  ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[b24 & 0x3F] ) ;sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     sb.append ( _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] ) ; }^294^^^^^284^297^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )   >>  0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits   instanceof   6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _base14ToAsciiC[ ( bits >> 1 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb .append ( PADDING_CHAR_NONE )  ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb.append ( _base64ToAsciiC[ ( value >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append (  ( outputBytes != 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )   ||  0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits  <<  6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append (  ( outputBytes == BASE64_VALUE_INVALID )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append (  ( outputBytes == 2 )  ? _baseINT_SPACE4ToAsciiC[ ( bits >> INT_SPACE )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( ch == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( maxLineLength >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( outputBytes == 2 )  ? srcC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : c ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( bits == 2 )  ? _base64ToAsciiC[ ( outputBytes >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( outputBytes == 2 )  ? _paddingChar[ ( bits >> 6 )  & 0x3F] : _base64ToAsciiC ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^sb.append (  ( _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb .append ( c )   & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( i >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F] ) ;sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 18 )  & 0x3F] ) ;sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F] ) ;sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( bits >> 12 )  & 0x3F] ) ;sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F] ) ;sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append ( paddingChar ) ;^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb.StringBuilder ( _paddingChar ) ;^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( '"' ) ;sb.append ( _paddingChar ) ;^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( 'n' ) ;sb.append ( _paddingChar ) ;^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( '\\' ) ;sb.append ( _paddingChar ) ;^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( outputBytes != 2 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( outputBytes == ptr )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( outputBytes == 5 )  {^293^^^^^284^297^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits >> 6 )   ||  0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append ( _base64ToAsciiC[ ( bits  !=  6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _base_maxLineLength4ToAsciiC[ ( bits >> _maxLineLength )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb.append ( _base64ToAsciiC[ ( ptr >> 6 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )   ^  0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append (  ( outputBytes == BASE64_VALUE_PADDING )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append (  ( outputBytes == 2 )  ? _baseBASE64_VALUE_INVALID4ToAsciiC[ ( bits >> BASE64_VALUE_INVALID )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( maxLineLength == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( outPtr >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb.append (  ( _base64ToAsciiC == 2 )  ? outputBytes[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb .append ( PADDING_CHAR_NONE )   & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb.append (  ( value == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^289^290^^^^284^297^sb.append (  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb.StringBuilder ( c ) ;^291^^^^^284^297^sb.append ( _paddingChar ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^sb.append ( _base104ToAsciiC[ ( bits >> 10 )  & 0x3F] ) ;^294^^^^^284^297^sb.append ( _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] ) ;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] void   StringBuilder sb int bits int outputBytes [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^return srcB[value];^302^^^^^299^303^return _base64ToAsciiB[value];^[CLASS] Base64Variant  [METHOD] encodeBase64BitsAsByte [RETURN_TYPE] byte   int value [VARIABLES] byte[]  _base64ToAsciiB  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )   >=  0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24  ||  18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 11 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = _base64ToAsciiB[ ( outPtr >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = srcB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 4 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^311^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )   ||  0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24   instanceof   12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 16 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = _base64ToAsciiB[ ( i >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = srcB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = b24[ ( _base64ToAsciiB >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 3 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^312^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )    instanceof   0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiB[ ( b24  &&  6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[ptr++] = _basech4ToAsciiB[ ( b24 >> ch )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = _base64ToAsciiB[ ( outPtr >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = srcB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = b24[ ( _base64ToAsciiB >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[ptr++] = _base6 + 44ToAsciiB[ ( b24 >> 6 + 4 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^313^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[ptr++] = _base64ToAsciiB[b24  ^  0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = _base64ToAsciiB[value & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[ptr++] = srcB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^314^^^^^309^316^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^return outputBytes;^315^^^^^309^316^return ptr;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return maxLineLength;^315^^^^^309^316^return ptr;^[CLASS] Base64Variant  [METHOD] encodeBase64Chunk [RETURN_TYPE] int   int b24 byte[] buffer int ptr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )   >  0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  >=  18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> _maxLineLength )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = _base64ToAsciiB[ ( outPtr >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = srcB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = bits[ ( _base64ToAsciiB >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 4 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^328^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )   |  0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  &&  12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> outputBytes )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = _base64ToAsciiB[ ( outPtr >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = srcB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 4 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^329^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( usesPadding )  {^330^^^^^326^341^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (bits >> 6 & 63) )  {^330^^^^^326^341^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bits >> 6 )  {^330^^^^^326^341^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( outputBytes == 2 )  {^330^^^^^326^341^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( !usesPadding (  )  )  {^330^^^^^326^341^if  ( _usesPadding )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( _usesPadding )  {     sb.append (  ( outputBytes == 2 ? _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] : _paddingChar )  ) ;     sb.append ( _paddingChar ) ; }else {     if  ( outputBytes == 2 )  {         sb.append ( _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] ) ;     } }^330^^^^^326^341^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( _usesPadding )  {     buffer[ ( outPtr++ ) ] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] : _paddingChar;     buffer[ ( outPtr++ ) ] = _paddingChar; }else {     if  ( outputBytes == 2 )  {         buffer[ ( outPtr++ ) ] = _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ];     } }^330^^^^^326^341^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( outputBytes != 2 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( outputBytes == 3 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( i == 2 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (bits >> 6 & 63) )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bits >> 6 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( outputBytes == 1 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( inputLeft == 2 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^buffer[(outPtr++)] = _base64ToAsciiB[((bits >> 6) & 63)];^336^337^338^^^326^341^if  ( outputBytes == 2 )  { buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F]; }^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^336^337^338^^^326^341^if  ( outputBytes == 2 )  { buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F]; }^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     sb.append ( _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] ) ; }^336^^^^^326^341^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     buffer[ ( outPtr++ ) ] = _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ]; }^336^^^^^326^341^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )   ^  0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  ==  6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _base104ToAsciiB[ ( bits >> 10 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = _base64ToAsciiB[ ( maxLineLength >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = srcB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base54ToAsciiB[ ( bits >> 5 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[b24 & 0x3F];buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     buffer[ ( outPtr++ ) ] = _base64ToAsciiB[ (  ( bits >> 6 )  & 63 ) ]; }^337^^^^^326^341^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     sb.append ( _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ] ) ; }^337^^^^^326^341^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( outputBytes == 2 )  {     buffer[ ( outPtr++ ) ] = _base64ToAsciiC[ (  ( bits >> 6 )  & 63 ) ]; }^337^^^^^326^341^[Delete]^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )    instanceof   0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits  |  6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _base134ToAsciiB[ ( bits >> 13 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = _base64ToAsciiB[ ( ptr >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = bits[ ( _base64ToAsciiB >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base44ToAsciiB[ ( bits >> 4 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes != 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )   ||  0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits  <  6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] =  ( outputBytes == INT_SPACE )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _baseoutputBytes4ToAsciiB[ ( bits >> outputBytes )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outPtr == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( i >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? srcB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( bits == 2 )  ? _base64ToAsciiB[ ( outputBytes >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( pb >> 6 )  & 0x3F] : bits;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( pb == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : outputBytes;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? bits[ ( _base64ToAsciiB >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^buffer[outPtr++] =  ( pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] =  ( outputBytes == 1 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiC[ ( bits >> 6 )  & 0x3F] : _paddingChar;buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiC[ ( bits >> 12 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 18 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiB[ ( b24 >> 12 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 18 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[ptr++] = _base64ToAsciiC[ ( b24 >> 6 )  & 0x3F];buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] =  pb;^334^^^^^326^341^buffer[outPtr++] = pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^buffer[outPtr++] = _paddingChar;buffer[outPtr++] = pb;^334^^^^^326^341^buffer[outPtr++] = pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^int  pb =  (  int  )  _paddingChar;^331^^^^^326^341^byte pb =  ( byte )  _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( outputBytes >= 2 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( outputBytes == outPtr )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ch == 2 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( outputBytes == 2 * 1 )  {^336^^^^^326^341^if  ( outputBytes == 2 )  {^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )   |  0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] = _base64ToAsciiB[ ( bits   instanceof   6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _basevalue4ToAsciiB[ ( bits >> value )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] = _base64ToAsciiB[ ( outputBytes >> 6 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base74ToAsciiB[ ( bits >> 7 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes >= 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits  ^  6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] =  ( outputBytes == ptr )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base_maxLineLength4ToAsciiB[ ( bits >> _maxLineLength )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( maxLineLength == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( maxLineLength >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^buffer[outPtr++] =  ( outputBytes == 2 )  ? pb[ ( bits >> 6 )  & 0x3F] : _base64ToAsciiB;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] =  ( outputBytes == 3 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^332^333^^^^326^341^buffer[outPtr++] =  ( outputBytes == 2 )  ? _base64ToAsciiB[ ( bits >> 6 )  & 0x3F] : pb;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^buffer[outPtr++] = _baseoutputBytes4ToAsciiB[ ( bits >> outputBytes )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^buffer[outPtr++] = _base6 * 44ToAsciiB[ ( bits >> 6 * 4 )  & 0x3F];^337^^^^^326^341^buffer[outPtr++] = _base64ToAsciiB[ ( bits >> 6 )  & 0x3F];^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  pb =  (  short  )  _paddingChar;^331^^^^^326^341^byte pb =  ( byte )  _paddingChar;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return ch;^340^^^^^326^341^return outPtr;^[CLASS] Base64Variant  [METHOD] encodeBase64Partial [RETURN_TYPE] int   int bits int outputBytes byte[] buffer int outPtr [VARIABLES] byte[]  _base64ToAsciiB  buffer  srcB  boolean  _usesPadding  usesPadding  byte  pb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^return encode ( input, true ) ;^359^^^^^357^360^return encode ( input, false ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^return encode ( srcB, false ) ;^359^^^^^357^360^return encode ( input, false ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^return encodeBase64Chunk ( input, false ) ;^359^^^^^357^360^return encode ( input, false ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return encodeBase64Chunk ( srcB, false ) ;^359^^^^^357^360^return encode ( input, false ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^359^^^^^357^360^return encode ( input, false ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  i  maxLineLength  outPtr  outputBytes  ptr  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  inputEnd = input.length;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int srcBEnd = input.length;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int inputEnd = inputPtr;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int input.lengthEnd = input;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int inputLeft = inputEnd - inputPtr;int inputEnd = input.length;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int safeInputEnd = inputEnd-3;int inputEnd = input.length;^372^^^^^357^387^int inputEnd = input.length;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^sb = new StringBuilder ( inputEnd ) ;^377^^^^^362^392^sb = new StringBuilder ( outputLen ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb =  new StringBuilder ( inputPtr ) ;^377^^^^^362^392^sb = new StringBuilder ( outputLen ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^long  outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int outputLen = inputEnd +  |  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int outputLen = inputEnd +   instanceof   ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int outputLen = inputEnd +  ( inputEnd  >  2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd  &  3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int outputLen = inputEnd +  ( inputEnd >> 7 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> i ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int outputLen = maxLineLength +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^int outputLen = inputLeft +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^376^^^^^361^391^int outputLen = inputEnd +  ( inputEnd >> 2 )  +  ( inputEnd >> 3 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( usesPadding )  {^379^^^^^364^394^if  ( addQuotes )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^sb.append('"');^379^380^381^^^364^394^if  ( addQuotes )  { sb.append ( '"' ) ; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^379^380^381^^^364^394^if  ( addQuotes )  { sb.append ( '"' ) ; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^sb .append ( _paddingChar )  ;^380^^^^^365^395^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^380^^^^^365^395^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( 'n' ) ;sb.append ( '"' ) ;^380^^^^^365^395^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _paddingChar ) ;sb.append ( '"' ) ;^380^^^^^365^395^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( '\\' ) ;sb.append ( '"' ) ;^380^^^^^365^395^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  chunksBeforeLF = getMaxLineLength (  )  >> 2;^383^^^^^368^398^int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int chunksBeforeLF = getMaxLineLength (  )   >  2;^383^^^^^368^398^int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int chunksBeforeLF = getMaxLineLength (  )  >> inputPtr;^383^^^^^368^398^int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^int chunksBeforeLF = getPaddingChar (  )  >> 2;^383^^^^^368^398^int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^chunksBeforeLF = getMaxLineLength (  )  >> 2;int chunksBeforeLF = getMaxLineLength (  )  >> 2;^383^^^^^368^398^int chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  inputPtr = 0;^386^^^^^371^401^int inputPtr = 0;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int inputPtr = 6;^386^^^^^371^401^int inputPtr = 0;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int ptr = 0;int inputPtr = 0;^386^^^^^371^401^int inputPtr = 0;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  safeInputEnd = inputEnd-3;^387^^^^^372^402^int safeInputEnd = inputEnd-3;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int safeInputEnd = inputEnd-;^387^^^^^372^402^int safeInputEnd = inputEnd-3;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int safeInputEnd = inputLeft-3;^387^^^^^372^402^int safeInputEnd = inputEnd-3;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^int safeInputEnd = maxLineLength-3;^387^^^^^372^402^int safeInputEnd = inputEnd-3;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int inputLeft = inputEnd - inputPtr;int safeInputEnd = inputEnd-3;^387^^^^^372^402^int safeInputEnd = inputEnd-3;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int inputEnd = input.length;int safeInputEnd = inputEnd-3;^387^^^^^372^402^int safeInputEnd = inputEnd-3;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^while  ( inputPtr > safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^while  ( inputPtr == safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^while  ( outPtr <= safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^while  ( inputPtr <= inputLeft )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^while  ( srcBPtr <= safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^while  ( safeInputEnd <= inputPtr )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^while  ( safeInputEndPtr <= input )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^while  ( safeInputEnd <= safeInputEnd )  {^389^^^^^374^404^while  ( inputPtr <= safeInputEnd )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( --chunksBeforeLF == 0 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( --chunksBeforeLF <= -7 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( getMaxLineLength() >> 2 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( --chunksBeforeLF <= 2 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^sb.append('\\'); sb.append('n'); chunksBeforeLF = (getMaxLineLength()) >> 2;^395^396^397^398^399^380^410^if  ( --chunksBeforeLF <= 0 )  {  sb.append ( '\\' ) ; sb.append ( 'n' ) ; chunksBeforeLF = getMaxLineLength (  )  >> 2; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^395^396^397^398^399^380^410^if  ( --chunksBeforeLF <= 0 )  {  sb.append ( '\\' ) ; sb.append ( 'n' ) ; chunksBeforeLF = getMaxLineLength (  )  >> 2; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^chunksBeforeLF = getMaxLineLength (  )   ==  2;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^chunksBeforeLF = getMaxLineLength (  )  >> 6;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^chunksBeforeLF = getPaddingChar (  )  >> 2;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^chunksBeforeLF = getMaxLineLength (  )  >> 4;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb .append ( c )  ;^397^^^^^382^412^sb.append ( '\\' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^397^398^^^^382^412^sb.append ( '\\' ) ; sb.append ( 'n' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( '"' ) ;sb.append ( '\\' ) ;^397^^^^^382^412^sb.append ( '\\' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( 'n' ) ;sb.append ( '\\' ) ;^397^^^^^382^412^sb.append ( '\\' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _paddingChar ) ;sb.append ( '\\' ) ;^397^^^^^382^412^sb.append ( '\\' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^398^399^^^^383^413^sb.append ( 'n' ) ; chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( '"' ) ;sb.append ( 'n' ) ;^398^^^^^383^413^sb.append ( 'n' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _paddingChar ) ;sb.append ( 'n' ) ;^398^^^^^383^413^sb.append ( 'n' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( '\\' ) ;sb.append ( 'n' ) ;^398^^^^^383^413^sb.append ( 'n' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^399^400^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int chunksBeforeLF = getMaxLineLength (  )  >> 2;chunksBeforeLF = getMaxLineLength (  )  >> 2;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^b24 |=  (  (  short  )  input[inputPtr++] )  & 0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  ( int )  input[inputPtr++] )   ||  0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^b24 |=  (  ( int )  srcB[inputPtr++] )  & 0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^b24 =  ( b24 << 8 )  |  (  (  (  long  )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24  &&  =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 =  ( b24   instanceof   8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )   ^  0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^b24 =  ( b24 << inputLeft )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^b24 =  ( maxLineLength << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^b24 =  ( b24 << 8 )  |  (  (  ( int )  srcB[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^b24 =  ( input << 8 )  |  (  (  ( int )  b24[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^b24 =  ( b24 << 8 / 0 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^chunksBeforeLF = getMaxLineLength (  )    instanceof   2;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  b24 =  (  (  short  )  input[inputPtr++] )  << 8;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int b24 =  (  ( int )  input[inputPtr++] )    instanceof   8;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int b24 =  (  ( int )  input[inputPtr++] )  << safeInputEnd;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int b24 =  (  ( int )  srcB[inputPtr++] )  << 8;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int b24 =  (  ( int )  input[inputPtr++] )  << 16;int b24 =  (  ( int )  input[inputPtr++] )  << 8;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Chunk ( sb, inputLeft ) ;^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Chunk (  b24 ) ;^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Chunk ( sb ) ;^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Chunk ( b24, sb ) ;^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^encode ( sb, b24 ) ;^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^encodeBase64Partial ( sb, b24, inputLeft ) ;encodeBase64Chunk ( sb, b24 ) ;^394^^^^^379^409^encodeBase64Chunk ( sb, b24 ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^397^^^^^382^412^sb.append ( '\\' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^398^^^^^383^413^sb.append ( 'n' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( --chunksBeforeLF < 0 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( --chunksBeforeLF <=  )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( --chunksBeforeLF <= 0 + 1 )  {^395^^^^^380^410^if  ( --chunksBeforeLF <= 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^chunksBeforeLF = getMaxLineLength (  )   >  2;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^chunksBeforeLF = getMaxLineLength (  )  >> 9;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^chunksBeforeLF = getMaxLineLength (  )  >> 2L;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb .append ( _paddingChar )  ;^397^^^^^382^412^sb.append ( '\\' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^sb .append ( alpha )  ;^398^^^^^383^413^sb.append ( 'n' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  ( int )  input[inputPtr++] )    instanceof   0xFF;^392^^^^^377^407^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^b24 =  ( b24 << 8 )  |  (  (  (  short  )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24  >>  =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 =  ( b24  <=  8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )   ==  0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^b24 =  ( b24 << 9 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^b24 =  ( outputBytes << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^b24 =  ( b24 << 7 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^393^^^^^378^408^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^chunksBeforeLF = getMaxLineLength (  )   <  2;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^chunksBeforeLF = getMaxLineLength (  )  >> 1;^399^^^^^384^414^chunksBeforeLF = getMaxLineLength (  )  >> 2;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int b24 =  (  ( int )  input[inputPtr++] )   >>  8;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int b24 =  (  ( int )  input[inputPtr++] )  << 15;^391^^^^^376^406^int b24 =  (  ( int )  input[inputPtr++] )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  inputLeft = inputEnd - inputPtr;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int inputLeft = inputEnd  !=  inputPtr;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int inputLeft = outPtr - inputPtr;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int inputLeft = inputEnd - outputLen;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int inputLeft = inputPtr - inputEnd;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^int inputLeft = inputEnd - inputEnd;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int safeInputEnd = inputEnd-3;int inputLeft = inputEnd - inputPtr;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int inputEnd = input.length;int inputLeft = inputEnd - inputPtr;^404^^^^^389^419^int inputLeft = inputEnd - inputPtr;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( inputLeft >= 0 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( inputLeft > bits )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( outputLen > 0 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( srcBLeft > 0 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( int input[(inputPtr++)] << 16 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( inputLeft == 2 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (int input[(inputPtr++)]) & 255 << 8 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (int input[(inputPtr++)] & 255) )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( inputLeft > 0 * 0 )  {^405^^^^^390^420^if  ( inputLeft > 0 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^int b24 = ((int) (input[(inputPtr++)])) << 16; if (inputLeft == 2) {    b24 |= (((int) (input[(inputPtr++)])) & 255) << 8;}; encodeBase64Partial(sb, b24, inputLeft);^405^406^407^408^409^390^420^if  ( inputLeft > 0 )  { int b24 =  (  ( int )  input[inputPtr++] )  << 16; if  ( inputLeft == 2 )  { b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^405^406^407^408^409^390^420^if  ( inputLeft > 0 )  { int b24 =  (  ( int )  input[inputPtr++] )  << 16; if  ( inputLeft == 2 )  { b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( inputLeft != 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( inputLeft == b24 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( srcBLeft == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( input == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputLeftLeft == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (int input[(inputPtr++)]) & 255 << 8 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (int input[(inputPtr++)] & 255) )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( inputLeft == 2 >>> 0 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( outputBytes == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( inputLeft > 0 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^b24 |= (((int) (input[(inputPtr++)])) & 255) << 8;^407^408^409^^^392^422^if  ( inputLeft == 2 )  { b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^407^408^409^^^392^422^if  ( inputLeft == 2 )  { b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^b24 |=  (  (  (  short  )  input[inputPtr++] )  & 0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   >>  8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )   >  0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 10;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^b24 |=  (  (  ( int )  srcB[inputPtr++] )  & 0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^b24 |=  (  ( int )  input[inputPtr++] )  & 0xFF;b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^b24 =  ( b24 << 8 )  |  (  (  ( int )  input[inputPtr++] )  & 0xFF ) ;b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( inputLeft == 2 )  {     b24 |=  (  (  ( int )   ( input[ ( inputPtr++ ) ] )  )  & 255 )  << 8; }^408^^^^^393^423^[Delete]^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   |  8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )   ^  0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 12;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  b24 =  (  (  short  )  input[inputPtr++] )  << 16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int b24 =  (  ( int )  input[inputPtr++] )   <=  16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int b24 =  (  ( int )  input[inputPtr++] )  << 21;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int b24 =  (  ( int )  srcB[inputPtr++] )  << 16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int b24 =  (  ( int )  input[inputPtr++] )  << 8;int b24 =  (  ( int )  input[inputPtr++] )  << 16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( inputLeft == 2 )  {     b24 |=  (  (  ( int )   ( input[ ( inputPtr++ ) ] )  )  & 255 )  << 8; }^406^^^^^391^421^[Delete]^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( sb, maxLineLength, inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( sb, b24, outputBytes ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial (  b24, inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( sb,  inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( sb, b24 ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( inputLeft, b24, sb ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( sb, inputLeft, b24 ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^encodeBase64Chunk ( sb, b24, inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^encodeBase64Partial ( sb, b24, inputPtr ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^encodeBase64Chunk ( sb, b24 ) ;encodeBase64Partial ( sb, b24, inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( inputLeft <= 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( inputLeft ==  )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputPtr == 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( inputLeft == 2 - 2 )  {^407^^^^^392^422^if  ( inputLeft == 2 )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )   &&  8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 0;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^b24 |=  (  (  (  long  )  input[inputPtr++] )  & 0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )    instanceof   8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^b24 |=  (  (  ( int )  input[inputPtr++] )   ==  0xFF )  << 8;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 7;^408^^^^^393^423^b24 |=  (  (  ( int )  input[inputPtr++] )  & 0xFF )  << 8;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^long  b24 =  (  (  long  )  input[inputPtr++] )  << 16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^int b24 =  (  ( int )  input[inputPtr++] )   ^  16;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int b24 =  (  ( int )  input[inputPtr++] )  << _maxLineLength;^406^^^^^391^421^int b24 =  (  ( int )  input[inputPtr++] )  << 16;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( sb, inputPtr, inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( sb, b24, value ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^encodeBase64Partial ( b24, sb, inputLeft ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^encodeBase64Partial ( sb, b24, ptr ) ;^410^^^^^395^425^encodeBase64Partial ( sb, b24, inputLeft ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( usesPadding )  {^413^^^^^398^428^if  ( addQuotes )  {^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^sb.append('"');^413^414^415^^^398^428^if  ( addQuotes )  { sb.append ( '"' ) ; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^413^414^415^^^398^428^if  ( addQuotes )  { sb.append ( '"' ) ; }^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^414^^^^^399^429^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( 'n' ) ;sb.append ( '"' ) ;^414^^^^^399^429^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( _paddingChar ) ;sb.append ( '"' ) ;^414^^^^^399^429^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^sb.append ( '\\' ) ;sb.append ( '"' ) ;^414^^^^^399^429^sb.append ( '"' ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^return sb.StringBuilder (  ) ;^416^^^^^401^431^return sb.toString (  ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^416^^^^^401^431^return sb.toString (  ) ;^[CLASS] Base64Variant  [METHOD] encode [RETURN_TYPE] String   byte[] input boolean addQuotes [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  StringBuilder  sb  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  name  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decode ( name, b ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decode (  b ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decode ( input ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decode ( b, input ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^encodeBase64Chunk ( input, b ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^encodeBase64Chunk ( name, b ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^433^434^^^^430^435^decode ( input, b ) ; return b.toByteArray (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^return encode ( input, false ) ;decode ( input, b ) ;^433^^^^^430^435^decode ( input, b ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^return b.append (  ) ;^434^^^^^430^435^return b.toByteArray (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return b .ByteArrayBuilder (  )  ;^434^^^^^430^435^return b.toByteArray (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^434^^^^^430^435^return b.toByteArray (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] byte[]   String input [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  ByteArrayBuilder  b  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  i  inputEnd  inputLeft  inputPtr  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  ptr = 0;^452^^^^^437^467^int ptr = 0;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int ptr = -4;^452^^^^^437^467^int ptr = 0;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int inputPtr = 0;int ptr = 0;^452^^^^^437^467^int ptr = 0;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  len = str.length (  ) ;^453^^^^^438^468^int len = str.length (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int len = str.length() - 8 ;^453^^^^^438^468^int len = str.length (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int len = name.length (  ) ;^453^^^^^438^468^int len = str.length (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^int len = str.charAt (  ) ;^453^^^^^438^468^int len = str.length (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int alphaLen = base64Alphabet.length (  ) ;int len = str.length (  ) ;^453^^^^^438^468^int len = str.length (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^int len = str.length() - 4 ;^453^^^^^438^468^int len = str.length (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^453^^^^^438^468^int len = str.length (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^while  ( ptr <= len )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^while  ( len < len )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^while  ( ptr < outputLen )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^while  ( len < ptr )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^while  ( ptr < outPtr )  {^456^^^^^441^471^while  ( ptr < len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( ptr > len )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputEnd >= len )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= inputPtr )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( len >= ptr )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^break main_loop;^461^462^463^^^446^476^if  ( ptr >= len )  { break main_loop; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^461^462^463^^^446^476^if  ( ptr >= len )  { break main_loop; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( ptr >= len )  {     _reportBase64EOF (  ) ; }^461^^^^^446^476^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits > 0 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < -5 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < -3 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputPtr < 0 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits < 4 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^_reportInvalidBase64(ch, 0, null);^466^467^468^^^451^481^if  ( bits < 0 )  { _reportInvalidBase64 ( ch, 0, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^466^467^468^^^451^481^if  ( bits < 0 )  { _reportInvalidBase64 ( ch, 0, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 1, null ) ; }^466^^^^^451^481^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( ptr >= len )  {     _reportBase64EOF (  ) ; }^466^^^^^451^481^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, -7, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^_reportInvalidBase64 ( paddingChar, 0, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^encodeBase64Chunk ( ch, 0, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^encodeBase64Chunk ( c, 0, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 1, null ) ;_reportInvalidBase64 ( ch, 0, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 3, null ) ;_reportInvalidBase64 ( ch, 0, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 2, null ) ;_reportInvalidBase64 ( ch, 0, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 1, null ) ; }^467^^^^^452^482^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 0, null ) ; }^467^^^^^452^482^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( ptr > len )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( value >= len )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= inputPtr )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( len >= ptr )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( inputEnd >= len )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^_reportBase64EOF();^471^472^473^^^456^486^if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^471^472^473^^^456^486^if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 1, null ) ; }^471^^^^^456^486^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 0, null ) ; }^471^^^^^456^486^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( ptr >= len )  {     break main_loop; }^471^^^^^456^486^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^usesPadding (  ) ;^472^^^^^457^487^_reportBase64EOF (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^472^^^^^457^487^_reportBase64EOF (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits == 0 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < BASE64_VALUE_PADDING )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputPtr < 0 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits < 3 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^_reportInvalidBase64(ch, 1, null);^476^477^478^^^461^491^if  ( bits < 0 )  { _reportInvalidBase64 ( ch, 1, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^476^477^478^^^461^491^if  ( bits < 0 )  { _reportInvalidBase64 ( ch, 1, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( ptr >= len )  {     _reportBase64EOF (  ) ; }^476^^^^^461^491^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 0, null ) ; }^476^^^^^461^491^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, , null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^_reportInvalidBase64 ( c, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^encodeBase64Chunk ( ch, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^_reportInvalidBase64 ( paddingChar, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 3, null ) ;_reportInvalidBase64 ( ch, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 2, null ) ;_reportInvalidBase64 ( ch, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 0, null ) ;_reportInvalidBase64 ( ch, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 1, null ) ; }^477^^^^^462^492^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 0, null ) ; }^477^^^^^462^492^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( ptr > len )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputLeft >= len )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= inputEnd )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^if  ( !getPaddingChar (  )  )  {^483^^^^^468^498^if  ( !usesPadding (  )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^decodedData >>= 4; builder.append(decodedData); break;^483^484^485^486^487^468^498^if  ( !usesPadding (  )  )  { decodedData >>= 4; builder.append ( decodedData ) ; break; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^483^484^485^486^487^468^498^if  ( !usesPadding (  )  )  { decodedData >>= 4; builder.append ( decodedData ) ; break; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= 8;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 3;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^decodedData >>= 2;decodedData >>= 4;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.append ( outPtr ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^builder .append ( c )  ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.appendTwoBytes ( decodedData ) ;builder.append ( decodedData ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.appendThreeBytes ( decodedData ) ;builder.append ( decodedData ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= -4;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 6;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.append ( value ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.append ( maxLineLength ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^485^486^^^^470^500^builder.append ( decodedData ) ; break;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^usesPadding (  ) ;^488^^^^^473^503^_reportBase64EOF (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^488^^^^^473^503^_reportBase64EOF (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= safeInputEnd;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.append ( inputLeft ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits > 0 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < inputEnd )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( safeInputEnd < 0 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bits != BASE64_VALUE_PADDING )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( ptr >= len )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "expected padding character '" +  ( getPaddingChar (  )  )  + "'" )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "expected padding character '" + getPaddingChar (  ) )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits < 3 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^if (bits != (com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING)) {    _reportInvalidBase64(ch, 2, null);}; if (ptr >= len) {    _reportBase64EOF();}; ch = str.charAt((ptr++)); if (!(usesPaddingChar(ch))) {    _reportInvalidBase64(ch, 3, (("expected padding character '" + (getPaddingChar())) + "'"));}; decodedData >>= 4; builder.append(decodedData); continue;^494^495^496^497^^479^509^if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 2, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^494^495^496^497^^479^509^if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 2, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits == Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( len != Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( bits != Base64Variant.inputPtr )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits = Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^_reportInvalidBase64(ch, 2, null);^495^496^497^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 2, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^495^496^497^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 2, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits !=  ( BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( ch, 3, null ) ; }^495^^^^^480^510^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 10, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^_reportInvalidBase64 ( paddingChar, 2, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^encodeBase64Chunk ( ch, 2, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 1, null ) ;_reportInvalidBase64 ( ch, 2, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 3, null ) ;_reportInvalidBase64 ( ch, 2, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 0, null ) ;_reportInvalidBase64 ( ch, 2, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 1, null ) ; }^496^^^^^481^511^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 0, null ) ; }^496^^^^^481^511^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( ptr > len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( value >= len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= outPtr )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( len >= ptr )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( ptr >= inputLeft )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^_reportBase64EOF();^499^500^501^^^484^514^if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^499^500^501^^^484^514^if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 1, null ) ; }^499^^^^^484^514^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 0, null ) ; }^499^^^^^484^514^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( ptr >= len )  {     break main_loop; }^499^^^^^484^514^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^usesPadding (  ) ;^500^^^^^485^515^_reportBase64EOF (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^500^^^^^485^515^_reportBase64EOF (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( !usesPaddingChar ( paddingChar )  )  {^503^^^^^488^518^if  ( !usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "expected padding character '" + getPaddingChar (  ) )  {^503^^^^^488^518^if  ( !usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P9_Replace_Statement]^if  ( !usesPadding (  )  )  {^503^^^^^488^518^if  ( !usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^_reportInvalidBase64(ch, 3, (("expected padding character '" + (getPaddingChar())) + "'"));^503^504^505^^^488^518^if  ( !usesPaddingChar ( ch )  )  { _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^503^504^505^^^488^518^if  ( !usesPaddingChar ( ch )  )  { _reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  &&  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (   instanceof   ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 5, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "pexpected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^encodeBase64Partial ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+usesPadding (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( ! ( usesPaddingChar ( ch )  )  )  {     _reportInvalidBase64 ( ch, 3,  (  ( "expected padding character '" +  ( getPaddingChar (  )  )  )  + "'" )  ) ; }^504^^^^^489^519^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^ch = input.charAt ( ptr++ ) ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( maxLineLength , chunksBeforeLF , buffer , safeInputEnd )  ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^ch =  name.charAt ( ptr++ ) ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= inputEnd;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 6;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^decodedData >>= 2;decodedData >>= 4;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, i, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( b24 , decodedData , srcC , chunksBeforeLF )  ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  >  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 10, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "xpected paxpected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^_reportInvalidBase64 ( c, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.append ( len ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.append ( inputLeft ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.appendTwoBytes ( decodedData ) ;builder.append ( decodedData ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.appendThreeBytes ( decodedData ) ;builder.append ( decodedData ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, len, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( safeInputEnd >= len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= inputPtr )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( ptr >= maxLineLength )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( usesPaddingChar ( ch )  )  {^503^^^^^488^518^if  ( !usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  <=  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  >=  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, decodedData, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "expected padding character 'padd"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^_reportInvalidBase64 ( c, 3, "expected padding character '"+usesPadding (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( ptr > len )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= outputBytes )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^if  ( !getPaddingChar (  )  )  {^516^^^^^501^531^if  ( !usesPadding (  )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^decodedData >>= 2; builder.appendTwoBytes(decodedData); break;^516^517^518^519^520^501^531^if  ( !usesPadding (  )  )  { decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ; break; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^516^517^518^519^520^501^531^if  ( !usesPadding (  )  )  { decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ; break; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= inputPtr;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 0;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^decodedData >>= 4;decodedData >>= 2;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendTwoBytes ( outputBytes ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.appendTwoBytes ( inputPtr ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^518^519^^^^503^533^builder.appendTwoBytes ( decodedData ) ; break;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.appendThreeBytes ( decodedData ) ;builder.appendTwoBytes ( decodedData ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.append ( decodedData ) ;builder.appendTwoBytes ( decodedData ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= -2;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 2L;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendTwoBytes ( len ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^usesPadding (  ) ;^521^^^^^506^536^_reportBase64EOF (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^521^^^^^506^536^_reportBase64EOF (  ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= b24;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 2 >> 3;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendTwoBytes ( inputLeft ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^builder .appendThreeBytes ( _maxLineLength )  ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits <= 0 )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < outputLen )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( outputLen < 0 )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bits != BASE64_VALUE_PADDING )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( decodedData << 6 | bits )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( decodedData << 6 )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits < 1 )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^if (bits != (com.fasterxml.jackson.core.Base64Variant.BASE64_VALUE_PADDING)) {    _reportInvalidBase64(ch, 3, null);}; decodedData >>= 2; builder.appendTwoBytes(decodedData);^525^526^527^528^^510^540^if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 3, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^525^526^527^528^^510^540^if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 3, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData  &&  =  ( decodedData << 6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData =  ( decodedData  <  6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData =  ( decodedData << 8 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( outPtr << 6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | outputBytes;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( bits << 6 )  | decodedData;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData =  ( decodedData << 7 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendThreeBytes ( outPtr ) ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^builder .appendTwoBytes ( BASE64_VALUE_PADDING )  ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.appendThreeBytes ( inputLeft ) ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.appendTwoBytes ( decodedData ) ;builder.appendThreeBytes ( decodedData ) ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.append ( decodedData ) ;builder.appendThreeBytes ( decodedData ) ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits >= Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( len != Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( bits != Base64Variant.safeInputEnd )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^_reportInvalidBase64(ch, 3, null);^526^527^528^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 3, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^526^527^528^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( ch, 3, null ) ; }^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits !=  ( BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( ch, 2, null ) ; }^526^^^^^511^541^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 7, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^_reportInvalidBase64 ( paddingChar, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^encodeBase64Chunk ( ch, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^_reportInvalidBase64 ( c, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 1, null ) ;_reportInvalidBase64 ( ch, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 2, null ) ;_reportInvalidBase64 ( ch, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( ch, 0, null ) ;_reportInvalidBase64 ( ch, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 1, null ) ; }^527^^^^^512^542^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( ch, 0, null ) ; }^527^^^^^512^542^[Delete]^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= maxLineLength;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 2 >> 1;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^decodedData >>= 4;decodedData >>= 2;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendTwoBytes ( outPtr ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.appendTwoBytes ( inputPtr ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.appendThreeBytes ( decodedData ) ;builder.appendTwoBytes ( decodedData ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.append ( decodedData ) ;builder.appendTwoBytes ( decodedData ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits < Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( outPtr != Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( bits != Base64Variant.len )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits != Base64Variant.inputPtr )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, chunksBeforeLF, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^encodeBase64Chunk ( paddingChar, 3, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^ch = name.charAt ( ptr++ ) ;^460^^^^^445^475^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^ch =  input.charAt ( ptr++ ) ;^460^^^^^445^475^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^ch =  input.charAt ( ptr++ ) ;^474^^^^^459^489^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^bits = decodeBase64Char ( paddingChar ) ;^475^^^^^460^490^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData  &&  =  ( decodedData << 6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData =  ( decodedData  ||  6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData =  ( decodedData << -1 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( inputPtr << 6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | inputPtr;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( bits << 6 )  | decodedData;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData =  ( decodedData << 6 * 4 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= BASE64_VALUE_PADDING;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^ch = name.charAt ( ptr++ ) ;^490^^^^^475^505^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^bits =  decodeBase64Char ( c ) ;^491^^^^^476^506^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= ;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 4 - 4;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData  &  =  ( decodedData << 6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData =  ( decodedData  >=  6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData =  ( decodedData << len )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( maxLineLength << 6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | len;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( bits << 6 )  | decodedData;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData =  ( decodedData << 2 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= 10;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 1;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^ch = name.charAt ( ptr++ ) ;^523^^^^^508^538^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( decodedData , i , _base64ToAsciiC , BASE64_VALUE_PADDING )  ;^523^^^^^508^538^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^ch =  input.charAt ( ptr++ ) ;^523^^^^^508^538^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^bits =  decodeBase64Char ( c ) ;^524^^^^^509^539^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= ;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 2 >> 2;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData  <=  =  ( decodedData << 6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData =  ( decodedData  <=  6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData =  ( decodedData << 8 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( inputPtr << 6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( bits << 6 )  | decodedData;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData =  ( decodedData << 6L )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^int ch;^458^^^^^443^473^char ch;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  bits = decodeBase64Char ( ch ) ;^465^^^^^450^480^int bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int bits = decodeBase64Char ( paddingChar ) ;^465^^^^^450^480^int bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^int bits = decodeBase64Char ( c ) ;^465^^^^^450^480^int bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^short  decodedData = bits;^469^^^^^454^484^int decodedData = bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int decodedData = outPtr;^469^^^^^454^484^int decodedData = bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^int decodedData = outputBytes;^469^^^^^454^484^int decodedData = bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( alphaLen , inputEnd , srcC , outputLen )  ;^460^^^^^445^475^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^460^^^^^445^475^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^465^^^^^450^480^int bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^bits = decodeBase64Char ( ch ) ;int bits = decodeBase64Char ( ch ) ;^465^^^^^450^480^int bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, outputLen, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^encodeBase64Chunk ( paddingChar, 0, null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^ch = name.charAt ( ptr++ ) ;^474^^^^^459^489^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^474^^^^^459^489^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^475^^^^^460^490^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int bits = decodeBase64Char ( ch ) ;bits = decodeBase64Char ( ch ) ;^475^^^^^460^490^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, -6, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.append ( ptr ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^ch = input.charAt ( ptr++ ) ;^490^^^^^475^505^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^490^491^^^^475^505^ch = str.charAt ( ptr++ ) ; bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^bits = decodeBase64Char ( paddingChar ) ;^491^^^^^476^506^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^491^^^^^476^506^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int bits = decodeBase64Char ( ch ) ;bits = decodeBase64Char ( ch ) ;^491^^^^^476^506^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, inputEnd, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( safeInputEnd , inputLeft , _base64ToAsciiC , ch )  ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  <  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "expected padding character 'g c"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^_reportInvalidBase64 ( paddingChar, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.append ( outPtr ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.append ( maxLineLength ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^523^524^^^^508^538^ch = str.charAt ( ptr++ ) ; bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^bits = decodeBase64Char ( paddingChar ) ;^524^^^^^509^539^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^524^^^^^509^539^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^int bits = decodeBase64Char ( ch ) ;bits = decodeBase64Char ( ch ) ;^524^^^^^509^539^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, outputBytes, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendTwoBytes ( outputBytes ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.appendTwoBytes ( inputLeft ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendThreeBytes ( outPtr ) ;^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.appendThreeBytes ( inputLeft ) ;^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.appendTwoBytes ( decodedData ) ;builder.appendThreeBytes ( decodedData ) ;^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^builder.append ( decodedData ) ;builder.appendThreeBytes ( decodedData ) ;^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( maxLineLength >= len )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= inputLeft )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( inputLeft >= len )  {^461^^^^^446^476^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < maxLineLength )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < ptr )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( inputPtr < 2 )  {^466^^^^^451^481^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, , null ) ;^467^^^^^452^482^_reportInvalidBase64 ( ch, 0, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputPtr >= len )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= outPtr )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( ptr >= inputLeft )  {^471^^^^^456^486^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits <= 0 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < 5 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( maxLineLength < 0 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits < 4 )  {^476^^^^^461^491^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 7, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( outputBytes >= len )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( len >= ptr )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( ptr >= maxLineLength )  {^481^^^^^466^496^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( usesPadding (  )  )  {^483^^^^^468^498^if  ( !usesPadding (  )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= 2;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 4 % 3;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.append ( len ) ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^builder .append ( PADDING_CHAR_NONE )  ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= 1;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 0;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^builder .append ( ch )  ;^485^^^^^470^500^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= ;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 5;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits <= 0 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < -5 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( maxLineLength < 0 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits < 4 )  {^494^^^^^479^509^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( maxLineLength != Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( bits != Base64Variant.outPtr )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, ch, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^_reportInvalidBase64 ( c, 2, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( ptr < len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( maxLineLength >= len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= inputEnd )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ||  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "terxpected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( ch , safeInputEnd , buffer , ptr )  ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= -3;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 4 << 1;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, -3, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( !usesPaddingChar ( c )  )  {^503^^^^^488^518^if  ( !usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  >>  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "ding cxpected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^encodeBase64Partial ( c, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder .append ( paddingChar )  ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^508^509^^^^493^523^builder.append ( decodedData ) ; continue;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( value != Base64Variant.BASE64_VALUE_PADDING )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( bits != Base64Variant.ptr )  {^495^^^^^480^510^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, -6, null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( outputLen >= len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= outputBytes )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( inputPtr >= len )  {^499^^^^^484^514^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  <<  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ==  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, inputPtr, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "g chxpected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputLeft >= len )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ptr >= inputLeft )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( len >= ptr )  {^514^^^^^499^529^if  ( ptr >= len )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= i;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 2 * 4;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= decodedData;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 3;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendTwoBytes ( ptr ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^builder .appendThreeBytes ( value )  ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.appendTwoBytes ( maxLineLength ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^if  ( bits < 2 )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits < 0 << 2 )  {^525^^^^^510^540^if  ( bits < 0 )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData  <<  =  ( decodedData << 6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData =  ( decodedData  >>  6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData =  ( decodedData << chunksBeforeLF )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( inputPtr << 6 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData =  ( decodedData << 2 )  | bits;^533^^^^^525^535^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendThreeBytes ( len ) ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder .appendTwoBytes ( outputLen )  ;^534^^^^^525^535^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( bits == Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( inputPtr != Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( bits != Base64Variant.outputBytes )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( bits = Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, ch, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 1;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, safeInputEnd, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendTwoBytes ( maxLineLength ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( safeInputEnd != Base64Variant.BASE64_VALUE_PADDING )  {^526^^^^^511^541^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, ptr, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^bits =  decodeBase64Char ( null ) ;^475^^^^^460^490^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData  &  =  ( decodedData << 6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData =  ( decodedData  !=  6 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData =  ( decodedData << 10 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData =  ( decodedData << 1 )  | bits;^479^^^^^464^494^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 4L;^484^^^^^469^499^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( BASE64_VALUE_INVALID , _maxLineLength , buffer , safeInputEnd )  ;^490^^^^^475^505^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^ch =  null.charAt ( ptr++ ) ;^490^^^^^475^505^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= _maxLineLength;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 2;^507^^^^^492^522^decodedData >>= 4;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData  ==  =  ( decodedData << 6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData =  ( decodedData << decodedData )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( inputPtr << 6 )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | maxLineLength;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData =  ( decodedData << 6L )  | bits;^512^^^^^497^527^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= outputLen;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 2 * 2;^517^^^^^502^532^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( ptr , _maxLineLength , buffer , len )  ;^523^^^^^508^538^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData >>= outPtr;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData >>= 2 + 3;^529^^^^^514^544^decodedData >>= 2;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData  &&  =  ( decodedData << 6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^decodedData =  ( decodedData  <  6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^decodedData =  ( decodedData << safeInputEnd )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( value << 6 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | maxLineLength;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^decodedData =  ( decodedData << 0 )  | bits;^533^^^^^518^548^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^String ch;^458^^^^^443^473^char ch;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^long  bits = decodeBase64Char ( ch ) ;^465^^^^^450^480^int bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^int decodedData = len;^469^^^^^454^484^int decodedData = bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^int decodedData = maxLineLength;^469^^^^^454^484^int decodedData = bits;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( BASE64_VALUE_PADDING , _maxLineLength , buffer , safeInputEnd )  ;^460^^^^^445^475^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( i , b24 , _base64ToAsciiC , outputBytes )  ;^474^^^^^459^489^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^ch = input .getChars ( ch , bits , _base64ToAsciiC , outputLen )  ;^474^^^^^459^489^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^474^475^^^^459^489^ch = str.charAt ( ptr++ ) ; bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^bits = decodeBase64Char ( c ) ;^475^^^^^460^490^bits = decodeBase64Char ( ch ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, i, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^encodeBase64Chunk ( paddingChar, 1, null ) ;^477^^^^^462^492^_reportInvalidBase64 ( ch, 1, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^490^^^^^475^505^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, , null ) ;^496^^^^^481^511^_reportInvalidBase64 ( ch, 2, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^ch = str .getChars ( outputBytes , outputBytes , buffer , _maxLineLength )  ;^502^^^^^487^517^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, INT_SPACE, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, 3, "ding chxpected padding character '"+getPaddingChar (  ) +"'" ) ;^504^^^^^489^519^_reportInvalidBase64 ( ch, 3, "expected padding character '"+getPaddingChar (  ) +"'" ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.append ( inputPtr ) ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^builder .append ( _paddingChar )  ;^508^^^^^493^523^builder.append ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^builder.appendTwoBytes ( outputLen ) ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder .appendThreeBytes ( BASE64_VALUE_INVALID )  ;^518^^^^^503^533^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^523^^^^^508^538^ch = str.charAt ( ptr++ ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^_reportInvalidBase64 ( ch, bits, null ) ;^527^^^^^512^542^_reportInvalidBase64 ( ch, 3, null ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.appendTwoBytes ( len ) ;^530^^^^^515^545^builder.appendTwoBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^builder .appendTwoBytes ( inputEnd )  ;^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^builder.appendThreeBytes ( ptr ) ;^534^^^^^519^549^builder.appendThreeBytes ( decodedData ) ;^[CLASS] Base64Variant  [METHOD] decode [RETURN_TYPE] void   String str ByteArrayBuilder builder [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  ByteArrayBuilder  builder  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^public String toString (  )  { return str; }^546^^^^^541^551^public String toString (  )  { return _name; }^[CLASS] Base64Variant  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^return  ( o != this ) ;^551^^^^^549^552^return  ( o == this ) ;^[CLASS] Base64Variant  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  Object  o  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return  ( o  &&  this ) ;^551^^^^^549^552^return  ( o == this ) ;^[CLASS] Base64Variant  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  Object  o  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^return str.hashCode (  ) ;^556^^^^^555^557^return _name.hashCode (  ) ;^[CLASS] Base64Variant  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^return _name.length (  ) ;^556^^^^^555^557^return _name.hashCode (  ) ;^[CLASS] Base64Variant  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return _name .charAt ( safeInputEnd )  ;^556^^^^^555^557^return _name.hashCode (  ) ;^[CLASS] Base64Variant  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^return _name .charAt ( BASE64_VALUE_INVALID )  ;^556^^^^^555^557^return _name.hashCode (  ) ;^[CLASS] Base64Variant  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^556^^^^^555^557^return _name.hashCode (  ) ;^[CLASS] Base64Variant  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base64Alphabet  input  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^char base;^572^^^^^569^587^String base;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( ch < INT_SPACE )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( c <= INT_SPACE )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( ch <= len )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( INT_SPACE <= ch )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (("Illegal white space character (code 0x" + toHexString(ch)) + ") as character #") + (bindex + 1) + " of 4-char base64 unit: can only used between units" )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  (  ( "Illegal white space character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  as character #" + bindex + 1 )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "Illegal white space character  ( code 0x" +  ( toHexString ( ch )  )  + " )  as character #" )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "Illegal white space character  ( code 0x" + toHexString ( ch ) )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( bindex + 1 )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (("Unexpected padding character ('" + getPaddingChar()) + "') as character #") + (bindex + 1) + " of 4-char base64 unit: padding only legal as 3rd or 4th character" )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  (  ( "Unexpected padding character  ( '" +  ( getPaddingChar (  )  )  )  + "' )  as character #" + bindex + 1 )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "Unexpected padding character  ( '" +  ( getPaddingChar (  )  )  + "' )  as character #" )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "Unexpected padding character  ( '" + getPaddingChar (  ) )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( isDefined(ch)) || isISOControl(ch) )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "Illegal character (code 0x" + toHexString(ch) + ") in base64 content" )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "Illegal character  ( code 0x" + toHexString ( ch ) )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( (("Illegal character '" + ch) + "' (code 0x") + toHexString(ch) + ") in base64 content" )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  (  ( "Illegal character '" + ch )  + "'  ( code 0x" + toHexString ( ch ) )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "Illegal character '" + ch + "'  ( code 0x" )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( "Illegal character '" + ch )  {^573^^^^^569^587^if  ( ch <= INT_SPACE )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^} else if  ( usesPaddingChar ( paddingChar )  )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  (  ( "Unexpected padding character  ( '" +  ( getPaddingChar (  )  )  )  + "' )  as character #" + bindex + 1 )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Unexpected padding character  ( '" +  ( getPaddingChar (  )  )  + "' )  as character #" )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Unexpected padding character  ( '" + getPaddingChar (  ) )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( bindex + 1 )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( isDefined(ch)) || isISOControl(ch) )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Illegal character (code 0x" + toHexString(ch) + ") in base64 content" )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Illegal character  ( code 0x" + toHexString ( ch ) )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( (("Illegal character '" + ch) + "' (code 0x") + toHexString(ch) + ") in base64 content" )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  (  ( "Illegal character '" + ch )  + "'  ( code 0x" + toHexString ( ch ) )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Illegal character '" + ch + "'  ( code 0x" )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Illegal character '" + ch )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^}  if  ( usesPaddingChar ( paddingChar )  )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  (  ( ! ( isDefined ( ch )  )  )  ||  ( isISOControl ( ch )  )  )  {     base =  ( "Illegal character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  in base64 content"; }else {     base =  (  (  ( "Illegal character '" + ch )  + "'  ( code 0x" )  +  ( toHexString ( ch )  )  )  + " )  in base64 content"; }^575^^^^^569^587^[Delete]^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( ch <=  ( INT_SPACE )  )  {     base =  (  (  ( "Illegal white space character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  as character #" )  +  ( bindex + 1 )  )  + " of 4-char base64 unit: can only used between units"; }else     if  ( usesPaddingChar ( ch )  )  {         base =  (  (  ( "Unexpected padding character  ( '" +  ( getPaddingChar (  )  )  )  + "' )  as character #" )  +  ( bindex + 1 )  )  + " of 4-char base64 unit: padding only legal as 3rd or 4th character";     }else         if  (  ( ! ( isDefined ( ch )  )  )  ||  ( isISOControl ( ch )  )  )  {             base =  ( "Illegal character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  in base64 content";         }else {             base =  (  (  ( "Illegal character '" + ch )  + "'  ( code 0x" )  +  ( toHexString ( ch )  )  )  + " )  in base64 content";         }^575^^^^^569^587^[Delete]^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^} else if  ( !Character.isDefined ( ch )  && Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^} else if  ( !Character.isDefined ( paddingChar )  || Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( !Character.isDefined ( ch )  ) {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  (  Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Illegal character (code 0x" + toHexString(ch) + ") in base64 content" )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Illegal character  ( code 0x" + toHexString ( ch ) )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( (("Illegal character '" + ch) + "' (code 0x") + toHexString(ch) + ") in base64 content" )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  (  ( "Illegal character '" + ch )  + "'  ( code 0x" + toHexString ( ch ) )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Illegal character '" + ch + "'  ( code 0x" )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else if  ( "Illegal character '" + ch )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^} else {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^} else if  ( !Character.isISOControl ( ch )  || Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^} else if  ( !Character.isDefined ( ch )  || Character.isDefined ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^base = ("Illegal character (code 0x" + (java.lang.Integer.toHexString(ch))) + ") in base64 content";^577^578^579^580^581^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {  base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; } else { base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; }^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^577^578^579^580^581^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {  base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; } else { base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; }^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P13_Insert_Block]^if  ( usesPaddingChar ( ch )  )  {     base =  (  (  ( "Unexpected padding character  ( '" +  ( getPaddingChar (  )  )  )  + "' )  as character #" )  +  ( bindex + 1 )  )  + " of 4-char base64 unit: padding only legal as 3rd or 4th character"; }else     if  (  ( ! ( isDefined ( ch )  )  )  ||  ( isISOControl ( ch )  )  )  {         base =  ( "Illegal character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  in base64 content";     }else {         base =  (  (  ( "Illegal character '" + ch )  + "'  ( code 0x" )  +  ( toHexString ( ch )  )  )  + " )  in base64 content";     }^577^^^^^569^587^[Delete]^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexchar ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  !=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  &  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  <  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  ^  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal character 'llegal"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal paddingChararacter '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  "Illegal caracter '"+c+"'  ( code 0x"+Integer.toHexString ( c ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^base = "Illegal character  ( code 0x"+Integer.toHexchar ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  >  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  ==  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal paddingChararacter  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  "Illegal paddingChararacter  ( code 0x"+Integer.toHexString ( paddingChar ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  &&  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal caracter  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  "Illegal caracter  ( code 0x"+Integer.toHexString ( c ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  &&  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  >=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  >>  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal characllegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal caracter '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  "Illegal paddingChararacter '"+paddingChar+"'  ( code 0x"+Integer.toHexString ( paddingChar ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^} else if  ( !Character .isISOControl ( PADDING_CHAR_NONE )   || Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^} else if  ( !Character.isISOControl ( paddingChar )  || Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^} else if  ( !Character.isDefined ( ch )  || Character .isDefined ( _paddingChar )   )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  &  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  ^  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  <=  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  !=  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  >  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+10 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +"se64 unit:of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P7_Replace_Invocation]^base = "Unexpected padding character  ( '"+usesPadding (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( inputPtr+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^}  if  ( !Character.isDefined ( ch )  || Character.isDefined ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  <=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "gal character "+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  &  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  <<  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  >>  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  ||  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+value ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +"ega";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( inputLeft+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( inputEnd+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  >>  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  !=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  "Illegal nullaracter  ( code 0x"+Integer.toHexString ( null ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal character 'l"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^} else if  ( usesPaddingChar ( c )  )  {^575^^^^^569^587^} else if  ( usesPaddingChar ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^} else if  ( !Character.isDefined ( c )  || Character.isISOControl ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P1_Replace_Type]^base = "Illegal white space character  ( code 0x"+Integer.toHexchar ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal white space character  |  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal white space character  ^  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal white space character  ==  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal white space character  &&  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+safeInputEnd ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between unitsnly u";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal white space caracter  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( len+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal white space bindexaracter  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( ch+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  "Illegal white space paddingChararacter  ( code 0x"+Integer.toHexString ( paddingChar ) +" )  as paddingChararacter #"+ ( bindex+1 ) +" of 4-paddingCharar base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P11_Insert_Donor_Statement]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal white space paddingChararacter  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P14_Delete_Statement]^^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  |  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  ==  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal character 'chara"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  >=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  |  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character   instanceof   ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  >  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "hallegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^} else if  ( !Character.isDefined ( paddingChar )  || Character.isDefined ( ch )  )  {^577^^^^^569^587^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  >=  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character  <<  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +"ng only legal ";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  <<  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "egal ch"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  <=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal white space character  >>  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+6 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +"f 4-char base64 unit: can only used between unof 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( inputLeft+1 ) +" of 4-char base64 unit: can only used between units";^574^^^^^569^587^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Unexpected padding character   instanceof   ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+decodedData ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +"har";^576^^^^^569^587^base = "Unexpected padding character  ( '"+getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character  ||  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^579^^^^^569^587^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'   instanceof   ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = "Illegal ch"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^581^^^^^569^587^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^if  ( msg == null )  {^583^^^^^569^587^if  ( msg != null )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^if  ( str != null )  {^583^^^^^569^587^if  ( msg != null )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( base + ": " + msg )  {^583^^^^^569^587^if  ( msg != null )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P6_Replace_Expression]^if  ( base + ": " )  {^583^^^^^569^587^if  ( msg != null )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^if  ( msg != false )  {^583^^^^^569^587^if  ( msg != null )  {^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P15_Unwrap_Block]^base = (base + ": ") + msg;^583^584^585^^^569^587^if  ( msg != null )  { base = base + ": " + msg; }^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P16_Remove_Block]^^583^584^585^^^569^587^if  ( msg != null )  { base = base + ": " + msg; }^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = base  ^  ": " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P3_Replace_Literal]^base = base + " " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = str + ": " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = base + ": " + name;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P5_Replace_Variable]^base = msg + ": " + base;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^base =  name + ": " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P2_Replace_Operator]^base = base  >=  ": " + msg;^584^^^^^569^587^base = base + ": " + msg;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return ;^586^^^^^569^587^throw new IllegalArgumentException  (" ")  ;^[CLASS] Base64Variant  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   char ch int bindex String msg [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
[P8_Replace_Mix]^return ;^590^^^^^589^591^throw new IllegalArgumentException  (" ")  ;^[CLASS] Base64Variant  [METHOD] _reportBase64EOF [RETURN_TYPE] void   [VARIABLES] byte[]  _base64ToAsciiB  buffer  input  srcB  boolean  _usesPadding  addQuotes  usesPadding  char  PADDING_CHAR_NONE  _paddingChar  alpha  c  ch  paddingChar  int[]  _asciiToBase64  srcV  String  _name  base  base64Alphabet  input  msg  name  str  int  BASE64_VALUE_INVALID  BASE64_VALUE_PADDING  INT_SPACE  _maxLineLength  alphaLen  b24  bindex  bits  ch  chunksBeforeLF  decodedData  i  inputEnd  inputLeft  inputPtr  len  maxLineLength  outPtr  outputBytes  outputLen  ptr  safeInputEnd  value  long  serialVersionUID  char[]  _base64ToAsciiC  buffer  srcC  
