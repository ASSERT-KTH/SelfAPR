[P1_Replace_Type]^final  short  mQuadLen;^11^^^^^6^16^final int mQuadLen;^[CLASS] NameN   [VARIABLES] 
[P5_Replace_Variable]^super ( name, quadLen ) ;^15^^^^^13^24^super ( name, hash ) ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P5_Replace_Variable]^super (  hash ) ;^15^^^^^13^24^super ( name, hash ) ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P5_Replace_Variable]^super ( name ) ;^15^^^^^13^24^super ( name, hash ) ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P5_Replace_Variable]^super ( hash, name ) ;^15^^^^^13^24^super ( name, hash ) ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P14_Delete_Statement]^^15^^^^^13^24^super ( name, hash ) ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P2_Replace_Operator]^if  ( quadLen > 3 )  {^19^^^^^13^24^if  ( quadLen < 3 )  {^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P3_Replace_Literal]^if  ( quadLen < 8 )  {^19^^^^^13^24^if  ( quadLen < 3 )  {^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P5_Replace_Variable]^if  ( mQuadLen < 3 )  {^19^^^^^13^24^if  ( quadLen < 3 )  {^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P8_Replace_Mix]^if  ( quadLen < 0 )  {^19^^^^^13^24^if  ( quadLen < 3 )  {^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Qlen must >= 3");^19^20^21^^^13^24^if  ( quadLen < 3 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P16_Remove_Block]^^19^20^21^^^13^24^if  ( quadLen < 3 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P13_Insert_Block]^if  ( quadLen < 3 )  {     throw new IllegalArgumentException ( "Qlen must >= 3" ) ; }^20^^^^^13^24^[Delete]^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P8_Replace_Mix]^return true;^20^^^^^13^24^throw new IllegalArgumentException  (" ")  ;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P5_Replace_Variable]^mQuads = mQuads;^22^^^^^13^24^mQuads = quads;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P8_Replace_Mix]^mQuads =  null;^22^^^^^13^24^mQuads = quads;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P11_Insert_Donor_Statement]^mQuadLen = quadLen;mQuads = quads;^22^^^^^13^24^mQuads = quads;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P5_Replace_Variable]^mQuadLen = mQuadLen;^23^^^^^13^24^mQuadLen = quadLen;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P8_Replace_Mix]^mQuadLen =  hash;^23^^^^^13^24^mQuadLen = quadLen;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P11_Insert_Donor_Statement]^mQuads = quads;mQuadLen = quadLen;^23^^^^^13^24^mQuadLen = quadLen;^[CLASS] NameN  [METHOD] <init> [RETURN_TYPE] String,int,int[],int)   String name int hash int[] quads int quadLen [VARIABLES] int[]  mQuads  quads  String  name  boolean  int  hash  mQuadLen  quadLen  
[P3_Replace_Literal]^public boolean equals ( int quad )  { return true; }^28^^^^^23^33^public boolean equals ( int quad )  { return false; }^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int quad [VARIABLES] int[]  mQuads  quads  int  hash  mQuadLen  quad  quadLen  boolean  
[P3_Replace_Literal]^public boolean equals ( int quad1, int quad2 )  { return true; }^32^^^^^27^37^public boolean equals ( int quad1, int quad2 )  { return false; }^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int quad1 int quad2 [VARIABLES] int[]  mQuads  quads  int  hash  mQuadLen  quad  quad1  quad2  quadLen  boolean  
[P2_Replace_Operator]^if  ( qlen == mQuadLen )  {^37^^^^^22^52^if  ( qlen != mQuadLen )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P5_Replace_Variable]^if  ( quadLen != mQuadLen )  {^37^^^^^22^52^if  ( qlen != mQuadLen )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P5_Replace_Variable]^if  ( qlen != quad2 )  {^37^^^^^22^52^if  ( qlen != mQuadLen )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P5_Replace_Variable]^if  ( mQuadLen != qlen )  {^37^^^^^22^52^if  ( qlen != mQuadLen )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P8_Replace_Mix]^if  ( qlen != quadLen )  {^37^^^^^22^52^if  ( qlen != mQuadLen )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P9_Replace_Statement]^if  ( quads[i] != mQuads[i] )  {^37^^^^^22^52^if  ( qlen != mQuadLen )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P15_Unwrap_Block]^return false;^37^38^39^^^22^52^if  ( qlen != mQuadLen )  { return false; }^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P16_Remove_Block]^^37^38^39^^^22^52^if  ( qlen != mQuadLen )  { return false; }^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P13_Insert_Block]^if  (  ( quads[i] )  !=  ( mQuads[i] )  )  {     return false; }^37^^^^^22^52^[Delete]^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P3_Replace_Literal]^return true;^38^^^^^23^53^return false;^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P2_Replace_Operator]^if  ( quads[i] >= mQuads[i] )  {^62^^^^^47^77^if  ( quads[i] != mQuads[i] )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P5_Replace_Variable]^if  ( mQuads[i] != quads[i] )  {^62^^^^^47^77^if  ( quads[i] != mQuads[i] )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P9_Replace_Statement]^if  ( qlen != mQuadLen )  {^62^^^^^47^77^if  ( quads[i] != mQuads[i] )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P15_Unwrap_Block]^return false;^62^63^64^^^47^77^if  ( quads[i] != mQuads[i] )  { return false; }^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P16_Remove_Block]^^62^63^64^^^47^77^if  ( quads[i] != mQuads[i] )  { return false; }^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P13_Insert_Block]^if  ( qlen !=  ( mQuadLen )  )  {     return false; }^62^^^^^47^77^[Delete]^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P3_Replace_Literal]^return true;^63^^^^^48^78^return false;^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P1_Replace_Type]^for  (  short  i = 0; i < qlen; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P2_Replace_Operator]^for  ( int i = 0; i == qlen; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P3_Replace_Literal]^for  ( int i = 7; i < qlen; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P5_Replace_Variable]^for  ( int i = 0; i < quadLen; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P5_Replace_Variable]^for  ( qlennt i = 0; i < i; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P8_Replace_Mix]^for  ( quad1nt i = 0; i < qlen; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P2_Replace_Operator]^if  ( quads[i] == mQuads[i] )  {^62^^^^^47^77^if  ( quads[i] != mQuads[i] )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P1_Replace_Type]^for  (  long  i = 0; i < qlen; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P3_Replace_Literal]^for  ( int i = ; i < qlen; ++i )  {^61^^^^^46^76^for  ( int i = 0; i < qlen; ++i )  {^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
[P3_Replace_Literal]^return false;^66^^^^^51^81^return true;^[CLASS] NameN  [METHOD] equals [RETURN_TYPE] boolean   int[] quads int qlen [VARIABLES] int[]  mQuads  quads  int  hash  i  mQuadLen  qlen  quad  quad1  quad2  quadLen  boolean  
