[P8_Replace_Mix]^private final JsonParser[] _parsers;^22^^^^^17^27^protected final JsonParser[] _parsers;^[CLASS] JsonParserSequence   [VARIABLES] 
[P1_Replace_Type]^protected  short  _nextParser;^27^^^^^22^32^protected int _nextParser;^[CLASS] JsonParserSequence   [VARIABLES] 
[P8_Replace_Mix]^private  short  _nextParser;^27^^^^^22^32^protected int _nextParser;^[CLASS] JsonParserSequence   [VARIABLES] 
[P3_Replace_Literal]^super ( parsers[-2] ) ;^37^^^^^35^40^super ( parsers[0] ) ;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[P5_Replace_Variable]^super ( _parsers[0] ) ;^37^^^^^35^40^super ( parsers[0] ) ;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[P14_Delete_Statement]^^37^38^^^^35^40^super ( parsers[0] ) ; _parsers = parsers;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[P5_Replace_Variable]^_parsers = _parsers;^38^^^^^35^40^_parsers = parsers;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[P8_Replace_Mix]^_parsers =  null;^38^^^^^35^40^_parsers = parsers;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[P3_Replace_Literal]^_nextParser = _nextParser;^39^^^^^35^40^_nextParser = 1;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[P8_Replace_Mix]^_nextParser = 1L;^39^^^^^35^40^_nextParser = 1;^[CLASS] JsonParserSequence  [METHOD] <init> [RETURN_TYPE] JsonParser[])   JsonParser[] parsers [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  boolean  
[P2_Replace_Operator]^if  ( ! ( first instanceof JsonParserSequence && second instanceof JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P2_Replace_Operator]^if  ( ! ( first  >=  JsonParserSequence || second instanceof JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P2_Replace_Operator]^if  ( ! ( first instanceof JsonParserSequence || second  ==  JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P5_Replace_Variable]^if  ( ! ( second instanceof JsonParserSequence || first instanceof JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P6_Replace_Expression]^if  ( ! ( first instanceof JsonParserSequence ) {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P6_Replace_Expression]^if  (  second instanceof JsonParserSequence )  )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P6_Replace_Expression]^if  ( first instanceof JsonParserSequence )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P6_Replace_Expression]^if  ( second instanceof JsonParserSequence )  {^53^^^^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P15_Unwrap_Block]^return new com.fasterxml.jackson.core.util.JsonParserSequence(new com.fasterxml.jackson.core.util.JsonParser[]{ first , second });^53^54^55^56^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {  return new JsonParserSequence ( new JsonParser[] { first, second } ) ; }^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P16_Remove_Block]^^53^54^55^56^^51^69^if  ( ! ( first instanceof JsonParserSequence || second instanceof JsonParserSequence )  )  {  return new JsonParserSequence ( new JsonParser[] { first, second } ) ; }^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( p instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( p )  ) .addFlattenedActiveParsers ( result ) ; }else {     result.add ( p ) ; }^53^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( second instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( second )  ) .addFlattenedActiveParsers ( p ) ; }else {     p.add ( second ) ; }^53^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( first instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( first )  ) .addFlattenedActiveParsers ( p ) ; }else {     p.add ( first ) ; }^53^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P4_Replace_Constructor]^return return  new JsonParserSequence ( p.toArray ( new size (  ) ] )  )  ;^55^^^^^51^69^return new JsonParserSequence ( new JsonParser[] { first, second } ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P4_Replace_Constructor]^return new JsonParserSequence ( new JsonParser[] {  second } ) ;^55^^^^^51^69^return new JsonParserSequence ( new JsonParser[] { first, second } ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P4_Replace_Constructor]^return new JsonParserSequence ( new JsonParser[] { first } ) ;^55^^^^^51^69^return new JsonParserSequence ( new JsonParser[] { first, second } ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P5_Replace_Variable]^return new JsonParserSequence ( new JsonParser[] { second, first } ) ;^55^^^^^51^69^return new JsonParserSequence ( new JsonParser[] { first, second } ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P8_Replace_Mix]^return  new JsonParserSequence ( p.toArray ( new size (  ) ] )  )  ;^55^^^^^51^69^return new JsonParserSequence ( new JsonParser[] { first, second } ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P1_Replace_Type]^List <JsonParser> p = new  List <JsonParser> (  ) ;^57^^^^^51^69^ArrayList<JsonParser> p = new ArrayList<JsonParser> (  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P2_Replace_Operator]^if  ( first  &  JsonParserSequence )  {^58^^^^^51^69^if  ( first instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P5_Replace_Variable]^if  ( second instanceof JsonParserSequence )  {^58^^^^^51^69^if  ( first instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P9_Replace_Statement]^if  ( p instanceof JsonParserSequence )  {^58^^^^^51^69^if  ( first instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P15_Unwrap_Block]^((com.fasterxml.jackson.core.util.JsonParserSequence) (first)).addFlattenedActiveParsers(p);^58^59^60^61^62^51^69^if  ( first instanceof JsonParserSequence )  { (  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ; } else { p.add ( first ) ; }^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P16_Remove_Block]^^58^59^60^61^62^51^69^if  ( first instanceof JsonParserSequence )  { (  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ; } else { p.add ( first ) ; }^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( p instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( p )  ) .addFlattenedActiveParsers ( result ) ; }else {     result.add ( p ) ; }^58^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( second instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( second )  ) .addFlattenedActiveParsers ( p ) ; }else {     p.add ( second ) ; }^58^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( ! (  ( first instanceof JsonParserSequence )  ||  ( second instanceof JsonParserSequence )  )  )  {     return new JsonParserSequence ( new JsonParser[]{ first , second } ) ; }^58^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P5_Replace_Variable]^p.add ( second ) ;^61^^^^^51^69^p.add ( first ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P14_Delete_Statement]^^61^^^^^51^69^p.add ( first ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P11_Insert_Donor_Statement]^p.add ( second ) ;p.add ( first ) ;^61^^^^^51^69^p.add ( first ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P7_Replace_Invocation]^(  ( JsonParserSequence )  first ) .createFlattened ( p ) ;^59^^^^^51^69^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P14_Delete_Statement]^^59^^^^^51^69^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P11_Insert_Donor_Statement]^(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^59^^^^^51^69^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P11_Insert_Donor_Statement]^(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^59^^^^^51^69^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P2_Replace_Operator]^if  ( second  &&  JsonParserSequence )  {^63^^^^^51^69^if  ( second instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P5_Replace_Variable]^if  ( first instanceof JsonParserSequence )  {^63^^^^^51^69^if  ( second instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P9_Replace_Statement]^if  ( p instanceof JsonParserSequence )  {^63^^^^^51^69^if  ( second instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P15_Unwrap_Block]^((com.fasterxml.jackson.core.util.JsonParserSequence) (second)).addFlattenedActiveParsers(p);^63^64^65^66^67^51^69^if  ( second instanceof JsonParserSequence )  { (  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ; } else { p.add ( second ) ; }^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P16_Remove_Block]^^63^64^65^66^67^51^69^if  ( second instanceof JsonParserSequence )  { (  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ; } else { p.add ( second ) ; }^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( p instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( p )  ) .addFlattenedActiveParsers ( result ) ; }else {     result.add ( p ) ; }^63^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( first instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( first )  ) .addFlattenedActiveParsers ( p ) ; }else {     p.add ( first ) ; }^63^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P13_Insert_Block]^if  ( ! (  ( first instanceof JsonParserSequence )  ||  ( second instanceof JsonParserSequence )  )  )  {     return new JsonParserSequence ( new JsonParser[]{ first , second } ) ; }^63^^^^^51^69^[Delete]^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P5_Replace_Variable]^p.add ( first ) ;^66^^^^^51^69^p.add ( second ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P14_Delete_Statement]^^66^^^^^51^69^p.add ( second ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P11_Insert_Donor_Statement]^p.add ( first ) ;p.add ( second ) ;^66^^^^^51^69^p.add ( second ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P7_Replace_Invocation]^(  ( JsonParserSequence )  second ) .createFlattened ( p ) ;^64^^^^^51^69^(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P14_Delete_Statement]^^64^^^^^51^69^(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P11_Insert_Donor_Statement]^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^64^^^^^51^69^(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P11_Insert_Donor_Statement]^(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^64^^^^^51^69^(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P3_Replace_Literal]^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size() - 3 ] )  ) ;^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P4_Replace_Constructor]^return return  new JsonParserSequence ( new JsonParser[]{ first , second } )  ] )  ) ;^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P7_Replace_Invocation]^return new JsonParserSequence ( p.toArray ( new JsonParser[p.add (  ) ] )  ) ;^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P7_Replace_Invocation]^return new JsonParserSequence ( p.toArray ( new JsonParser[p .ArrayList (  )  ] )  ) ;^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P3_Replace_Literal]^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size() - 1 ] )  ) ;^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P3_Replace_Literal]^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size() - 2 ] )  ) ;^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P7_Replace_Invocation]^return new JsonParserSequence ( p .ArrayList (  )   ) ;^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P14_Delete_Statement]^^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P3_Replace_Literal]^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size() - 5 ] )  ) ;^68^^^^^51^69^return new JsonParserSequence ( p.toArray ( new JsonParser[p.size (  ) ] )  ) ;^[CLASS] JsonParserSequence  [METHOD] createFlattened [RETURN_TYPE] JsonParserSequence   JsonParser first JsonParser second [VARIABLES] ArrayList  p  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  JsonParser  first  second  
[P2_Replace_Operator]^if  ( p  <=  JsonParserSequence )  {^76^^^^^72^82^if  ( p instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P9_Replace_Statement]^if  ( first instanceof JsonParserSequence )  {^76^^^^^72^82^if  ( p instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P9_Replace_Statement]^if  ( second instanceof JsonParserSequence )  {^76^^^^^72^82^if  ( p instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P15_Unwrap_Block]^((com.fasterxml.jackson.core.util.JsonParserSequence) (p)).addFlattenedActiveParsers(result);^76^77^78^79^80^72^82^if  ( p instanceof JsonParserSequence )  { (  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ; } else { result.add ( p ) ; }^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P16_Remove_Block]^^76^77^78^79^80^72^82^if  ( p instanceof JsonParserSequence )  { (  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ; } else { result.add ( p ) ; }^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P13_Insert_Block]^if  ( second instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( second )  ) .addFlattenedActiveParsers ( p ) ; }else {     p.add ( second ) ; }^76^^^^^72^82^[Delete]^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P13_Insert_Block]^if  ( first instanceof JsonParserSequence )  {      (  ( JsonParserSequence )   ( first )  ) .addFlattenedActiveParsers ( p ) ; }else {     p.add ( first ) ; }^76^^^^^72^82^[Delete]^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P13_Insert_Block]^if  ( ! (  ( first instanceof JsonParserSequence )  ||  ( second instanceof JsonParserSequence )  )  )  {     return new JsonParserSequence ( new JsonParser[]{ first , second } ) ; }^76^^^^^72^82^[Delete]^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P14_Delete_Statement]^^79^^^^^72^82^result.add ( p ) ;^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P7_Replace_Invocation]^(  ( JsonParserSequence )  p ) .createFlattened ( result ) ;^77^^^^^72^82^(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P14_Delete_Statement]^^77^^^^^72^82^(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P11_Insert_Donor_Statement]^(  ( JsonParserSequence )  second ) .addFlattenedActiveParsers ( p ) ;(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;^77^^^^^72^82^(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P11_Insert_Donor_Statement]^(  ( JsonParserSequence )  first ) .addFlattenedActiveParsers ( p ) ;(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;^77^^^^^72^82^(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P1_Replace_Type]^for  (  short  i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P2_Replace_Operator]^for  ( int i = _nextParser-1, len = _parsers.length; i <= len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P3_Replace_Literal]^for  ( int i = _nextParser-, len = _parsers.length; i < len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P5_Replace_Variable]^for  ( int i = _nextParser-1 = _parsers.length; i < len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P2_Replace_Operator]^if  ( p  >  JsonParserSequence )  {^76^^^^^72^82^if  ( p instanceof JsonParserSequence )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P7_Replace_Invocation]^result .toArray ( _parsers )  ;^79^^^^^72^82^result.add ( p ) ;^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P5_Replace_Variable]^JsonParser p = parsers[i];^75^^^^^72^82^JsonParser p = _parsers[i];^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P3_Replace_Literal]^for  ( int i = _nextParser--2, len = _parsers.length; i < len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P5_Replace_Variable]^for  ( int i = len-1, len = _parsers.length; i < len; ++i )  {^74^^^^^72^82^for  ( int i = _nextParser-1, len = _parsers.length; i < len; ++i )  {^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P7_Replace_Invocation]^(  ( JsonParserSequence )  p )  .createFlattened ( p , p )  ;^77^^^^^72^82^(  ( JsonParserSequence )  p ) .addFlattenedActiveParsers ( result ) ;^[CLASS] JsonParserSequence  [METHOD] addFlattenedActiveParsers [RETURN_TYPE] void   JsonParser> result [VARIABLES] List  result  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  JsonParser  p  
[P14_Delete_Statement]^^96^^^^^92^97^} while  ( switchToNext (  )  ) ;^[CLASS] JsonParserSequence  [METHOD] close [RETURN_TYPE] void   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P12_Insert_Condition]^if  ( t != null )  return t; while  ( switchToNext (  )  )  { } while  ( switchToNext (  )  ) ; }^96^^^^^92^97^} while  ( switchToNext (  )  ) ;^[CLASS] JsonParserSequence  [METHOD] close [RETURN_TYPE] void   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P7_Replace_Invocation]^delegate.nextToken (  ) ;^95^^^^^92^97^delegate.close (  ) ;^[CLASS] JsonParserSequence  [METHOD] close [RETURN_TYPE] void   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P14_Delete_Statement]^^95^^^^^92^97^delegate.close (  ) ;^[CLASS] JsonParserSequence  [METHOD] close [RETURN_TYPE] void   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P11_Insert_Donor_Statement]^t = delegate.nextToken (  ) ;delegate.close (  ) ;^95^^^^^92^97^delegate.close (  ) ;^[CLASS] JsonParserSequence  [METHOD] close [RETURN_TYPE] void   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P7_Replace_Invocation]^JsonToken t = delegate.close (  ) ;^102^^^^^100^109^JsonToken t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P14_Delete_Statement]^^102^103^^^^100^109^JsonToken t = delegate.nextToken (  ) ; if  ( t != null )  return t;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P11_Insert_Donor_Statement]^while  ( switchToNext (  )  )  { t = delegate.nextToken (  ) ;JsonToken t = delegate.nextToken (  ) ;^102^^^^^100^109^JsonToken t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P11_Insert_Donor_Statement]^t = delegate.nextToken (  ) ;JsonToken t = delegate.nextToken (  ) ;^102^^^^^100^109^JsonToken t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P2_Replace_Operator]^if  ( t == null )  return t;^103^^^^^100^109^if  ( t != null )  return t;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P8_Replace_Mix]^if  ( t != true )  return t;^103^^^^^100^109^if  ( t != null )  return t;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P15_Unwrap_Block]^return t;^103^104^105^106^107^100^109^if  ( t != null )  return t; while  ( switchToNext (  )  )  { t = delegate.nextToken (  ) ; if  ( t != null )  return t; }^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P16_Remove_Block]^^103^104^105^106^107^100^109^if  ( t != null )  return t; while  ( switchToNext (  )  )  { t = delegate.nextToken (  ) ; if  ( t != null )  return t; }^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P2_Replace_Operator]^if  ( t == null )  return t;^106^^^^^100^109^if  ( t != null )  return t;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P8_Replace_Mix]^if  ( t != true )  return t;^106^^^^^100^109^if  ( t != null )  return t;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P15_Unwrap_Block]^return t;^106^107^^^^100^109^if  ( t != null )  return t; }^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P16_Remove_Block]^^106^107^^^^100^109^if  ( t != null )  return t; }^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P7_Replace_Invocation]^t = delegate.close (  ) ;^105^^^^^100^109^t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P8_Replace_Mix]^t ;^105^^^^^100^109^t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P5_Replace_Variable]^t = null.nextToken (  ) ;^105^^^^^100^109^t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P14_Delete_Statement]^^105^^^^^100^109^t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P11_Insert_Donor_Statement]^delegate.close (  ) ;t = delegate.nextToken (  ) ;^105^^^^^100^109^t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P11_Insert_Donor_Statement]^JsonToken t = delegate.nextToken (  ) ;t = delegate.nextToken (  ) ;^105^^^^^100^109^t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P8_Replace_Mix]^if  ( t != false )  return t;^106^^^^^100^109^if  ( t != null )  return t;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P14_Delete_Statement]^^104^105^^^^100^109^while  ( switchToNext (  )  )  { t = delegate.nextToken (  ) ;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P8_Replace_Mix]^return false;^108^^^^^100^109^return null;^[CLASS] JsonParserSequence  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] JsonToken  t  boolean  JsonParser[]  _parsers  parsers  int  _nextParser  i  len  
[P2_Replace_Operator]^if  ( _nextParser > _parsers.length )  {^142^^^^^140^147^if  ( _nextParser >= _parsers.length )  {^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P15_Unwrap_Block]^return false;^142^143^144^^^140^147^if  ( _nextParser >= _parsers.length )  { return false; }^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P16_Remove_Block]^^142^143^144^^^140^147^if  ( _nextParser >= _parsers.length )  { return false; }^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P3_Replace_Literal]^return true;^143^^^^^140^147^return false;^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P5_Replace_Variable]^delegate = parsers[_nextParser++];^145^^^^^140^147^delegate = _parsers[_nextParser++];^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P8_Replace_Mix]^delegate ;^145^^^^^140^147^delegate = _parsers[_nextParser++];^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
[P3_Replace_Literal]^return false;^146^^^^^140^147^return true;^[CLASS] JsonParserSequence  [METHOD] switchToNext [RETURN_TYPE] boolean   [VARIABLES] JsonParser[]  _parsers  parsers  int  _nextParser  i  len  boolean  
