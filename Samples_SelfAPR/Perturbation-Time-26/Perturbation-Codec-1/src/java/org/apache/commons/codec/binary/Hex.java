[P8_Replace_Mix]^private static final char[] DIGITS  = null ;^37^^^^^37^40^private static final char[] DIGITS = {^[CLASS] Hex   [VARIABLES] 
[P1_Replace_Type]^short  len = data.length;^57^^^^^55^75^int len = data.length;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^int len = j;^57^^^^^55^75^int len = data.length;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^int len = data.length.length;^57^^^^^55^75^int len = data.length;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^int len = data;^57^^^^^55^75^int len = data.length;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P11_Insert_Donor_Statement]^int l = data.length;int len = data.length;^57^^^^^55^75^int len = data.length;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^if  (  ( len & 0x01 )  == 0 )  {^59^^^^^55^75^if  (  ( len & 0x01 )  != 0 )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^if  (  ( len  >  0x01 )  != 0 )  {^59^^^^^55^75^if  (  ( len & 0x01 )  != 0 )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^if  (  ( len & 0x08 )  != 0 )  {^59^^^^^55^75^if  (  ( len & 0x01 )  != 0 )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^if  (  ( len & 3x31 )  != 3 )  {^59^^^^^55^75^if  (  ( len & 0x01 )  != 0 )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^if  (  ( j & 0x01 )  != 0 )  {^59^^^^^55^75^if  (  ( len & 0x01 )  != 0 )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P6_Replace_Expression]^if  ( (len & 1) )  {^59^^^^^55^75^if  (  ( len & 0x01 )  != 0 )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P8_Replace_Mix]^if  (  ( len & 0x02 )  != 0 )  {^59^^^^^55^75^if  (  ( len & 0x01 )  != 0 )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P15_Unwrap_Block]^throw new org.apache.commons.codec.DecoderException("Odd number of characters.");^59^60^61^^^55^75^if  (  ( len & 0x01 )  != 0 )  { throw new DecoderException  (" ")  ; }^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P16_Remove_Block]^^59^60^61^^^55^75^if  (  ( len & 0x01 )  != 0 )  { throw new DecoderException  (" ")  ; }^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P13_Insert_Block]^if  ( digit ==  ( -1 )  )  {     throw new DecoderException (  (  (  ( "Illegal hexadecimal charcter " + ch )  + " at index " )  + index )  ) ; }^59^^^^^55^75^[Delete]^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P13_Insert_Block]^if  (  ( len & 1 )  != 0 )  {     throw new DecoderException ( "Odd number of characters." ) ; }^60^^^^^55^75^[Delete]^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P8_Replace_Mix]^return 0;^60^^^^^55^75^throw new DecoderException  (" ")  ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P11_Insert_Donor_Statement]^throw new EncoderException  (" ")  ;throw new DecoderException  (" ")  ;^60^^^^^55^75^throw new DecoderException  (" ")  ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^byte[] out = new byte[len  &&  1];^63^^^^^55^75^byte[] out = new byte[len >> 1];^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^byte[] out = new byte[len >> j];^63^^^^^55^75^byte[] out = new byte[len >> 1];^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^byte[] out = new byte[j >> 1];^63^^^^^55^75^byte[] out = new byte[len >> 1];^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P11_Insert_Donor_Statement]^char[] out = new char[l << 1];byte[] out = new byte[len >> 1];^63^^^^^55^75^byte[] out = new byte[len >> 1];^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P1_Replace_Type]^for  (  short  i = 0, j = 0; j < len; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^for  ( int i = 0, j = 0; j > len; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^for  ( int i = -4, j = -4; j < len; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^for  ( int i = -2, j = -2; j < len; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^for  ( int i = 0, len = 0; j < len; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^for  ( int i = 0, j = 0; j < j; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^for  ( int i = 0 = 0; j < len; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^for  ( int i = 0, len = 0; j < j; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^for  ( lennt i = 0, j = 0; j < i; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^f  ==  = f | toDigit ( data[j], j ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^f = len | toDigit ( data[j], j ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^f = f | toDigit ( DIGITS[j], j ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^f = f | toDigit ( data[j], len ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^f = f | toDigit ( data[j] ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^f = j | toDigit ( data[j], f ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^f = data | toDigit ( f[j], j ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P1_Replace_Type]^out[i] =  (  short  )   ( f & 0xFF ) ;^71^^^^^55^75^out[i] =  ( byte )   ( f & 0xFF ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^out[i] =  ( byte )   ( f  <<  0xFF ) ;^71^^^^^55^75^out[i] =  ( byte )   ( f & 0xFF ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^out[i] =  ( byte )   ( len & 0xFF ) ;^71^^^^^55^75^out[i] =  ( byte )   ( f & 0xFF ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P1_Replace_Type]^short  f = toDigit ( data[j], j )  << 4;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^int f = toDigit ( data[j], j )   &  4;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^int f = toDigit ( data[j], j )  << len;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^int f = toDigit ( DIGITS[j], j )  << 4;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^int f = toDigit ( data[j], len )  << 4;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^int f = toDigit ( data[j] )  << 4;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^int f = toDigit ( j[j], data )  << 4;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P14_Delete_Statement]^^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P11_Insert_Donor_Statement]^f = f | toDigit ( data[j], j ) ;int f = toDigit ( data[j], j )  << 4;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P5_Replace_Variable]^f = f | toDigit ( j[j], data ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P14_Delete_Statement]^^69^70^^^^55^75^f = f | toDigit ( data[j], j ) ; j++;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P11_Insert_Donor_Statement]^int f = toDigit ( data[j], j )  << 4;f = f | toDigit ( data[j], j ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^f  <=  = f | toDigit ( data[j], j ) ;^69^^^^^55^75^f = f | toDigit ( data[j], j ) ;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^for  ( int i = -3, j = -3; j < len; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^for  ( int i = j, j = j; j < len; i++ )  {^66^^^^^55^75^for  ( int i = 0, j = 0; j < len; i++ )  {^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P2_Replace_Operator]^int f = toDigit ( data[j], j )   ^  4;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P3_Replace_Literal]^int f = toDigit ( data[j], j )  << j;^67^^^^^55^75^int f = toDigit ( data[j], j )  << 4;^[CLASS] Hex  [METHOD] decodeHex [RETURN_TYPE] byte[]   char[] data [VARIABLES] byte[]  out  boolean  int  f  i  j  len  char[]  DIGITS  data  
[P1_Replace_Type]^long  digit = Character.digit ( ch, 16 ) ;^86^^^^^85^91^int digit = Character.digit ( ch, 16 ) ;^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P3_Replace_Literal]^int digit = Character.digit ( ch, digit ) ;^86^^^^^85^91^int digit = Character.digit ( ch, 16 ) ;^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P3_Replace_Literal]^int digit = Character.digit ( ch, 23 ) ;^86^^^^^85^91^int digit = Character.digit ( ch, 16 ) ;^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P14_Delete_Statement]^^86^^^^^85^91^int digit = Character.digit ( ch, 16 ) ;^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P2_Replace_Operator]^if  ( digit != -1 )  {^87^^^^^85^91^if  ( digit == -1 )  {^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P3_Replace_Literal]^if  ( digit == -digit )  {^87^^^^^85^91^if  ( digit == -1 )  {^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P6_Replace_Expression]^if  (  ( "Illegal hexadecimal charcter " + ch )  + " at index " + index )  {^87^^^^^85^91^if  ( digit == -1 )  {^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P6_Replace_Expression]^if  ( "Illegal hexadecimal charcter " + ch + " at index " )  {^87^^^^^85^91^if  ( digit == -1 )  {^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P6_Replace_Expression]^if  ( "Illegal hexadecimal charcter " + ch )  {^87^^^^^85^91^if  ( digit == -1 )  {^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P8_Replace_Mix]^if  ( digit == -2 )  {^87^^^^^85^91^if  ( digit == -1 )  {^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P15_Unwrap_Block]^throw new org.apache.commons.codec.DecoderException(((("Illegal hexadecimal charcter " + ch) + " at index ") + index));^87^88^89^^^85^91^if  ( digit == -1 )  { throw new DecoderException  (" ")  ; }^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P16_Remove_Block]^^87^88^89^^^85^91^if  ( digit == -1 )  { throw new DecoderException  (" ")  ; }^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P13_Insert_Block]^if  (  ( len & 1 )  != 0 )  {     throw new DecoderException ( "Odd number of characters." ) ; }^87^^^^^85^91^[Delete]^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P13_Insert_Block]^if  ( digit ==  ( -1 )  )  {     throw new DecoderException (  (  (  ( "Illegal hexadecimal charcter " + ch )  + " at index " )  + index )  ) ; }^88^^^^^85^91^[Delete]^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P11_Insert_Donor_Statement]^throw new EncoderException  (" ")  ;throw new DecoderException  (" ")  ;^88^^^^^85^91^throw new DecoderException  (" ")  ;^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P8_Replace_Mix]^return true;^88^^^^^85^91^throw new DecoderException  (" ")  ;^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P5_Replace_Variable]^return index;^90^^^^^85^91^return digit;^[CLASS] Hex  [METHOD] toDigit [RETURN_TYPE] int   char ch int index [VARIABLES] char  ch  boolean  int  digit  index  char[]  DIGITS  data  
[P1_Replace_Type]^short  l = data.length;^104^^^^^102^115^int l = data.length;^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^int l = j;^104^^^^^102^115^int l = data.length;^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^int l = data.length.length;^104^^^^^102^115^int l = data.length;^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^int l = data;^104^^^^^102^115^int l = data.length;^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P11_Insert_Donor_Statement]^int len = data.length;int l = data.length;^104^^^^^102^115^int l = data.length;^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P2_Replace_Operator]^char[] out = new char[l  &&  1];^106^^^^^102^115^char[] out = new char[l << 1];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P3_Replace_Literal]^char[] out = new char[l << i];^106^^^^^102^115^char[] out = new char[l << 1];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^char[] out = new char[j << 1];^106^^^^^102^115^char[] out = new char[l << 1];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P11_Insert_Donor_Statement]^byte[] out = new byte[len >> 1];char[] out = new char[l << 1];^106^^^^^102^115^char[] out = new char[l << 1];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P1_Replace_Type]^for  (  short  i = 0, j = 0; i < l; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P2_Replace_Operator]^for  ( int i = 0, j = 0; i <= l; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P3_Replace_Literal]^for  ( int i = l, j = l; i < l; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P3_Replace_Literal]^for  ( int i = j, j = j; i < l; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^for  ( lnt i = 0, j = 0; i < l; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^for  ( int i = 0, j = 0; i < j; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^for  ( lnt i = 0, j = 0; i < i; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P2_Replace_Operator]^out[j++] = DIGITS[ ( 0xF0 & data[i] )    instanceof   4 ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P2_Replace_Operator]^out[j++] = DIGITS[ ( 0xF0   instanceof   data[i] )  >>> 4 ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P3_Replace_Literal]^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 1 ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^out[j++] = data[ ( 0xF0 & DIGITS[i] )  >>> 4 ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P11_Insert_Donor_Statement]^out[j++] = DIGITS[ 0x0F & data[i] ];out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P2_Replace_Operator]^out[j++] = DIGITS[ 0x0F  |  data[i] ];^111^^^^^102^115^out[j++] = DIGITS[ 0x0F & data[i] ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^out[j++] = data[ 0x0F & data[i] ];^111^^^^^102^115^out[j++] = DIGITS[ 0x0F & data[i] ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^out[j++] = data[ 0x0F & DIGITS[i] ];^111^^^^^102^115^out[j++] = DIGITS[ 0x0F & data[i] ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P11_Insert_Donor_Statement]^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];out[j++] = DIGITS[ 0x0F & data[i] ];^111^^^^^102^115^out[j++] = DIGITS[ 0x0F & data[i] ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P2_Replace_Operator]^out[j++] = DIGITS[ ( 0xF0 & data[i] )   &&  4 ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P2_Replace_Operator]^out[j++] = DIGITS[ ( 0xF0  ^  data[i] )  >>> 4 ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P3_Replace_Literal]^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> l ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^out[j++] = data[ ( 0xF0 & data[i] )  >>> 4 ];^110^^^^^102^115^out[j++] = DIGITS[ ( 0xF0 & data[i] )  >>> 4 ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P2_Replace_Operator]^out[j++] = DIGITS[ 0x0F   instanceof   data[i] ];^111^^^^^102^115^out[j++] = DIGITS[ 0x0F & data[i] ];^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P3_Replace_Literal]^for  ( int i = -9, j = -9; i < l; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P1_Replace_Type]^for  (  long  i = 0, j = 0; i < l; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P3_Replace_Literal]^for  ( int i = , j = ; i < l; i++ )  {^109^^^^^102^115^for  ( int i = 0, j = 0; i < l; i++ )  {^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P5_Replace_Variable]^return data;^114^^^^^102^115^return out;^[CLASS] Hex  [METHOD] encodeHex [RETURN_TYPE] char[]   byte[] data [VARIABLES] byte[]  data  boolean  int  i  j  l  char[]  DIGITS  data  out  
[P7_Replace_Invocation]^return encodeHex ( new String ( array ) .toCharArray (  )  ) ;^132^^^^^131^133^return decodeHex ( new String ( array ) .toCharArray (  )  ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  data  out  boolean  
[P7_Replace_Invocation]^return decodeHex ( new String ( array ) .String (  )  ) ;^132^^^^^131^133^return decodeHex ( new String ( array ) .toCharArray (  )  ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  data  out  boolean  
[P1_Replace_Type]^return decodeHex ( new char ( array ) .toCharArray (  )  ) ;^132^^^^^131^133^return decodeHex ( new String ( array ) .toCharArray (  )  ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  data  out  boolean  
[P14_Delete_Statement]^^132^^^^^131^133^return decodeHex ( new String ( array ) .toCharArray (  )  ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  data  out  boolean  
[P8_Replace_Mix]^return decodeHex ( new String ( array )  .String ( array )   ) ;^132^^^^^131^133^return decodeHex ( new String ( array ) .toCharArray (  )  ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  data  out  boolean  
[P5_Replace_Variable]^return decodeHex ( out ) ;^152^^^^^149^156^return decodeHex ( charArray ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P7_Replace_Invocation]^return encodeHex ( charArray ) ;^152^^^^^149^156^return decodeHex ( charArray ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P2_Replace_Operator]^char[] charArray = object  &  String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^151^^^^^149^156^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P6_Replace_Expression]^char[] charArray  =   ( char[] )  object;^151^^^^^149^156^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P6_Replace_Expression]^char[] charArray  =   (  ( String )  object ) .toCharArray (  )  ;^151^^^^^149^156^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P7_Replace_Invocation]^char[] charArray = object instanceof String ?  (  ( String )  object ) .String (  )  :  ( char[] )  object;^151^^^^^149^156^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P11_Insert_Donor_Statement]^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^151^^^^^149^156^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P1_Replace_Type]^char[] charArray = object instanceof char ?  (  ( char )  object ) .toCharArray (  )  :  ( char[] )  object;^151^^^^^149^156^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P14_Delete_Statement]^^151^^^^^149^156^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P14_Delete_Statement]^^152^^^^^149^156^return decodeHex ( charArray ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P8_Replace_Mix]^return encodeHex ( out ) ;^152^^^^^149^156^return decodeHex ( charArray ) ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P4_Replace_Constructor]^throw throw  new EncoderException ( e.getMessage (  )  )   ;^154^^^^^149^156^throw new DecoderException  (" ")  ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P2_Replace_Operator]^char[] charArray = object  &&  String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^151^^^^^149^156^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P11_Insert_Donor_Statement]^throw new EncoderException  (" ")  ;throw new DecoderException  (" ")  ;^154^^^^^149^156^throw new DecoderException  (" ")  ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P14_Delete_Statement]^^154^^^^^149^156^throw new DecoderException  (" ")  ;^[CLASS] Hex  [METHOD] decode [RETURN_TYPE] Object   Object object [VARIABLES] Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P1_Replace_Type]^return new char ( encodeHex ( array )  ) .getBytes (  ) ;^169^^^^^168^170^return new String ( encodeHex ( array )  ) .getBytes (  ) ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  charArray  data  out  boolean  
[P7_Replace_Invocation]^return new String ( encodeHex ( array )  ) .String (  ) ;^169^^^^^168^170^return new String ( encodeHex ( array )  ) .getBytes (  ) ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  charArray  data  out  boolean  
[P7_Replace_Invocation]^return new String ( encodeHex ( array )  )  .String ( array )  ;^169^^^^^168^170^return new String ( encodeHex ( array )  ) .getBytes (  ) ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  charArray  data  out  boolean  
[P7_Replace_Invocation]^return new String ( encode ( array )  ) .getBytes (  ) ;^169^^^^^168^170^return new String ( encodeHex ( array )  ) .getBytes (  ) ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  charArray  data  out  boolean  
[P14_Delete_Statement]^^169^^^^^168^170^return new String ( encodeHex ( array )  ) .getBytes (  ) ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] byte[]   byte[] array [VARIABLES] byte[]  array  char[]  DIGITS  charArray  data  out  boolean  
[P7_Replace_Invocation]^return encode ( byteArray ) ;^186^^^^^183^190^return encodeHex ( byteArray ) ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P2_Replace_Operator]^byte[] byteArray = object  &  String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^185^^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P6_Replace_Expression]^byte[] byteArray  =   ( byte[] )  object;^185^^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P6_Replace_Expression]^byte[] byteArray  =   (  ( String )  object ) .getBytes (  )  ;^185^^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P7_Replace_Invocation]^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .String (  )  :  ( byte[] )  object;^185^^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P7_Replace_Invocation]^byte[] byteArray = object instanceof String ?  (  ( String )  object )  .String ( byteArray )   :  ( byte[] )  object;^185^^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P11_Insert_Donor_Statement]^char[] charArray = object instanceof String ?  (  ( String )  object ) .toCharArray (  )  :  ( char[] )  object;byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^185^^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P1_Replace_Type]^byte[] byteArray = object instanceof char ?  (  ( char )  object ) .getBytes (  )  :  ( byte[] )  object;^185^^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P14_Delete_Statement]^^185^186^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object; return encodeHex ( byteArray ) ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P14_Delete_Statement]^^186^^^^^183^190^return encodeHex ( byteArray ) ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P4_Replace_Constructor]^throw throw  new DecoderException ( e.getMessage (  )  )   ;^188^^^^^183^190^throw new EncoderException  (" ")  ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P2_Replace_Operator]^byte[] byteArray = object  ==  String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^185^^^^^183^190^byte[] byteArray = object instanceof String ?  (  ( String )  object ) .getBytes (  )  :  ( byte[] )  object;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P8_Replace_Mix]^throw new DecoderException  (" ")  ; ;^188^^^^^183^190^throw new EncoderException  (" ")  ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P11_Insert_Donor_Statement]^throw new DecoderException  (" ")  ;throw new EncoderException  (" ")  ;^188^^^^^183^190^throw new EncoderException  (" ")  ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
[P14_Delete_Statement]^^188^^^^^183^190^throw new EncoderException  (" ")  ;^[CLASS] Hex  [METHOD] encode [RETURN_TYPE] Object   Object object [VARIABLES] byte[]  byteArray  Object  object  boolean  char[]  DIGITS  charArray  data  out  ClassCastException  e  
