[P3_Replace_Literal]^private final static String[] combinators = {"", ">", "+", "~", " "};^48^^^^^43^53^private final static String[] combinators = {",", ">", "+", "~", " "};^[CLASS] Selector SelectorParseException   [VARIABLES] 
[P3_Replace_Literal]^private final static String[] combinators = {",", "", "+", "~", " "};^48^^^^^43^53^private final static String[] combinators = {",", ">", "+", "~", " "};^[CLASS] Selector SelectorParseException   [VARIABLES] 
[P3_Replace_Literal]^private final static String[] combinators = {",", ">", "", "~", " "};^48^^^^^43^53^private final static String[] combinators = {",", ">", "+", "~", " "};^[CLASS] Selector SelectorParseException   [VARIABLES] 
[P3_Replace_Literal]^private final static String[] combinators = {",", ">", "+", "", " "};^48^^^^^43^53^private final static String[] combinators = {",", ">", "+", "~", " "};^[CLASS] Selector SelectorParseException   [VARIABLES] 
[P8_Replace_Mix]^private final  String[] combinators = {",", ">", "+", "~", " "};^48^^^^^43^53^private final static String[] combinators = {",", ">", "+", "~", " "};^[CLASS] Selector SelectorParseException   [VARIABLES] 
[P1_Replace_Type]^private final char query;^51^^^^^46^56^private final String query;^[CLASS] Selector SelectorParseException   [VARIABLES] 
[P7_Replace_Invocation]^Validate.notEmpty ( query ) ;^55^^^^^54^64^Validate.notNull ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P14_Delete_Statement]^^55^56^^^^54^64^Validate.notNull ( query ) ; query = query.trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;Validate.notNull ( query ) ;^55^^^^^54^64^Validate.notNull ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( query ) ;Validate.notNull ( query ) ;^55^^^^^54^64^Validate.notNull ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( className ) ;Validate.notNull ( query ) ;^55^^^^^54^64^Validate.notNull ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( id ) ;Validate.notNull ( query ) ;^55^^^^^54^64^Validate.notNull ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( key ) ;Validate.notNull ( query ) ;^55^^^^^54^64^Validate.notNull ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( tagName ) ;Validate.notNull ( query ) ;^55^^^^^54^64^Validate.notNull ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( roots ) ;Validate.notNull ( query ) ;^55^^^^^54^64^Validate.notNull ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P7_Replace_Invocation]^query = query.equals (  ) ;^56^^^^^54^64^query = query.trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P8_Replace_Mix]^query =  null.trim (  ) ;^56^^^^^54^64^query = query.trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P14_Delete_Statement]^^56^^^^^54^64^query = query.trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P7_Replace_Invocation]^Validate.isTrue ( query ) ;^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P14_Delete_Statement]^^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;Validate.notEmpty ( query ) ;^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( className ) ;Validate.notEmpty ( query ) ;^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( id ) ;Validate.notEmpty ( query ) ;^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( query ) ;Validate.notEmpty ( query ) ;^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( key ) ;Validate.notEmpty ( query ) ;^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( tagName ) ;Validate.notEmpty ( query ) ;^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( roots ) ;Validate.notEmpty ( query ) ;^57^^^^^54^64^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P14_Delete_Statement]^^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( query ) ;Validate.notNull ( root ) ;^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( className ) ;Validate.notNull ( root ) ;^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;Validate.notNull ( root ) ;^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( id ) ;Validate.notNull ( root ) ;^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( query ) ;Validate.notNull ( root ) ;^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( key ) ;Validate.notNull ( root ) ;^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( tagName ) ;Validate.notNull ( root ) ;^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( roots ) ;Validate.notNull ( root ) ;^58^^^^^54^64^Validate.notNull ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P8_Replace_Mix]^this.elements ;^60^^^^^54^64^this.elements = new LinkedHashSet<Element> (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P1_Replace_Type]^this.elements = new  Set <Element> (  ) ;^60^^^^^54^64^this.elements = new LinkedHashSet<Element> (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P8_Replace_Mix]^this.query =  null;^61^^^^^54^64^this.query = query;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P8_Replace_Mix]^this.root =  null;^62^^^^^54^64^this.root = root;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P8_Replace_Mix]^this.tq =  new TokenQueue ( null ) ;^63^^^^^54^64^this.tq = new TokenQueue ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] Element)   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  boolean  Element  root  
[P5_Replace_Variable]^super ( query ) ;^333^^^^^332^334^super ( s ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] String)   String s [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[P14_Delete_Statement]^^333^^^^^332^334^super ( s ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] String)   String s [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[P4_Replace_Constructor]^return new Selector (  root ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[P4_Replace_Constructor]^return new Selector ( query ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[P5_Replace_Variable]^return new Selector ( root, query ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[P7_Replace_Invocation]^return new Selector ( query, root )  .select (  )  ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[P5_Replace_Variable]^return new Selector ( s, root ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[P14_Delete_Statement]^^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[P5_Replace_Variable]^Validate.notEmpty ( s ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P7_Replace_Invocation]^Validate.isTrue ( query ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P8_Replace_Mix]^Validate.isTrue ( s ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P14_Delete_Statement]^^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;Validate.notEmpty ( query ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( className ) ;Validate.notEmpty ( query ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( id ) ;Validate.notEmpty ( query ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notNull ( query ) ;Validate.notEmpty ( query ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( key ) ;Validate.notEmpty ( query ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( tagName ) ;Validate.notEmpty ( query ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notNull ( roots ) ;Validate.notEmpty ( query ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P7_Replace_Invocation]^Validate.notEmpty ( roots ) ;^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P14_Delete_Statement]^^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;Validate.notNull ( roots ) ;^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( query ) ;Validate.notNull ( roots ) ;^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( className ) ;Validate.notNull ( roots ) ;^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( id ) ;Validate.notNull ( roots ) ;^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notNull ( query ) ;Validate.notNull ( roots ) ;^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( key ) ;Validate.notNull ( roots ) ;^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( tagName ) ;Validate.notNull ( roots ) ;^84^^^^^82^91^Validate.notNull ( roots ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P1_Replace_Type]^List <Element> elements = new  List <Element> (  ) ;^85^^^^^82^91^LinkedHashSet<Element> elements = new LinkedHashSet<Element> (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P5_Replace_Variable]^elements.addAll ( select ( s, root )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P5_Replace_Variable]^elements.addAll ( select (  root )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P5_Replace_Variable]^elements.addAll ( select ( query )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P5_Replace_Variable]^elements.addAll ( select ( root, query )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P7_Replace_Invocation]^elements.addAll ( Selector ( query, root )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P8_Replace_Mix]^elements.addAll ( Selector ( s, root )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P14_Delete_Statement]^^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;elements.addAll ( select ( query, root )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P11_Insert_Donor_Statement]^elements.addAll ( select ( subQuery, root )  ) ;elements.addAll ( select ( query, root )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[P7_Replace_Invocation]^tq.consumeWord (  ) ;^94^^^^^93^122^tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^94^^^^^93^122^tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^boolean seenWhite = tq.consumeWhitespace (  ) ;tq.consumeWhitespace (  ) ;^94^^^^^93^122^tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^if  ( tq.matchesWord ( combinators )  )  {^96^^^^^93^122^if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^if  ( tq .matchesWord (  )   )  {^96^^^^^93^122^if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^if  ( tq.matchesAny ( indexLessThans )  )  {^96^^^^^93^122^if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P15_Unwrap_Block]^elements.add(root); combinator(tq.consume().toString());^96^97^98^99^100^93^122^if  ( tq.matchesAny ( combinators )  )  { elements.add ( root ) ; combinator ( tq.consume (  ) .toString (  )  ) ; } else { addElements ( findElements (  )  ) ; }^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P16_Remove_Block]^^96^97^98^99^100^93^122^if  ( tq.matchesAny ( combinators )  )  { elements.add ( root ) ; combinator ( tq.consume (  ) .toString (  )  ) ; } else { addElements ( findElements (  )  ) ; }^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^allElements ( findElements (  )  ) ;^100^^^^^96^101^addElements ( findElements (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^addElements ( allElements (  )  ) ;^100^^^^^96^101^addElements ( findElements (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^100^^^^^96^101^addElements ( findElements (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;addElements ( findElements (  )  ) ;^100^^^^^96^101^addElements ( findElements (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^elements.addAll ( root ) ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^elements .addAll (  )  ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;elements.add ( root ) ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^output.add ( c ) ;elements.add ( root ) ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^children.add ( c ) ;elements.add ( root ) ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^siblings.add ( c ) ;elements.add ( root ) ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^elements.addAll ( add ) ;elements.add ( root ) ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^elements.addAll ( select ( query, root )  ) ;elements.add ( root ) ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^elements.retainAll ( intersect ) ;elements.add ( root ) ;^97^^^^^93^122^elements.add ( root ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^indexLessThan ( tq.consume (  ) .toString (  )  ) ;^98^^^^^93^122^combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^combinator ( tq.consume (  ) .trim (  )  ) ;^98^^^^^93^122^combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^combinator ( tq.consumeWord (  ) .toString (  )  ) ;^98^^^^^93^122^combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^98^^^^^93^122^combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^if  ( combinators.matchesAny ( tq )  )  {^96^^^^^93^122^if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^97^98^^^^93^122^elements.add ( root ) ; combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^allElements ( findElements (  )  ) ;^100^^^^^93^122^addElements ( findElements (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^addElements ( allElements (  )  ) ;^100^^^^^93^122^addElements ( findElements (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^100^^^^^93^122^addElements ( findElements (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;addElements ( findElements (  )  ) ;^100^^^^^93^122^addElements ( findElements (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^while  ( !tq.consume (  )  )  {^103^^^^^93^122^while  ( !tq.isEmpty (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^while  ( !tq .chompTo ( subQuery )   )  {^103^^^^^93^122^while  ( !tq.isEmpty (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P8_Replace_Mix]^while  ( !tq .chompTo ( s )   )  {^103^^^^^93^122^while  ( !tq.isEmpty (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^while  ( !tq.consume (  )  )  {^108^^^^^93^122^while  ( !tq.isEmpty (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P1_Replace_Type]^char subQuery = tq.chompTo ( "," ) ;^109^^^^^93^122^String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P3_Replace_Literal]^String subQuery = tq.chompTo ( "" ) ;^109^^^^^93^122^String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^String subQuery = tq.matchChomp ( "," ) ;^109^^^^^93^122^String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^String subQuery = tq.consumeToAny ( combinators ) ;String subQuery = tq.chompTo ( "," ) ;^109^^^^^93^122^String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^String indexS = tq.chompTo ( " ) " ) .trim (  ) ;String subQuery = tq.chompTo ( "," ) ;^109^^^^^93^122^String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^String subQuery = tq .isEmpty (  )  ;^109^^^^^93^122^String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^109^^^^^93^122^String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^while  ( !tq.isEmpty (  )  )  { String subQuery = tq.chompTo ( "," ) ;String subQuery = tq.chompTo ( "," ) ;^109^^^^^93^122^String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^elements.addAll ( select ( s, root )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^elements.addAll ( select (  root )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^elements.addAll ( select ( subQuery )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^elements.addAll ( select ( root, subQuery )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^elements .add ( root )  ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^elements.addAll ( combinator ( subQuery, root )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^elements.addAll ( select ( query, root )  ) ;elements.addAll ( select ( subQuery, root )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;elements.addAll ( select ( subQuery, root )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P3_Replace_Literal]^if  ( tq.matchChomp ( "" )  )  {^107^^^^^93^122^if  ( tq.matchChomp ( "," )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^if  ( tq.matchesAny ( "," )  )  {^107^^^^^93^122^if  ( tq.matchChomp ( "," )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P15_Unwrap_Block]^while (!(tq.isEmpty())) {    java.lang.String subQuery = tq.chompTo(",");    elements.addAll(org.jsoup.select.Selector.select(subQuery, root));} ;^107^108^109^110^111^93^122^if  ( tq.matchChomp ( "," )  )  { while  ( !tq.isEmpty (  )  )  { String subQuery = tq.chompTo ( "," ) ; elements.addAll ( select ( subQuery, root )  ) ; }^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P16_Remove_Block]^^107^108^109^110^111^93^122^if  ( tq.matchChomp ( "," )  )  { while  ( !tq.isEmpty (  )  )  { String subQuery = tq.chompTo ( "," ) ; elements.addAll ( select ( subQuery, root )  ) ; }^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P6_Replace_Expression]^} else {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^} else if  ( tq.matchesWord ( combinators )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^} else if  ( tq .matchesWord (  )   )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^} else if  ( tq.matchesAny ( indexLessThans )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^} else if  ( tq.matchesAny ( addElementss )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P8_Replace_Mix]^}  if  ( tq.matchesAny ( indexLessThans )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( "*" )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( "[" )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P6_Replace_Expression]^} else {^114^^^^^93^122^} else if  ( seenWhite )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P15_Unwrap_Block]^combinator(" ");^114^115^116^117^118^93^122^} else if  ( seenWhite )  { combinator ( " " ) ; } else { Elements candidates = findElements (  ) ; intersectElements ( filterForSelf ( elements, candidates )  ) ; }^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P16_Remove_Block]^^114^115^116^117^118^93^122^} else if  ( seenWhite )  { combinator ( " " ) ; } else { Elements candidates = findElements (  ) ; intersectElements ( filterForSelf ( elements, candidates )  ) ; }^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P13_Insert_Block]^if  ( tq.matchesAny ( combinators )  )  {     combinator ( tq.consume (  ) .toString (  )  ) ; }else     if  ( seenWhite )  {         combinator ( " " ) ;     }else {         Elements candidates = findElements (  ) ;         intersectElements ( filterForSelf ( elements, candidates )  ) ;     }^114^^^^^93^122^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^Elements candidates = allElements (  ) ;^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Elements candidates = findElements (  ) ;^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Elements candidates = findElements (  ) ;^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements children = new Elements (  ) ;Elements candidates = findElements (  ) ;^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements siblings = new Elements (  ) ;Elements candidates = findElements (  ) ;^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Elements candidates = findElements (  ) ;^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^117^118^^^^114^119^Elements candidates = findElements (  ) ; intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^addElements ( findElements (  )  ) ;Elements candidates = findElements (  ) ;^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^elements.retainAll ( intersect ) ;Elements candidates = findElements (  ) ;^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf ( elements )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf (  candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf ( candidates, elements )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^addElements ( filterForSelf ( elements, candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^intersectElements ( intersectElements ( elements, candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^addElements ( " " ) ;^115^^^^^93^122^combinator ( " " ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^115^^^^^93^122^combinator ( " " ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^Elements candidates = allElements (  ) ;^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Elements candidates = findElements (  ) ;^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Elements candidates = findElements (  ) ;^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements children = new Elements (  ) ;Elements candidates = findElements (  ) ;^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Elements siblings = new Elements (  ) ;Elements candidates = findElements (  ) ;^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Elements candidates = findElements (  ) ;^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^addElements ( findElements (  )  ) ;Elements candidates = findElements (  ) ;^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^elements.retainAll ( intersect ) ;Elements candidates = findElements (  ) ;^117^^^^^93^122^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf ( elements )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf (  candidates )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf ( candidates, elements )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^addElements ( filterForSelf ( elements, candidates )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^intersectElements ( intersectElements ( elements, candidates )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^indexLessThan ( tq.consume (  ) .toString (  )  ) ;^113^^^^^93^122^combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^combinator ( tq.consume (  ) .trim (  )  ) ;^113^^^^^93^122^combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^combinator ( tq.consumeWord (  ) .toString (  )  ) ;^113^^^^^93^122^combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^113^^^^^93^122^combinator ( tq.consume (  ) .toString (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^117^^^^^114^119^Elements candidates = findElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf ( 4, candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P8_Replace_Mix]^intersectElements ( filterForSelf ( null, candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^} else if  ( combinators.matchesAny ( tq )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P3_Replace_Literal]^combinator ( "" ) ;^115^^^^^93^122^combinator ( " " ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^117^118^^^^93^122^Elements candidates = findElements (  ) ; intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^108^109^^^^93^122^while  ( !tq.isEmpty (  )  )  { String subQuery = tq.chompTo ( "," ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^109^110^^^^93^122^String subQuery = tq.chompTo ( "," ) ; elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P8_Replace_Mix]^}  if  ( seenWhite )  {^114^^^^^93^122^} else if  ( seenWhite )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf ( null, candidates )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P8_Replace_Mix]^intersectElements ( intersectElements ( null, candidates )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P8_Replace_Mix]^intersectElements ( filterForSelf ( 0, candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^boolean seenWhite = tq.consumeWord (  ) ;^105^^^^^93^122^boolean seenWhite = tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^String tagName = tq.consumeWord (  ) ;boolean seenWhite = tq.consumeWhitespace (  ) ;^105^^^^^93^122^boolean seenWhite = tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^105^^^^^93^122^boolean seenWhite = tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P11_Insert_Donor_Statement]^tq.consumeWhitespace (  ) ;boolean seenWhite = tq.consumeWhitespace (  ) ;^105^^^^^93^122^boolean seenWhite = tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^if  ( tq .matchesWord (  )   )  {^107^^^^^93^122^if  ( tq.matchChomp ( "," )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P8_Replace_Mix]^elements.addAll ( combinator ( s, root )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P5_Replace_Variable]^intersectElements ( filterForSelf ( 3, candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^while  ( !tq .chompTo ( subQuery )   )  {^108^^^^^93^122^while  ( !tq.isEmpty (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P8_Replace_Mix]^while  ( !tq .chompTo ( query )   )  {^108^^^^^93^122^while  ( !tq.isEmpty (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^while  ( !tq .chompTo ( s )   )  {^108^^^^^93^122^while  ( !tq.isEmpty (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^boolean seenWhite = tq .consumeToAny ( combinators )  ;^105^^^^^93^122^boolean seenWhite = tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P14_Delete_Statement]^^103^104^105^^^93^122^while  ( !tq.isEmpty (  )  )  {  boolean seenWhite = tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[P7_Replace_Invocation]^tq.consumeWord (  ) ;^125^^^^^124^141^tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P14_Delete_Statement]^^125^126^^^^124^141^tq.consumeWhitespace (  ) ; String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^boolean seenWhite = tq.consumeWhitespace (  ) ;tq.consumeWhitespace (  ) ;^125^^^^^124^141^tq.consumeWhitespace (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P1_Replace_Type]^char subQuery = tq.consumeToAny ( combinators ) ;^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^String subQuery = combinators.consumeToAny ( tq ) ;^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^String subQuery = tq.consumeCssIdentifier ( combinators ) ;^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^String subQuery = tq.chompTo ( "," ) ;String subQuery = tq.consumeToAny ( combinators ) ;^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^String tagName = tq.consumeWord (  ) ;String subQuery = tq.consumeToAny ( combinators ) ;^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^String subQuery = tq .consumeToAny ( combinators )  ;^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P14_Delete_Statement]^^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P3_Replace_Literal]^if  ( combinator.equals ( "" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P4_Replace_Constructor]^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select (  elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^if  ( s.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( s, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^if  ( combinator.equals ( ">" )  ) output = filterForChildren (  select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^if  ( subQuery.equals ( ">" )  ) output = filterForChildren ( elements, select ( combinator, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^if  ( combinator.equals ( ">" )  ) output = intersectElements ( elements, select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, combinator ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^if  ( combinator .equals ( 0 )   ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^if  ( s.equals ( ">" )  ) output = filterForChildren ( elements, combinator ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P4_Replace_Constructor]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select (  elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( subQuery.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( s, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants (  select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( elements.equals ( " " )  ) output = filterForDescendants ( combinator, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( subQuery.equals ( " " )  ) output = filterForDescendants ( elements, select ( combinator, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( subQuery, select ( elements, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^else if  ( combinator.equals ( " " )  ) output = intersectElements ( elements, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, combinator ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P2_Replace_Operator]^else if  ^  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P3_Replace_Literal]^else if  ( combinator.equals ( "" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P4_Replace_Constructor]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select (  root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( s, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings (  select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( subQuery.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( combinator, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( subQuery, select ( elements, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( root.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, combinator )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^else if  ( combinator.equals ( "+" )  ) output = intersectElements ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, combinator ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^else if  ( subQuery.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P3_Replace_Literal]^else if  ( combinator.equals ( "" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P4_Replace_Constructor]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select (  root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( s.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( s, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings (  select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( subQuery.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( combinator, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( root, select ( subQuery, elements )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( root, subQuery )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^else if  ( combinator.equals ( "~" )  ) output = intersectElements ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, combinator ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( s, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^throw new SelectorParseException  (" ")  ;throw new IllegalStateException  (" ")  ;^138^^^^^124^141^throw new IllegalStateException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForGeneralSiblings ( elements, select (  root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForGeneralSiblings (  select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForGeneralSiblings ( elements, select ( subQuery )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForGeneralSiblings ( elements, select ( root, subQuery )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForGeneralSiblings ( subQuery, select ( elements, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^output = intersectElements ( elements, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^output = filterForGeneralSiblings ( elements, combinator ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output =  filterForGeneralSiblings ( elements, select ( s, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForGeneralSiblings ( root, select ( subQuery, elements )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P14_Delete_Statement]^^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output = filterForGeneralSiblings ( elements, combinator ( s, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output =  filterForGeneralSiblings ( elements, select ( null, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( subQuery.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForGeneralSiblings ( 3, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForAdjacentSiblings ( elements, select (  root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForAdjacentSiblings (  select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForAdjacentSiblings ( elements, select ( subQuery )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForAdjacentSiblings ( elements, select ( root, subQuery )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForAdjacentSiblings ( root, select ( subQuery, elements )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^output = intersectElements ( elements, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^output = filterForAdjacentSiblings ( elements, combinator ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output =  filterForAdjacentSiblings ( elements, select ( s, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForAdjacentSiblings ( subQuery, select ( elements, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P14_Delete_Statement]^^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^elements.addAll ( select ( subQuery, root )  ) ;output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( elements.equals ( "~" )  ) output = filterForGeneralSiblings ( combinator, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output = intersectElements ( elements, select ( s, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^else if  ( combinator .equals ( null )   ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForDescendants ( elements, select ( s, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForDescendants ( elements, select (  elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForDescendants (  select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForDescendants ( subQuery, select ( elements, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^output = intersectElements ( elements, select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^output = filterForDescendants ( elements, combinator ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForDescendants ( this, select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P14_Delete_Statement]^^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output = filterForDescendants ( elements, combinator ( s, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P2_Replace_Operator]^else if  >  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( s.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( elements.equals ( "+" )  ) output = filterForAdjacentSiblings ( combinator, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( root, subQuery )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( 1, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( subQuery, select ( elements, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^return 0;^138^^^^^124^141^throw new IllegalStateException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^if  ( s.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, combinator ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output = filterForGeneralSiblings ( 0, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^throw new SelectorParseException  (" ")  ; ;^138^^^^^124^141^throw new IllegalStateException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForAdjacentSiblings ( 1, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output = intersectElements ( elements, select ( s, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForChildren ( elements, select ( s, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForChildren ( elements, select (  elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForChildren (  select ( subQuery, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForChildren ( subQuery, select ( elements, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^output = intersectElements ( elements, select ( subQuery, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^output = filterForChildren ( elements, combinator ( subQuery, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P11_Insert_Donor_Statement]^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output = intersectElements ( elements, select ( s, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P14_Delete_Statement]^^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P3_Replace_Literal]^else if  ( combinator.equals ( "" )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^else if  ( s.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P2_Replace_Operator]^else if   instanceof   ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( root, select ( subQuery, elements )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^if  ( subQuery.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, combinator ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^else if  ( root.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, combinator )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output = filterForGeneralSiblings ( null, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForAdjacentSiblings ( 4, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^if  ( s.equals ( "~" )  ) output = intersectElements ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^else if  ( combinator .equals ( this )   ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P2_Replace_Operator]^else if  |  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( null, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^else if  ( s.equals ( "~" )  ) output = intersectElements ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output =  filterForAdjacentSiblings ( elements, select ( null, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^output = filterForDescendants ( null, select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^if  ( subQuery.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P8_Replace_Mix]^output = filterForAdjacentSiblings ( elements, combinator ( s, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^elements.addAll (  ) ; elements.addAll ( output ) ;^140^^^^^124^141^elements.clear (  ) ; elements.addAll ( output ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P14_Delete_Statement]^^140^^^^^124^141^elements.clear (  ) ; elements.addAll ( output ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P5_Replace_Variable]^elements.clear (  ) ; output.addAll ( elements ) ;^140^^^^^124^141^elements.clear (  ) ; elements.addAll ( output ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^elements.clear (  ) ; elements.add ( output ) ;^140^^^^^124^141^elements.clear (  ) ; elements.addAll ( output ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[P7_Replace_Invocation]^if  ( tq.matchesAny ( "#" )  )  {^144^^^^^143^163^if  ( tq.matchChomp ( "#" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^if  ( tq .matchesWord (  )   )  {^144^^^^^143^163^if  ( tq.matchChomp ( "#" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P6_Replace_Expression]^} else {^146^^^^^143^163^} else if  ( tq.matchChomp ( "." )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq.matchesAny ( "." )  )  {^146^^^^^143^163^} else if  ( tq.matchChomp ( "." )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq .matchesWord (  )   )  {^146^^^^^143^163^} else if  ( tq.matchChomp ( "." )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq.matchesAny ( "." )  )  {^146^^^^^143^163^} else if  ( tq.matchChomp ( "." )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^146^^^^^143^163^} else if  ( tq.matchChomp ( "." )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^146^^^^^143^163^} else if  ( tq.matchChomp ( "." )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P6_Replace_Expression]^} else {^148^^^^^143^163^} else if  ( tq.matchesWord (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq.consumeWord (  )  )  {^148^^^^^143^163^} else if  ( tq.matchesWord (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( "*" )  )  {^148^^^^^143^163^} else if  ( tq.matchesWord (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P3_Replace_Literal]^} else if  ( tq.matchChomp ( "" )  )  {^150^^^^^143^163^} else if  ( tq.matchChomp ( "[" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P6_Replace_Expression]^} else {^150^^^^^143^163^} else if  ( tq.matchChomp ( "[" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq.matchesAny ( "[" )  )  {^150^^^^^143^163^} else if  ( tq.matchChomp ( "[" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq .matchesWord (  )   )  {^150^^^^^143^163^} else if  ( tq.matchChomp ( "[" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq.matchesAny ( "[" )  )  {^150^^^^^143^163^} else if  ( tq.matchChomp ( "[" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^150^^^^^143^163^} else if  ( tq.matchChomp ( "[" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^150^^^^^143^163^} else if  ( tq.matchChomp ( "[" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P6_Replace_Expression]^} else {^152^^^^^143^163^} else if  ( tq.matchChomp ( "*" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq.matchesAny ( "*" )  )  {^152^^^^^143^163^} else if  ( tq.matchChomp ( "*" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq .matchesWord (  )   )  {^152^^^^^143^163^} else if  ( tq.matchChomp ( "*" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^152^^^^^143^163^} else if  ( tq.matchChomp ( "*" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^152^^^^^143^163^} else if  ( tq.matchChomp ( "*" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P6_Replace_Expression]^} else {^154^^^^^143^163^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq.matchesAny ( ":lt ( " )  )  {^154^^^^^143^163^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq .matchesWord (  )   {^154^^^^^143^163^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq .matchesWord (  )   {^154^^^^^143^163^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchesWord (  )  )  {^154^^^^^143^163^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^154^^^^^143^163^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P6_Replace_Expression]^} else {^156^^^^^143^163^} else if  ( tq.matchChomp ( ":gt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq.matchesAny ( ":gt ( " )  )  {^156^^^^^143^163^} else if  ( tq.matchChomp ( ":gt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq.matchesAny ( ":gt ( " )  )  {^156^^^^^143^163^} else if  ( tq.matchChomp ( ":gt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchesWord (  )  )  {^156^^^^^143^163^} else if  ( tq.matchChomp ( ":gt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^156^^^^^143^163^} else if  ( tq.matchChomp ( ":gt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^156^^^^^143^163^} else if  ( tq.matchChomp ( ":gt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P6_Replace_Expression]^} else {^158^^^^^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq.matchesAny ( ":eq ( " )  )  {^158^^^^^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq .matchesWord (  )   {^158^^^^^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchesWord (  )  )  {^158^^^^^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P9_Replace_Statement]^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^158^^^^^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P15_Unwrap_Block]^return indexEquals();^158^159^160^161^162^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  { return indexEquals (  ) ; } else { throw new SelectorParseException  (" ")  ; }^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P16_Remove_Block]^^158^159^160^161^162^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  { return indexEquals (  ) ; } else { throw new SelectorParseException  (" ")  ; }^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P4_Replace_Constructor]^throw throw  new SelectorParseException (  ( "Could not parse attribute query " +  ( query )  )  )   ;^161^^^^^143^163^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P13_Insert_Block]^if  ( tq.matchChomp ( ":eq ( " )  )  {     return indexEquals (  ) ; }else {     throw new SelectorParseException (  ( "Could not parse query " +  ( query )  )  ) ; }^161^^^^^143^163^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^return ;^161^^^^^143^163^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new SelectorParseException  (" ")  ;^161^^^^^143^163^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^return findElements (  ) ;^159^^^^^143^163^return indexEquals (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P14_Delete_Statement]^^159^^^^^143^163^return indexEquals (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^return indexLessThan (  ) ;^157^^^^^143^163^return indexGreaterThan (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P14_Delete_Statement]^^157^^^^^143^163^return indexGreaterThan (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^} else if  ( tq .matchesWord (  )   {^156^^^^^143^163^} else if  ( tq.matchChomp ( ":gt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^return indexGreaterThan (  ) ;^155^^^^^143^163^return indexLessThan (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P14_Delete_Statement]^^155^^^^^143^163^return indexLessThan (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^return findElements (  ) ;^153^^^^^143^163^return allElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P14_Delete_Statement]^^153^^^^^143^163^return allElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq.matchesAny ( ":lt ( " )  )  {^154^^^^^143^163^} else if  ( tq.matchChomp ( ":lt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq .matchesWord (  )   {^156^^^^^143^163^} else if  ( tq.matchChomp ( ":gt ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq.matchesAny ( ":eq ( " )  )  {^158^^^^^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^throw new IllegalStateException  (" ")  ; ;^161^^^^^143^163^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq .matchesWord (  )   {^158^^^^^143^163^} else if  ( tq.matchChomp ( ":eq ( " )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^return 0;^161^^^^^143^163^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P3_Replace_Literal]^} else if  ( tq.matchChomp ( "" )  )  {^152^^^^^143^163^} else if  ( tq.matchChomp ( "*" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^return byId (  ) ;^151^^^^^143^163^return byAttribute (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P14_Delete_Statement]^^151^^^^^143^163^return byAttribute (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^return byId (  ) ;^149^^^^^143^163^return byTag (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P14_Delete_Statement]^^149^^^^^143^163^return byTag (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq.matchesAny ( "*" )  )  {^152^^^^^143^163^} else if  ( tq.matchChomp ( "*" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^} else if  ( tq .matchesAny ( combinators )   )  {^148^^^^^143^163^} else if  ( tq.matchesWord (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^return byTag (  ) ;^147^^^^^143^163^return byClass (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P14_Delete_Statement]^^147^^^^^143^163^return byClass (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^return false;^161^^^^^143^163^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq .matchesWord (  )   )  {^150^^^^^143^163^} else if  ( tq.matchChomp ( "[" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P3_Replace_Literal]^} else if  ( tq.matchChomp ( "" )  )  {^146^^^^^143^163^} else if  ( tq.matchChomp ( "." )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^return byTag (  ) ;^145^^^^^143^163^return byId (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P14_Delete_Statement]^^145^^^^^143^163^return byId (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq .matchesAny ( combinators )   )  {^148^^^^^143^163^} else if  ( tq.matchesWord (  )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^return true;^161^^^^^143^163^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P8_Replace_Mix]^}  if  ( tq .matchesWord (  )   )  {^152^^^^^143^163^} else if  ( tq.matchChomp ( "*" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P3_Replace_Literal]^if  ( tq.matchChomp ( "" )  )  {^144^^^^^143^163^if  ( tq.matchChomp ( "#" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] findElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  combinator  query  s  subQuery  boolean  Element  root  
[P7_Replace_Invocation]^elements.retainAll ( add ) ;^166^^^^^165^167^elements.addAll ( add ) ;^[CLASS] Selector SelectorParseException  [METHOD] addElements [RETURN_TYPE] void   Element> add [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  add  String[]  combinators  String  combinator  query  s  subQuery  
[P7_Replace_Invocation]^elements .add ( root )  ;^166^^^^^165^167^elements.addAll ( add ) ;^[CLASS] Selector SelectorParseException  [METHOD] addElements [RETURN_TYPE] void   Element> add [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  add  String[]  combinators  String  combinator  query  s  subQuery  
[P14_Delete_Statement]^^166^^^^^165^167^elements.addAll ( add ) ;^[CLASS] Selector SelectorParseException  [METHOD] addElements [RETURN_TYPE] void   Element> add [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  add  String[]  combinators  String  combinator  query  s  subQuery  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;elements.addAll ( add ) ;^166^^^^^165^167^elements.addAll ( add ) ;^[CLASS] Selector SelectorParseException  [METHOD] addElements [RETURN_TYPE] void   Element> add [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  add  String[]  combinators  String  combinator  query  s  subQuery  
[P11_Insert_Donor_Statement]^siblings.add ( c ) ;elements.addAll ( add ) ;^166^^^^^165^167^elements.addAll ( add ) ;^[CLASS] Selector SelectorParseException  [METHOD] addElements [RETURN_TYPE] void   Element> add [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  add  String[]  combinators  String  combinator  query  s  subQuery  
[P11_Insert_Donor_Statement]^elements.retainAll ( intersect ) ;elements.addAll ( add ) ;^166^^^^^165^167^elements.addAll ( add ) ;^[CLASS] Selector SelectorParseException  [METHOD] addElements [RETURN_TYPE] void   Element> add [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  add  String[]  combinators  String  combinator  query  s  subQuery  
[P7_Replace_Invocation]^elements.addAll ( intersect ) ;^170^^^^^169^171^elements.retainAll ( intersect ) ;^[CLASS] Selector SelectorParseException  [METHOD] intersectElements [RETURN_TYPE] void   Element> intersect [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  intersect  String[]  combinators  String  combinator  query  s  subQuery  
[P14_Delete_Statement]^^170^^^^^169^171^elements.retainAll ( intersect ) ;^[CLASS] Selector SelectorParseException  [METHOD] intersectElements [RETURN_TYPE] void   Element> intersect [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  intersect  String[]  combinators  String  combinator  query  s  subQuery  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;elements.retainAll ( intersect ) ;^170^^^^^169^171^elements.retainAll ( intersect ) ;^[CLASS] Selector SelectorParseException  [METHOD] intersectElements [RETURN_TYPE] void   Element> intersect [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  intersect  String[]  combinators  String  combinator  query  s  subQuery  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;elements.retainAll ( intersect ) ;^170^^^^^169^171^elements.retainAll ( intersect ) ;^[CLASS] Selector SelectorParseException  [METHOD] intersectElements [RETURN_TYPE] void   Element> intersect [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  intersect  String[]  combinators  String  combinator  query  s  subQuery  
[P11_Insert_Donor_Statement]^elements.addAll ( add ) ;elements.retainAll ( intersect ) ;^170^^^^^169^171^elements.retainAll ( intersect ) ;^[CLASS] Selector SelectorParseException  [METHOD] intersectElements [RETURN_TYPE] void   Element> intersect [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  Collection  intersect  String[]  combinators  String  combinator  query  s  subQuery  
[P1_Replace_Type]^char id = tq.consumeCssIdentifier (  ) ;^174^^^^^173^182^String id = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P7_Replace_Invocation]^String id = tq.consumeWhitespace (  ) ;^174^^^^^173^182^String id = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^String indexS = tq.chompTo ( " ) " ) .trim (  ) ;String id = tq.consumeCssIdentifier (  ) ;^174^^^^^173^182^String id = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^String className = tq.consumeCssIdentifier (  ) ;String id = tq.consumeCssIdentifier (  ) ;^174^^^^^173^182^String id = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^String tagName = tq.consumeWord (  ) ;String id = tq.consumeCssIdentifier (  ) ;^174^^^^^173^182^String id = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P7_Replace_Invocation]^Validate.isTrue ( id ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P8_Replace_Mix]^Validate.isTrue ( subQuery ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P14_Delete_Statement]^^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;Validate.notEmpty ( id ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( query ) ;Validate.notEmpty ( id ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( className ) ;Validate.notEmpty ( id ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Validate.notNull ( query ) ;Validate.notEmpty ( id ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( key ) ;Validate.notEmpty ( id ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( tagName ) ;Validate.notEmpty ( id ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Validate.notNull ( roots ) ;Validate.notEmpty ( id ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P5_Replace_Variable]^Element found = root.getElementById ( subQuery ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P5_Replace_Variable]^Element found = id.getElementById ( root ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P7_Replace_Invocation]^Element found = root.getElementsByTag ( id ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Element found = root.getElementById ( id ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Element found = root.getElementById ( id ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Element found = root.getElementById ( id ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P5_Replace_Variable]^Element found = root.getElementById ( s ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P5_Replace_Variable]^Element found = found.getElementById ( id ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P14_Delete_Statement]^^177^178^^^^173^182^Element found = root.getElementById ( id ) ; Elements byId = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^return root.getAllElements (  ) ;Element found = root.getElementById ( id ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P4_Replace_Constructor]^Elements byId = new Elements ( elements )  ;^178^^^^^173^182^Elements byId = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Elements byId = new Elements (  ) ;^178^^^^^173^182^Elements byId = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;Elements byId = new Elements (  ) ;^178^^^^^173^182^Elements byId = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Elements children = new Elements (  ) ;Elements byId = new Elements (  ) ;^178^^^^^173^182^Elements byId = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Elements siblings = new Elements (  ) ;Elements byId = new Elements (  ) ;^178^^^^^173^182^Elements byId = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Element found = root.getElementById ( id ) ;Elements byId = new Elements (  ) ;^178^^^^^173^182^Elements byId = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Elements byId = new Elements (  ) ;^178^^^^^173^182^Elements byId = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P2_Replace_Operator]^if ( found == null ) byId.add ( found ) ;^179^180^^^^173^182^if ( found != null ) byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P5_Replace_Variable]^if ( root != null ) byId.add ( found ) ;^179^180^^^^173^182^if ( found != null ) byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P5_Replace_Variable]^if ( byId != null ) found.add ( found ) ;^179^180^^^^173^182^if ( found != null ) byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P8_Replace_Mix]^if ( found != true ) byId.add ( found ) ;^179^180^^^^173^182^if ( found != null ) byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P15_Unwrap_Block]^byId.add(found);^179^180^181^182^^173^182^if ( found != null ) byId.add ( found ) ; return byId; }^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P16_Remove_Block]^^179^180^181^182^^173^182^if ( found != null ) byId.add ( found ) ; return byId; }^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P5_Replace_Variable]^byId.add ( root ) ;^180^^^^^173^182^byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P7_Replace_Invocation]^byId .addAll (  )  ;^180^^^^^173^182^byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P14_Delete_Statement]^^180^181^^^^173^182^byId.add ( found ) ; return byId;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[P1_Replace_Type]^char className = tq.consumeCssIdentifier (  ) ;^185^^^^^184^189^String className = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P7_Replace_Invocation]^String className = tq.consumeWhitespace (  ) ;^185^^^^^184^189^String className = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^String id = tq.consumeCssIdentifier (  ) ;String className = tq.consumeCssIdentifier (  ) ;^185^^^^^184^189^String className = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^String tagName = tq.consumeWord (  ) ;String className = tq.consumeCssIdentifier (  ) ;^185^^^^^184^189^String className = tq.consumeCssIdentifier (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P14_Delete_Statement]^^185^186^^188^189^184^189^String className = tq.consumeCssIdentifier (  ) ; Validate.notEmpty ( className ) ; return root.getElementsByClass ( className ) ; }^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P5_Replace_Variable]^Validate.notEmpty ( subQuery ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P7_Replace_Invocation]^Validate.isTrue ( className ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P8_Replace_Mix]^Validate.notEmpty ( s ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P14_Delete_Statement]^^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;Validate.notEmpty ( className ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( query ) ;Validate.notEmpty ( className ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( id ) ;Validate.notEmpty ( className ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( query ) ;Validate.notEmpty ( className ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( key ) ;Validate.notEmpty ( className ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( tagName ) ;Validate.notEmpty ( className ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( roots ) ;Validate.notEmpty ( className ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByClass ( subQuery ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByClass ( className ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P5_Replace_Variable]^return className.getElementsByClass ( root ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByTag ( className ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P8_Replace_Mix]^return found .getElementsByTag ( s )  ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByTag ( subQuery )  ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P14_Delete_Statement]^^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[P1_Replace_Type]^char tagName = tq.consumeWord (  ) ;^192^^^^^191^196^String tagName = tq.consumeWord (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^String tagName = tq.consume (  ) ;^192^^^^^191^196^String tagName = tq.consumeWord (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^String subQuery = tq.consumeToAny ( combinators ) ;String tagName = tq.consumeWord (  ) ;^192^^^^^191^196^String tagName = tq.consumeWord (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^boolean seenWhite = tq.consumeWhitespace (  ) ;String tagName = tq.consumeWord (  ) ;^192^^^^^191^196^String tagName = tq.consumeWord (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^String className = tq.consumeCssIdentifier (  ) ;String tagName = tq.consumeWord (  ) ;^192^^^^^191^196^String tagName = tq.consumeWord (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^String id = tq.consumeCssIdentifier (  ) ;String tagName = tq.consumeWord (  ) ;^192^^^^^191^196^String tagName = tq.consumeWord (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^192^193^^^^191^196^String tagName = tq.consumeWord (  ) ; Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^Validate.notEmpty ( query ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^Validate.isTrue ( tagName ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^Validate.notEmpty ( subQuery ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;Validate.notEmpty ( tagName ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( query ) ;Validate.notEmpty ( tagName ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( className ) ;Validate.notEmpty ( tagName ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( id ) ;Validate.notEmpty ( tagName ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( query ) ;Validate.notEmpty ( tagName ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( key ) ;Validate.notEmpty ( tagName ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( roots ) ;Validate.notEmpty ( tagName ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByTag ( subQuery ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByTag ( tagName ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return tagName.getElementsByTag ( root ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByClass ( tagName ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found.getElementsByClass ( tagName ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByTag ( query ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[P1_Replace_Type]^char key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^199^^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^String key = tq.consumeToAny ( "=", "!=", "^=", "$=$", "*=", "]" ) ;^199^^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=*", "]" ) ;^199^^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "" ) ;^199^^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^String key = tq.consumeToAny ( "", "!=", "^=", "$=", "*=", "]" ) ;^199^^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^String key = tq.consumeToAny ( "=", "!", "^=", "$=", "*=", "]" ) ;^199^^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^String key = tq.consumeToAny ( "=", "!=", "^", "$=", "*=", "]" ) ;^199^^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^String key = tq .consumeToAny ( combinators )  ;^199^^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^199^200^^^^198^223^String key = tq.consumeToAny ( "=", "!=", "^=", "$=", "*=", "]" ) ; Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^Validate.isTrue ( key ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^Validate .notNull ( id )  ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^Validate.notEmpty ( tagName ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( root ) ;Validate.notEmpty ( key ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( query ) ;Validate.notEmpty ( key ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( className ) ;Validate.notEmpty ( key ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( id ) ;Validate.notEmpty ( key ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( query ) ;Validate.notEmpty ( key ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notEmpty ( tagName ) ;Validate.notEmpty ( key ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^Validate.notNull ( roots ) ;Validate.notEmpty ( key ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^if  ( tq.matchChomp ( "" )  )  {^202^^^^^198^223^if  ( tq.matchChomp ( "]" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^if  ( tq.matchesAny ( "]" )  )  {^202^^^^^198^223^if  ( tq.matchChomp ( "]" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^if  ( tq .matchesWord (  )   )  {^202^^^^^198^223^if  ( tq.matchChomp ( "]" )  )  {^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( tagName, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^if  ( tq.matchChomp ( "=" )  ) return found.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue (  tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^if  ( root.matchChomp ( "=" )  ) return tq.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^if  ( tq.matchesAny ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.matchChomp ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq .isEmpty (  )   ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^if  ( tq .matchesWord (  )   ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( subQuery, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "!=" )  ) return found.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot (  tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( key.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( tq, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchesAny ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "!=" )  ) return root .getElementsByAttributeValue ( query )  ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.matchChomp ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq .isEmpty (  )   ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "!=" )  ) return found.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "^=^" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "^=" )  ) return found.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting (  tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchesAny ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "^=" )  ) return root .getElementsByAttributeValueContaining ( subQuery )  ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.matchChomp ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq .matchesWord (  )   ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( tagName, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( subQuery, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "$=" )  ) return found.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding (  tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( key.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( tq, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchesAny ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "$=" )  ) return root .getElementsByAttributeValueStarting ( tagName )  ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.matchChomp ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq .isEmpty (  )   ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq .matchesWord (  )   ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( tagName, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "*=" )  ) return found.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining (  tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( key.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( tq, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "*=" )  ) return key.getElementsByAttributeValueContaining ( root, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchesAny ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root .getElementsByAttributeValueStarting ( combinator )  ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.matchChomp ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq .isEmpty (  )   ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "*=" )  ) return found.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P15_Unwrap_Block]^return root.getElementsByAttributeValueContaining(key, tq.chompTo("]"));^217^218^^220^221^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ; else throw new SelectorParseException  (" ")  ; }^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P16_Remove_Block]^^217^218^^220^221^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ; else throw new SelectorParseException  (" ")  ; }^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P4_Replace_Constructor]^throw throw  new SelectorParseException (  ( "Could not parse query " +  ( query )  )  )   ;^221^^^^^198^223^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueContaining ( tagName, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueContaining (  tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueContaining ( key.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueContaining ( tq, key.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return key.getElementsByAttributeValueContaining ( root, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return tq.getElementsByAttributeValueContaining ( key, root.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( s )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValueContaining ( key, tq.matchChomp ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValueContaining ( key, tq .isEmpty (  )   ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueContaining ( subQuery, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^throw new IllegalStateException  (" ")  ; ;^221^^^^^198^223^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new SelectorParseException  (" ")  ;^221^^^^^198^223^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P13_Insert_Block]^if  ( tq.matchChomp ( ":eq ( " )  )  {     return indexEquals (  ) ; }else {     throw new SelectorParseException (  ( "Could not parse query " +  ( query )  )  ) ; }^221^^^^^198^223^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq .matchesWord (  )   ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueContaining ( s, tq.matchChomp ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueEnding (  tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueEnding ( key.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return key.getElementsByAttributeValueEnding ( root, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return tq.getElementsByAttributeValueEnding ( key, root.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( tagName )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValueEnding ( key, tq.matchChomp ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueEnding ( key, tq .isEmpty (  )   ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueEnding ( subQuery, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueEnding ( s, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "*" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( root.matchChomp ( "*=" )  ) return tq.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root .getElementsByAttributeValueStarting ( key )  ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueContaining ( s, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueEnding ( tq, key.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( className )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "$=$" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueEnding ( s, tq.matchChomp ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueStarting ( tagName, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueStarting (  tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueStarting ( key.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueStarting ( tq, key.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return key.getElementsByAttributeValueStarting ( root, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueContaining ( query )  ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValueStarting ( key, tq.matchChomp ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValueStarting ( key, tq .isEmpty (  )   ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( tagName, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "$=" )  ) return key.getElementsByAttributeValueEnding ( root, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( root.matchChomp ( "$=" )  ) return tq.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "$=" )  ) return root .getElementsByAttributeValueStarting ( key )  ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( subQuery, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( subQuery, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( className )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueEnding ( tagName, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( subQuery )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( query )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return tq.getElementsByAttributeValueStarting ( key, root.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( combinator )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueEnding ( tagName, tq.matchChomp ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( key )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueContaining ( tagName )  ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found.getElementsByAttributeValueEnding ( key, tq.matchChomp ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueNot ( s, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueNot (  tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueNot ( key.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return key.getElementsByAttributeValueNot ( root, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return tq.getElementsByAttributeValueNot ( key, root.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueNot ( tq, key.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValueNot ( key, tq.matchChomp ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueNot ( key, tq .isEmpty (  )   ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueNot ( tagName, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueNot ( tagName, tq .isEmpty (  )   ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( key.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( tq, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( root.matchChomp ( "^=" )  ) return tq.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchesAny ( "$=" )  ) return found.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root .getElementsByAttributeValueStarting ( subQuery )  ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found.getElementsByAttributeValueContaining ( key, tq .isEmpty (  )   ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( id )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( query )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found.getElementsByAttributeValueEnding ( key, tq .isEmpty (  )   ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root .getElementsByAttributeValueStarting ( id )  ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( subQuery )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found.getElementsByAttributeValueContaining ( key, tq.matchChomp ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueStarting ( s, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^else if  ( tq .matchesWord (  )   ) return root.getElementsByAttributeValueEnding ( tagName, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "*=" )  ) return found.getElementsByAttributeValueContaining ( key, tq.matchChomp ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( key )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root .getElementsByAttributeValue ( id )  ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueContaining ( key )  ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueContaining ( s, tq .isEmpty (  )   ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found.getElementsByAttributeValueNot ( key, tq.matchChomp ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueStarting ( tagName, tq.matchChomp ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( tagName )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueContaining ( tagName, tq.matchChomp ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^return root.getElementsByAttributeValue ( key, tq.chompTo ( "" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValue ( tagName, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValue (  tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValue ( key.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValue ( tq, key.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return tq.getElementsByAttributeValue ( key, root.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValue ( key, tq.matchChomp ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValue ( s, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return key.getElementsByAttributeValue ( root, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValue ( key, tq .isEmpty (  )   ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( s, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "!=" )  ) return root .getElementsByAttributeValue ( s )  ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq .matchesWord (  )   ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq .isEmpty (  )   ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "$=" )  ) return root .getElementsByAttributeValueStarting ( combinator )  ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( tagName, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( combinator )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueContaining ( tagName, tq .isEmpty (  )   ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( id )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "$" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "*=*" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueContaining ( subQuery )  ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValueStarting ( subQuery, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueContaining ( id )  ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueStarting ( subQuery, tq.matchChomp ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "$=" )  ) return found.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( s, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root .getElementsByAttributeValueStarting ( query )  ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return false;^221^^^^^198^223^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueStarting ( s )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueEnding ( tagName, tq .isEmpty (  )   ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValue ( combinator )  ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueNot ( subQuery, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "^" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "^=" )  ) return key.getElementsByAttributeValueStarting ( root, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( subQuery, tq.matchChomp ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueContaining ( subQuery, tq.matchChomp ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return true;^221^^^^^198^223^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found .getElementsByAttributeValueStarting ( id )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found .getElementsByAttributeValueStarting ( className )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueNot ( combinator )  ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "!=!" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttribute ( s ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByAttribute ( key ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return key.getElementsByAttribute ( root ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByAttributeValue ( key ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root .getElementsByAttributeValue ( className )  ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttribute ( subQuery ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^if  ( tq.matchChomp ( "=" )  ) return key.getElementsByAttributeValue ( root, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "=" )  ) return root .getElementsByAttributeValueNot ( subQuery )  ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( tagName, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^else if  ( root.matchChomp ( "!=" )  ) return tq.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "$=" )  ) return root .getElementsByAttributeValueStarting ( className )  ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchesAny ( "$=" )  ) return root.getElementsByAttributeValueEnding ( tagName, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueContaining ( subQuery, tq .isEmpty (  )   ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return ;^221^^^^^198^223^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValueEnding ( subQuery, tq.matchChomp ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( subQuery, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValue ( tagName )  ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( tagName, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return 0;^221^^^^^198^223^throw new SelectorParseException  (" ")  ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root .getElementsByAttributeValueStarting ( className )  ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^else if  ( tq.matchChomp ( "*=" )  ) return root .getElementsByAttributeValueStarting ( tagName )  ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found .getElementsByAttributeValueStarting ( query )  ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValue ( subQuery )  ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found .getElementsByAttributeValueStarting ( tagName )  ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P3_Replace_Literal]^else if  ( tq.matchChomp ( "!" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueContaining ( s )  ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return root.getElementsByAttributeValue ( subQuery, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueNot ( className )  ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root .getElementsByAttributeValueNot ( subQuery )  ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^else if  ( tq.matchesAny ( "$=" )  ) return found.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return found.getElementsByAttributeValueStarting ( key, tq.matchChomp ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^if  ( tq.matchChomp ( "^=" )  ) return found.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root .getElementsByAttributeValueContaining ( combinator )  ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueNot ( s )  ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValue ( tagName ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementsByAttributeValueNot ( key )  ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P8_Replace_Mix]^return root.getElementsByAttributeValue ( tagName, tq.matchChomp ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getAllElements (  ) ;^226^^^^^225^227^return root.getAllElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] allElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.parent (  ) ;^226^^^^^225^227^return root.getAllElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] allElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root .getElementById ( className )  ;^226^^^^^225^227^return root.getAllElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] allElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^226^^^^^225^227^return root.getAllElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] allElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByIndexLessThan ( consumeIndex (  )  ) ;^231^^^^^230^232^return root.getElementsByIndexLessThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexLessThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.elementSiblingIndex ( consumeIndex (  )  ) ;^231^^^^^230^232^return root.getElementsByIndexLessThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexLessThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByIndexLessThan ( select (  )  ) ;^231^^^^^230^232^return root.getElementsByIndexLessThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexLessThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^231^^^^^230^232^return root.getElementsByIndexLessThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexLessThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByIndexGreaterThan ( consumeIndex (  )  ) ;^235^^^^^234^236^return root.getElementsByIndexGreaterThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexGreaterThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.elementSiblingIndex ( consumeIndex (  )  ) ;^235^^^^^234^236^return root.getElementsByIndexGreaterThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexGreaterThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByIndexGreaterThan ( select (  )  ) ;^235^^^^^234^236^return root.getElementsByIndexGreaterThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexGreaterThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^235^^^^^234^236^return root.getElementsByIndexGreaterThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexGreaterThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P5_Replace_Variable]^return found.getElementsByIndexEquals ( consumeIndex (  )  ) ;^239^^^^^238^240^return root.getElementsByIndexEquals ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexEquals [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.elementSiblingIndex ( consumeIndex (  )  ) ;^239^^^^^238^240^return root.getElementsByIndexEquals ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexEquals [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P7_Replace_Invocation]^return root.getElementsByIndexEquals ( select (  )  ) ;^239^^^^^238^240^return root.getElementsByIndexEquals ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexEquals [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P14_Delete_Statement]^^239^^^^^238^240^return root.getElementsByIndexEquals ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexEquals [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[P1_Replace_Type]^char indexS = tq.chompTo ( " ) " ) .trim (  ) ;^243^^^^^242^248^String indexS = tq.chompTo ( " ) " ) .trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P7_Replace_Invocation]^String indexS = tq.chompTo ( " ) " ) .equals (  ) ;^243^^^^^242^248^String indexS = tq.chompTo ( " ) " ) .trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P7_Replace_Invocation]^String indexS = tq.matchChomp ( " ) " ) .trim (  ) ;^243^^^^^242^248^String indexS = tq.chompTo ( " ) " ) .trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P11_Insert_Donor_Statement]^String subQuery = tq.chompTo ( "," ) ;String indexS = tq.chompTo ( " ) " ) .trim (  ) ;^243^^^^^242^248^String indexS = tq.chompTo ( " ) " ) .trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P11_Insert_Donor_Statement]^String id = tq.consumeCssIdentifier (  ) ;String indexS = tq.chompTo ( " ) " ) .trim (  ) ;^243^^^^^242^248^String indexS = tq.chompTo ( " ) " ) .trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P14_Delete_Statement]^^243^244^^^^242^248^String indexS = tq.chompTo ( " ) " ) .trim (  ) ; Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P14_Delete_Statement]^^243^^^^^242^248^String indexS = tq.chompTo ( " ) " ) .trim (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P3_Replace_Literal]^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , " mus" ) ;^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P5_Replace_Variable]^Validate.isTrue ( StringUtils.isNumeric ( query ) , "Index must be numeric" ) ;^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P7_Replace_Invocation]^Validate .notNull ( subQuery )  ;^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P8_Replace_Mix]^Validate.isTrue ( StringUtils.isNumeric ( s ) , "Index must be numeric" ) ;^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P14_Delete_Statement]^^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P5_Replace_Variable]^Validate.isTrue ( StringUtils.isNumeric ( tagName ) , "Index must be numeric" ) ;^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P8_Replace_Mix]^Validate.isTrue ( StringUtils.isNumeric ( subQuery ) , "Index must be numeric" ) ;^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P1_Replace_Type]^short  index = Integer.parseInt ( indexS ) ;^245^^^^^242^248^int index = Integer.parseInt ( indexS ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P8_Replace_Mix]^int index = Integer.parseInt ( s ) ;^245^^^^^242^248^int index = Integer.parseInt ( indexS ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P5_Replace_Variable]^int index = Integer.parseInt ( query ) ;^245^^^^^242^248^int index = Integer.parseInt ( indexS ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P14_Delete_Statement]^^245^^^^^242^248^int index = Integer.parseInt ( indexS ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[P4_Replace_Constructor]^Elements children = new Elements ( elements )  ;^252^^^^^251^262^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Elements children = new Elements (  ) ;^252^^^^^251^262^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Elements children = new Elements (  ) ;^252^^^^^251^262^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;Elements children = new Elements (  ) ;^252^^^^^251^262^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements siblings = new Elements (  ) ;Elements children = new Elements (  ) ;^252^^^^^251^262^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Elements children = new Elements (  ) ;^252^^^^^251^262^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P2_Replace_Operator]^if  ( c.parent (  )  != null || c.parent (  ) .equals ( p )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P2_Replace_Operator]^if  ( c.parent (  )  == null && c.parent (  ) .equals ( p )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( root.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( c.parent (  )  != null && c.parent (  ) .equals ( root )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( p.parent (  )  != null && c.parent (  ) .equals ( c )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P6_Replace_Expression]^if  ( c.parent (  )  != null ) {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P6_Replace_Expression]^if  (  c.parent (  ) .equals ( p )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P7_Replace_Invocation]^if  ( c.getElementsByIndexEquals (  )  != null && c.parent (  ) .equals ( p )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P7_Replace_Invocation]^if  ( c .getAllElements (  )   != null && c^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P8_Replace_Mix]^if  ( root.parent (  )  != false ) {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P15_Unwrap_Block]^children.add(c); continue CHILD;^255^256^257^258^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  { children.add ( c ) ; continue CHILD; }^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P16_Remove_Block]^^255^256^257^258^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  { children.add ( c ) ; continue CHILD; }^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P13_Insert_Block]^if  (  ( previousSib != null )  &&  ( previousSib.equals ( e )  )  )  {     siblings.add ( c ) ;     continue SIBLING; }^255^^^^^251^262^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P13_Insert_Block]^if  ( c.equals ( p )  )  {     children.add ( c ) ;     continue CHILD; }^255^^^^^251^262^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^children.add ( root ) ;^256^^^^^251^262^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P14_Delete_Statement]^^256^257^^^^251^262^children.add ( c ) ; continue CHILD;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^output.add ( c ) ;children.add ( c ) ;^256^^^^^251^262^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;children.add ( c ) ;^256^^^^^251^262^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^siblings.add ( c ) ;children.add ( c ) ;^256^^^^^251^262^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P4_Replace_Constructor]^Elements children = new Elements ( elements )  ;^267^^^^^266^280^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Elements children = new Elements (  ) ;^267^^^^^266^280^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Elements children = new Elements (  ) ;^267^^^^^266^280^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;Elements children = new Elements (  ) ;^267^^^^^266^280^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements siblings = new Elements (  ) ;Elements children = new Elements (  ) ;^267^^^^^266^280^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Elements children = new Elements (  ) ;^267^^^^^266^280^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( root.equals ( p )  )  {^271^^^^^266^280^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( p.equals ( c )  )  {^271^^^^^266^280^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P15_Unwrap_Block]^found = true; continue CHILD;^271^272^273^274^^266^280^if  ( c.equals ( p )  )  { found = true; continue CHILD; }^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P16_Remove_Block]^^271^272^273^274^^266^280^if  ( c.equals ( p )  )  { found = true; continue CHILD; }^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P13_Insert_Block]^if  ( cPos > ePos )  {     output.add ( c ) ;     continue SIBLING; }^271^^^^^266^280^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P13_Insert_Block]^if  ( c.equals ( p )  )  {     children.add ( c ) ;     continue CHILD; }^271^^^^^266^280^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P3_Replace_Literal]^found = false;^272^^^^^266^280^found = true;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( !found ) roothildren.add ( c ) ;^276^277^^^^266^280^if  ( !found ) children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( !found ) childrenhildren.add ( c ) ;^276^277^^^^266^280^if  ( !found ) children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P15_Unwrap_Block]^children.add(c);^276^277^278^^^266^280^if  ( !found ) children.add ( c ) ; }^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P16_Remove_Block]^^276^277^278^^^266^280^if  ( !found ) children.add ( c ) ; }^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^children.add ( root ) ;^277^^^^^266^280^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P8_Replace_Mix]^children .addAll (  )  ;^277^^^^^266^280^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P14_Delete_Statement]^^277^^^^^266^280^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^output.add ( c ) ;children.add ( c ) ;^277^^^^^266^280^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;children.add ( c ) ;^277^^^^^266^280^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^siblings.add ( c ) ;children.add ( c ) ;^277^^^^^266^280^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P3_Replace_Literal]^boolean found = true;^269^^^^^266^280^boolean found = false;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( c.equals ( root )  )  {^271^^^^^266^280^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P4_Replace_Constructor]^Elements siblings = new Elements ( elements )  ;^284^^^^^283^297^Elements siblings = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Elements siblings = new Elements (  ) ;^284^^^^^283^297^Elements siblings = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Elements siblings = new Elements (  ) ;^284^^^^^283^297^Elements siblings = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;Elements siblings = new Elements (  ) ;^284^^^^^283^297^Elements siblings = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements children = new Elements (  ) ;Elements siblings = new Elements (  ) ;^284^^^^^283^297^Elements siblings = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Elements siblings = new Elements (  ) ;^284^^^^^283^297^Elements siblings = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P5_Replace_Variable]^if  ( !e.parent (  ) .equals ( root.parent (  )  )  ) continue;^287^288^^^^283^297^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P7_Replace_Invocation]^if  ( !e.getElementsByIndexEquals (  ) .equals ( c.parent (  )  )  ) continue;^287^288^^^^283^297^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P7_Replace_Invocation]^if  ( !e .getAllElements (  )  .equals ( c^287^288^^^^283^297^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P2_Replace_Operator]^if  ( previousSib != null || previousSib.equals ( e )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P2_Replace_Operator]^if  ( previousSib == null && previousSib.equals ( e )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P5_Replace_Variable]^if  ( root != null && previousSib.equals ( e )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P5_Replace_Variable]^if  ( e != null && previousSib.equals ( previousSib )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P6_Replace_Expression]^if  ( previousSib != null ) {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P6_Replace_Expression]^if  (  previousSib.equals ( e )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P7_Replace_Invocation]^if  ( previousSib != null && previousSib .equals ( null )   )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P15_Unwrap_Block]^siblings.add(c); continue SIBLING;^290^291^292^293^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  { siblings.add ( c ) ; continue SIBLING; }^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P16_Remove_Block]^^290^291^292^293^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  { siblings.add ( c ) ; continue SIBLING; }^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P13_Insert_Block]^if  (  (  ( c.parent (  )  )  != null )  &&  ( c.parent (  ) .equals ( p )  )  )  {     children.add ( c ) ;     continue CHILD; }^290^^^^^283^297^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P13_Insert_Block]^if  ( cPos > ePos )  {     output.add ( c ) ;     continue SIBLING; }^290^^^^^283^297^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P5_Replace_Variable]^siblings.add ( root ) ;^291^^^^^283^297^siblings.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P7_Replace_Invocation]^siblings .addAll (  )  ;^291^^^^^283^297^siblings.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P14_Delete_Statement]^^291^292^^^^283^297^siblings.add ( c ) ; continue SIBLING;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^output.add ( c ) ;siblings.add ( c ) ;^291^^^^^283^297^siblings.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^children.add ( c ) ;siblings.add ( c ) ;^291^^^^^283^297^siblings.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;siblings.add ( c ) ;^291^^^^^283^297^siblings.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^elements.addAll ( add ) ;siblings.add ( c ) ;^291^^^^^283^297^siblings.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P5_Replace_Variable]^Element previousSib = root.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P7_Replace_Invocation]^Element previousSib = c.getElementsByIndexEquals (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Element previousSib = c.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Element previousSib = c.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;Element previousSib = c.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements children = new Elements (  ) ;Element previousSib = c.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Elements siblings = new Elements (  ) ;Element previousSib = c.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P11_Insert_Donor_Statement]^Element found = root.getElementById ( id ) ;Element previousSib = c.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P8_Replace_Mix]^if  ( !e.getElementsByIndexEquals (  ) .equals ( root.parent (  )  )  ) continue;^287^288^^^^283^297^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P8_Replace_Mix]^Element previousSib = c .getElementsByTag ( indexS )  ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P14_Delete_Statement]^^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P5_Replace_Variable]^if  ( previousSib != null && previousSib.equals ( root )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[P4_Replace_Constructor]^Elements output = new Elements ( elements )  ;^301^^^^^300^315^Elements output = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Elements output = new Elements (  ) ;^301^^^^^300^315^Elements output = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;Elements output = new Elements (  ) ;^301^^^^^300^315^Elements output = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^Elements children = new Elements (  ) ;Elements output = new Elements (  ) ;^301^^^^^300^315^Elements output = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^Elements siblings = new Elements (  ) ;Elements output = new Elements (  ) ;^301^^^^^300^315^Elements output = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^Element found = root.getElementById ( id ) ;Elements output = new Elements (  ) ;^301^^^^^300^315^Elements output = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Elements output = new Elements (  ) ;^301^^^^^300^315^Elements output = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P5_Replace_Variable]^if  ( !e.parent (  ) .equals ( root.parent (  )  )  ) continue;^304^305^^^^300^315^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P7_Replace_Invocation]^if  ( !e.getElementsByIndexEquals (  ) .equals ( c.parent (  )  )  ) continue;^304^305^^^^300^315^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P7_Replace_Invocation]^if  ( !e .getAllElements (  )  .equals ( c^304^305^^^^300^315^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P2_Replace_Operator]^if  ( cPos < ePos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P5_Replace_Variable]^if  ( ePos > ePos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P5_Replace_Variable]^if  ( rootPos > ePos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P5_Replace_Variable]^if  ( ePos > cPos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P8_Replace_Mix]^if  ( previousSibPos > ePos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P15_Unwrap_Block]^output.add(c); continue SIBLING;^308^309^310^311^^300^315^if  ( cPos > ePos )  { output.add ( c ) ; continue SIBLING; }^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P16_Remove_Block]^^308^309^310^311^^300^315^if  ( cPos > ePos )  { output.add ( c ) ; continue SIBLING; }^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P13_Insert_Block]^if  ( c.equals ( p )  )  {     found = true;     continue CHILD; }^308^^^^^300^315^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P13_Insert_Block]^if  (  ( previousSib != null )  &&  ( previousSib.equals ( e )  )  )  {     siblings.add ( c ) ;     continue SIBLING; }^308^^^^^300^315^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P13_Insert_Block]^if  ( c.equals ( p )  )  {     children.add ( c ) ;     continue CHILD; }^308^^^^^300^315^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P5_Replace_Variable]^output.add ( root ) ;^309^^^^^300^315^output.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P8_Replace_Mix]^output.add ( previousSib ) ;^309^^^^^300^315^output.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P14_Delete_Statement]^^309^310^^^^300^315^output.add ( c ) ; continue SIBLING;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^children.add ( c ) ;output.add ( c ) ;^309^^^^^300^315^output.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;output.add ( c ) ;^309^^^^^300^315^output.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^siblings.add ( c ) ;output.add ( c ) ;^309^^^^^300^315^output.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P1_Replace_Type]^short  ePos = e.elementSiblingIndex (  ) ;^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P5_Replace_Variable]^int rootPos = e.elementSiblingIndex (  ) ;^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P7_Replace_Invocation]^int ePos = e.getElementsByIndexEquals (  ) ;^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P7_Replace_Invocation]^int ePos = e .getElementsByIndexLessThan ( cPos )  ;^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P8_Replace_Mix]^int rootPos = e.getElementsByIndexEquals (  ) ;^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^int cPos = c.elementSiblingIndex (  ) ;int ePos = e.elementSiblingIndex (  ) ;^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P1_Replace_Type]^short  cPos = c.elementSiblingIndex (  ) ;^307^^^^^300^315^int cPos = c.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P7_Replace_Invocation]^int cPos = c.getElementsByIndexEquals (  ) ;^307^^^^^300^315^int cPos = c.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P8_Replace_Mix]^int rootPos = c.elementSiblingIndex (  ) ;^307^^^^^300^315^int cPos = c.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P11_Insert_Donor_Statement]^int ePos = e.elementSiblingIndex (  ) ;int cPos = c.elementSiblingIndex (  ) ;^307^^^^^300^315^int cPos = c.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P8_Replace_Mix]^if  ( !e .getAllElements (  )  .equals ( root^304^305^^^^300^315^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P8_Replace_Mix]^int rootPos = e .getElementsByIndexLessThan ( ePos )  ;^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P14_Delete_Statement]^^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P8_Replace_Mix]^int previousSibPos = c.elementSiblingIndex (  ) ;^307^^^^^300^315^int cPos = c.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P14_Delete_Statement]^^307^^^^^300^315^int cPos = c.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P7_Replace_Invocation]^output .addAll (  )  ;^309^^^^^300^315^output.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P14_Delete_Statement]^^309^^^^^300^315^output.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[P4_Replace_Constructor]^Elements children = new Elements ( elements )  ;^319^^^^^318^329^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements output = new Elements (  ) ;Elements children = new Elements (  ) ;^319^^^^^318^329^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements byId = new Elements (  ) ;Elements children = new Elements (  ) ;^319^^^^^318^329^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements candidates = findElements (  ) ;Elements children = new Elements (  ) ;^319^^^^^318^329^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Elements siblings = new Elements (  ) ;Elements children = new Elements (  ) ;^319^^^^^318^329^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^Element previousSib = c.previousElementSibling (  ) ;Elements children = new Elements (  ) ;^319^^^^^318^329^Elements children = new Elements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( c.equals ( root )  )  {^322^^^^^318^329^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( p.equals ( c )  )  {^322^^^^^318^329^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P15_Unwrap_Block]^children.add(c); continue CHILD;^322^323^324^325^^318^329^if  ( c.equals ( p )  )  { children.add ( c ) ; continue CHILD; }^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P16_Remove_Block]^^322^323^324^325^^318^329^if  ( c.equals ( p )  )  { children.add ( c ) ; continue CHILD; }^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P13_Insert_Block]^if  ( c.equals ( p )  )  {     found = true;     continue CHILD; }^322^^^^^318^329^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P13_Insert_Block]^if  (  (  ( c.parent (  )  )  != null )  &&  ( c.parent (  ) .equals ( p )  )  )  {     children.add ( c ) ;     continue CHILD; }^322^^^^^318^329^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P13_Insert_Block]^if  ( cPos > ePos )  {     output.add ( c ) ;     continue SIBLING; }^322^^^^^318^329^[Delete]^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P8_Replace_Mix]^children .addAll (  )  ;^323^^^^^318^329^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P14_Delete_Statement]^^323^324^^^^318^329^children.add ( c ) ; continue CHILD;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^output.add ( c ) ;children.add ( c ) ;^323^^^^^318^329^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^elements.add ( root ) ;children.add ( c ) ;^323^^^^^318^329^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P11_Insert_Donor_Statement]^siblings.add ( c ) ;children.add ( c ) ;^323^^^^^318^329^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^if  ( root.equals ( p )  )  {^322^^^^^318^329^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P5_Replace_Variable]^children.add ( root ) ;^323^^^^^318^329^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[P14_Delete_Statement]^^333^^^^^332^334^super ( s ) ;^[CLASS] SelectorParseException  [METHOD] <init> [RETURN_TYPE] String)   String s [VARIABLES] boolean  String  s  
