[P2_Replace_Operator]^Validate.isTrue ( args.length != 1, "usage: supply url to fetch" ) ;^17^^^^^16^45^Validate.isTrue ( args.length == 1, "usage: supply url to fetch" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Validate.isTrue ( args.length == 7, "usage: supply url to fetch" ) ;^17^^^^^16^45^Validate.isTrue ( args.length == 1, "usage: supply url to fetch" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Validate.isTrue ( args.length == 1, "upply u" ) ;^17^^^^^16^45^Validate.isTrue ( args.length == 1, "usage: supply url to fetch" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^Validate.isTrue ( this == 1, "usage: supply url to fetch" ) ;^17^^^^^16^45^Validate.isTrue ( args.length == 1, "usage: supply url to fetch" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^Validate.isTrue ( args.length.length == 1, "usage: supply url to fetch" ) ;^17^^^^^16^45^Validate.isTrue ( args.length == 1, "usage: supply url to fetch" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^Validate.isTrue ( args == 1, "usage: supply url to fetch" ) ;^17^^^^^16^45^Validate.isTrue ( args.length == 1, "usage: supply url to fetch" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^17^^^^^16^45^Validate.isTrue ( args.length == 1, "usage: supply url to fetch" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^URL url = new URL ( args[-5] ) ;^18^^^^^16^45^URL url = new URL ( args[0] ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^URL url = new URL ( args[7] ) ;^18^^^^^16^45^URL url = new URL ( args[0] ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( "etchingetching %s...", url.toExternalForm (  )  ) ;^19^^^^^16^45^print ( "Fetching %s...", url.toExternalForm (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^trim ( "Fetching %s...", url.toExternalForm (  )  ) ;^19^^^^^16^45^print ( "Fetching %s...", url.toExternalForm (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( "Fetching %s...", url.URL (  )  ) ;^19^^^^^16^45^print ( "Fetching %s...", url.toExternalForm (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( "Fetching %s...", url .URL ( 0 )   ) ;^19^^^^^16^45^print ( "Fetching %s...", url.toExternalForm (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^19^^^^^16^45^print ( "Fetching %s...", url.toExternalForm (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P2_Replace_Operator]^Document / doc = Jsoup.parse ( url, 3*1000 ) ;^21^^^^^16^45^Document doc = Jsoup.parse ( url, 3*1000 ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Document doc = Jsoup.parse ( url, 5*1000 ) ;^21^^^^^16^45^Document doc = Jsoup.parse ( url, 3*1000 ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Document doc = Jsoup.parse ( url, 3*1004 ) ;^21^^^^^16^45^Document doc = Jsoup.parse ( url, 3*1000 ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P2_Replace_Operator]^Document + doc = Jsoup.parse ( url, 3*1000 ) ;^21^^^^^16^45^Document doc = Jsoup.parse ( url, 3*1000 ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Document doc = Jsoup.parse ( url, -3*1000 ) ;^21^^^^^16^45^Document doc = Jsoup.parse ( url, 3*1000 ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Document doc = Jsoup.parse ( url, 3*994 ) ;^21^^^^^16^45^Document doc = Jsoup.parse ( url, 3*1000 ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^21^^^^^16^45^Document doc = Jsoup.parse ( url, 3*1000 ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Elements links = doc.select ( "a[href][h" ) ;^22^^^^^16^45^Elements links = doc.select ( "a[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^Elements media = doc.select ( "[src]" ) ;Elements links = doc.select ( "a[href]" ) ;^22^^^^^16^45^Elements links = doc.select ( "a[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^Elements imports = doc.select ( "link[href]" ) ;Elements links = doc.select ( "a[href]" ) ;^22^^^^^16^45^Elements links = doc.select ( "a[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Elements links = doc.select ( "a[h" ) ;^22^^^^^16^45^Elements links = doc.select ( "a[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^22^^^^^16^45^Elements links = doc.select ( "a[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Elements media = doc.select ( "srsrc]" ) ;^23^^^^^16^45^Elements media = doc.select ( "[src]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^Elements links = doc.select ( "a[href]" ) ;Elements media = doc.select ( "[src]" ) ;^23^^^^^16^45^Elements media = doc.select ( "[src]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^Elements imports = doc.select ( "link[href]" ) ;Elements media = doc.select ( "[src]" ) ;^23^^^^^16^45^Elements media = doc.select ( "[src]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Elements media = doc.select ( "" ) ;^23^^^^^16^45^Elements media = doc.select ( "[src]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^23^^^^^16^45^Elements media = doc.select ( "[src]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^Elements imports = doc.select ( "linink[href]" ) ;^24^^^^^16^45^Elements imports = doc.select ( "link[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^Elements media = doc.select ( "[src]" ) ;Elements imports = doc.select ( "link[href]" ) ;^24^^^^^16^45^Elements imports = doc.select ( "link[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^Elements links = doc.select ( "a[href]" ) ;Elements imports = doc.select ( "link[href]" ) ;^24^^^^^16^45^Elements imports = doc.select ( "link[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^24^^^^^16^45^Elements imports = doc.select ( "link[href]" ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( "\nMedia:  ( %d ) ", media.size() + 0  ) ;^26^^^^^16^45^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^print ( "\nMedia:  ( %d ) ", links.size (  )  ) ;^26^^^^^16^45^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^trim ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^26^^^^^16^45^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^26^^^^^16^45^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^26^^^^^16^45^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^26^^^^^16^45^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( "\nMedia:  ( %d ) ", media.size() - 2  ) ;^26^^^^^16^45^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^if  ( src.tagName (  ) .equals ( "m" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "widtidth" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "hei" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "llt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 25 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:srcabs" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^if  ( link.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^if  ( src.attr (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src .tagName (  )  , src^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^if  ( src .attr ( 2 )  .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( "* ", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "bbs:src" )  ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^print ( " * %s: <%s>", link.tagName (  ) , src.attr ( "abs:src" )  ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * %s: <%s>", src.attr (  ) , src.attr ( "abs:src" )  ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * %s: <%s>", src.tagName (  ) , src .tagName (  )   ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "" )  ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "idth" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "ig" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 12 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^print ( " * %s: <%s> %sx%s  ( %s ) ", link.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.attr (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^src.tagName (  ) , link.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^src.attr (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P8_Replace_Mix]^src.attr (  ) , link.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^src.tagName (  ) , src.attr ( "" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "widthwid" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^src.tagName (  ) , src .tagName (  )  , src^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P8_Replace_Mix]^src.tagName (  ) , link .tagName (  )  , src^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "eight" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^trim ( src.attr ( "alta" ) , 20 )  ) ;^31^^^^^16^45^trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^trim ( src.attr ( "alt" ) , 26 )  ) ;^31^^^^^16^45^trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^trim ( link.attr ( "alt" ) , 20 )  ) ;^31^^^^^16^45^trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^31^^^^^16^45^trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^trim ( src .tagName (  )  , 20 )  ) ;^31^^^^^16^45^trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^if  ( src.tagName (  ) .equals ( "imgm" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P8_Replace_Mix]^if  ( link.attr (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^28^29^30^31^^16^45^if  ( src.tagName (  ) .equals ( "img" )  ) print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:s" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "widthdt" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "geight" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "lt" ) , 20 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 27 )  ) ;^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src .tagName (  )  , src^29^30^31^^^16^45^print ( " * %s: <%s> %sx%s  ( %s ) ", src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^src.tagName (  ) , src.attr ( "bs:srbs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "heighte" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^30^31^^^^16^45^src.tagName (  ) , src.attr ( "abs:src" ) , src.attr ( "width" ) , src.attr ( "height" ) , trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^trim ( src.attr ( "al" ) , 20 )  ) ;^31^^^^^16^45^trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P8_Replace_Mix]^trim ( link .tagName (  )  , 20 )  ) ;^31^^^^^16^45^trim ( src.attr ( "alt" ) , 20 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s> * %s: <", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P8_Replace_Mix]^print ( " * %s: <%s>", link.attr (  ) , src.attr ( "abs:src" )  ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:sbs:src" )  ) ;^33^^^^^16^45^print ( " * %s: <%s>", src.tagName (  ) , src.attr ( "abs:src" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( "\nImports:  ( %d ) ", imports.size() + 4  ) ;^36^^^^^16^45^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^print ( "\nImports:  ( %d ) ", media.size (  )  ) ;^36^^^^^16^45^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^trim ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^36^^^^^16^45^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P8_Replace_Mix]^trim ( "\nImports:  ( %d ) ", media.size (  )  ) ;^36^^^^^16^45^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^36^^^^^16^45^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^36^^^^^16^45^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^36^^^^^16^45^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( "\nImports:  ( %d ) ", imports.size() - 6  ) ;^36^^^^^16^45^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:hr" ) , link.attr ( "rel" )  ) ;^38^^^^^16^45^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "r" )  ) ;^38^^^^^16^45^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * %s <%s>  ( %s ) ", link.attr (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^38^^^^^16^45^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link .tagName (  )  , link^38^^^^^16^45^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P8_Replace_Mix]^print ( " * %s <%s>  ( %s ) ", src.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^38^^^^^16^45^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^38^^^^^16^45^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "bbs:href" ) , link.attr ( "rel" )  ) ;^38^^^^^16^45^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( "\nLinks:  ( %d ) ", links.size() + 0  ) ;^41^^^^^16^45^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^print ( "\nLinks:  ( %d ) ", media.size (  )  ) ;^41^^^^^16^45^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^trim ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^41^^^^^16^45^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^41^^^^^16^45^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^print ( "\nImports:  ( %d ) ", imports.size (  )  ) ;print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^41^^^^^16^45^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^print ( "\nMedia:  ( %d ) ", media.size (  )  ) ;print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^41^^^^^16^45^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( "\nLinks:  ( %d ) ", links.size() + 1  ) ;^41^^^^^16^45^print ( "\nLinks:  ( %d ) ", links.size (  )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:hrefhr" ) , trim ( link.text (  ) , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^print ( " * a: <%s>   ( %s ) ", src.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * a: <%s>   ( %s ) ", link .tagName (  )  , trim ( link.text (  ) , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , print ( link.text (  ) , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.attr (  ) , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P8_Replace_Mix]^print ( " * a: <%s>   ( %s ) ", src.attr ( "abs:href" ) , trim ( link.attr (  ) , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P14_Delete_Statement]^^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P11_Insert_Donor_Statement]^print ( " * %s <%s>  ( %s ) ", link.tagName (  ) ,link.attr ( "abs:href" ) , link.attr ( "rel" )  ) ;print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:hbs:href" ) , trim ( link.text (  ) , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P3_Replace_Literal]^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 2 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P7_Replace_Invocation]^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link .tagName (  )  , 35 )  ) ;^43^^^^^16^45^print ( " * a: <%s>   ( %s ) ", link.attr ( "abs:href" ) , trim ( link.text (  ) , 35 )  ) ;^[CLASS] ListLinks  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] boolean  Element  link  src  String[]  args  Document  doc  Elements  imports  links  media  URL  url  
[P5_Replace_Variable]^System.out.println ( String.format (  args )  ) ;^48^^^^^47^49^System.out.println ( String.format ( msg, args )  ) ;^[CLASS] ListLinks  [METHOD] print [RETURN_TYPE] void   String msg  args [VARIABLES] boolean  String  msg  Object[]  args  
[P5_Replace_Variable]^System.out.println ( String.format ( msg )  ) ;^48^^^^^47^49^System.out.println ( String.format ( msg, args )  ) ;^[CLASS] ListLinks  [METHOD] print [RETURN_TYPE] void   String msg  args [VARIABLES] boolean  String  msg  Object[]  args  
[P7_Replace_Invocation]^System.out.println ( String.substring ( msg, args )  ) ;^48^^^^^47^49^System.out.println ( String.format ( msg, args )  ) ;^[CLASS] ListLinks  [METHOD] print [RETURN_TYPE] void   String msg  args [VARIABLES] boolean  String  msg  Object[]  args  
[P14_Delete_Statement]^^48^49^^^^47^49^System.out.println ( String.format ( msg, args )  ) ; }^[CLASS] ListLinks  [METHOD] print [RETURN_TYPE] void   String msg  args [VARIABLES] boolean  String  msg  Object[]  args  
[P5_Replace_Variable]^System.out.println ( String.format ( args, msg )  ) ;^48^^^^^47^49^System.out.println ( String.format ( msg, args )  ) ;^[CLASS] ListLinks  [METHOD] print [RETURN_TYPE] void   String msg  args [VARIABLES] boolean  String  msg  Object[]  args  
[P2_Replace_Operator]^if  ( s.length (  )  >= width ) return s.substring ( 0, width-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P2_Replace_Operator]^if  >>  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^if  ( s.length (  )  > width ) return s.substring ( width, width-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^if  ( s.length (  )  > width ) return s.substring ( 0, width--6 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^if  ( s.length() - 4  > width ) return s.substring ( 0, width-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P5_Replace_Variable]^if  ( s.length (  )  > width ) return s.substring ( 0-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P5_Replace_Variable]^if  ( width.length (  )  > s ) return s.substring ( 0, width-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P6_Replace_Expression]^if  ( s.substring(0, (width - 1)) + "." )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P6_Replace_Expression]^if  ( width - 1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P7_Replace_Invocation]^if  ( s .substring ( width , width )   > width ) return s.substring ( 0, width-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P8_Replace_Mix]^if  ( s.length (  )  > width ) return s.substring ( 0 , width-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P15_Unwrap_Block]^return (s.substring(0, (width - 1))) + ".";^52^53^54^55^56^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + "."; else return s; }^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P16_Remove_Block]^^52^53^54^55^56^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + "."; else return s; }^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P2_Replace_Operator]^return s.substring ( 0, width-1 )  &  + ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^return s.substring ( -2, width-1 )  + ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^return s.substring ( 0, width-width )  + ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^return s.substring ( 0, width-1 )  + "";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P5_Replace_Variable]^return s.substring ( 0-1 )  + ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P5_Replace_Variable]^return width.substring ( 0, s-1 )  + ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P8_Replace_Mix]^return s.substring ( 0, width-1 )  +s;^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^return s.substring ( width, width-1 )  + ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P14_Delete_Statement]^^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P2_Replace_Operator]^return s.substring ( 0, width-1 )  <=  + ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^return s.substring ( 0, width-2 )  + ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P8_Replace_Mix]^return s.substring ( 0, width-1 )   |  ".";^53^^^^^51^56^return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
[P3_Replace_Literal]^if  ( s.length() - 9  > width ) return s.substring ( 0, width-1 )  + ".";^52^53^^^^51^56^if  ( s.length (  )  > width ) return s.substring ( 0, width-1 )  + ".";^[CLASS] ListLinks  [METHOD] trim [RETURN_TYPE] String   String s int width [VARIABLES] boolean  String  s  int  width  
