[P14_Delete_Statement]^^86^^^^^85^87^super ( name ) ;^[CLASS] DialValueIndicatorTests  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] boolean  String  name  
[P8_Replace_Mix]^return new TestSuite ( DialValueIndicatorTests.null ) ;^77^^^^^76^78^return new TestSuite ( DialValueIndicatorTests.class ) ;^[CLASS] DialValueIndicatorTests  [METHOD] suite [RETURN_TYPE] Test   [VARIABLES] boolean  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( -4, "Label" ) ;^93^^^^^78^108^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 0, "ababel" ) ;^93^^^^^78^108^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 9, "Label" ) ;^93^^^^^78^108^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 0, "Labele" ) ;^93^^^^^78^108^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^93^^^^^78^108^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^DialValueIndicator i2 = new DialValueIndicator ( , "Label" ) ;^94^^^^^79^109^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^DialValueIndicator i2 = new DialValueIndicator ( 0, "abeabel" ) ;^94^^^^^79^109^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^DialValueIndicator i2 = new DialValueIndicator ( 4, "Label" ) ;^94^^^^^79^109^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^DialValueIndicator i2 = new DialValueIndicator ( 0, "" ) ;^94^^^^^79^109^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^94^^^^^79^109^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^95^^^^^80^110^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setDatasetIndex ( 95 ) ;^98^^^^^83^113^i1.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1.DialValueIndicator ( 99 ) ;^98^^^^^83^113^i1.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^98^99^^^^83^113^i1.setDatasetIndex ( 99 ) ; assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setDatasetIndex ( 99 ) ;i1.setDatasetIndex ( 99 ) ;^98^^^^^83^113^i1.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setAngle ( 43 ) ;i1.setDatasetIndex ( 99 ) ;^98^^^^^83^113^i1.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setAngle ( 43 ) ;i1.setDatasetIndex ( 99 ) ;^98^^^^^83^113^i1.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1 .getClass (  )   ) ;^99^^^^^84^114^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setDatasetIndex ( 106 ) ;^100^^^^^85^115^i2.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2.DialValueIndicator ( 99 ) ;^100^^^^^85^115^i2.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^100^^^^^85^115^i2.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setAngle ( 43 ) ;i2.setDatasetIndex ( 99 ) ;^100^^^^^85^115^i2.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setDatasetIndex ( 99 ) ;i2.setDatasetIndex ( 99 ) ;^100^^^^^85^115^i2.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setAngle ( 43 ) ;i2.setDatasetIndex ( 99 ) ;^100^^^^^85^115^i2.setDatasetIndex ( 99 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^101^^^^^86^116^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setAngle ( 45 ) ;^104^^^^^89^119^i1.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1.DialValueIndicator ( 43 ) ;^104^^^^^89^119^i1.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^104^105^^^^89^119^i1.setAngle ( 43 ) ; assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setDatasetIndex ( 99 ) ;i1.setAngle ( 43 ) ;^104^^^^^89^119^i1.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setRadius ( 0.77 ) ;i1.setAngle ( 43 ) ;^104^^^^^89^119^i1.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setDatasetIndex ( 99 ) ;i1.setAngle ( 43 ) ;^104^^^^^89^119^i1.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setAngle ( 43 ) ;i1.setAngle ( 43 ) ;^104^^^^^89^119^i1.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setRadius ( 0.77 ) ;i1.setAngle ( 43 ) ;^104^^^^^89^119^i1.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1 .getClass (  )   ) ;^105^^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^105^106^^^^90^120^assertFalse ( i1.equals ( i2 )  ) ; i2.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setAngle ( 39 ) ;^106^^^^^91^121^i2.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2.DialValueIndicator ( 43 ) ;^106^^^^^91^121^i2.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^106^107^^^^91^121^i2.setAngle ( 43 ) ; assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setDatasetIndex ( 99 ) ;i2.setAngle ( 43 ) ;^106^^^^^91^121^i2.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setAngle ( 43 ) ;i2.setAngle ( 43 ) ;^106^^^^^91^121^i2.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setRadius ( 0.77 ) ;i2.setAngle ( 43 ) ;^106^^^^^91^121^i2.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setDatasetIndex ( 99 ) ;i2.setAngle ( 43 ) ;^106^^^^^91^121^i2.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setRadius ( 0.77 ) ;i2.setAngle ( 43 ) ;^106^^^^^91^121^i2.setAngle ( 43 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P8_Replace_Mix]^assertTrue ( i1 .getClass (  )   ) ;^107^^^^^92^122^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setRadius ( 0.385 ) ;^110^^^^^95^125^i1.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1.DialValueIndicator ( 0.77 ) ;^110^^^^^95^125^i1.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^110^^^^^95^125^i1.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setAngle ( 43 ) ;i1.setRadius ( 0.77 ) ;^110^^^^^95^125^i1.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setRadius ( 0.77 ) ;i1.setRadius ( 0.77 ) ;^110^^^^^95^125^i1.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setAngle ( 43 ) ;i1.setRadius ( 0.77 ) ;^110^^^^^95^125^i1.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1 .getClass (  )   ) ;^111^^^^^96^126^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setRadius ( 6.93 ) ;^112^^^^^97^127^i2.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2.DialValueIndicator ( 0.77 ) ;^112^^^^^97^127^i2.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^112^^^^^97^127^i2.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setAngle ( 43 ) ;i2.setRadius ( 0.77 ) ;^112^^^^^97^127^i2.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setAngle ( 43 ) ;i2.setRadius ( 0.77 ) ;^112^^^^^97^127^i2.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setRadius ( 0.77 ) ;i2.setRadius ( 0.77 ) ;^112^^^^^97^127^i2.setRadius ( 0.77 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^113^^^^^98^128^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1.setRadius ( RectangleAnchor.TOP_LEFT ) ;^116^^^^^101^131^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1 .setValueAnchor (  )  ;^116^^^^^101^131^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^116^117^^^^101^131^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ; assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^116^^^^^101^131^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^116^^^^^101^131^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^116^^^^^101^131^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^116^^^^^101^131^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^116^^^^^101^131^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P8_Replace_Mix]^assertFalse ( i1 .getClass (  )   ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^117^118^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ; i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^117^^^^^102^132^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2.setRadius ( RectangleAnchor.TOP_LEFT ) ;^118^^^^^103^133^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^118^^^^^103^133^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^118^^^^^103^133^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^118^^^^^103^133^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^118^^^^^103^133^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^118^^^^^103^133^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^118^^^^^103^133^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^119^^^^^104^134^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setTemplateValue ( new Double ( 7.38 )  ) ;^122^^^^^107^137^i1.setTemplateValue ( new Double ( 1.23 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setTemplateValue ( new Double ( 0.1757142857142857 )  ) ;^122^^^^^107^137^i1.setTemplateValue ( new Double ( 1.23 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1.DialValueIndicator ( new Double ( 1.23 )  ) ;^122^^^^^107^137^i1.setTemplateValue ( new Double ( 1.23 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^122^123^^^^107^137^i1.setTemplateValue ( new Double ( 1.23 )  ) ; assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^123^^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^123^124^^^^108^138^assertFalse ( i1.equals ( i2 )  ) ; i2.setTemplateValue ( new Double ( 1.23 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setTemplateValue ( new Double ( 8.61 )  ) ;^124^^^^^109^139^i2.setTemplateValue ( new Double ( 1.23 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setTemplateValue ( new Double ( 4.92 )  ) ;^124^^^^^109^139^i2.setTemplateValue ( new Double ( 1.23 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2.DialValueIndicator ( new Double ( 1.23 )  ) ;^124^^^^^109^139^i2.setTemplateValue ( new Double ( 1.23 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^124^125^^^^109^139^i2.setTemplateValue ( new Double ( 1.23 )  ) ; assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^125^^^^^110^140^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setFont ( new Font ( "Diialog", Font.PLAIN, 7 )  ) ;^128^^^^^113^143^i1.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setFont ( new Font ( "iialog", Font.PLAIN, 7 )  ) ;^128^^^^^113^143^i1.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setFont ( new Font ( "Dialog", Font.PLAIN, 12 )  ) ;^128^^^^^113^143^i1.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^i1.setFont ( new Font ( "Dialog", Font. 7 )  ) ;^128^^^^^113^143^i1.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^128^129^^^^113^143^i1.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ; assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^129^130^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ; i2.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^129^^^^^114^144^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setFont ( new Font ( "oialog", Font.PLAIN, 7 )  ) ;^130^^^^^115^145^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 2 )  ) ;^130^^^^^115^145^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setFont ( new Font ( "Dia", Font.PLAIN, 7 )  ) ;^130^^^^^115^145^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 12 )  ) ;^130^^^^^115^145^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^i2.setFont ( new Font ( "Dialog", Font. 7 )  ) ;^130^^^^^115^145^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^130^^^^^115^145^i2.setFont ( new Font ( "Dialog", Font.PLAIN, 7 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^131^^^^^116^146^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^i1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^134^135^^^^119^149^i1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^134^135^^^^119^149^i1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P8_Replace_Mix]^assertFalse ( i1 .getClass (  )   ) ;^136^^^^^121^151^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^i2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^137^138^^^^122^152^i2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^137^138^^^^122^152^i2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^139^^^^^124^154^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^i1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^142^143^^^^127^157^i1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^142^143^^^^127^157^i1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1 .getClass (  )   ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^144^^^^^129^159^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^i2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^145^146^^^^130^160^i2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P8_Replace_Mix]^i2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.this )  ) ;^145^146^^^^130^160^i2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^145^146^^^^130^160^i2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^147^^^^^132^162^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1.DialValueIndicator ( new BasicStroke ( 1.1f )  ) ;^150^^^^^135^165^i1.setOutlineStroke ( new BasicStroke ( 1.1f )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1 .setOutlinePaint ( 1 )  ;^150^^^^^135^165^i1.setOutlineStroke ( new BasicStroke ( 1.1f )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^150^151^^^^135^165^i1.setOutlineStroke ( new BasicStroke ( 1.1f )  ) ; assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^151^152^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ; i2.setOutlineStroke ( new BasicStroke ( 1.1f )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P8_Replace_Mix]^assertFalse ( i1 .getClass (  )   ) ;^151^^^^^136^166^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2.DialValueIndicator ( new BasicStroke ( 1.1f )  ) ;^152^^^^^137^167^i2.setOutlineStroke ( new BasicStroke ( 1.1f )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^152^^^^^137^167^i2.setOutlineStroke ( new BasicStroke ( 1.1f )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P8_Replace_Mix]^assertTrue ( i1 .getClass (  )   ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^153^^^^^138^168^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^i1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^156^157^^^^141^171^i1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^156^157^^^^141^171^i1.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1 .getClass (  )   ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^158^^^^^143^173^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^i2.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^159^160^^^^144^174^i2.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^159^160^^^^144^174^i2.setOutlinePaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^161^^^^^146^176^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i0.setInsets ( new RectangleInsets ( 0, 2, 3, 4 )  ) ;^164^^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setInsets ( new RectangleInsets ( 1, 4, 3, 4 )  ) ;^164^^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setInsets ( new RectangleInsets ( 1, 2, 10, 4 )  ) ;^164^^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 0 )  ) ;^164^^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i6.setInsets ( new RectangleInsets ( 6, 2, 3, 4 )  ) ;^164^^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setInsets ( new RectangleInsets ( 1, 5, 3, 4 )  ) ;^164^^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setInsets ( new RectangleInsets ( 1, 2, 9, 4 )  ) ;^164^^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 1 )  ) ;^164^^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^164^165^^^^149^179^i1.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ; assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1 .getClass (  )   ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^165^166^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ; i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^165^^^^^150^180^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setInsets ( new RectangleInsets ( 3, 2, 3, 4 )  ) ;^166^^^^^151^181^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i5.setInsets ( new RectangleInsets ( 1, 5, 3, 4 )  ) ;^166^^^^^151^181^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setInsets ( new RectangleInsets ( 1, 2, -5, 4 )  ) ;^166^^^^^151^181^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setInsets ( new RectangleInsets ( 1, 2, 3, -1 )  ) ;^166^^^^^151^181^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setInsets ( new RectangleInsets ( 9, 2, 3, 4 )  ) ;^166^^^^^151^181^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i11.setInsets ( new RectangleInsets ( 1, 11, 3, 4 )  ) ;^166^^^^^151^181^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 13 )  ) ;^166^^^^^151^181^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^166^167^^^^151^181^i2.setInsets ( new RectangleInsets ( 1, 2, 3, 4 )  ) ; assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^167^^^^^152^182^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1.setRadius ( RectangleAnchor.BOTTOM_LEFT ) ;^170^^^^^155^185^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^170^^^^^155^185^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^170^^^^^155^185^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^170^^^^^155^185^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^170^^^^^155^185^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^170^^^^^155^185^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^170^^^^^155^185^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1 .getClass (  )   ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^171^172^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ; i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^171^^^^^156^186^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2.setRadius ( RectangleAnchor.BOTTOM_LEFT ) ;^172^^^^^157^187^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^172^^^^^157^187^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^172^^^^^157^187^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^172^^^^^157^187^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^172^^^^^157^187^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^172^^^^^157^187^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^172^^^^^157^187^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^173^^^^^158^188^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i1.setAngle ( TextAnchor.TOP_LEFT ) ;^176^^^^^161^191^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^176^177^^^^161^191^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ; assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^176^^^^^161^191^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^176^^^^^161^191^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^176^^^^^161^191^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^176^^^^^161^191^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^176^^^^^161^191^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertFalse ( i2.equals ( i1 )  ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1.DialValueIndicator ( i2 )  ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertFalse ( i1 .getClass (  )   ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^177^178^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ; i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertFalse ( i1.equals ( i2 )  ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertFalse ( i1.equals ( i2 )  ) ;^177^^^^^162^192^assertFalse ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2.setAngle ( TextAnchor.TOP_LEFT ) ;^178^^^^^163^193^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^i2 .setFrameAnchor (  )  ;^178^^^^^163^193^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^178^179^^^^163^193^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ; assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^178^^^^^163^193^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i2.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^178^^^^^163^193^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setTextAnchor ( TextAnchor.TOP_LEFT ) ;i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^178^^^^^163^193^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setFrameAnchor ( RectangleAnchor.TOP_LEFT ) ;i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^178^^^^^163^193^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^i1.setValueAnchor ( RectangleAnchor.BOTTOM_LEFT ) ;i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^178^^^^^163^193^i2.setTextAnchor ( TextAnchor.TOP_LEFT ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P14_Delete_Statement]^^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^179^^^^^164^194^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( -4, "Label" ) ;^186^^^^^185^192^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 3, "Label" ) ;^186^^^^^185^192^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 0, "L" ) ;^186^^^^^185^192^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^186^^^^^185^192^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P3_Replace_Literal]^DialValueIndicator i2 = new DialValueIndicator ( 8, "Label" ) ;^187^^^^^185^192^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P3_Replace_Literal]^DialValueIndicator i2 = new DialValueIndicator ( 4, "Label" ) ;^187^^^^^185^192^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P3_Replace_Literal]^DialValueIndicator i2 = new DialValueIndicator ( 0, "Labe" ) ;^187^^^^^185^192^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^187^^^^^185^192^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P7_Replace_Invocation]^assertTrue ( i1 .getClass (  )   ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P14_Delete_Statement]^^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^188^^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P14_Delete_Statement]^^188^189^^^^185^192^assertTrue ( i1.equals ( i2 )  ) ; int h1 = i1.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P1_Replace_Type]^long  h1 = i1.hashCode (  ) ;^189^^^^^185^192^int h1 = i1.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P5_Replace_Variable]^int h1 = i2.hashCode (  ) ;^189^^^^^185^192^int h1 = i1.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P7_Replace_Invocation]^int h1 = i1.setAngle (  ) ;^189^^^^^185^192^int h1 = i1.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P7_Replace_Invocation]^int h1 = i1 .setDatasetIndex ( h2 )  ;^189^^^^^185^192^int h1 = i1.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^int h2 = i2.hashCode (  ) ;int h1 = i1.hashCode (  ) ;^189^^^^^185^192^int h1 = i1.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P14_Delete_Statement]^^189^^^^^185^192^int h1 = i1.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P1_Replace_Type]^short  h2 = i2.hashCode (  ) ;^190^^^^^185^192^int h2 = i2.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P5_Replace_Variable]^int h2 = i1.hashCode (  ) ;^190^^^^^185^192^int h2 = i2.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P7_Replace_Invocation]^int h2 = i2.setAngle (  ) ;^190^^^^^185^192^int h2 = i2.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^int h1 = i1.hashCode (  ) ;int h2 = i2.hashCode (  ) ;^190^^^^^185^192^int h2 = i2.hashCode (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P14_Delete_Statement]^^190^191^^^^185^192^int h2 = i2.hashCode (  ) ; assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P5_Replace_Variable]^assertEquals (  h2 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P5_Replace_Variable]^assertEquals ( h1 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P5_Replace_Variable]^assertEquals ( h2, h1 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P14_Delete_Statement]^^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertEquals ( h1, h2 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertEquals ( h1, h2 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertEquals ( h1, h2 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertEquals ( h1, h2 ) ;^191^^^^^185^192^assertEquals ( h1, h2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  int  h1  h2  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( -4, "Label" ) ;^199^^^^^197^212^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 0, "ab" ) ;^199^^^^^197^212^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 7, "Label" ) ;^199^^^^^197^212^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 0, "LabelLab" ) ;^199^^^^^197^212^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^199^^^^^197^212^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^i2 =  ( DialValueIndicator )  i2.clone (  ) ;^202^^^^^197^212^i2 =  ( DialValueIndicator )  i1.clone (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^i2 =  ( DialValueIndicator )  i1.setAngle (  ) ;^202^^^^^197^212^i2 =  ( DialValueIndicator )  i1.clone (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P8_Replace_Mix]^i2 =   ( DialValueIndicator )  null.clone (  ) ;^202^^^^^197^212^i2 =  ( DialValueIndicator )  i1.clone (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^i2 =  ( DialValueIndicator )  in.readObject (  ) ;i2 =  ( DialValueIndicator )  i1.clone (  ) ;^202^^^^^197^212^i2 =  ( DialValueIndicator )  i1.clone (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^202^^^^^197^212^i2 =  ( DialValueIndicator )  i1.clone (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^205^^^^^197^212^e.printStackTrace (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P2_Replace_Operator]^assertTrue ( i1 == i2 ) ;^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( i2 != i1 ) ;^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( i1 != i2 ) ;^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertTrue ( i1 != i2 ) ;^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1 != i2 ) ;^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1 != i2 ) ;^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1 != i2 ) ;^207^^^^^197^212^assertTrue ( i1 != i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P2_Replace_Operator]^assertTrue ( i1.getClass (  )  != i2.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( i2.getClass (  )  == i1.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( i1.getClass (  )  == i2.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( i1.setAngle (  )  == i2.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( i1 .equals ( i2 )   == i2^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( i2.getClass (  )  == i2.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( i1.getClass (  )  == i1.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P8_Replace_Mix]^assertTrue ( i1.setAngle (  )  == i1.getClass (  )  ) ;^208^^^^^197^212^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( i2.equals ( i1 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( i1.equals ( i2 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( i1.DialValueIndicator ( i2 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( i1.getClass (  )  == i2.getClass (  )  ) ;assertTrue ( i1.equals ( i2 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( i1, i2 ) ;assertTrue ( i1.equals ( i2 )  ) ;^209^^^^^197^212^assertTrue ( i1.equals ( i2 )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  CloneNotSupportedException  e  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 1, "Label" ) ;^220^^^^^218^240^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 0, "ababel" ) ;^220^^^^^218^240^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( -4, "Label" ) ;^220^^^^^218^240^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P3_Replace_Literal]^DialValueIndicator i1 = new DialValueIndicator ( 0, "abel" ) ;^220^^^^^218^240^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^DialValueIndicator i2 = new DialValueIndicator ( 0, "Label" ) ;DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^220^^^^^218^240^DialValueIndicator i1 = new DialValueIndicator ( 0, "Label" ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^i2 =   ( DialValueIndicator )  null.readObject (  ) ;^231^^^^^218^240^i2 =  ( DialValueIndicator )  in.readObject (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^i2 =  ( DialValueIndicator )  i1.clone (  ) ;i2 =  ( DialValueIndicator )  in.readObject (  ) ;^231^^^^^218^240^i2 =  ( DialValueIndicator )  in.readObject (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^230^^^^^218^240^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^229^230^^^^218^240^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^out.writeObject ( i2 ) ;^226^^^^^218^240^out.writeObject ( i1 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^226^227^^^^218^240^out.writeObject ( i1 ) ; out.close (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.writeObject ( i1 ) ;^226^^^^^218^240^out.writeObject ( i1 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^out.writeObject (  ) ;^227^^^^^218^240^out.close (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^227^^^^^218^240^out.close (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^in.close (  ) ;out.close (  ) ;^227^^^^^218^240^out.close (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.writeObject ( i1 ) ;out.close (  ) ;^227^^^^^218^240^out.close (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^230^231^^^^218^240^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ; i2 =  ( DialValueIndicator )  in.readObject (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^i2 =  ( DialValueIndicator )  in .close (  )  ;^231^^^^^218^240^i2 =  ( DialValueIndicator )  in.readObject (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^231^232^^^^218^240^i2 =  ( DialValueIndicator )  in.readObject (  ) ; in.close (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^232^^^^^218^240^in.close (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.close (  ) ;in.close (  ) ;^232^^^^^218^240^in.close (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^235^^^^^218^240^e.printStackTrace (  ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals (  i2 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals ( i1 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals ( i2, i1 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertTrue ( i1 != i2 ) ;assertEquals ( i1, i2 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertTrue ( i1.equals ( i2 )  ) ;assertEquals ( i1, i2 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertFalse ( i1.equals ( i2 )  ) ;assertEquals ( i1, i2 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertEquals ( i1, i2 ) ;^237^^^^^218^240^assertEquals ( i1, i2 ) ;^[CLASS] DialValueIndicatorTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialValueIndicator  i1  i2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
