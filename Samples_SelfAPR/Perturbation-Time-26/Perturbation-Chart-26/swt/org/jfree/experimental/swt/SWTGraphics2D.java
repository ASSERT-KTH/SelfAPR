[P8_Replace_Mix]^private Map colorsPool  = null ;^107^^^^^102^112^private Map colorsPool = new HashMap (  ) ;^[CLASS] SWTGraphics2D   [VARIABLES] 
[P8_Replace_Mix]^private Map fontsPool ;^110^^^^^105^115^private Map fontsPool = new HashMap (  ) ;^[CLASS] SWTGraphics2D   [VARIABLES] 
[P1_Replace_Type]^private  Set  resourcePool = new Array Set  (  ) ;^113^^^^^108^118^private List resourcePool = new ArrayList (  ) ;^[CLASS] SWTGraphics2D   [VARIABLES] 
[P8_Replace_Mix]^private List resourcePool ;^113^^^^^108^118^private List resourcePool = new ArrayList (  ) ;^[CLASS] SWTGraphics2D   [VARIABLES] 
[P14_Delete_Statement]^^121^122^^^^120^123^super (  ) ; this.gc = gc;^[CLASS] SWTGraphics2D  [METHOD] <init> [RETURN_TYPE] GC)   GC gc [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^pit.next (  ) ;super (  ) ;^121^^^^^120^123^super (  ) ;^[CLASS] SWTGraphics2D  [METHOD] <init> [RETURN_TYPE] GC)   GC gc [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P8_Replace_Mix]^this.gc =  null;^122^^^^^120^123^this.gc = gc;^[CLASS] SWTGraphics2D  [METHOD] <init> [RETURN_TYPE] GC)   GC gc [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^133^^^^^132^135^resourcePool.add ( resource ) ;^[CLASS] SWTGraphics2D  [METHOD] addToResourcePool [RETURN_TYPE] Resource   Resource resource [VARIABLES] Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resourcePool.clear (  ) ;resourcePool.add ( resource ) ;^133^^^^^132^135^resourcePool.add ( resource ) ;^[CLASS] SWTGraphics2D  [METHOD] addToResourcePool [RETURN_TYPE] Resource   Resource resource [VARIABLES] Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^for  ( Iterator resource = itPool.iterator (  ) ;it.hasNext (  ) ; )  {^141^^^^^140^148^for  ( Iterator it = resourcePool.iterator (  ) ;it.hasNext (  ) ; )  {^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^for  ( Iterator it = resourcePoolPool.iterator (  ) ;it.hasNext (  ) ; )  {^141^^^^^140^148^for  ( Iterator it = resourcePool.iterator (  ) ;it.hasNext (  ) ; )  {^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^for  ( Iterator it = resource.iterator (  ) ;it.hasNext (  ) ; )  {^141^^^^^140^148^for  ( Iterator it = resourcePool.iterator (  ) ;it.hasNext (  ) ; )  {^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^for  ( Iterator it = resourcePool.clear (  ) ;it.hasNext (  ) ; )  {^141^^^^^140^148^for  ( Iterator it = resourcePool.iterator (  ) ;it.hasNext (  ) ; )  {^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^for  ( Iterator it = resourcePool.iterator (  ) ;it .next (  )  ; )  {^141^^^^^140^148^for  ( Iterator it = resourcePool.iterator (  ) ;it.hasNext (  ) ; )  {^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^142^^^^^140^148^Resource resource =  ( Resource ) it.next (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^143^^^^^140^148^resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;resource.dispose (  ) ;^143^^^^^140^148^resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;resource.dispose (  ) ;^143^^^^^140^148^resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resourcePool.clear (  ) ;resource.dispose (  ) ;^143^^^^^140^148^resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;resource.dispose (  ) ;^143^^^^^140^148^resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;resource.dispose (  ) ;^143^^^^^140^148^resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;resource.dispose (  ) ;^143^^^^^140^148^resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;resource.dispose (  ) ;^143^^^^^140^148^resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^Resource resource =  ( Resource ) it .hasNext (  )  ;^142^^^^^140^148^Resource resource =  ( Resource ) it.next (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^141^142^143^144^^140^148^for  ( Iterator it = resourcePool.iterator (  ) ;it.hasNext (  ) ; )  { Resource resource =  ( Resource ) it.next (  ) ; resource.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^142^143^^^^140^148^Resource resource =  ( Resource ) it.next (  ) ; resource.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^resourcePool.iterator (  ) ;^145^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^145^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^colorsPool.clear (  ) ;resourcePool.clear (  ) ;^145^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resourcePool.add ( resource ) ;resourcePool.clear (  ) ;^145^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;resourcePool.clear (  ) ;^145^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^addToResourcePool ( swtFont ) ;resourcePool.clear (  ) ;^145^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^colorsPool .iterator (  )  ;^146^^^^^140^148^colorsPool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^146^147^^^^140^148^colorsPool.clear (  ) ; resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resourcePool.clear (  ) ;colorsPool.clear (  ) ;^146^^^^^140^148^colorsPool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^colorModel.getReds ( reds ) ;colorsPool.clear (  ) ;^146^^^^^140^148^colorsPool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^resourcePool.iterator (  ) ;^147^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^147^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^colorsPool.clear (  ) ;resourcePool.clear (  ) ;^147^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resourcePool.add ( resource ) ;resourcePool.clear (  ) ;^147^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;resourcePool.clear (  ) ;^147^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^addToResourcePool ( swtFont ) ;resourcePool.clear (  ) ;^147^^^^^140^148^resourcePool.clear (  ) ;^[CLASS] SWTGraphics2D  [METHOD] disposeResourcePool [RETURN_TYPE] void   [VARIABLES] Iterator  it  Resource  resource  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) colorsPool.get ( font ) ;^161^162^^^^160^171^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) fontsPool.get ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) fontsPoolsPool.get ( font ) ;^161^162^^^^160^171^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) fontsPool.get ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) font.get ( fontsPool ) ;^161^162^^^^160^171^org.eclipse.swt.graphics.Font swtFont =  ( org.eclipse.swt.graphics.Font ) fontsPool.get ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^fontsPool.get ( swtFont ) ;^162^^^^^160^171^fontsPool.get ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P14_Delete_Statement]^^162^^^^^160^171^fontsPool.get ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^fontsPool.put ( font, swtFont ) ;fontsPool.get ( font ) ;^162^^^^^160^171^fontsPool.get ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P2_Replace_Operator]^if  ( swtFont != null )  {^163^^^^^160^171^if  ( swtFont == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P8_Replace_Mix]^if  ( swtFont == true )  {^163^^^^^160^171^if  ( swtFont == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P9_Replace_Statement]^if  ( swtColor == null )  {^163^^^^^160^171^if  ( swtFont == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P9_Replace_Statement]^if  ( dashes != null )  {^163^^^^^160^171^if  ( swtFont == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P3_Replace_Literal]^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, false )  ) ;^164^165^166^^^160^171^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , swtFont, true )  ) ;^164^165^166^^^160^171^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) ,  true )  ) ;^164^165^166^^^160^171^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^swtFont = new org.eclipse.swt.graphics.Font ( font.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , gc, true )  ) ;^164^165^166^^^160^171^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P7_Replace_Invocation]^swtFont = new org.eclipse.swt.graphics.Font ( gc.getLineCap (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^164^165^166^^^160^171^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P13_Insert_Block]^if  ( swtFont == null )  {     swtFont = new Font ( gc.getDevice (  ) , toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;     addToResourcePool ( swtFont ) ;     fontsPool.put ( font, swtFont ) ; }^164^^^^^160^171^[Delete]^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P7_Replace_Invocation]^swtFont = new org.eclipse.swt.graphics.Font ( gc .getFontMetrics (  )  , SWTUtils.toSwtFontData ( gc^164^165^166^^^160^171^swtFont = new org.eclipse.swt.graphics.Font ( gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P7_Replace_Invocation]^gc.getLineCap (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^165^166^^^^160^171^gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P7_Replace_Invocation]^gc .getFontMetrics (  )  , SWTUtils.toSwtFontData ( gc^165^166^^^^160^171^gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P14_Delete_Statement]^^165^166^^^^160^171^gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^165^166^^^^160^171^gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^165^166^^^^160^171^gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^165^166^^^^160^171^gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P3_Replace_Literal]^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, false )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^SWTUtils.toSwtFontData ( gc.getDevice (  ) , swtFont, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^SWTUtils.toSwtFontData ( gc.getDevice (  ) ,  true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^SWTUtils.toSwtFontData ( font.getDevice (  ) , gc, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P7_Replace_Invocation]^SWTUtils.toSwtFontData ( gc.getLineCap (  ) , font, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P14_Delete_Statement]^^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P7_Replace_Invocation]^SWTUtils.toSwtFontData ( gc .getFontMetrics (  )  , font, true )  ) ;^166^^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P14_Delete_Statement]^^166^167^^^^160^171^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ; addToResourcePool ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^addToResourcePool ( font ) ;^167^^^^^160^171^addToResourcePool ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P7_Replace_Invocation]^toAwtTransform ( swtFont ) ;^167^^^^^160^171^addToResourcePool ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P8_Replace_Mix]^toAwtTransform ( font ) ;^167^^^^^160^171^addToResourcePool ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P14_Delete_Statement]^^167^168^^^^160^171^addToResourcePool ( swtFont ) ; fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^resourcePool.clear (  ) ;addToResourcePool ( swtFont ) ;^167^^^^^160^171^addToResourcePool ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^disposeResourcePool (  ) ;addToResourcePool ( swtFont ) ;^167^^^^^160^171^addToResourcePool ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^addToResourcePool ( swtColor ) ;addToResourcePool ( swtFont ) ;^167^^^^^160^171^addToResourcePool ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;addToResourcePool ( swtFont ) ;^167^^^^^160^171^addToResourcePool ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^fontsPool.put (  swtFont ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^fontsPool.put ( font ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^fontsPool.put ( swtFont, font ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P8_Replace_Mix]^fontsPool.put ( swtFont, swtFont ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P14_Delete_Statement]^^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^fontsPool.get ( font ) ;fontsPool.put ( font, swtFont ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;fontsPool.put ( font, swtFont ) ;^168^^^^^160^171^fontsPool.put ( font, swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^return font;^170^^^^^160^171^return swtFont;^[CLASS] SWTGraphics2D  [METHOD] getSwtFontFromPool [RETURN_TYPE] Font   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Font  font  swtFont  
[P5_Replace_Variable]^this.colorsPool.get ( new Integer ( swtColor.getRGB (  )  )  ) ;^188^^^^^183^197^this.colorsPool.get ( new Integer ( awtColor.getRGB (  )  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P14_Delete_Statement]^^188^^^^^183^197^this.colorsPool.get ( new Integer ( awtColor.getRGB (  )  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;this.colorsPool.get ( new Integer ( awtColor.getRGB (  )  )  ) ;^188^^^^^183^197^this.colorsPool.get ( new Integer ( awtColor.getRGB (  )  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P2_Replace_Operator]^if  ( swtColor != null )  {^189^^^^^183^197^if  ( swtColor == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P5_Replace_Variable]^if  ( awtColor == null )  {^189^^^^^183^197^if  ( swtColor == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P8_Replace_Mix]^if  ( swtColor == this )  {^189^^^^^183^197^if  ( swtColor == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P9_Replace_Statement]^if  ( swtFont == null )  {^189^^^^^183^197^if  ( swtColor == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P9_Replace_Statement]^if  ( dashes != null )  {^189^^^^^183^197^if  ( swtColor == null )  {^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P5_Replace_Variable]^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , swtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P5_Replace_Variable]^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  )  ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P5_Replace_Variable]^swtColor = SWTUtils.toSwtColor ( awtColor.getDevice (  ) , gc ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P7_Replace_Invocation]^swtColor = SWTUtils.toAwtFont ( gc.getDevice (  ) , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P7_Replace_Invocation]^swtColor = SWTUtils.toSwtColor ( gc.getLineCap (  ) , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P8_Replace_Mix]^swtColor =  SWTUtils.toSwtColor ( gc.getDevice (  ) , null ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P5_Replace_Variable]^this.colorsPool.put ( new Integer ( swtColor.getRGB (  )  ) , swtColor ) ;^194^^^^^183^197^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P7_Replace_Invocation]^swtColor = SWTUtils .toAwtColor (  )  ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P7_Replace_Invocation]^swtColor = SWTUtils.toSwtColor ( gc .getFontMetrics (  )  , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P8_Replace_Mix]^swtColor = SWTUtils.toSwtColor ( gc.getLineCap (  ) , swtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P14_Delete_Statement]^^190^191^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ; addToResourcePool ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtColor ( gc.getBackground (  )  ) ;swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^gc.getDevice (  ) , SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P14_Delete_Statement]^^190^^^^^183^197^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P5_Replace_Variable]^addToResourcePool ( awtColor ) ;^191^^^^^183^197^addToResourcePool ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P7_Replace_Invocation]^toAwtTransform ( swtColor ) ;^191^^^^^183^197^addToResourcePool ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P14_Delete_Statement]^^191^^^^^183^197^addToResourcePool ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^addToResourcePool ( swtFont ) ;addToResourcePool ( swtColor ) ;^191^^^^^183^197^addToResourcePool ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;addToResourcePool ( swtColor ) ;^191^^^^^183^197^addToResourcePool ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^disposeResourcePool (  ) ;addToResourcePool ( swtColor ) ;^191^^^^^183^197^addToResourcePool ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P4_Replace_Constructor]^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  )  ) ;^194^^^^^183^197^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P5_Replace_Variable]^this.colorsPool.put ( new Integer ( swtColor.getRGB (  )  ) , awtColor ) ;^194^^^^^183^197^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P14_Delete_Statement]^^194^^^^^183^197^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P11_Insert_Donor_Statement]^this.colorsPool.get ( new Integer ( awtColor.getRGB (  )  )  ) ;this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;^194^^^^^183^197^this.colorsPool.put ( new Integer ( awtColor.getRGB (  )  ) , swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P5_Replace_Variable]^return awtColor;^196^^^^^183^197^return swtColor;^[CLASS] SWTGraphics2D  [METHOD] getSwtColorFromPool [RETURN_TYPE] Color   Color awtColor [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  awtColor  swtColor  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Color bg = gc.getForeground (  ) ;^206^^^^^205^210^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Color bg = gc .setBackground ( fg )  ;^206^^^^^205^210^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P14_Delete_Statement]^^206^207^^^^205^210^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ; org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtColor ( gc.getBackground (  )  ) ;org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^206^^^^^205^210^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^206^^^^^205^210^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^206^^^^^205^210^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^206^^^^^205^210^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^206^^^^^205^210^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Color fg = gc.getBackground (  ) ;^207^^^^^205^210^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P14_Delete_Statement]^^207^^^^^205^210^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^207^^^^^205^210^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^207^^^^^205^210^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^207^^^^^205^210^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^207^^^^^205^210^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^207^^^^^205^210^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^207^^^^^205^210^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P5_Replace_Variable]^gc.setBackground ( bg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P7_Replace_Invocation]^gc.setForeground ( fg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P7_Replace_Invocation]^gc .getBackground (  )  ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P14_Delete_Statement]^^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.setClipping ( clip ) ;gc.setBackground ( fg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;gc.setBackground ( fg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.getBackground (  ) .dispose (  ) ;gc.setBackground ( fg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.setForeground ( bg ) ;gc.setBackground ( fg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setBackground ( fg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setBackground ( fg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.getLineJoin (  )  ) ;gc.setBackground ( fg ) ;^208^^^^^205^210^gc.setBackground ( fg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P5_Replace_Variable]^gc.setForeground ( fg ) ;^209^^^^^205^210^gc.setForeground ( bg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P7_Replace_Invocation]^gc.setBackground ( bg ) ;^209^^^^^205^210^gc.setForeground ( bg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P7_Replace_Invocation]^gc .getForeground (  )  ;^209^^^^^205^210^gc.setForeground ( bg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P14_Delete_Statement]^^209^^^^^205^210^gc.setForeground ( bg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.setBackground ( fg ) ;gc.setForeground ( bg ) ;^209^^^^^205^210^gc.setForeground ( bg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setForeground ( bg ) ;^209^^^^^205^210^gc.setForeground ( bg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setForeground ( bg ) ;^209^^^^^205^210^gc.setForeground ( bg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P11_Insert_Donor_Statement]^gc.getLineJoin (  )  ) ;gc.setForeground ( bg ) ;^209^^^^^205^210^gc.setForeground ( bg ) ;^[CLASS] SWTGraphics2D  [METHOD] switchColors [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Color  bg  fg  
[P1_Replace_Type]^short  type;^220^^^^^219^249^int type;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^float[] coords = new float[type];^221^^^^^219^249^float[] coords = new float[6];^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^float[] elements = new float[6];float[] coords = new float[6];^221^^^^^219^249^float[] coords = new float[6];^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P5_Replace_Variable]^Path path = new Path ( gc.getDevice (  )  ) ;^222^^^^^219^249^Path path = new Path ( this.gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P7_Replace_Invocation]^Path path = new Path ( this.gc.getLineCap (  )  ) ;^222^^^^^219^249^Path path = new Path ( this.gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P7_Replace_Invocation]^Path path = new Path ( this.gc .getFontMetrics (  )   ) ;^222^^^^^219^249^Path path = new Path ( this.gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P8_Replace_Mix]^Path path = new Path ( gc.getLineCap (  )  ) ;^222^^^^^219^249^Path path = new Path ( this.gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;Path path = new Path ( this.gc.getDevice (  )  ) ;^222^^^^^219^249^Path path = new Path ( this.gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^Transform t = new Transform ( gc.getDevice (  )  ) ;Path path = new Path ( this.gc.getDevice (  )  ) ;^222^^^^^219^249^Path path = new Path ( this.gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P8_Replace_Mix]^Path path = new Path ( gc .getFontMetrics (  )   ) ;^222^^^^^219^249^Path path = new Path ( this.gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^222^223^^^^219^249^Path path = new Path ( this.gc.getDevice (  )  ) ; PathIterator pit = shape.getPathIterator ( null ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^223^^^^^219^249^PathIterator pit = shape.getPathIterator ( null ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P7_Replace_Invocation]^while  ( !pit.currentSegment (  )  )  {^224^^^^^219^249^while  ( !pit.isDone (  )  )  {^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P5_Replace_Variable]^type = coords.currentSegment ( pit ) ;^225^^^^^219^249^type = pit.currentSegment ( coords ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P8_Replace_Mix]^type =  null.currentSegment ( coords ) ;^225^^^^^219^249^type = pit.currentSegment ( coords ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P7_Replace_Invocation]^type = pit .next (  )  ;^225^^^^^219^249^type = pit.currentSegment ( coords ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^225^^^^^219^249^type = pit.currentSegment ( coords ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^while  ( !pit.isDone (  )  )  { type = pit.currentSegment ( coords ) ;type = pit.currentSegment ( coords ) ;^225^^^^^219^249^type = pit.currentSegment ( coords ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.moveTo ( coords[2], coords[1] ) ;^228^^^^^219^249^path.moveTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.moveTo ( coords[0], coords[type] ) ;^228^^^^^219^249^path.moveTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P5_Replace_Variable]^path.moveTo ( coords[0][1] ) ;^228^^^^^219^249^path.moveTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^228^229^^^^219^249^path.moveTo ( coords[0], coords[1] ) ; break;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.lineTo ( coords[0], coords[1] ) ;path.moveTo ( coords[0], coords[1] ) ;^228^^^^^219^249^path.moveTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;path.moveTo ( coords[0], coords[1] ) ;^228^^^^^219^249^path.moveTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.lineTo ( coords[type], coords[1] ) ;^231^^^^^219^249^path.lineTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.lineTo ( coords[0], coords[9] ) ;^231^^^^^219^249^path.lineTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P5_Replace_Variable]^path.lineTo ( coords[0][1] ) ;^231^^^^^219^249^path.lineTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^231^^^^^219^249^path.lineTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;path.lineTo ( coords[0], coords[1] ) ;^231^^^^^219^249^path.lineTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.moveTo ( coords[0], coords[1] ) ;path.lineTo ( coords[0], coords[1] ) ;^231^^^^^219^249^path.lineTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.quadTo ( coords[type], coords[1], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.quadTo ( coords[0], coords[], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.quadTo ( coords[0], coords[1], coords[type], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.quadTo ( coords[0], coords[1], coords[2], coords[type] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P5_Replace_Variable]^path.quadTo ( coords[0][1], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^234^235^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ; break;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.lineTo ( coords[0], coords[1] ) ;path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.moveTo ( coords[0], coords[1] ) ;path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[type], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[3], coords[2], coords[3], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[1], coords[type], coords[3], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[1], coords[2], coords[type], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[8], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[type] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P5_Replace_Variable]^path.cubicTo ( coords[0][1], coords[2], coords[3], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P8_Replace_Mix]^path .dispose (  )  ;^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^241^242^^^^219^249^path.close (  ) ; break;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^pit.next (  ) ;path.close (  ) ;^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;path.close (  ) ;^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;path.close (  ) ;^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^switchColors (  ) ;path.close (  ) ;^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;path.close (  ) ;^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;path.close (  ) ;^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;path.close (  ) ;^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P7_Replace_Invocation]^pit.currentSegment (  ) ;^246^^^^^219^249^pit.next (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^246^^^^^219^249^pit.next (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.close (  ) ;pit.next (  ) ;^246^^^^^219^249^pit.next (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^super (  ) ;pit.next (  ) ;^246^^^^^219^249^pit.next (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;pit.next (  ) ;^246^^^^^219^249^pit.next (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^224^225^^^^219^249^while  ( !pit.isDone (  )  )  { type = pit.currentSegment ( coords ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.moveTo ( coords[0], coords[-5] ) ;^228^^^^^219^249^path.moveTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.lineTo ( coords[0], coords[type] ) ;^231^^^^^219^249^path.lineTo ( coords[0], coords[1] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^231^232^^^^219^249^path.lineTo ( coords[0], coords[1] ) ; break;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.quadTo ( coords[], coords[1], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.quadTo ( coords[0], coords[type], coords[2], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.quadTo ( coords[0], coords[1], coords[9], coords[3] ) ;^234^^^^^219^249^path.quadTo ( coords[0], coords[1], coords[2], coords[3] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[type], coords[2], coords[3], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[1], coords[0], coords[3], coords[4], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[6], coords[5] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P3_Replace_Literal]^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[11] ) ;^237^238^^^^219^249^path.cubicTo ( coords[0], coords[1], coords[2], coords[3], coords[4], coords[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P14_Delete_Statement]^^241^^^^^219^249^path.close (  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtPath [RETURN_TYPE] Path   Shape shape [VARIABLES] Path  path  Shape  shape  boolean  PathIterator  pit  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  int  type  float[]  coords  
[P7_Replace_Invocation]^Transform t = new Transform ( gc.getLineCap (  )  ) ;^259^^^^^258^266^Transform t = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^Transform t = new Transform ( gc .getFontMetrics (  )   ) ;^259^^^^^258^266^Transform t = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^Path path = new Path ( this.gc.getDevice (  )  ) ;Transform t = new Transform ( gc.getDevice (  )  ) ;^259^^^^^258^266^Transform t = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;Transform t = new Transform ( gc.getDevice (  )  ) ;^259^^^^^258^266^Transform t = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^double[] matrix = new double[7];^260^^^^^258^266^double[] matrix = new double[6];^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^261^262^263^264^265^258^266^awtTransform.getMatrix ( matrix ) ; t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ; return t; }^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;awtTransform.getMatrix ( matrix ) ;^261^^^^^258^266^awtTransform.getMatrix ( matrix ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;awtTransform.getMatrix ( matrix ) ;^261^^^^^258^266^awtTransform.getMatrix ( matrix ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;awtTransform.getMatrix ( matrix ) ;^261^^^^^258^266^awtTransform.getMatrix ( matrix ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;awtTransform.getMatrix ( matrix ) ;^261^^^^^258^266^awtTransform.getMatrix ( matrix ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;awtTransform.getMatrix ( matrix ) ;^261^^^^^258^266^awtTransform.getMatrix ( matrix ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^t.setElements (  ( float )  matrix[8],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^262^263^264^^^258^266^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^t.setElements (  ( float )  matrix[0],  ( float )  matrix[-3], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^262^263^264^^^258^266^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[-7],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^262^263^264^^^258^266^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[7], ( float )  matrix[4],  ( float )  matrix[5] ) ;^262^263^264^^^258^266^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[-1],  ( float )  matrix[5] ) ;^262^263^264^^^258^266^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[9] ) ;^262^263^264^^^258^266^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^262^263^264^^^258^266^t.setElements (  ( float )  matrix[0],  ( float )  matrix[1], ( float )  matrix[2],  ( float )  matrix[3], ( float )  matrix[4],  ( float )  matrix[5] ) ;^[CLASS] SWTGraphics2D  [METHOD] toSwtTransform [RETURN_TYPE] Transform   AffineTransform awtTransform [VARIABLES] boolean  double[]  matrix  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  t  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^float[] elements = new float[7];^276^^^^^275^280^float[] elements = new float[6];^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^float[] coords = new float[6];float[] elements = new float[6];^276^^^^^275^280^float[] elements = new float[6];^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P7_Replace_Invocation]^swtTransform.scale ( elements ) ;^277^^^^^275^280^swtTransform.getElements ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P14_Delete_Statement]^^277^278^279^280^^275^280^swtTransform.getElements ( elements ) ; AffineTransform awtTransform = new AffineTransform ( elements ) ; return awtTransform; }^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^colorModel.getGreens ( greens ) ;swtTransform.getElements ( elements ) ;^277^^^^^275^280^swtTransform.getElements ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;swtTransform.getElements ( elements ) ;^277^^^^^275^280^swtTransform.getElements ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.getElements ( elements ) ;^277^^^^^275^280^swtTransform.getElements ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.getElements ( elements ) ;^277^^^^^275^280^swtTransform.getElements ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.getElements ( elements ) ;^277^^^^^275^280^swtTransform.getElements ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.getElements ( elements ) ;^277^^^^^275^280^swtTransform.getElements ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P4_Replace_Constructor]^AffineTransform awtTransform = new AffineTransform (  )  ;^278^^^^^275^280^AffineTransform awtTransform = new AffineTransform ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;AffineTransform awtTransform = new AffineTransform ( elements ) ;^278^^^^^275^280^AffineTransform awtTransform = new AffineTransform ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;AffineTransform awtTransform = new AffineTransform ( elements ) ;^278^^^^^275^280^AffineTransform awtTransform = new AffineTransform ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;AffineTransform awtTransform = new AffineTransform ( elements ) ;^278^^^^^275^280^AffineTransform awtTransform = new AffineTransform ( elements ) ;^[CLASS] SWTGraphics2D  [METHOD] toAwtTransform [RETURN_TYPE] AffineTransform   Transform swtTransform [VARIABLES] boolean  AffineTransform  awtTransform  List  resourcePool  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  float[]  elements  
[P7_Replace_Invocation]^Path path = setClip ( shape ) ;^286^^^^^285^289^Path path = toSwtPath ( shape ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^Path path = toSwtPath ( s ) ;Path path = toSwtPath ( shape ) ;^286^^^^^285^289^Path path = toSwtPath ( shape ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^Path clipPath = toSwtPath ( clip ) ;Path path = toSwtPath ( shape ) ;^286^^^^^285^289^Path path = toSwtPath ( shape ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^286^287^^^^285^289^Path path = toSwtPath ( shape ) ; gc.drawPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^gc.fillPath ( path ) ;^287^^^^^285^289^gc.drawPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^287^^^^^285^289^gc.drawPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^gc.drawImage ( image, x, y ) ;gc.drawPath ( path ) ;^287^^^^^285^289^gc.drawPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^gc.drawImage ( im, x, y ) ;gc.drawPath ( path ) ;^287^^^^^285^289^gc.drawPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^this.gc.fillPath ( path ) ;gc.drawPath ( path ) ;^287^^^^^285^289^gc.drawPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;gc.drawPath ( path ) ;^287^^^^^285^289^gc.drawPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^gc.setClipping ( clipPath ) ;gc.drawPath ( path ) ;^287^^^^^285^289^gc.drawPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^path .dispose (  )  ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^path.close (  ) ;path.dispose (  ) ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^pit.next (  ) ;path.dispose (  ) ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;path.dispose (  ) ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;path.dispose (  ) ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;path.dispose (  ) ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;path.dispose (  ) ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;path.dispose (  ) ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;path.dispose (  ) ;^288^^^^^285^289^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] draw [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^return true;^298^^^^^295^299^return false;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] boolean   Image image AffineTransform xform ImageObserver obs [VARIABLES] boolean  ImageObserver  obs  AffineTransform  xform  List  resourcePool  GC  gc  Image  image  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^= new org.eclipse.swt.graphics.Image ( image.getDevice (  ) , convertToSWT ( gc )  ) ;^308^309^^^^305^312^= new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P7_Replace_Invocation]^= new org.eclipse.swt.graphics.Image ( gc.getLineCap (  ) , convertToSWT ( image )  ) ;^308^309^^^^305^312^= new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P7_Replace_Invocation]^= new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , setPaint ( image )  ) ;^308^309^^^^305^312^= new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( image.getDevice (  ) , convertToSWT ( gc )  ) ;^307^308^309^^^305^312^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( gc.getLineCap (  ) , convertToSWT ( image )  ) ;^307^308^309^^^305^312^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( gc .getFontMetrics (  )  , convertToSWT ( image )  ) ;^307^308^309^^^305^312^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , setPaint ( image )  ) ;^307^308^309^^^305^312^org.eclipse.swt.graphics.Image im = new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P14_Delete_Statement]^^308^309^^^^305^312^= new org.eclipse.swt.graphics.Image ( gc.getDevice (  ) , convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P7_Replace_Invocation]^setPaint ( image )  ) ;^309^^^^^305^312^convertToSWT ( image )  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P14_Delete_Statement]^^309^310^^^^305^312^convertToSWT ( image )  ) ; gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( im, y, y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^gc.drawImage (  x, y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( im,  y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( im, x ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( y, x, im ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( x, im, y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( im, y, x ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P8_Replace_Mix]^gc .drawImage ( image , op , y , x )  ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P14_Delete_Statement]^^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^gc.drawPath ( path ) ;gc.drawImage ( im, x, y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^gc.drawImage ( image, x, y ) ;gc.drawImage ( im, x, y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^gc.drawLine ( x1, y1, x2, y2 ) ;gc.drawImage ( im, x, y ) ;^310^^^^^305^312^gc.drawImage ( im, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P8_Replace_Mix]^im .dispose (  )  ;^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P14_Delete_Statement]^^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^path.close (  ) ;im.dispose (  ) ;^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;im.dispose (  ) ;^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;im.dispose (  ) ;^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;im.dispose (  ) ;^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;im.dispose (  ) ;^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;im.dispose (  ) ;^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;im.dispose (  ) ;^311^^^^^305^312^im.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   BufferedImage image BufferedImageOp op int x int y [VARIABLES] BufferedImageOp  op  boolean  List  resourcePool  GC  gc  Image  im  Map  colorsPool  fontsPool  BufferedImage  image  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( image, y, y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( image, x, x ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawImage (  x, y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( image,  y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( image, x ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( x, image, y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( image, y, x ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawImage ( y, x, image ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P14_Delete_Statement]^^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P11_Insert_Donor_Statement]^gc.drawPath ( path ) ;gc.drawImage ( image, x, y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P11_Insert_Donor_Statement]^gc.drawImage ( im, x, y ) ;gc.drawImage ( image, x, y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P11_Insert_Donor_Statement]^gc.drawLine ( x1, y1, x2, y2 ) ;gc.drawImage ( image, x, y ) ;^322^^^^^321^323^gc.drawImage ( image, x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] void   Image image int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Image  image  Map  colorsPool  fontsPool  int  x  y  
[P1_Replace_Type]^int fm = gc.getFontMetrics (  ) .getAscent (  ) ;^351^^^^^350^353^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P7_Replace_Invocation]^float fm = gc.getFontMetrics (  ) .getFontData (  ) ;^351^^^^^350^353^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P7_Replace_Invocation]^float fm = gc.getFont (  ) .getAscent (  ) ;^351^^^^^350^353^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P11_Insert_Donor_Statement]^FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^351^^^^^350^353^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P14_Delete_Statement]^^351^^^^^350^353^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P2_Replace_Operator]^gc.drawString ( text, x,  ( int )   ( y  <  fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P3_Replace_Literal]^gc.drawString ( text, x,  ( int )   ( y - fm ) , false ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawString ( text, x,  ( int )   ( x - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawString (  x,  ( int )   ( y - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawString ( text,   ( int )   ( y - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawString ( y, x,  ( int )   ( text - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawString ( text, fm,  ( int )   ( y - x ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawString ( text, y,  ( int )   ( x - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P5_Replace_Variable]^gc.drawString ( text, x,  ( int )   ( fm - y ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P8_Replace_Mix]^gc.drawString ( text, y,  ( int )   ( y - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P14_Delete_Statement]^^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P11_Insert_Donor_Statement]^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^352^^^^^350^353^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text int x int y [VARIABLES] boolean  List  resourcePool  String  text  GC  gc  float  fm  Map  colorsPool  fontsPool  int  x  y  
[P1_Replace_Type]^int fm = gc.getFontMetrics (  ) .getAscent (  ) ;^359^^^^^358^361^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^float fm = gc.getFontMetrics (  ) .getFontData (  ) ;^359^^^^^358^361^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^float fm = gc.getFont (  ) .getAscent (  ) ;^359^^^^^358^361^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^359^^^^^358^361^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^float fm = gc .getFontMetrics (  )  .getAscent (  ) ;^359^^^^^358^361^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^359^^^^^358^361^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P2_Replace_Operator]^gc.drawString ( text,  ( int )  x,  ( int )   (  y  >  fm  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , false ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^gc.drawString ( text,  ( int )  x,  ( int )   (  x - fm  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^gc.drawString ( text,  ( int )  x,  ( int )   (  y - x  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^gc.drawString (   ( int )  x,  ( int )   (  y - fm  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P5_Replace_Variable]^gc.drawString ( text,  ( int )  x,  ( int )   (  fm - y  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^gc.drawString ( text, x,  ( int )   ( y - fm ) , true ) ;gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^360^^^^^358^361^gc.drawString ( text,  ( int )  x,  ( int )   (  y - fm  ) , true ) ;^[CLASS] SWTGraphics2D  [METHOD] drawString [RETURN_TYPE] void   String text float x float y [VARIABLES] List  resourcePool  String  text  boolean  GC  gc  float  fm  x  y  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^Path path = setClip ( shape ) ;^389^^^^^388^394^Path path = toSwtPath ( shape ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^Path path = toSwtPath ( s ) ;Path path = toSwtPath ( shape ) ;^389^^^^^388^394^Path path = toSwtPath ( shape ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^Path clipPath = toSwtPath ( clip ) ;Path path = toSwtPath ( shape ) ;^389^^^^^388^394^Path path = toSwtPath ( shape ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^389^390^^^^388^394^Path path = toSwtPath ( shape ) ; switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^disposeResourcePool (  ) ;^390^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^390^391^^^^388^394^switchColors (  ) ; this.gc.fillPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^path.close (  ) ;switchColors (  ) ;^390^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^this.switchColors (  ) ;switchColors (  ) ;^390^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;switchColors (  ) ;^390^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^this.gc.drawPath ( path ) ;^391^^^^^388^394^this.gc.fillPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^391^^^^^388^394^this.gc.fillPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^gc.drawPath ( path ) ;this.gc.fillPath ( path ) ;^391^^^^^388^394^this.gc.fillPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;this.gc.fillPath ( path ) ;^391^^^^^388^394^this.gc.fillPath ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^disposeResourcePool (  ) ;^392^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^392^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^path.close (  ) ;switchColors (  ) ;^392^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^this.switchColors (  ) ;switchColors (  ) ;^392^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;switchColors (  ) ;^392^^^^^388^394^switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^path.close (  ) ;path.dispose (  ) ;^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^pit.next (  ) ;path.dispose (  ) ;^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;path.dispose (  ) ;^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;path.dispose (  ) ;^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;path.dispose (  ) ;^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;path.dispose (  ) ;^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;path.dispose (  ) ;^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;path.dispose (  ) ;^393^^^^^388^394^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fill [RETURN_TYPE] void   Shape shape [VARIABLES] Path  path  List  resourcePool  Shape  shape  boolean  GC  gc  Map  colorsPool  fontsPool  
[P3_Replace_Literal]^return true;^401^^^^^399^402^return false;^[CLASS] SWTGraphics2D  [METHOD] hit [RETURN_TYPE] boolean   Rectangle rect Shape text boolean onStroke [VARIABLES] Rectangle  rect  List  resourcePool  Shape  text  boolean  onStroke  GC  gc  Map  colorsPool  fontsPool  
[P8_Replace_Mix]^return this;^409^^^^^407^410^return null;^[CLASS] SWTGraphics2D  [METHOD] getDeviceConfiguration [RETURN_TYPE] GraphicsConfiguration   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  
[P2_Replace_Operator]^if  ( paint  ==  Color )  {^424^^^^^423^430^if  ( paint instanceof Color )  {^[CLASS] SWTGraphics2D  [METHOD] setPaint [RETURN_TYPE] void   Paint paint [VARIABLES] List  resourcePool  Paint  paint  boolean  GC  gc  Map  colorsPool  fontsPool  
[P15_Unwrap_Block]^setColor(((java.awt.Color) (paint)));^424^425^426^^^423^430^if  ( paint instanceof Color )  { setColor (  ( Color )  paint ) ; }^[CLASS] SWTGraphics2D  [METHOD] setPaint [RETURN_TYPE] void   Paint paint [VARIABLES] List  resourcePool  Paint  paint  boolean  GC  gc  Map  colorsPool  fontsPool  
[P16_Remove_Block]^^424^425^426^^^423^430^if  ( paint instanceof Color )  { setColor (  ( Color )  paint ) ; }^[CLASS] SWTGraphics2D  [METHOD] setPaint [RETURN_TYPE] void   Paint paint [VARIABLES] List  resourcePool  Paint  paint  boolean  GC  gc  Map  colorsPool  fontsPool  
[P4_Replace_Constructor]^throw throw  new RuntimeException ( "Can only handle 'Basic Stroke' at present." )   ;^428^^^^^423^430^throw new RuntimeException  (" ")  ;^[CLASS] SWTGraphics2D  [METHOD] setPaint [RETURN_TYPE] void   Paint paint [VARIABLES] List  resourcePool  Paint  paint  boolean  GC  gc  Map  colorsPool  fontsPool  
[P7_Replace_Invocation]^setBackground (  ( Color )  paint ) ;^425^^^^^423^430^setColor (  ( Color )  paint ) ;^[CLASS] SWTGraphics2D  [METHOD] setPaint [RETURN_TYPE] void   Paint paint [VARIABLES] List  resourcePool  Paint  paint  boolean  GC  gc  Map  colorsPool  fontsPool  
[P14_Delete_Statement]^^425^^^^^423^430^setColor (  ( Color )  paint ) ;^[CLASS] SWTGraphics2D  [METHOD] setPaint [RETURN_TYPE] void   Paint paint [VARIABLES] List  resourcePool  Paint  paint  boolean  GC  gc  Map  colorsPool  fontsPool  
[P2_Replace_Operator]^if  ( stroke  >=  BasicStroke )  {^436^^^^^421^451^if  ( stroke instanceof BasicStroke )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P6_Replace_Expression]^if  ( dashes != null )  {^436^^^^^421^451^if  ( stroke instanceof BasicStroke )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P6_Replace_Expression]^if  ( i < swtDashes.length )  {^436^^^^^421^451^if  ( stroke instanceof BasicStroke )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P3_Replace_Literal]^throw new RuntimeException ( "Stroke' at pan only handle 'Basic Stroke' at present." ) ;^481^482^^^^466^496^throw new RuntimeException ( "Can only handle 'Basic Stroke' at present." ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P4_Replace_Constructor]^throw throw  new RuntimeException ( "Can only handle 'Color' at present." )  ;^481^482^^^^466^496^throw new RuntimeException ( "Can only handle 'Basic Stroke' at present." ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P3_Replace_Literal]^throw new RuntimeException ( "Can only handl" ) ;^481^482^^^^466^496^throw new RuntimeException ( "Can only handle 'Basic Stroke' at present." ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P8_Replace_Mix]^throw new RuntimeException  (" ")  ; ;^481^482^^^^466^496^throw new RuntimeException ( "Can only handle 'Basic Stroke' at present." ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P2_Replace_Operator]^if  ( dashes == null )  {^472^^^^^457^487^if  ( dashes != null )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P6_Replace_Expression]^if  ( i < swtDashes.length )  {^472^^^^^457^487^if  ( dashes != null )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P8_Replace_Mix]^if  ( dashes != this )  {^472^^^^^457^487^if  ( dashes != null )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P9_Replace_Statement]^if  ( swtColor == null )  {^472^^^^^457^487^if  ( dashes != null )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P9_Replace_Statement]^if  ( swtFont == null )  {^472^^^^^457^487^if  ( dashes != null )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P15_Unwrap_Block]^int[] swtDashes = new int[dashes.length]; for (int i = 0; i < (swtDashes.length); i++) {    swtDashes[i] = ((int) (dashes[i]));}; gc.setLineDash(swtDashes);^472^473^474^475^476^457^487^if  ( dashes != null )  { int[] swtDashes = new int[dashes.length]; for  ( int i = 0; i < swtDashes.length; i++ )  { swtDashes[i] =  ( int )  dashes[i]; }^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P16_Remove_Block]^^472^473^474^475^476^457^487^if  ( dashes != null )  { int[] swtDashes = new int[dashes.length]; for  ( int i = 0; i < swtDashes.length; i++ )  { swtDashes[i] =  ( int )  dashes[i]; }^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P1_Replace_Type]^for  (  short  i = 0; i < swtDashes.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P2_Replace_Operator]^for  ( int i = 0; i <= swtDashes.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P3_Replace_Literal]^for  ( int i = i; i < swtDashes.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P5_Replace_Variable]^for  ( swtDashesnt i = 0; i < i.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P5_Replace_Variable]^for  ( swtDashes.lengthnt i = 0; i < i; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P1_Replace_Type]^swtDashes[i] =  (  long  )  dashes[i];^475^^^^^460^490^swtDashes[i] =  ( int )  dashes[i];^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P8_Replace_Mix]^swtDashes[i] =  (  short  )  dashes[i];^475^^^^^460^490^swtDashes[i] =  ( int )  dashes[i];^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P5_Replace_Variable]^swtDashes[i] =  ( dashesnt )  i[i];^475^^^^^460^490^swtDashes[i] =  ( int )  dashes[i];^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P1_Replace_Type]^for  (  long  i = 0; i < swtDashes.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.setLineWidth ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.getLineJoin (  )  ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setLineDash ( swtDashes ) ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^float[] dashes = bs .getEndCap (  )  ;^471^^^^^456^486^float[] dashes = bs.getDashArray (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.setLineDash (  ( int )  bs.getLineWidth (  )  ) ;^439^^^^^424^454^gc.setLineWidth (  ( int )  bs.getLineWidth (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^439^^^^^424^454^gc.setLineWidth (  ( int )  bs.getLineWidth (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P1_Replace_Type]^gc.setLineWidth (  (  short  )  bs.getLineWidth (  )  ) ;^439^^^^^424^454^gc.setLineWidth (  ( int )  bs.getLineWidth (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P8_Replace_Mix]^switch  ( bs .getLineWidth (  )   )  {^442^^^^^427^457^switch  ( bs.getLineJoin (  )  )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^442^443^444^^^427^457^switch  ( bs.getLineJoin (  )  )  { case BasicStroke.JOIN_BEVEL : gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.getLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^444^445^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ; break;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.getLineJoin (  )  ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.getLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^447^448^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ; break;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.getLineJoin (  )  ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setLineJoin ( SWT.JOIN_MITER ) ;^447^^^^^432^462^gc.setLineJoin ( SWT.JOIN_MITER ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.getLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P8_Replace_Mix]^gc .getLineJoin (  )  ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^450^451^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ; break;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.getLineJoin (  )  ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setLineJoin ( SWT.JOIN_ROUND ) ;^450^^^^^435^465^gc.setLineJoin ( SWT.JOIN_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P8_Replace_Mix]^switch  ( bs .getLineJoin (  )   )  {^455^^^^^440^470^switch  ( bs.getEndCap (  )  )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^455^456^457^^^440^470^switch  ( bs.getEndCap (  )  )  { case BasicStroke.CAP_BUTT : gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.getLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc .getLineCap (  )  ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^457^458^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ; break;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setLineCap ( SWT.CAP_FLAT ) ;^457^^^^^442^472^gc.setLineCap ( SWT.CAP_FLAT ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.getLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setLineCap ( SWT.CAP_ROUND ) ;^460^^^^^445^475^gc.setLineCap ( SWT.CAP_ROUND ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.getLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc .getLineCap (  )  ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^463^464^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ; break;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setLineCap ( SWT.CAP_SQUARE ) ;^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.setLineJoin ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setLineStyle ( SWT.LINE_SOLID ) ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^471^^^^^456^486^float[] dashes = bs.getDashArray (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P3_Replace_Literal]^for  ( int i = 6; i < swtDashes.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P5_Replace_Variable]^for  ( int i = 0; i < swtDashes.length.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc .setLineCap (  )  ;^477^^^^^462^492^gc.setLineDash ( swtDashes ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P3_Replace_Literal]^for  ( int i = -8; i < swtDashes.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P3_Replace_Literal]^throw new RuntimeException ( "Can" ) ;^481^482^^^^466^496^throw new RuntimeException ( "Can only handle 'Basic Stroke' at present." ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P3_Replace_Literal]^for  ( int i = 8; i < swtDashes.length; i++ )  {^474^^^^^459^489^for  ( int i = 0; i < swtDashes.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P3_Replace_Literal]^throw new RuntimeException ( " an only handle 'Basic Stroke' at present." ) ;^481^482^^^^466^496^throw new RuntimeException ( "Can only handle 'Basic Stroke' at present." ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc.setLineWidth (  ( int )  bs .getLineJoin (  )   ) ;^439^^^^^424^454^gc.setLineWidth (  ( int )  bs.getLineWidth (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P1_Replace_Type]^gc.setLineWidth (  (  long  )  bs.getLineWidth (  )  ) ;^439^^^^^424^454^gc.setLineWidth (  ( int )  bs.getLineWidth (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P8_Replace_Mix]^gc .getLineJoin (  )  ;^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^444^^^^^429^459^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P14_Delete_Statement]^^463^^^^^448^478^gc.setLineCap ( SWT.CAP_SQUARE ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P7_Replace_Invocation]^gc .setLineWidth ( i )  ;^468^^^^^453^483^gc.setLineStyle ( SWT.LINE_SOLID ) ;^[CLASS] SWTGraphics2D  [METHOD] setStroke [RETURN_TYPE] void   Stroke stroke [VARIABLES] BasicStroke  bs  Stroke  stroke  boolean  List  resourcePool  int[]  swtDashes  GC  gc  Map  colorsPool  fontsPool  int  i  float[]  dashes  
[P8_Replace_Mix]^return true;^500^^^^^498^501^return null;^[CLASS] SWTGraphics2D  [METHOD] getRenderingHint [RETURN_TYPE] Object   Key hintKey [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  Key  hintKey  
[P8_Replace_Mix]^return true;^524^^^^^522^525^return null;^[CLASS] SWTGraphics2D  [METHOD] getRenderingHints [RETURN_TYPE] RenderingHints   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc.getLineCap (  )  ) ;^531^^^^^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc .getFontMetrics (  )   ) ;^531^^^^^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = new AffineTransform ( elements ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^531^^^^^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^531^^^^^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^Path path = new Path ( this.gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^531^^^^^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^Transform t = new Transform ( gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^531^^^^^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^531^^^^^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P14_Delete_Statement]^^531^532^533^534^535^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ; gc.getTransform ( swtTransform ) ; swtTransform.translate ( x, y ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^531^^^^^530^536^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P7_Replace_Invocation]^gc.setTransform ( swtTransform ) ;^532^^^^^530^536^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P14_Delete_Statement]^^532^533^534^535^536^530^536^gc.getTransform ( swtTransform ) ; swtTransform.translate ( x, y ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.getTransform ( swtTransform ) ;^532^^^^^530^536^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.getTransform ( swtTransform ) ;^532^^^^^530^536^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.getTransform ( swtTransform ) ;^532^^^^^530^536^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.getTransform ( swtTransform ) ;^532^^^^^530^536^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.getTransform ( swtTransform ) ;^532^^^^^530^536^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.getTransform ( swtTransform ) ;^532^^^^^530^536^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P5_Replace_Variable]^swtTransform.translate ( x, x ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P5_Replace_Variable]^swtTransform.translate (  y ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P5_Replace_Variable]^swtTransform.translate ( x ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P5_Replace_Variable]^swtTransform.translate ( y, x ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P8_Replace_Mix]^swtTransform .translate ( y , y )  ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P14_Delete_Statement]^^533^534^535^536^^530^536^swtTransform.translate ( x, y ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;swtTransform.translate ( x, y ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.translate ( x, y ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;swtTransform.translate ( x, y ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.translate ( x, y ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.translate ( x, y ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.translate ( x, y ) ;^533^^^^^530^536^swtTransform.translate ( x, y ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P7_Replace_Invocation]^gc.getTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P14_Delete_Statement]^^534^535^536^^^530^536^gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setTransform ( swtTransform ) ;^534^^^^^530^536^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P7_Replace_Invocation]^swtTransform.rotate (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P14_Delete_Statement]^^535^536^^^^530^536^swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;swtTransform.dispose (  ) ;^535^^^^^530^536^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   int x int y [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  int  x  y  
[P14_Delete_Statement]^^542^^^^^541^543^translate (  ( int )  tx,  ( int )  ty ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   double tx double ty [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  double  tx  ty  
[P11_Insert_Donor_Statement]^swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ;translate (  ( int )  tx,  ( int )  ty ) ;^542^^^^^541^543^translate (  ( int )  tx,  ( int )  ty ) ;^[CLASS] SWTGraphics2D  [METHOD] translate [RETURN_TYPE] void   double tx double ty [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  double  tx  ty  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc.getLineCap (  )  ) ;^549^^^^^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = new AffineTransform ( elements ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^549^^^^^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^549^^^^^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^Path path = new Path ( this.gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^549^^^^^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^Transform t = new Transform ( gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^549^^^^^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^549^^^^^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc .getFontMetrics (  )   ) ;^549^^^^^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P14_Delete_Statement]^^549^550^551^552^553^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ; gc.getTransform ( swtTransform ) ; swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^549^^^^^548^554^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P7_Replace_Invocation]^gc.setTransform ( swtTransform ) ;^550^^^^^548^554^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P14_Delete_Statement]^^550^551^552^553^554^548^554^gc.getTransform ( swtTransform ) ; swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.getTransform ( swtTransform ) ;^550^^^^^548^554^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.getTransform ( swtTransform ) ;^550^^^^^548^554^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.getTransform ( swtTransform ) ;^550^^^^^548^554^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.getTransform ( swtTransform ) ;^550^^^^^548^554^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.getTransform ( swtTransform ) ;^550^^^^^548^554^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.getTransform ( swtTransform ) ;^550^^^^^548^554^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P2_Replace_Operator]^swtTransform.rotate (   ( float )   ( theta * 180 + Math.PI )  ) ;^551^^^^^548^554^swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P2_Replace_Operator]^swtTransform.rotate (   ( float )   ( theta + 180 / Math.PI )  ) ;^551^^^^^548^554^swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P3_Replace_Literal]^swtTransform.rotate (   ( float )   ( theta * 188 / Math.PI )  ) ;^551^^^^^548^554^swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P14_Delete_Statement]^^551^552^553^554^^548^554^swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ;swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ;^551^^^^^548^554^swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P7_Replace_Invocation]^gc.getTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P14_Delete_Statement]^^552^553^554^^^548^554^gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setTransform ( swtTransform ) ;^552^^^^^548^554^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P7_Replace_Invocation]^swtTransform.rotate (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P14_Delete_Statement]^^553^554^^^^548^554^swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;swtTransform.dispose (  ) ;^553^^^^^548^554^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] rotate [RETURN_TYPE] void   double theta [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  theta  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc.getLineCap (  )  ) ;^568^^^^^567^573^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = new AffineTransform ( elements ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^568^^^^^567^573^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^568^^^^^567^573^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^Path path = new Path ( this.gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^568^^^^^567^573^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^Transform t = new Transform ( gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^568^^^^^567^573^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^568^^^^^567^573^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P14_Delete_Statement]^^568^569^570^571^572^567^573^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ; gc.getTransform ( swtTransform ) ; swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^568^^^^^567^573^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P7_Replace_Invocation]^gc.setTransform ( swtTransform ) ;^569^^^^^567^573^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P14_Delete_Statement]^^569^570^571^572^573^567^573^gc.getTransform ( swtTransform ) ; swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.getTransform ( swtTransform ) ;^569^^^^^567^573^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.getTransform ( swtTransform ) ;^569^^^^^567^573^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.getTransform ( swtTransform ) ;^569^^^^^567^573^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.getTransform ( swtTransform ) ;^569^^^^^567^573^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.getTransform ( swtTransform ) ;^569^^^^^567^573^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.getTransform ( swtTransform ) ;^569^^^^^567^573^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P14_Delete_Statement]^^570^571^572^573^^567^573^swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^swtTransform.rotate (   ( float )   ( theta * 180 / Math.PI )  ) ;swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ;^570^^^^^567^573^swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^translate (  ( int )  tx,  ( int )  ty ) ;swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ;^570^^^^^567^573^swtTransform.scale (  ( float )  scaleX,  ( float )  scaleY ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P7_Replace_Invocation]^gc.getTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P14_Delete_Statement]^^571^572^573^^^567^573^gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setTransform ( swtTransform ) ;^571^^^^^567^573^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P7_Replace_Invocation]^swtTransform.rotate (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P14_Delete_Statement]^^572^573^^^^567^573^swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;swtTransform.dispose (  ) ;^572^^^^^567^573^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] scale [RETURN_TYPE] void   double scaleX double scaleY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  double  scaleX  scaleY  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc.getLineCap (  )  ) ;^579^^^^^578^586^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc .getFontMetrics (  )   ) ;^579^^^^^578^586^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = new AffineTransform ( elements ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^579^^^^^578^586^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^579^^^^^578^586^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^Path path = new Path ( this.gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^579^^^^^578^586^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^Transform t = new Transform ( gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^579^^^^^578^586^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^579^^^^^578^586^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^579^^^^^578^586^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P5_Replace_Variable]^gc.getTransform ( shear ) ;^580^^^^^578^586^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^gc.setTransform ( swtTransform ) ;^580^^^^^578^586^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.getTransform ( swtTransform ) ;^580^^^^^578^586^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.getTransform ( swtTransform ) ;^580^^^^^578^586^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.getTransform ( swtTransform ) ;^580^^^^^578^586^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.getTransform ( swtTransform ) ;^580^^^^^578^586^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.getTransform ( swtTransform ) ;^580^^^^^578^586^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.getTransform ( swtTransform ) ;^580^^^^^578^586^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P3_Replace_Literal]^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, -8, -8 ) ;^581^582^^^^578^586^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P3_Replace_Literal]^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 8, 8 ) ;^581^582^^^^578^586^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^Transform shear = new Transform ( gc.getLineCap (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ;^581^582^^^^578^586^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^Transform shear = new Transform ( gc .getFontMetrics (  )  , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ;^581^582^^^^578^586^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P3_Replace_Literal]^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, -5, -5 ) ;^581^582^^^^578^586^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P3_Replace_Literal]^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, -7, -7 ) ;^581^582^^^^578^586^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P14_Delete_Statement]^^581^582^583^584^585^578^586^Transform shear = new Transform ( gc.getDevice (  ) , 1f,  ( float )  shearX, ( float )  shearY, 1f, 0, 0 ) ; swtTransform.multiply ( shear ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^swtTransform.translate ( shear ) ;^583^^^^^578^586^swtTransform.multiply ( shear ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P14_Delete_Statement]^^583^584^585^586^^578^586^swtTransform.multiply ( shear ) ; gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;swtTransform.multiply ( shear ) ;^583^^^^^578^586^swtTransform.multiply ( shear ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.multiply ( shear ) ;^583^^^^^578^586^swtTransform.multiply ( shear ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.multiply ( shear ) ;^583^^^^^578^586^swtTransform.multiply ( shear ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.multiply ( shear ) ;^583^^^^^578^586^swtTransform.multiply ( shear ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.multiply ( shear ) ;^583^^^^^578^586^swtTransform.multiply ( shear ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P5_Replace_Variable]^gc.setTransform ( shear ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^gc.getTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P14_Delete_Statement]^^584^585^586^^^578^586^gc.setTransform ( swtTransform ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setTransform ( swtTransform ) ;^584^^^^^578^586^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^swtTransform.rotate (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^swtTransform .dispose (  )  ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P14_Delete_Statement]^^585^586^^^^578^586^swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;swtTransform.dispose (  ) ;^585^^^^^578^586^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] shear [RETURN_TYPE] void   double shearX double shearY [VARIABLES] List  resourcePool  boolean  GC  gc  Transform  shear  swtTransform  Map  colorsPool  fontsPool  hints  double  shearX  shearY  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc.getLineCap (  )  ) ;^592^^^^^591^599^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P8_Replace_Mix]^Transform swtTransform = new Transform ( gc .getFontMetrics (  )   ) ;^592^^^^^591^599^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = new AffineTransform ( elements ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^592^^^^^591^599^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^592^^^^^591^599^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Path path = new Path ( this.gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^592^^^^^591^599^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform t = new Transform ( gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^592^^^^^591^599^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^592^^^^^591^599^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^592^^^^^591^599^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^gc.getTransform ( swtMatrix ) ;^593^^^^^591^599^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.setTransform ( swtTransform ) ;^593^^^^^591^599^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.getTransform ( swtTransform ) ;^593^^^^^591^599^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.getTransform ( swtTransform ) ;^593^^^^^591^599^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.getTransform ( swtTransform ) ;^593^^^^^591^599^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.getTransform ( swtTransform ) ;^593^^^^^591^599^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.getTransform ( swtTransform ) ;^593^^^^^591^599^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.getTransform ( swtTransform ) ;^593^^^^^591^599^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^Transform swtMatrix = setTransform ( Tx ) ;^594^^^^^591^599^Transform swtMatrix = toSwtTransform ( Tx ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = new AffineTransform ( elements ) ;Transform swtMatrix = toSwtTransform ( Tx ) ;^594^^^^^591^599^Transform swtMatrix = toSwtTransform ( Tx ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;Transform swtMatrix = toSwtTransform ( Tx ) ;^594^^^^^591^599^Transform swtMatrix = toSwtTransform ( Tx ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;Transform swtMatrix = toSwtTransform ( Tx ) ;^594^^^^^591^599^Transform swtMatrix = toSwtTransform ( Tx ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^594^595^596^597^598^591^599^Transform swtMatrix = toSwtTransform ( Tx ) ; swtTransform.multiply ( swtMatrix ) ; gc.setTransform ( swtTransform ) ; swtMatrix.dispose (  ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;Transform swtMatrix = toSwtTransform ( Tx ) ;^594^^^^^591^599^Transform swtMatrix = toSwtTransform ( Tx ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^swtTransform.translate ( swtMatrix ) ;^595^^^^^591^599^swtTransform.multiply ( swtMatrix ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^595^596^597^598^599^591^599^swtTransform.multiply ( swtMatrix ) ; gc.setTransform ( swtTransform ) ; swtMatrix.dispose (  ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;swtTransform.multiply ( swtMatrix ) ;^595^^^^^591^599^swtTransform.multiply ( swtMatrix ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.multiply ( swtMatrix ) ;^595^^^^^591^599^swtTransform.multiply ( swtMatrix ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.multiply ( swtMatrix ) ;^595^^^^^591^599^swtTransform.multiply ( swtMatrix ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.multiply ( swtMatrix ) ;^595^^^^^591^599^swtTransform.multiply ( swtMatrix ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.multiply ( swtMatrix ) ;^595^^^^^591^599^swtTransform.multiply ( swtMatrix ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^gc.setTransform ( swtMatrix ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.getTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^596^597^598^599^^591^599^gc.setTransform ( swtTransform ) ; swtMatrix.dispose (  ) ; swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_SQUARE ) ;gc.setTransform ( swtTransform ) ;^596^^^^^591^599^gc.setTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^swtMatrix.rotate (  ) ;^597^^^^^591^599^swtMatrix.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^597^598^^^^591^599^swtMatrix.dispose (  ) ; swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^path.close (  ) ;swtMatrix.dispose (  ) ;^597^^^^^591^599^swtMatrix.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;swtMatrix.dispose (  ) ;^597^^^^^591^599^swtMatrix.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;swtMatrix.dispose (  ) ;^597^^^^^591^599^swtMatrix.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;swtMatrix.dispose (  ) ;^597^^^^^591^599^swtMatrix.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;swtMatrix.dispose (  ) ;^597^^^^^591^599^swtMatrix.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;swtMatrix.dispose (  ) ;^597^^^^^591^599^swtMatrix.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;swtMatrix.dispose (  ) ;^597^^^^^591^599^swtMatrix.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^swtTransform.rotate (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^swtTransform .dispose (  )  ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^598^599^^^^591^599^swtTransform.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;swtTransform.dispose (  ) ;^598^^^^^591^599^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] transform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Transform  swtMatrix  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.getTransform ( toSwtTransform ( Tx )  ) ;^605^^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.setTransform ( setTransform ( Tx )  ) ;^605^^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^605^606^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ; }^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;gc.setTransform ( toSwtTransform ( Tx )  ) ;^605^^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setTransform ( toSwtTransform ( Tx )  ) ;^605^^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;gc.setTransform ( toSwtTransform ( Tx )  ) ;^605^^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setTransform ( toSwtTransform ( Tx )  ) ;^605^^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;gc.setTransform ( toSwtTransform ( Tx )  ) ;^605^^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;gc.setTransform ( toSwtTransform ( Tx )  ) ;^605^^^^^604^606^gc.setTransform ( toSwtTransform ( Tx )  ) ;^[CLASS] SWTGraphics2D  [METHOD] setTransform [RETURN_TYPE] void   AffineTransform Tx [VARIABLES] AffineTransform  Tx  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc.getLineCap (  )  ) ;^612^^^^^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^Transform swtTransform = new Transform ( gc .getFontMetrics (  )   ) ;^612^^^^^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = new AffineTransform ( elements ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^612^^^^^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^612^^^^^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Path path = new Path ( this.gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^612^^^^^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform t = new Transform ( gc.getDevice (  )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^612^^^^^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^612^^^^^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^612^613^614^615^616^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ; gc.getTransform ( swtTransform ) ; AffineTransform awtTransform = toAwtTransform ( swtTransform ) ; swtTransform.dispose (  ) ; return awtTransform; }^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^612^^^^^611^617^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.setTransform ( swtTransform ) ;^613^^^^^611^617^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^613^614^615^616^617^611^617^gc.getTransform ( swtTransform ) ; AffineTransform awtTransform = toAwtTransform ( swtTransform ) ; swtTransform.dispose (  ) ; return awtTransform; }^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.getTransform ( swtTransform ) ;^613^^^^^611^617^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.getTransform ( swtTransform ) ;^613^^^^^611^617^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;gc.getTransform ( swtTransform ) ;^613^^^^^611^617^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.getTransform ( swtTransform ) ;^613^^^^^611^617^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.getTransform ( swtTransform ) ;^613^^^^^611^617^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.getTransform ( swtTransform ) ;^613^^^^^611^617^gc.getTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^AffineTransform awtTransform = addToResourcePool ( swtTransform ) ;^614^^^^^611^617^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^AffineTransform awtTransform = new AffineTransform ( elements ) ;AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^614^^^^^611^617^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform swtMatrix = toSwtTransform ( Tx ) ;AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^614^^^^^611^617^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Transform swtTransform = new Transform ( gc.getDevice (  )  ) ;AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^614^^^^^611^617^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^614^615^616^617^^611^617^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ; swtTransform.dispose (  ) ; return awtTransform; }^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setTransform ( toSwtTransform ( Tx )  ) ;AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^614^^^^^611^617^AffineTransform awtTransform = toAwtTransform ( swtTransform ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^swtTransform.rotate (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^615^616^617^^^611^617^swtTransform.dispose (  ) ; return awtTransform; }^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.translate ( x, y ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( swtMatrix ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^awtTransform.getMatrix ( matrix ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.multiply ( shear ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;swtTransform.dispose (  ) ;^615^^^^^611^617^swtTransform.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getTransform [RETURN_TYPE] AffineTransform   [VARIABLES] AffineTransform  awtTransform  List  resourcePool  boolean  GC  gc  Transform  swtTransform  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils.toAwtRectangle ( gc.getForeground (  )  ) ;^623^^^^^622^624^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getPaint [RETURN_TYPE] Paint   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils.toAwtColor ( gc.getBackground (  )  ) ;^623^^^^^622^624^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getPaint [RETURN_TYPE] Paint   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^623^^^^^622^624^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getPaint [RETURN_TYPE] Paint   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P8_Replace_Mix]^return false;^631^^^^^629^632^return null;^[CLASS] SWTGraphics2D  [METHOD] getComposite [RETURN_TYPE] Composite   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.getBackground (  ) .getAscent (  ) ;^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^gc.getBackground (  )  .dispose (  )  ;^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^gc.getForeground (  ) .dispose (  ) ;^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P8_Replace_Mix]^gc .setBackground ( color )  .dispose (  ) ;^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P14_Delete_Statement]^^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setBackground ( fg ) ;gc.getBackground (  ) .dispose (  ) ;^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.getBackground (  ) .dispose (  ) ;^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.getBackground (  ) .dispose (  ) ;^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P8_Replace_Mix]^gc .setBackground ( swtColor )  .dispose (  ) ;^638^^^^^637^642^gc.getBackground (  ) .dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  )  ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( color.getDevice (  ) , gc ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toAwtFont ( gc.getDevice (  ) , color ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getLineCap (  ) , color ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P8_Replace_Mix]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc .getFontMetrics (  )  , color ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , swtColor ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Color swtColor = SWTUtils .toAwtColor (  )  ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P14_Delete_Statement]^^639^640^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ; gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , awtColor ) ;org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^639^^^^^637^642^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P5_Replace_Variable]^gc.setBackground ( color ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^gc.setForeground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P8_Replace_Mix]^gc.setForeground ( color ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P14_Delete_Statement]^^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setBackground ( fg ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setClipping ( clip ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.getBackground (  ) .dispose (  ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setForeground ( bg ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setBackground ( swtColor ) ;^640^^^^^637^642^gc.setBackground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P14_Delete_Statement]^^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^path.close (  ) ;swtColor.dispose (  ) ;^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;swtColor.dispose (  ) ;^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;swtColor.dispose (  ) ;^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;swtColor.dispose (  ) ;^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;swtColor.dispose (  ) ;^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^switchColors (  ) ;swtColor.dispose (  ) ;^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;swtColor.dispose (  ) ;^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;swtColor.dispose (  ) ;^641^^^^^637^642^swtColor.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setBackground [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^return SWTUtils.toAwtRectangle ( gc.getBackground (  )  ) ;^648^^^^^647^649^return SWTUtils.toAwtColor ( gc.getBackground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getBackground [RETURN_TYPE] Color   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;^648^^^^^647^649^return SWTUtils.toAwtColor ( gc.getBackground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getBackground [RETURN_TYPE] Color   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^648^^^^^647^649^return SWTUtils.toAwtColor ( gc.getBackground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getBackground [RETURN_TYPE] Color   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return new BasicStroke ( gc.getLineCap (  ) , gc.getLineCap (  ) , gc.getLineJoin (  )  ) ;^655^656^^^^654^657^return new BasicStroke ( gc.getLineWidth (  ) , gc.getLineCap (  ) , gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return new BasicStroke ( gc.getLineWidth (  ) , gc.setLineCap (  ) , gc.getLineJoin (  )  ) ;^655^656^^^^654^657^return new BasicStroke ( gc.getLineWidth (  ) , gc.getLineCap (  ) , gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return new BasicStroke ( gc.getLineWidth (  ) , gc.getLineCap (  ) , gc.setLineJoin (  )  ) ;^655^656^^^^654^657^return new BasicStroke ( gc.getLineWidth (  ) , gc.getLineCap (  ) , gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return new BasicStroke ( gc.getLineWidth (  ) , gc.getLineCap (  ) , gc .getLineWidth (  )   ) ;^655^656^^^^654^657^return new BasicStroke ( gc.getLineWidth (  ) , gc.getLineCap (  ) , gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P8_Replace_Mix]^return new BasicStroke ( gc .getLineJoin (  )  , gc.getLineCap (  ) , gc.getLineJoin (  )  ) ;^655^656^^^^654^657^return new BasicStroke ( gc.getLineWidth (  ) , gc.getLineCap (  ) , gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^655^656^^^^654^657^return new BasicStroke ( gc.getLineWidth (  ) , gc.getLineCap (  ) , gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.setLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc .getLineWidth (  )   ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setBackground ( fg ) ;gc.getLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.getLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setClipping ( clip ) ;gc.getLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.getLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;gc.getLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.getLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setForeground ( bg ) ;gc.getLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.getLineJoin (  )  ) ;^656^^^^^654^657^gc.getLineJoin (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getStroke [RETURN_TYPE] Stroke   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P3_Replace_Literal]^= new FontRenderContext ( new AffineTransform (  ) , false, false ) ;^664^^^^^662^666^= new FontRenderContext ( new AffineTransform (  ) , true, true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFontRenderContext [RETURN_TYPE] FontRenderContext   [VARIABLES] List  resourcePool  FontRenderContext  fontRenderContext  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P4_Replace_Constructor]^= =  FontRenderContext (  new AffineTransform ( elements )  , true, true ) ;^664^^^^^662^666^= new FontRenderContext ( new AffineTransform (  ) , true, true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFontRenderContext [RETURN_TYPE] FontRenderContext   [VARIABLES] List  resourcePool  FontRenderContext  fontRenderContext  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P3_Replace_Literal]^FontRenderContext fontRenderContext = new FontRenderContext ( new AffineTransform (  ) , false, false ) ;^663^664^^^^662^666^FontRenderContext fontRenderContext = new FontRenderContext ( new AffineTransform (  ) , true, true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFontRenderContext [RETURN_TYPE] FontRenderContext   [VARIABLES] List  resourcePool  FontRenderContext  fontRenderContext  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P8_Replace_Mix]^return false;^682^^^^^680^683^return null;^[CLASS] SWTGraphics2D  [METHOD] create [RETURN_TYPE] Graphics   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils.toAwtRectangle ( gc.getForeground (  )  ) ;^689^^^^^688^690^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getColor [RETURN_TYPE] Color   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils.toAwtColor ( gc.getBackground (  )  ) ;^689^^^^^688^690^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getColor [RETURN_TYPE] Color   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^689^^^^^688^690^return SWTUtils.toAwtColor ( gc.getForeground (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getColor [RETURN_TYPE] Color   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Color swtColor = getSwtFontFromPool ( color ) ;^696^^^^^695^698^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( swtColor ) ;^696^^^^^695^698^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P14_Delete_Statement]^^696^697^^^^695^698^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ; gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^696^^^^^695^698^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^696^^^^^695^698^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^696^^^^^695^698^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^696^^^^^695^698^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^696^^^^^695^698^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P5_Replace_Variable]^gc.setForeground ( color ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^gc.setBackground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P14_Delete_Statement]^^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setBackground ( fg ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setClipping ( clip ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.getBackground (  ) .dispose (  ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setForeground ( bg ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^addToResourcePool ( swtColor ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setForeground ( swtColor ) ;^697^^^^^695^698^gc.setForeground ( swtColor ) ;^[CLASS] SWTGraphics2D  [METHOD] setColor [RETURN_TYPE] void   Color color [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Color  color  swtColor  
[P7_Replace_Invocation]^FontData[] fontData = gc.getFont (  ) .getAscent (  ) ;^723^^^^^721^726^FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^FontData[] fontData = gc.getLineCap (  ) .getFontData (  ) ;^723^^^^^721^726^FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^float fm = gc.getFontMetrics (  ) .getAscent (  ) ;FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;^723^^^^^721^726^FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^723^^^^^721^726^FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^SWTUtils.toSwtFontData ( gc.getDevice (  ) , font, true )  ) ;FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;^723^^^^^721^726^FontData[] fontData = gc.getFont (  ) .getFontData (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P3_Replace_Literal]^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[-7], true ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P3_Replace_Literal]^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], false ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^return SWTUtils.toAwtFont ( gc.getDevice (  ) [0], true ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^return SWTUtils.toAwtFont ( fontData.getDevice (  ) , gc[0], true ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils.toAwtFont ( gc.getLineCap (  ) , fontData[0], true ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils.toAwtFont ( gc .getFontMetrics (  )  , fontData[0], true ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P8_Replace_Mix]^return SWTUtils.toAwtFont ( gc.getLineCap (  ) , fontData[0L], true ) ;^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^725^^^^^721^726^return SWTUtils.toAwtFont ( gc.getDevice (  ) , fontData[0], true ) ;^[CLASS] SWTGraphics2D  [METHOD] getFont [RETURN_TYPE] Font   [VARIABLES] FontData[]  fontData  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Font swtFont = getSwtColorFromPool ( font ) ;^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P5_Replace_Variable]^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( swtFont ) ;^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P8_Replace_Mix]^org.eclipse.swt.graphics.Font swtFont = getSwtColorFromPool ( swtFont ) ;^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P14_Delete_Statement]^^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = SWTUtils.toSwtColor ( gc.getDevice (  ) , color ) ;org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^735^^^^^734^737^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P5_Replace_Variable]^gc.setFont ( font ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P7_Replace_Invocation]^gc.setForeground ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P14_Delete_Statement]^^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_ROUND ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setClipping ( clipPath ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setTransform ( swtTransform ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_ROUND ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setLineStyle ( SWT.LINE_SOLID ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^fontsPool.put ( font, swtFont ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_MITER ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^addToResourcePool ( swtFont ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.getTransform ( swtTransform ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setLineJoin ( SWT.JOIN_BEVEL ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P11_Insert_Donor_Statement]^gc.setLineCap ( SWT.CAP_FLAT ) ;gc.setFont ( swtFont ) ;^736^^^^^734^737^gc.setFont ( swtFont ) ;^[CLASS] SWTGraphics2D  [METHOD] setFont [RETURN_TYPE] void   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  swtFont  
[P7_Replace_Invocation]^return SWTUtils.DUMMY_PANEL .getFont (  )  ;^743^^^^^742^744^return SWTUtils.DUMMY_PANEL.getFontMetrics ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getFontMetrics [RETURN_TYPE] FontMetrics   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  
[P14_Delete_Statement]^^743^^^^^742^744^return SWTUtils.DUMMY_PANEL.getFontMetrics ( font ) ;^[CLASS] SWTGraphics2D  [METHOD] getFontMetrics [RETURN_TYPE] FontMetrics   Font font [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  Font  font  
[P7_Replace_Invocation]^Path path = setClip ( s ) ;^750^^^^^749^753^Path path = toSwtPath ( s ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Path path = toSwtPath ( shape ) ;Path path = toSwtPath ( s ) ;^750^^^^^749^753^Path path = toSwtPath ( s ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Path clipPath = toSwtPath ( clip ) ;Path path = toSwtPath ( s ) ;^750^^^^^749^753^Path path = toSwtPath ( s ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^750^751^^^^749^753^Path path = toSwtPath ( s ) ; gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.fillPath ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setBackground ( fg ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.drawPath ( path ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setClipping ( x, y, width, height ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^this.gc.fillPath ( path ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setClipping ( clip ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setLineDash ( swtDashes ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setClipping ( clipPath ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.getLineJoin (  )  ) ;gc.setClipping ( path ) ;^751^^^^^749^753^gc.setClipping ( path ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^path .dispose (  )  ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^path.close (  ) ;path.dispose (  ) ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^pit.next (  ) ;path.dispose (  ) ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^clipPath.dispose (  ) ;path.dispose (  ) ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;path.dispose (  ) ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;path.dispose (  ) ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;path.dispose (  ) ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;path.dispose (  ) ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;path.dispose (  ) ;^752^^^^^749^753^path.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clip [RETURN_TYPE] void   Shape s [VARIABLES] Path  path  List  resourcePool  Shape  s  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Rectangle clip = gc.getLineCap (  ) ;^759^^^^^758^761^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^759^^^^^758^761^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^759^^^^^758^761^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^759^^^^^758^761^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^759^^^^^758^761^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^759^760^^^^758^761^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ; return new Rectangle ( clip.x, clip.y, clip.width, clip.height ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtRectangle ( gc.getClipping (  )  ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^759^^^^^758^761^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^return new Rectangle ( clip.x.y, clip.width, clip.height ) ;^760^^^^^758^761^return new Rectangle ( clip.x, clip.y, clip.width, clip.height ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^return new Rectangle (  clip.y, clip.width, clip.height ) ;^760^^^^^758^761^return new Rectangle ( clip.x, clip.y, clip.width, clip.height ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^return new Rectangle ( clip.x,  clip.width, clip.height ) ;^760^^^^^758^761^return new Rectangle ( clip.x, clip.y, clip.width, clip.height ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^return new Rectangle ( clip.x, clip.y,  clip.height ) ;^760^^^^^758^761^return new Rectangle ( clip.x, clip.y, clip.width, clip.height ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^return new Rectangle ( clip.x, clip.y, clip.width ) ;^760^^^^^758^761^return new Rectangle ( clip.x, clip.y, clip.width, clip.height ) ;^[CLASS] SWTGraphics2D  [METHOD] getClipBounds [RETURN_TYPE] Rectangle   [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^org.eclipse.swt.graphics.Rectangle clip = gc.getLineCap (  ) ;^767^^^^^766^770^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color bg = gc.getBackground (  ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^767^^^^^766^770^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color swtColor = getSwtColorFromPool ( color ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^767^^^^^766^770^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Color fg = gc.getForeground (  ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^767^^^^^766^770^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^org.eclipse.swt.graphics.Font swtFont = getSwtFontFromPool ( font ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^767^^^^^766^770^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P8_Replace_Mix]^org.eclipse.swt.graphics.Rectangle clip = gc .setClipping ( null )  ;^767^^^^^766^770^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P14_Delete_Statement]^^767^768^^^^766^770^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ; clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^return SWTUtils.toAwtRectangle ( gc.getClipping (  )  ) ;org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^767^^^^^766^770^org.eclipse.swt.graphics.Rectangle clip = gc.getClipping (  ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( y, y, width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( x, x, width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( x, y, y, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( x, y, width, y ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects (  y, width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( x,  width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( x, y,  height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( x, y, width ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( y, x, width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( width, y, x, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^clip.intersects ( x, height, width, y ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P14_Delete_Statement]^^768^769^^^^766^770^clip.intersects ( x, y, width, height ) ; gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setClipping ( x, y, width, height ) ;clip.intersects ( x, y, width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.fillRectangle ( x, y, width, height ) ;clip.intersects ( x, y, width, height ) ;^768^^^^^766^770^clip.intersects ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P7_Replace_Invocation]^gc.setFont ( clip ) ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P7_Replace_Invocation]^gc .setClipping ( x , y , height , width )  ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P14_Delete_Statement]^^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setBackground ( fg ) ;gc.setClipping ( clip ) ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setClipping ( x, y, width, height ) ;gc.setClipping ( clip ) ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;gc.setClipping ( clip ) ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setClipping ( clipPath ) ;gc.setClipping ( clip ) ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setForeground ( swtColor ) ;gc.setClipping ( clip ) ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setBackground ( swtColor ) ;gc.setClipping ( clip ) ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.getLineJoin (  )  ) ;gc.setClipping ( clip ) ;^769^^^^^766^770^gc.setClipping ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] clipRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] Rectangle  clip  List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( width, y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( x, x, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( x, y, y, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( x, y, width, y ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping (  y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( x,  width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( x, y,  height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( x, y, width ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( width, y, x, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( x, width, y, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.setClipping ( x, height, width, y ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P7_Replace_Invocation]^gc.drawLine ( x, y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P8_Replace_Mix]^gc.drawLine ( x, y, width, x ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P14_Delete_Statement]^^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setClipping ( clip ) ;gc.setClipping ( x, y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;gc.setClipping ( x, y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setClipping ( clipPath ) ;gc.setClipping ( x, y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^clip.intersects ( x, y, width, height ) ;gc.setClipping ( x, y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.fillRectangle ( x, y, width, height ) ;gc.setClipping ( x, y, width, height ) ;^776^^^^^775^777^gc.setClipping ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P7_Replace_Invocation]^return SWTUtils.toAwtColor ( gc.getClipping (  )  ) ;^783^^^^^782^784^return SWTUtils.toAwtRectangle ( gc.getClipping (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClip [RETURN_TYPE] Shape   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils .toAwtColor (  )  ;^783^^^^^782^784^return SWTUtils.toAwtRectangle ( gc.getClipping (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClip [RETURN_TYPE] Shape   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^return SWTUtils.toAwtRectangle ( gc.getLineCap (  )  ) ;^783^^^^^782^784^return SWTUtils.toAwtRectangle ( gc.getClipping (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClip [RETURN_TYPE] Shape   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^783^^^^^782^784^return SWTUtils.toAwtRectangle ( gc.getClipping (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] getClip [RETURN_TYPE] Shape   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P2_Replace_Operator]^if  ( clip != null ) return;^790^791^^^^789^795^if  ( clip == null ) return;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P8_Replace_Mix]^if  ( clip == true ) return;^790^791^^^^789^795^if  ( clip == null ) return;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P15_Unwrap_Block]^return ;^790^791^792^793^794^789^795^if  ( clip == null ) return; Path clipPath = toSwtPath ( clip ) ; gc.setClipping ( clipPath ) ; clipPath.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P16_Remove_Block]^^790^791^792^793^794^789^795^if  ( clip == null ) return; Path clipPath = toSwtPath ( clip ) ; gc.setClipping ( clipPath ) ; clipPath.dispose (  ) ; }^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^Path clipPath = setClip ( clip ) ;^792^^^^^789^795^Path clipPath = toSwtPath ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Path path = toSwtPath ( shape ) ;Path clipPath = toSwtPath ( clip ) ;^792^^^^^789^795^Path clipPath = toSwtPath ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^Path path = toSwtPath ( s ) ;Path clipPath = toSwtPath ( clip ) ;^792^^^^^789^795^Path clipPath = toSwtPath ( clip ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^792^793^^^^789^795^Path clipPath = toSwtPath ( clip ) ; gc.setClipping ( clipPath ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^gc.fillPath ( clipPath ) ;^793^^^^^789^795^gc.setClipping ( clipPath ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^793^^^^^789^795^gc.setClipping ( clipPath ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.drawPath ( path ) ;gc.setClipping ( clipPath ) ;^793^^^^^789^795^gc.setClipping ( clipPath ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setClipping ( x, y, width, height ) ;gc.setClipping ( clipPath ) ;^793^^^^^789^795^gc.setClipping ( clipPath ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setClipping ( clip ) ;gc.setClipping ( clipPath ) ;^793^^^^^789^795^gc.setClipping ( clipPath ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setClipping ( path ) ;gc.setClipping ( clipPath ) ;^793^^^^^789^795^gc.setClipping ( clipPath ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^gc.setFont ( swtFont ) ;gc.setClipping ( clipPath ) ;^793^^^^^789^795^gc.setClipping ( clipPath ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P7_Replace_Invocation]^clipPath .dispose (  )  ;^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^path.close (  ) ;clipPath.dispose (  ) ;^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^resource.dispose (  ) ;clipPath.dispose (  ) ;^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtTransform.dispose (  ) ;clipPath.dispose (  ) ;^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^path.dispose (  ) ;clipPath.dispose (  ) ;^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtColor.dispose (  ) ;clipPath.dispose (  ) ;^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^swtMatrix.dispose (  ) ;clipPath.dispose (  ) ;^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^im.dispose (  ) ;clipPath.dispose (  ) ;^794^^^^^789^795^clipPath.dispose (  ) ;^[CLASS] SWTGraphics2D  [METHOD] setClip [RETURN_TYPE] void   Shape clip [VARIABLES] Path  clipPath  List  resourcePool  Shape  clip  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P5_Replace_Variable]^gc.drawLine ( y2, y1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x1, x2, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x1, y1, y2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x1, y1, x2, x2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine (  y1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x1,  x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x1, y1,  y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x1, y1, x2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( y1, x1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x1, x2, y1, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x2, y1, x1, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P5_Replace_Variable]^gc.drawLine ( x1, y1, y2, x2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P7_Replace_Invocation]^gc.setClipping ( x1, y1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P8_Replace_Mix]^gc.setClipping ( y2, y1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P14_Delete_Statement]^^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^gc.drawImage ( image, x, y ) ;gc.drawLine ( x1, y1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P11_Insert_Donor_Statement]^gc.drawImage ( im, x, y ) ;gc.drawLine ( x1, y1, x2, y2 ) ;^810^^^^^809^811^gc.drawLine ( x1, y1, x2, y2 ) ;^[CLASS] SWTGraphics2D  [METHOD] drawLine [RETURN_TYPE] void   int x1 int y1 int x2 int y2 [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  x1  x2  y1  y2  
[P7_Replace_Invocation]^this.disposeResourcePool (  ) ;^820^^^^^819^823^this.switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P14_Delete_Statement]^^820^821^^^^819^823^this.switchColors (  ) ; gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^switchColors (  ) ;this.switchColors (  ) ;^820^^^^^819^823^this.switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( y, y, width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( x, x, width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( x, y, x, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( x, y, width, x ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle (  y, width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( x,  width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( x, y,  height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( x, y, width ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( height, y, width, x ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P5_Replace_Variable]^gc.fillRectangle ( y, x, width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P7_Replace_Invocation]^gc.drawLine ( x, y, width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P14_Delete_Statement]^^821^822^^^^819^823^gc.fillRectangle ( x, y, width, height ) ; this.switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^gc.setClipping ( x, y, width, height ) ;gc.fillRectangle ( x, y, width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^clip.intersects ( x, y, width, height ) ;gc.fillRectangle ( x, y, width, height ) ;^821^^^^^819^823^gc.fillRectangle ( x, y, width, height ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P7_Replace_Invocation]^this.disposeResourcePool (  ) ;^822^^^^^819^823^this.switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P14_Delete_Statement]^^822^^^^^819^823^this.switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P11_Insert_Donor_Statement]^switchColors (  ) ;this.switchColors (  ) ;^822^^^^^819^823^this.switchColors (  ) ;^[CLASS] SWTGraphics2D  [METHOD] fillRect [RETURN_TYPE] void   int x int y int width int height [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P3_Replace_Literal]^return true;^916^^^^^913^917^return false;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] boolean   Image image int x int y ImageObserver observer [VARIABLES] boolean  ImageObserver  observer  List  resourcePool  GC  gc  Image  image  Map  colorsPool  fontsPool  hints  int  x  y  
[P3_Replace_Literal]^return true;^926^^^^^923^927^return false;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] boolean   Image image int x int y int width int height ImageObserver observer [VARIABLES] boolean  ImageObserver  observer  List  resourcePool  GC  gc  Image  image  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P3_Replace_Literal]^return true;^936^^^^^933^937^return false;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] boolean   Image image int x int y Color bgcolor ImageObserver observer [VARIABLES] boolean  Color  bgcolor  ImageObserver  observer  List  resourcePool  GC  gc  Image  image  Map  colorsPool  fontsPool  hints  int  x  y  
[P3_Replace_Literal]^return true;^946^^^^^943^947^return false;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] boolean   Image image int x int y int width int height Color bgcolor ImageObserver observer [VARIABLES] boolean  Color  bgcolor  ImageObserver  observer  List  resourcePool  GC  gc  Image  image  Map  colorsPool  fontsPool  hints  int  height  width  x  y  
[P3_Replace_Literal]^return true;^956^^^^^953^957^return false;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] boolean   Image image int dx1 int dy1 int dx2 int dy2 int sx1 int sy1 int sx2 int sy2 ImageObserver observer [VARIABLES] boolean  ImageObserver  observer  List  resourcePool  GC  gc  Image  image  Map  colorsPool  fontsPool  hints  int  dx1  dx2  dy1  dy2  sx1  sx2  sy1  sy2  
[P3_Replace_Literal]^return true;^967^^^^^963^968^return false;^[CLASS] SWTGraphics2D  [METHOD] drawImage [RETURN_TYPE] boolean   Image image int dx1 int dy1 int dx2 int dy2 int sx1 int sy1 int sx2 int sy2 Color bgcolor ImageObserver observer [VARIABLES] boolean  Color  bgcolor  ImageObserver  observer  List  resourcePool  GC  gc  Image  image  Map  colorsPool  fontsPool  hints  int  dx1  dx2  dy1  dy2  sx1  sx2  sy1  sy2  
[P7_Replace_Invocation]^switchColors (  ) ;^975^^^^^973^976^disposeResourcePool (  ) ;^[CLASS] SWTGraphics2D  [METHOD] dispose [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P14_Delete_Statement]^^975^^^^^973^976^disposeResourcePool (  ) ;^[CLASS] SWTGraphics2D  [METHOD] dispose [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^addToResourcePool ( swtFont ) ;disposeResourcePool (  ) ;^975^^^^^973^976^disposeResourcePool (  ) ;^[CLASS] SWTGraphics2D  [METHOD] dispose [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P11_Insert_Donor_Statement]^addToResourcePool ( swtColor ) ;disposeResourcePool (  ) ;^975^^^^^973^976^disposeResourcePool (  ) ;^[CLASS] SWTGraphics2D  [METHOD] dispose [RETURN_TYPE] void   [VARIABLES] List  resourcePool  boolean  GC  gc  Map  colorsPool  fontsPool  hints  
[P2_Replace_Operator]^if  ( bufferedImage.getColorModel (  )   ^  DirectColorModel )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^if  ( bufferedImage.getColorModel (  )   &&  DirectColorModel )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^if  ( y < data.height )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^if  ( x < data.width )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^if  ( bufferedImage.getColorModel() instanceof IndexColorModel )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^if  ( i < rgbs.length )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^if  ( (reds[i] & 255) )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^if  ( (greens[i] & 255) )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^if  ( (blues[i] & 255) )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^if  ( bufferedImage .getRaster (  )   instanceof DirectColorModel )  {^979^^^^^964^994^if  ( bufferedImage.getColorModel (  )  instanceof DirectColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^else if  ( bufferedImage.getColorModel (  )   >=  IndexColorModel )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^else if  ( i < rgbs.length )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^else if  ( (reds[i] & 255) )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^else if  ( (greens[i] & 255) )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^else if  ( (blues[i] & 255) )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^else if  ( y < data.height )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P6_Replace_Expression]^else if  ( x < data.width )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^else if  ( bufferedImage .getRaster (  )   instanceof IndexColorModel )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  short  i = 0; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^for  ( int i = 0; i <= rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int i = -9; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  ||  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  <=  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  >>  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^rgbs[i] = new RGB ( reds[i] & 0xFF[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( blues[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( reds[i] & 0xFF, reds[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, greens[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( greens[i] & 0xFF, reds[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  >  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  !=  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  <  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( greens[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( blues[i] & 0xFF, greens[i] & 0xFF, reds[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  short  y = 0; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^for  ( int y = 0; y == data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = ; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = size; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = -8; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  short  x = 0; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^for  ( int x = 0; x <= data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = -9; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x, size, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel (  y, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x,  pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x, y ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( y, x, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x, pixelArray, y ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^raster .getPixel ( x , y , pixelArray )  ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1023^1024^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ; data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^data.setPixel ( x, y, pixelArray[0] ) ;raster.getPixel ( x, y, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^data.setPixel ( x, y, pixel ) ;raster.getPixel ( x, y, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[5] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( y, y, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x, size, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel (  y, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x,  pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x, y[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( y, x, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( pixelArray, y, x[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^data.setPixel ( size, y, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^data.setPixel ( x, y, pixel ) ;data.setPixel ( x, y, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^raster.getPixel ( x, y, pixelArray ) ;data.setPixel ( x, y, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = -2; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( y, y, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[-6] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = -3; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = -5; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( size, y, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x, x, pixelArray ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( reds[i] & 0xFF, blues[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, reds[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^rgbs[i] = new RGB ( reds[i] & 0xFF, blues[i] & 0xFF, greens[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^data.transparentPixel = colorModel.getReds (  ) ;^1018^^^^^1003^1033^data.transparentPixel = colorModel.getTransparentPixel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^data.transparentPixel =  null.getTransparentPixel (  ) ;^1018^^^^^1003^1033^data.transparentPixel = colorModel.getTransparentPixel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  |  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  ^  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) .getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) .getPixelSize (  ) , palette ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  )  ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^ImageData data = new ImageData ( colorModel.getWidth (  ) , bufferedImage.getHeight (  ) , bufferedImage.getPixelSize (  ) , palette ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^ImageData data = new ImageData ( palette.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , bufferedImage ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^ImageData data = new ImageData ( bufferedImage .getHeight (  )  , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage .getWidth (  )  , colorModel.getPixelSize (  ) , palette ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^DirectColorModel colorModel =  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;IndexColorModel colorModel =  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;^1000^1001^^^^985^1015^IndexColorModel colorModel =  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^long  size = colorModel.getMapSize (  ) ;^1002^^^^^987^1017^int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int size = colorModel.getReds (  ) ;^1002^^^^^987^1017^int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] greens = new byte[size];byte[] reds = new byte[size];^1003^^^^^988^1018^byte[] reds = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^RGB[] rgbs = new RGB[size];byte[] reds = new byte[size];^1003^^^^^988^1018^byte[] reds = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] blues = new byte[size];byte[] reds = new byte[size];^1003^^^^^988^1018^byte[] reds = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^RGB[] rgbs = new RGB[size];byte[] greens = new byte[size];^1004^^^^^989^1019^byte[] greens = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] blues = new byte[size];byte[] greens = new byte[size];^1004^^^^^989^1019^byte[] greens = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] reds = new byte[size];byte[] greens = new byte[size];^1004^^^^^989^1019^byte[] greens = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] greens = new byte[size];byte[] blues = new byte[size];^1005^^^^^990^1020^byte[] blues = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^RGB[] rgbs = new RGB[size];byte[] blues = new byte[size];^1005^^^^^990^1020^byte[] blues = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] reds = new byte[size];byte[] blues = new byte[size];^1005^^^^^990^1020^byte[] blues = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] greens = new byte[size];RGB[] rgbs = new RGB[size];^1009^^^^^994^1024^RGB[] rgbs = new RGB[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] blues = new byte[size];RGB[] rgbs = new RGB[size];^1009^^^^^994^1024^RGB[] rgbs = new RGB[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^byte[] reds = new byte[size];RGB[] rgbs = new RGB[size];^1009^^^^^994^1024^RGB[] rgbs = new RGB[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int i = i; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int[] pixelArray = new int[size];^1020^^^^^1005^1035^int[] pixelArray = new int[1];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^int[] pixelArray = new int[3];int[] pixelArray = new int[1];^1020^^^^^1005^1035^int[] pixelArray = new int[1];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = pixel; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = i; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^=  ( IndexColorModel )  bufferedImage .getRaster (  )  ;^1001^^^^^986^1016^=  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1001^^^^^986^1016^=  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;=  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;^1001^^^^^986^1016^=  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int size = colorModel .getReds ( greens )  ;^1002^^^^^987^1017^int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1002^^^^^987^1017^int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^data.transparentPixel = colorModel.getTransparentPixel (  ) ;int size = colorModel.getMapSize (  ) ;^1002^^^^^987^1017^int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^colorModel.getReds ( greens ) ;^1006^^^^^991^1021^colorModel.getReds ( reds ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1006^^^^^991^1021^colorModel.getReds ( reds ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorsPool.clear (  ) ;colorModel.getReds ( reds ) ;^1006^^^^^991^1021^colorModel.getReds ( reds ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorModel.getGreens ( greens ) ;colorModel.getReds ( reds ) ;^1006^^^^^991^1021^colorModel.getReds ( reds ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorModel.getBlues ( blues ) ;colorModel.getReds ( reds ) ;^1006^^^^^991^1021^colorModel.getReds ( reds ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^colorModel.getGreens ( reds ) ;^1007^^^^^992^1022^colorModel.getGreens ( greens ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^colorModel .getReds ( reds )  ;^1007^^^^^992^1022^colorModel.getGreens ( greens ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1007^^^^^992^1022^colorModel.getGreens ( greens ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorModel.getBlues ( blues ) ;colorModel.getGreens ( greens ) ;^1007^^^^^992^1022^colorModel.getGreens ( greens ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^swtTransform.getElements ( elements ) ;colorModel.getGreens ( greens ) ;^1007^^^^^992^1022^colorModel.getGreens ( greens ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorModel.getReds ( reds ) ;colorModel.getGreens ( greens ) ;^1007^^^^^992^1022^colorModel.getGreens ( greens ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^colorModel.getBlues ( reds ) ;^1008^^^^^993^1023^colorModel.getBlues ( blues ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1008^^^^^993^1023^colorModel.getBlues ( blues ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorModel.getGreens ( greens ) ;colorModel.getBlues ( blues ) ;^1008^^^^^993^1023^colorModel.getBlues ( blues ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorModel.getReds ( reds ) ;colorModel.getBlues ( blues ) ;^1008^^^^^993^1023^colorModel.getBlues ( blues ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1016^1017^^^^1001^1031^bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^1016^1017^^^^1001^1031^bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1018^^^^^1003^1033^data.transparentPixel = colorModel.getTransparentPixel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^int size = colorModel.getMapSize (  ) ;data.transparentPixel = colorModel.getTransparentPixel (  ) ;^1018^^^^^1003^1033^data.transparentPixel = colorModel.getTransparentPixel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1019^1020^^^^1004^1034^WritableRaster raster = bufferedImage.getRaster (  ) ; int[] pixelArray = new int[1];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;WritableRaster raster = bufferedImage.getRaster (  ) ;^1019^^^^^1004^1034^WritableRaster raster = bufferedImage.getRaster (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( pixelArray, y, x ) ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^raster .getPixel ( y , pixel , pixelArray )  ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[i] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  long  i = 0; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int i = -4; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^for  ( int y = 0; y <= data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = i; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = pixel; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[size] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^data.setPixel ( x, x, pixelArray[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = 2; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x, pixelArray, y[0] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  long  x = 0; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = -6; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^raster .getPixel ( pixel , y , pixelArray )  ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[9] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  ==  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  >=  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^short  size = colorModel.getMapSize (  ) ;^1002^^^^^987^1017^int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int i = -6; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , palette.getPixelSize (  ) , colorModel ) ;^1015^1016^1017^^^1000^1030^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int[] pixelArray = new int[-1];^1020^^^^^1005^1035^int[] pixelArray = new int[1];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = 4; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = ; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1001^1002^^^^986^1016^=  ( IndexColorModel )  bufferedImage.getColorModel (  ) ; int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^int size = colorModel .getReds ( reds )  ;^1002^^^^^987^1017^int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^colorModel .getGreens ( greens )  ;^1006^^^^^991^1021^colorModel.getReds ( reds ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^colorModel .getGreens ( greens )  ;^1008^^^^^993^1023^colorModel.getBlues ( blues ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^colorModel .getGreens ( blues )  ;^1008^^^^^993^1023^colorModel.getBlues ( blues ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1008^1009^^^^993^1023^colorModel.getBlues ( blues ) ; RGB[] rgbs = new RGB[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^data.transparentPixel = colorModel .getMapSize (  )  ;^1018^^^^^1003^1033^data.transparentPixel = colorModel.getTransparentPixel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  short  y = 0; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^for  ( int y = 0; y <= data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = pixel; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = y; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = ; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  short  x = 0; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^for  ( int x = 0; x <= data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = x; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = 3; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[x], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[pixel], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[pixel] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^long  pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[y], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[i], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[i] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^int pixel = palette.getPixel ( new RGB ( pixelArray[0][1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^int pixel = pixelArray.getPixel ( new RGB ( palette[0], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( y, y, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x, x, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel (  y, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x,  pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x, y ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( y, x, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( pixelArray, y, x ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^raster.getPixel ( size, y, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^data.setPixel ( x, y, pixelArray[0] ) ;raster.getPixel ( x, y, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^data.setPixel ( x, y, pixel ) ;raster.getPixel ( x, y, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[size], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[4], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( y, y, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x, x, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x, y, y ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel (  y, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x,  pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x, y ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( y, x, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x, pixel, y ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( pixel, y, x ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^data.setPixel ( x, y, x ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^data.setPixel ( x, y, pixelArray[0] ) ;data.setPixel ( x, y, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^raster.getPixel ( x, y, pixelArray ) ;data.setPixel ( x, y, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[-4], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[y], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[-3] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = i; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^short  pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[-6] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x, pixelArray, y ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[-8], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[size] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int pixel = palette .getPixel ( pixel , pixel , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^int pixel = palette .getPixel ( size , i , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = ; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[-9], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[0] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[9], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[2], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[11] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^raster.getPixel ( x, size, pixelArray ) ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[pixel], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[9] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^int pixel = palette .getPixel ( y , size , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( x, size, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^PaletteData palette = new PaletteData ( colorModel.getRedMask (  ) , colorModel .getRedMask (  )  , colorModel.getBlueMask (  )  ) ;^982^983^^^^967^997^PaletteData palette = new PaletteData ( colorModel.getRedMask (  ) , colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^PaletteData palette = new PaletteData ( colorModel .getGreenMask (  )  , colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^982^983^^^^967^997^PaletteData palette = new PaletteData ( colorModel.getRedMask (  ) , colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) .getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) .getPixelSize (  ) , palette ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P4_Replace_Constructor]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  )  ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^ImageData data = new ImageData ( colorModel.getWidth (  ) , bufferedImage.getHeight (  ) , bufferedImage.getPixelSize (  ) , palette ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^ImageData data = new ImageData ( palette.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , bufferedImage ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[-5], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[-7], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[8] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^IndexColorModel colorModel =  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;DirectColorModel colorModel =  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;^980^981^^^^965^995^DirectColorModel colorModel =  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^PaletteData palette = new PaletteData ( colorModel.getRedMask (  ) , colorModel.getGreenMask (  ) , colorModel .getGreenMask (  )   ) ;^982^983^^^^967^997^PaletteData palette = new PaletteData ( colorModel.getRedMask (  ) , colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage .getWidth (  )  , colorModel.getPixelSize (  ) , palette ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^WritableRaster raster = bufferedImage .getWidth (  )  ;^987^^^^^972^1002^WritableRaster raster = bufferedImage.getRaster (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int[] pixelArray = new int[-4];^988^^^^^973^1003^int[] pixelArray = new int[3];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^int[] pixelArray = new int[1];int[] pixelArray = new int[3];^988^^^^^973^1003^int[] pixelArray = new int[3];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = -6; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[-6], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int pixel = palette .getPixel ( size , y , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^int pixel = palette .getPixel ( i , i , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^=  ( DirectColorModel )  bufferedImage .getRaster (  )  ;^981^^^^^966^996^=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^981^^^^^966^996^=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^WritableRaster raster = bufferedImage.getRaster (  ) ;=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;^981^^^^^966^996^=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^=  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;^981^^^^^966^996^=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^982^983^^^^967^997^PaletteData palette = new PaletteData ( colorModel.getRedMask (  ) , colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^983^^^^^968^998^colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^983^^^^^968^998^colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^colorModel.getGreenMask (  ) , colorModel .getGreenMask (  )   ) ;^983^^^^^968^998^colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^ImageData data = new ImageData ( bufferedImage .getHeight (  )  , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^985^986^^^^970^1000^bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^985^986^^^^970^1000^bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^987^988^^^^972^1002^WritableRaster raster = bufferedImage.getRaster (  ) ; int[] pixelArray = new int[3];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P11_Insert_Donor_Statement]^=  ( DirectColorModel )  bufferedImage.getColorModel (  ) ;WritableRaster raster = bufferedImage.getRaster (  ) ;^987^^^^^972^1002^WritableRaster raster = bufferedImage.getRaster (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[7], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[-4] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^else if  ( bufferedImage.getColorModel (  )   <<  IndexColorModel )  {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^else {^999^^^^^984^1014^else if  ( bufferedImage.getColorModel (  )  instanceof IndexColorModel )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int i = -5; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  long  y = 0; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = 8; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = x; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = y; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[-5] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[3] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]  <<  0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^IndexColorModel colorModel =  ( IndexColorModel )  bufferedImage .getRaster (  )  ;^1000^1001^^^^985^1015^IndexColorModel colorModel =  ( IndexColorModel )  bufferedImage.getColorModel (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int i = 7; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int[] pixelArray = new int[-2];^1020^^^^^1005^1035^int[] pixelArray = new int[1];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = 1; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^int size = colorModel .getReds ( blues )  ;^1002^^^^^987^1017^int size = colorModel.getMapSize (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1002^1003^^^^987^1017^int size = colorModel.getMapSize (  ) ; byte[] reds = new byte[size];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1006^1007^^^^991^1021^colorModel.getReds ( reds ) ; colorModel.getGreens ( greens ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1007^1008^^^^992^1022^colorModel.getGreens ( greens ) ; colorModel.getBlues ( blues ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^bufferedImage .getWidth (  )  , colorModel.getPixelSize (  ) , palette ) ;^1016^1017^^^^1001^1031^bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1018^1019^^^^1003^1033^data.transparentPixel = colorModel.getTransparentPixel (  ) ; WritableRaster raster = bufferedImage.getRaster (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^WritableRaster raster = bufferedImage .getWidth (  )  ;^1019^^^^^1004^1034^WritableRaster raster = bufferedImage.getRaster (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[2] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = -8; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = 1; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = pixel; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = size; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[4] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^int pixel = palette .getPixel ( x , pixel , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[i], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int pixel = palette .getPixel ( pixel , x , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[1], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[x], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[10] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^int pixel = palette .getPixel ( i , x , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^raster .getPixel ( pixel , pixel , pixelArray )  ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = -8; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[-2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int pixel = palette .getPixel ( size , size , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^raster .getPixel ( y , i , pixelArray )  ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[3], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[y] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int pixel = palette .getPixel ( pixel , i , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^data.setPixel ( size, y, pixel ) ;^994^^^^^979^1009^data.setPixel ( x, y, pixel ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int i = 8; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = -6; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = -1; y < data.height; y++ )  {^1021^^^^^1006^1036^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = x; x < data.width; x++ )  {^1022^^^^^1007^1037^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[6] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^raster .getPixel ( y , i , pixelArray )  ;^1023^^^^^1008^1038^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[pixel] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P5_Replace_Variable]^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , palette.getPixelSize (  ) , colorModel ) ;^984^985^986^^^969^999^ImageData data = new ImageData ( bufferedImage.getWidth (  ) , bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P2_Replace_Operator]^rgbs[i] = new RGB ( reds[i]   instanceof   0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^1011^1012^^^^996^1026^rgbs[i] = new RGB ( reds[i] & 0xFF, greens[i] & 0xFF, blues[i] & 0xFF ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int[] pixelArray = new int[6];^988^^^^^973^1003^int[] pixelArray = new int[3];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P1_Replace_Type]^for  (  long  y = 0; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int y = size; y < data.height; y++ )  {^989^^^^^974^1004^for  ( int y = 0; y < data.height; y++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int x = -4; x < data.width; x++ )  {^990^^^^^975^1005^for  ( int x = 0; x < data.width; x++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[7], pixelArray[1], pixelArray[2] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[-1] )  ) ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int pixel = palette .getPixel ( y , i , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^for  ( int i = -1; i < rgbs.length; i++ )  {^1010^^^^^995^1025^for  ( int i = 0; i < rgbs.length; i++ )  {^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^int[] pixelArray = new int[10];^1020^^^^^1005^1035^int[] pixelArray = new int[1];^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^colorModel .getRedMask (  )  , colorModel.getBlueMask (  )  ) ;^983^^^^^968^998^colorModel.getGreenMask (  ) , colorModel.getBlueMask (  )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^bufferedImage .getWidth (  )  , colorModel.getPixelSize (  ) , palette ) ;^985^986^^^^970^1000^bufferedImage.getHeight (  ) , colorModel.getPixelSize (  ) , palette ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^raster .getPixel ( x , i , pixelArray )  ;^991^^^^^976^1006^raster.getPixel ( x, y, pixelArray ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P7_Replace_Invocation]^int pixel = palette .getPixel ( y , y , pixelArray )  ;^992^993^^^^977^1007^int pixel = palette.getPixel ( new RGB ( pixelArray[0], pixelArray[1], pixelArray[2] )  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^colorModel .getReds ( blues )  ;^1007^^^^^992^1022^colorModel.getGreens ( greens ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P14_Delete_Statement]^^1019^^^^^1004^1034^WritableRaster raster = bufferedImage.getRaster (  ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P3_Replace_Literal]^data.setPixel ( x, y, pixelArray[4] ) ;^1024^^^^^1009^1039^data.setPixel ( x, y, pixelArray[0] ) ;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
[P8_Replace_Mix]^return false;^1029^^^^^1014^1044^return null;^[CLASS] SWTGraphics2D  [METHOD] convertToSWT [RETURN_TYPE] ImageData   BufferedImage bufferedImage [VARIABLES] int[]  pixelArray  RGB[]  rgbs  BufferedImage  bufferedImage  int  i  pixel  size  x  y  PaletteData  palette  byte[]  blues  greens  reds  boolean  ImageData  data  WritableRaster  raster  DirectColorModel  colorModel  List  resourcePool  GC  gc  Map  colorsPool  fontsPool  hints  IndexColorModel  colorModel  
