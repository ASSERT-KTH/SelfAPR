[P8_Replace_Mix]^public static  TimeZone DEFAULT_TIME_ZONE = TimeZone.getDefault (  ) ;^163^^^^^158^168^public static final TimeZone DEFAULT_TIME_ZONE = TimeZone.getDefault (  ) ;^[CLASS] RegularTimePeriod   [VARIABLES] 
[P5_Replace_Variable]^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] { zone} ) ;^91^92^^^^85^98^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, zone} ) ;^[CLASS] RegularTimePeriod  [METHOD] createInstance [RETURN_TYPE] RegularTimePeriod   Class c Date millisecond TimeZone zone [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  Constructor  constructor  Class  c  RegularTimePeriod  result  Date  millisecond  Exception  e  
[P5_Replace_Variable]^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond} ) ;^91^92^^^^85^98^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, zone} ) ;^[CLASS] RegularTimePeriod  [METHOD] createInstance [RETURN_TYPE] RegularTimePeriod   Class c Date millisecond TimeZone zone [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  Constructor  constructor  Class  c  RegularTimePeriod  result  Date  millisecond  Exception  e  
[P8_Replace_Mix]^result =   ( RegularTimePeriod )  null.newInstance ( new Object[] {millisecond, zone} ) ;^91^92^^^^85^98^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, zone} ) ;^[CLASS] RegularTimePeriod  [METHOD] createInstance [RETURN_TYPE] RegularTimePeriod   Class c Date millisecond TimeZone zone [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  Constructor  constructor  Class  c  RegularTimePeriod  result  Date  millisecond  Exception  e  
[P5_Replace_Variable]^Constructor constructor = c.getDeclaredConstructor ( new Class[] {Date. TimeZone.class} ) ;^89^90^^^^85^98^Constructor constructor = c.getDeclaredConstructor ( new Class[] {Date.class, TimeZone.class} ) ;^[CLASS] RegularTimePeriod  [METHOD] createInstance [RETURN_TYPE] RegularTimePeriod   Class c Date millisecond TimeZone zone [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  Constructor  constructor  Class  c  RegularTimePeriod  result  Date  millisecond  Exception  e  
[P14_Delete_Statement]^^89^90^^^^85^98^Constructor constructor = c.getDeclaredConstructor ( new Class[] {Date.class, TimeZone.class} ) ;^[CLASS] RegularTimePeriod  [METHOD] createInstance [RETURN_TYPE] RegularTimePeriod   Class c Date millisecond TimeZone zone [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  Constructor  constructor  Class  c  RegularTimePeriod  result  Date  millisecond  Exception  e  
[P5_Replace_Variable]^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, DEFAULT_TIME_ZONE} ) ;^91^92^^^^85^98^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, zone} ) ;^[CLASS] RegularTimePeriod  [METHOD] createInstance [RETURN_TYPE] RegularTimePeriod   Class c Date millisecond TimeZone zone [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  Constructor  constructor  Class  c  RegularTimePeriod  result  Date  millisecond  Exception  e  
[P5_Replace_Variable]^result =  ( RegularTimePeriod )  zone.newInstance ( new Object[] {millisecond, constructor} ) ;^91^92^^^^85^98^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, zone} ) ;^[CLASS] RegularTimePeriod  [METHOD] createInstance [RETURN_TYPE] RegularTimePeriod   Class c Date millisecond TimeZone zone [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  Constructor  constructor  Class  c  RegularTimePeriod  result  Date  millisecond  Exception  e  
[P14_Delete_Statement]^^91^92^^^^85^98^result =  ( RegularTimePeriod )  constructor.newInstance ( new Object[] {millisecond, zone} ) ;^[CLASS] RegularTimePeriod  [METHOD] createInstance [RETURN_TYPE] RegularTimePeriod   Class c Date millisecond TimeZone zone [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  Constructor  constructor  Class  c  RegularTimePeriod  result  Date  millisecond  Exception  e  
[P5_Replace_Variable]^if  ( c.equals ( Year.c )  )  {^109^^^^^108^133^if  ( c.equals ( Year.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P15_Unwrap_Block]^return org.jfree.data.time.Quarter.class;^109^110^111^^^108^133^if  ( c.equals ( Year.class )  )  { return Quarter.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P16_Remove_Block]^^109^110^111^^^108^133^if  ( c.equals ( Year.class )  )  { return Quarter.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P5_Replace_Variable]^else if  ( c.equals ( Quarter.c )  )  {^112^^^^^108^133^else if  ( c.equals ( Quarter.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^else {^112^^^^^108^133^else if  ( c.equals ( Quarter.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Second.class )  )  {^112^^^^^108^133^else if  ( c.equals ( Quarter.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Month.class )  )  {^112^^^^^108^133^else if  ( c.equals ( Quarter.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Minute.class )  )  {^112^^^^^108^133^else if  ( c.equals ( Quarter.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Day.class )  )  {^112^^^^^108^133^else if  ( c.equals ( Quarter.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Hour.class )  )  {^112^^^^^108^133^else if  ( c.equals ( Quarter.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P15_Unwrap_Block]^return org.jfree.data.time.Month.class;^112^113^114^^^108^133^else if  ( c.equals ( Quarter.class )  )  { return Month.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P16_Remove_Block]^^112^113^114^^^108^133^else if  ( c.equals ( Quarter.class )  )  { return Month.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P5_Replace_Variable]^else if  ( c.equals ( Month.c )  )  {^115^^^^^108^133^else if  ( c.equals ( Month.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Second.class )  )  {^115^^^^^108^133^else if  ( c.equals ( Month.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Quarter.class )  )  {^115^^^^^108^133^else if  ( c.equals ( Month.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Minute.class )  )  {^115^^^^^108^133^else if  ( c.equals ( Month.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Day.class )  )  {^115^^^^^108^133^else if  ( c.equals ( Month.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Hour.class )  )  {^115^^^^^108^133^else if  ( c.equals ( Month.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P15_Unwrap_Block]^return org.jfree.data.time.Day.class;^115^116^117^^^108^133^else if  ( c.equals ( Month.class )  )  { return Day.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P16_Remove_Block]^^115^116^117^^^108^133^else if  ( c.equals ( Month.class )  )  { return Day.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P5_Replace_Variable]^else if  ( c.equals ( Day.c )  )  {^118^^^^^108^133^else if  ( c.equals ( Day.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^else {^118^^^^^108^133^else if  ( c.equals ( Day.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Second.class )  )  {^118^^^^^108^133^else if  ( c.equals ( Day.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Quarter.class )  )  {^118^^^^^108^133^else if  ( c.equals ( Day.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Month.class )  )  {^118^^^^^108^133^else if  ( c.equals ( Day.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Minute.class )  )  {^118^^^^^108^133^else if  ( c.equals ( Day.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Hour.class )  )  {^118^^^^^108^133^else if  ( c.equals ( Day.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P15_Unwrap_Block]^return org.jfree.data.time.Hour.class;^118^119^120^^^108^133^else if  ( c.equals ( Day.class )  )  { return Hour.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P16_Remove_Block]^^118^119^120^^^108^133^else if  ( c.equals ( Day.class )  )  { return Hour.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P5_Replace_Variable]^else if  ( c.equals ( Hour.c )  )  {^121^^^^^108^133^else if  ( c.equals ( Hour.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Second.class )  )  {^121^^^^^108^133^else if  ( c.equals ( Hour.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Quarter.class )  )  {^121^^^^^108^133^else if  ( c.equals ( Hour.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Month.class )  )  {^121^^^^^108^133^else if  ( c.equals ( Hour.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Minute.class )  )  {^121^^^^^108^133^else if  ( c.equals ( Hour.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Day.class )  )  {^121^^^^^108^133^else if  ( c.equals ( Hour.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P15_Unwrap_Block]^return org.jfree.data.time.Minute.class;^121^122^123^^^108^133^else if  ( c.equals ( Hour.class )  )  { return Minute.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P16_Remove_Block]^^121^122^123^^^108^133^else if  ( c.equals ( Hour.class )  )  { return Minute.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P5_Replace_Variable]^else if  ( c.equals ( Minute.c )  )  {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Second.class )  )  {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Quarter.class )  )  {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Month.class )  )  {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Day.class )  )  {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Hour.class )  )  {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P15_Unwrap_Block]^return org.jfree.data.time.Second.class;^124^125^126^^^108^133^else if  ( c.equals ( Minute.class )  )  { return Second.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P16_Remove_Block]^^124^125^126^^^108^133^else if  ( c.equals ( Minute.class )  )  { return Second.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^else {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Quarter.class )  )  {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Month.class )  )  {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Minute.class )  )  {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Day.class )  )  {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P9_Replace_Statement]^else if  ( c.equals ( Hour.class )  )  {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P15_Unwrap_Block]^return org.jfree.data.time.Millisecond.class;^127^128^129^^^108^133^else if  ( c.equals ( Second.class )  )  { return Millisecond.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P16_Remove_Block]^^127^128^129^^^108^133^else if  ( c.equals ( Second.class )  )  { return Millisecond.class; }^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P13_Insert_Block]^if  ( c.equals ( class )  )  {     return class; }else     if  ( c.equals ( class )  )  {         return class;     }else {         return class;     }^127^^^^^108^133^[Delete]^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P5_Replace_Variable]^else if  ( c.equals ( Second.c )  )  {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^if  ( c.equals ( Minute.class )  )  {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^if  ( c.equals ( Second.c )  )  {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^else {^121^^^^^108^133^else if  ( c.equals ( Hour.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^if  ( c.equals ( Minute.c )  )  {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^if  ( c.equals ( Day.c )  )  {^118^^^^^108^133^else if  ( c.equals ( Day.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^if  ( c.equals ( Second.class )  )  {^127^^^^^108^133^else if  ( c.equals ( Second.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^else {^124^^^^^108^133^else if  ( c.equals ( Minute.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^if  ( c.equals ( Hour.c )  )  {^121^^^^^108^133^else if  ( c.equals ( Hour.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^else {^115^^^^^108^133^else if  ( c.equals ( Month.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P8_Replace_Mix]^if  ( c.equals ( Month.c )  )  {^115^^^^^108^133^else if  ( c.equals ( Month.class )  )  {^[CLASS] RegularTimePeriod  [METHOD] downsize [RETURN_TYPE] Class   Class c [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  Class  c  boolean  
[P4_Replace_Constructor]^return return  new Date ( getLastMillisecond (  )  )   ) ;^184^^^^^183^185^return new Date ( getFirstMillisecond (  )  ) ;^[CLASS] RegularTimePeriod  [METHOD] getStart [RETURN_TYPE] Date   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  
[P7_Replace_Invocation]^return new Date ( getLastMillisecond (  )  ) ;^184^^^^^183^185^return new Date ( getFirstMillisecond (  )  ) ;^[CLASS] RegularTimePeriod  [METHOD] getStart [RETURN_TYPE] Date   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  
[P14_Delete_Statement]^^184^^^^^183^185^return new Date ( getFirstMillisecond (  )  ) ;^[CLASS] RegularTimePeriod  [METHOD] getStart [RETURN_TYPE] Date   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  
[P4_Replace_Constructor]^return return  new Date ( getFirstMillisecond (  )  )   ) ;^196^^^^^195^197^return new Date ( getLastMillisecond (  )  ) ;^[CLASS] RegularTimePeriod  [METHOD] getEnd [RETURN_TYPE] Date   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  
[P7_Replace_Invocation]^return new Date ( getFirstMillisecond (  )  ) ;^196^^^^^195^197^return new Date ( getLastMillisecond (  )  ) ;^[CLASS] RegularTimePeriod  [METHOD] getEnd [RETURN_TYPE] Date   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  
[P14_Delete_Statement]^^196^^^^^195^197^return new Date ( getLastMillisecond (  )  ) ;^[CLASS] RegularTimePeriod  [METHOD] getEnd [RETURN_TYPE] Date   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  
[P1_Replace_Type]^short  m1 = getFirstMillisecond (  ) ;^256^^^^^255^259^long m1 = getFirstMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P7_Replace_Invocation]^long m1 = getLastMillisecond (  ) ;^256^^^^^255^259^long m1 = getFirstMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^long m2 = getLastMillisecond ( calendar ) ;long m1 = getFirstMillisecond (  ) ;^256^^^^^255^259^long m1 = getFirstMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^long m1 = getFirstMillisecond ( calendar ) ;long m1 = getFirstMillisecond (  ) ;^256^^^^^255^259^long m1 = getFirstMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^long m2 = getLastMillisecond (  ) ;long m1 = getFirstMillisecond (  ) ;^256^^^^^255^259^long m1 = getFirstMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P14_Delete_Statement]^^256^257^^^^255^259^long m1 = getFirstMillisecond (  ) ; long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^return new Date ( getFirstMillisecond (  )  ) ;long m1 = getFirstMillisecond (  ) ;^256^^^^^255^259^long m1 = getFirstMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^return new Date ( getLastMillisecond (  )  ) ;long m1 = getFirstMillisecond (  ) ;^256^^^^^255^259^long m1 = getFirstMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P1_Replace_Type]^short  m2 = getLastMillisecond (  ) ;^257^^^^^255^259^long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P7_Replace_Invocation]^long m2 = getFirstMillisecond (  ) ;^257^^^^^255^259^long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^long m2 = getLastMillisecond ( calendar ) ;long m2 = getLastMillisecond (  ) ;^257^^^^^255^259^long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^long m1 = getFirstMillisecond ( calendar ) ;long m2 = getLastMillisecond (  ) ;^257^^^^^255^259^long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^long m1 = getFirstMillisecond (  ) ;long m2 = getLastMillisecond (  ) ;^257^^^^^255^259^long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P14_Delete_Statement]^^257^^^^^255^259^long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^return new Date ( getFirstMillisecond (  )  ) ;long m2 = getLastMillisecond (  ) ;^257^^^^^255^259^long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P11_Insert_Donor_Statement]^return new Date ( getLastMillisecond (  )  ) ;long m2 = getLastMillisecond (  ) ;^257^^^^^255^259^long m2 = getLastMillisecond (  ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P2_Replace_Operator]^return m1 +  <=  ( m2 - m1 )  / 2;^258^^^^^255^259^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P2_Replace_Operator]^return m1 +  ( m2 - m1 )  * 2;^258^^^^^255^259^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P2_Replace_Operator]^return m1 +  ( m2  !=  m1 )  / 2;^258^^^^^255^259^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P3_Replace_Literal]^return m1 +  ( m-2 - m1 )  / -2;^258^^^^^255^259^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P5_Replace_Variable]^return m2 +  ( m1 - m1 )  / 2;^258^^^^^255^259^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P8_Replace_Mix]^return m2 +  ( m2 - m1 )  / 2;^258^^^^^255^259^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  long  m1  m2  boolean  
[P1_Replace_Type]^short  m1 = getFirstMillisecond ( calendar ) ;^270^^^^^269^273^long m1 = getFirstMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P7_Replace_Invocation]^long m1 = getLastMillisecond ( calendar ) ;^270^^^^^269^273^long m1 = getFirstMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P11_Insert_Donor_Statement]^long m2 = getLastMillisecond ( calendar ) ;long m1 = getFirstMillisecond ( calendar ) ;^270^^^^^269^273^long m1 = getFirstMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P11_Insert_Donor_Statement]^long m2 = getLastMillisecond (  ) ;long m1 = getFirstMillisecond ( calendar ) ;^270^^^^^269^273^long m1 = getFirstMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P11_Insert_Donor_Statement]^long m1 = getFirstMillisecond (  ) ;long m1 = getFirstMillisecond ( calendar ) ;^270^^^^^269^273^long m1 = getFirstMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P14_Delete_Statement]^^270^^^^^269^273^long m1 = getFirstMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P11_Insert_Donor_Statement]^return new Date ( getFirstMillisecond (  )  ) ;long m1 = getFirstMillisecond ( calendar ) ;^270^^^^^269^273^long m1 = getFirstMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P1_Replace_Type]^short  m2 = getLastMillisecond ( calendar ) ;^271^^^^^269^273^long m2 = getLastMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P7_Replace_Invocation]^long m2 = getFirstMillisecond ( calendar ) ;^271^^^^^269^273^long m2 = getLastMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P11_Insert_Donor_Statement]^long m1 = getFirstMillisecond ( calendar ) ;long m2 = getLastMillisecond ( calendar ) ;^271^^^^^269^273^long m2 = getLastMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P11_Insert_Donor_Statement]^long m2 = getLastMillisecond (  ) ;long m2 = getLastMillisecond ( calendar ) ;^271^^^^^269^273^long m2 = getLastMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P11_Insert_Donor_Statement]^long m1 = getFirstMillisecond (  ) ;long m2 = getLastMillisecond ( calendar ) ;^271^^^^^269^273^long m2 = getLastMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P14_Delete_Statement]^^271^^^^^269^273^long m2 = getLastMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P11_Insert_Donor_Statement]^return new Date ( getLastMillisecond (  )  ) ;long m2 = getLastMillisecond ( calendar ) ;^271^^^^^269^273^long m2 = getLastMillisecond ( calendar ) ;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P2_Replace_Operator]^return m1 +  &  ( m2 - m1 )  / 2;^272^^^^^269^273^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P2_Replace_Operator]^return m1 +  ( m2 - m1 )  - 2;^272^^^^^269^273^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P2_Replace_Operator]^return m1 +  ( m2  ==  m1 )  / 2;^272^^^^^269^273^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P3_Replace_Literal]^return m1 +  ( m0 - m1 )  / 0;^272^^^^^269^273^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P5_Replace_Variable]^return m2 +  ( m1 - m1 )  / 2;^272^^^^^269^273^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P8_Replace_Mix]^return m1  ;^272^^^^^269^273^return m1 +  ( m2 - m1 )  / 2;^[CLASS] RegularTimePeriod  [METHOD] getMiddleMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  long  m1  m2  Calendar  calendar  
[P7_Replace_Invocation]^return String.valueOf ( getLastMillisecond (  )  ) ;^281^^^^^280^282^return String.valueOf ( getStart (  )  ) ;^[CLASS] RegularTimePeriod  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  
[P14_Delete_Statement]^^281^^^^^280^282^return String.valueOf ( getStart (  )  ) ;^[CLASS] RegularTimePeriod  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TimeZone  DEFAULT_TIME_ZONE  zone  boolean  
