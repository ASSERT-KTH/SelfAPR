[P1_Replace_Type]^private static final  short  serialVersionUID = -7659990929736074836L;^75^^^^^70^80^private static final long serialVersionUID = -7659990929736074836L;^[CLASS] Year   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -7659990929736074836;^75^^^^^70^80^private static final long serialVersionUID = -7659990929736074836L;^[CLASS] Year   [VARIABLES] 
[P1_Replace_Type]^private  long  year;^78^^^^^73^83^private short year;^[CLASS] Year   [VARIABLES] 
[P1_Replace_Type]^private  int  firstMillisecond;^81^^^^^76^86^private long firstMillisecond;^[CLASS] Year   [VARIABLES] 
[P1_Replace_Type]^private  short  lastMillisecond;^84^^^^^79^89^private long lastMillisecond;^[CLASS] Year   [VARIABLES] 
[P8_Replace_Mix]^private  int  lastMillisecond;^84^^^^^79^89^private long lastMillisecond;^[CLASS] Year   [VARIABLES] 
[P14_Delete_Statement]^^90^^^^^89^91^this ( new Date (  )  ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year()   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) &&  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P2_Replace_Operator]^if  (  ( year <= SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P2_Replace_Operator]^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year == SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P5_Replace_Variable]^if  (  ( year < this ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P5_Replace_Variable]^if  (  ( SerialDate.MAXIMUM_YEAR_SUPPORTED < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > year )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P5_Replace_Variable]^if  (  ( SerialDate.MINIMUM_YEAR_SUPPORTED < year ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P5_Replace_Variable]^if  (  ( year < SerialDate.MAXIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MINIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P6_Replace_Expression]^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ) {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P6_Replace_Expression]^if  (   ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P6_Replace_Expression]^if  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P6_Replace_Expression]^if  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P6_Replace_Expression]^if  ( "Year constructor: year  ( " + year + " )  outside valid range." )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P6_Replace_Expression]^if  ( "Year constructor: year  ( " + year )  {^99^100^^^^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("Year constructor: year (" + year) + ") outside valid range."));^99^100^^102^103^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  { throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ; }^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P16_Remove_Block]^^99^100^^102^103^98^107^if  (  ( year < SerialDate.MINIMUM_YEAR_SUPPORTED ) ||  ( year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  { throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ; }^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  >=  year  >=  " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  <=  year + " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "   instanceof   year   instanceof   " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  ^  year + " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  !=  year + " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Year constructor: year  ( "  >  year  >  " )  outside valid range." ) ;^102^103^^^^98^107^throw new IllegalArgumentException ( "Year constructor: year  ( " + year + " )  outside valid range." ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P1_Replace_Type]^this.year =  (  int  )  year;^105^^^^^98^107^this.year =  ( short )  year;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P8_Replace_Mix]^this.year =   ( short )  year;^105^^^^^98^107^this.year =  ( short )  year;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P11_Insert_Donor_Statement]^this.year =  ( short )  calendar.get ( Calendar.YEAR ) ;this.year =  ( short )  year;^105^^^^^98^107^this.year =  ( short )  year;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P7_Replace_Invocation]^getYear ( Calendar.getInstance (  )  ) ;^106^^^^^98^107^peg ( Calendar.getInstance (  )  ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P7_Replace_Invocation]^peg ( Calendar.getTime (  )  ) ;^106^^^^^98^107^peg ( Calendar.getInstance (  )  ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P14_Delete_Statement]^^106^^^^^98^107^peg ( Calendar.getInstance (  )  ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P11_Insert_Donor_Statement]^Calendar calendar = Calendar.getInstance ( zone ) ;peg ( Calendar.getInstance (  )  ) ;^106^^^^^98^107^peg ( Calendar.getInstance (  )  ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P11_Insert_Donor_Statement]^calendar.setTime ( time ) ;peg ( Calendar.getInstance (  )  ) ;^106^^^^^98^107^peg ( Calendar.getInstance (  )  ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Year(int)   int year [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  year  
[P14_Delete_Statement]^^116^^^^^115^117^this ( time, RegularTimePeriod.DEFAULT_TIME_ZONE ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] Date)   Date time [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  
[P7_Replace_Invocation]^Calendar calendar = Calendar.setTime ( zone ) ;^126^^^^^125^130^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P7_Replace_Invocation]^Calendar calendar = Calendar .getTime (  )  ;^126^^^^^125^130^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P14_Delete_Statement]^^126^127^^^^125^130^Calendar calendar = Calendar.getInstance ( zone ) ; calendar.setTime ( time ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( Calendar.MILLISECOND, 0 ) ;Calendar calendar = Calendar.getInstance ( zone ) ;^126^^^^^125^130^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( Calendar.MILLISECOND, 999 ) ;Calendar calendar = Calendar.getInstance ( zone ) ;^126^^^^^125^130^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P11_Insert_Donor_Statement]^peg ( Calendar.getInstance (  )  ) ;Calendar calendar = Calendar.getInstance ( zone ) ;^126^^^^^125^130^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P7_Replace_Invocation]^calendar.set ( time ) ;^127^^^^^125^130^calendar.setTime ( time ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P7_Replace_Invocation]^calendar .getTime (  )  ;^127^^^^^125^130^calendar.setTime ( time ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P14_Delete_Statement]^^127^^^^^125^130^calendar.setTime ( time ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P11_Insert_Donor_Statement]^return calendar.getTime (  ) .getTime (  ) ;calendar.setTime ( time ) ;^127^^^^^125^130^calendar.setTime ( time ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P11_Insert_Donor_Statement]^peg ( Calendar.getInstance (  )  ) ;calendar.setTime ( time ) ;^127^^^^^125^130^calendar.setTime ( time ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P1_Replace_Type]^this.year =  (  long  )  calendar.get ( Calendar.YEAR ) ;^128^^^^^125^130^this.year =  ( short )  calendar.get ( Calendar.YEAR ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P7_Replace_Invocation]^this.year =  ( short )  calendar.setTime ( Calendar.YEAR ) ;^128^^^^^125^130^this.year =  ( short )  calendar.get ( Calendar.YEAR ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P8_Replace_Mix]^this.year =   ( short )  null.get ( Calendar.YEAR ) ;^128^^^^^125^130^this.year =  ( short )  calendar.get ( Calendar.YEAR ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P11_Insert_Donor_Statement]^this.year =  ( short )  year;this.year =  ( short )  calendar.get ( Calendar.YEAR ) ;^128^^^^^125^130^this.year =  ( short )  calendar.get ( Calendar.YEAR ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P14_Delete_Statement]^^128^^^^^125^130^this.year =  ( short )  calendar.get ( Calendar.YEAR ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P7_Replace_Invocation]^Year ( calendar ) ;^129^^^^^125^130^peg ( calendar ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P14_Delete_Statement]^^129^^^^^125^130^peg ( calendar ) ;^[CLASS] Year  [METHOD] <init> [RETURN_TYPE] TimeZone)   Date time TimeZone zone [VARIABLES] short  year  TimeZone  zone  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Date  time  Calendar  calendar  
[P8_Replace_Mix]^return year;^138^^^^^137^139^return this.year;^[CLASS] Year  [METHOD] getYear [RETURN_TYPE] int   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^return lastMillisecond;^152^^^^^151^153^return this.firstMillisecond;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^return serialVersionUID;^166^^^^^165^167^return this.lastMillisecond;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P7_Replace_Invocation]^this.firstMillisecond = getLastMillisecond ( calendar ) ;^178^^^^^177^180^this.firstMillisecond = getFirstMillisecond ( calendar ) ;^[CLASS] Year  [METHOD] peg [RETURN_TYPE] void   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P8_Replace_Mix]^this.firstMillisecond =  getFirstMillisecond ( null ) ;^178^^^^^177^180^this.firstMillisecond = getFirstMillisecond ( calendar ) ;^[CLASS] Year  [METHOD] peg [RETURN_TYPE] void   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^this.lastMillisecond = getLastMillisecond ( calendar ) ;this.firstMillisecond = getFirstMillisecond ( calendar ) ;^178^^^^^177^180^this.firstMillisecond = getFirstMillisecond ( calendar ) ;^[CLASS] Year  [METHOD] peg [RETURN_TYPE] void   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P14_Delete_Statement]^^178^179^^^^177^180^this.firstMillisecond = getFirstMillisecond ( calendar ) ; this.lastMillisecond = getLastMillisecond ( calendar ) ;^[CLASS] Year  [METHOD] peg [RETURN_TYPE] void   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P7_Replace_Invocation]^this.lastMillisecond = getFirstMillisecond ( calendar ) ;^179^^^^^177^180^this.lastMillisecond = getLastMillisecond ( calendar ) ;^[CLASS] Year  [METHOD] peg [RETURN_TYPE] void   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P8_Replace_Mix]^this.lastMillisecond =  getLastMillisecond ( null ) ;^179^^^^^177^180^this.lastMillisecond = getLastMillisecond ( calendar ) ;^[CLASS] Year  [METHOD] peg [RETURN_TYPE] void   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^this.firstMillisecond = getFirstMillisecond ( calendar ) ;this.lastMillisecond = getLastMillisecond ( calendar ) ;^179^^^^^177^180^this.lastMillisecond = getLastMillisecond ( calendar ) ;^[CLASS] Year  [METHOD] peg [RETURN_TYPE] void   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P14_Delete_Statement]^^179^^^^^177^180^this.lastMillisecond = getLastMillisecond ( calendar ) ;^[CLASS] Year  [METHOD] peg [RETURN_TYPE] void   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P2_Replace_Operator]^if  ( this.year >= SerialDate.MINIMUM_YEAR_SUPPORTED )  {^189^^^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^189^^^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( SerialDate.MINIMUM_YEAR_SUPPORTED > this.year )  {^189^^^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( this.year - 1 )  {^189^^^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^189^^^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P15_Unwrap_Block]^return new org.jfree.data.time.Year(((this.year) - 1));^189^190^191^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  { return new Year ( this.year - 1 ) ; }^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P16_Remove_Block]^^189^190^191^^^188^195^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  { return new Year ( this.year - 1 ) ; }^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( this.year )  <  ( SerialDate.MAXIMUM_YEAR_SUPPORTED )  )  {     return new Year (  (  ( this.year )  + 1 )  ) ; }else {     return null; }^189^^^^^188^195^[Delete]^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P8_Replace_Mix]^return true;^193^^^^^188^195^return null;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^return new Year ( this.year  <=  1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P3_Replace_Literal]^return new Year ( this.year  ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P4_Replace_Constructor]^return return  new Year (  (  ( this.year )  + 1 )  )  ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^return new Year ( year - 1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^return new Year ( this.year  >=  1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P8_Replace_Mix]^return false;^193^^^^^188^195^return null;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^return new Year ( this.year   instanceof   1 ) ;^190^^^^^188^195^return new Year ( this.year - 1 ) ;^[CLASS] Year  [METHOD] previous [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( this.year > SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^204^^^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^204^^^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( SerialDate.MAXIMUM_YEAR_SUPPORTED < this.year )  {^204^^^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( this.year + 1 )  {^204^^^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( this.year > SerialDate.MINIMUM_YEAR_SUPPORTED )  {^204^^^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  {^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P15_Unwrap_Block]^return new org.jfree.data.time.Year(((this.year) + 1));^204^205^206^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  { return new Year ( this.year + 1 ) ; }^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P16_Remove_Block]^^204^205^206^^^203^210^if  ( this.year < SerialDate.MAXIMUM_YEAR_SUPPORTED )  { return new Year ( this.year + 1 ) ; }^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( this.year )  >  ( SerialDate.MINIMUM_YEAR_SUPPORTED )  )  {     return new Year (  (  ( this.year )  - 1 )  ) ; }else {     return null; }^204^^^^^203^210^[Delete]^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P8_Replace_Mix]^return true;^208^^^^^203^210^return null;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^return new Year ( this.year  >=  1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P3_Replace_Literal]^return new Year ( this.year  ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P4_Replace_Constructor]^return return  new Year (  (  ( this.year )  - 1 )  )  ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^return new Year ( year + 1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^return new Year ( this.year   instanceof   1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^return new Year ( this.year  ^  1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P8_Replace_Mix]^return  new Year (  (  ( this.year )  - 1 )  )  ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P8_Replace_Mix]^return false;^208^^^^^203^210^return null;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P2_Replace_Operator]^return new Year ( this.year  &&  1 ) ;^205^^^^^203^210^return new Year ( this.year + 1 ) ;^[CLASS] Year  [METHOD] next [RETURN_TYPE] RegularTimePeriod   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P5_Replace_Variable]^return year;^220^^^^^219^221^return this.year;^[CLASS] Year  [METHOD] getSerialIndex [RETURN_TYPE] long   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P3_Replace_Literal]^calendar.set ( this.year, Calendar.JANUARY, 9, 0, 0, 0 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( this.year, Calendar.JANUARY, 1, 8, 8, 8 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( this.year, Calendar.JANUARY, 1, 4, 4, 4 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( this.year, Calendar.JANUARY, 1, -9, -9, -9 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P5_Replace_Variable]^calendar.set (  Calendar.JANUARY, 1, 0, 0, 0 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P5_Replace_Variable]^calendar.set ( this.year, Calendar. 1, 0, 0, 0 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P8_Replace_Mix]^calendar.set ( year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P14_Delete_Statement]^^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( Calendar.MILLISECOND, 0 ) ;calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( Calendar.MILLISECOND, 999 ) ;calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^235^^^^^234^240^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( Calendar.MILLISECOND,  ) ;^236^^^^^234^240^calendar.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P5_Replace_Variable]^calendar.set ( Calendar. 0 ) ;^236^^^^^234^240^calendar.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P14_Delete_Statement]^^236^^^^^234^240^calendar.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^Calendar calendar = Calendar.getInstance ( zone ) ;calendar.set ( Calendar.MILLISECOND, 0 ) ;^236^^^^^234^240^calendar.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( Calendar.MILLISECOND, 999 ) ;calendar.set ( Calendar.MILLISECOND, 0 ) ;^236^^^^^234^240^calendar.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;calendar.set ( Calendar.MILLISECOND, 0 ) ;^236^^^^^234^240^calendar.set ( Calendar.MILLISECOND, 0 ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P7_Replace_Invocation]^return calendar.get (  ) .getTime (  ) ;^239^^^^^234^240^return calendar.getTime (  ) .getTime (  ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P14_Delete_Statement]^^239^^^^^234^240^return calendar.getTime (  ) .getTime (  ) ;^[CLASS] Year  [METHOD] getFirstMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( this.year, Calendar.DECEMBER, 25, 23, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( this.year, Calendar.DECEMBER, 31, 22, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 63, 63 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, ,  ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P5_Replace_Variable]^calendar.set ( year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P5_Replace_Variable]^calendar.set (  Calendar.DECEMBER, 31, 23, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P5_Replace_Variable]^calendar.set ( this.year, Calendar. 31, 23, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P14_Delete_Statement]^^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( Calendar.MILLISECOND, 999 ) ;calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^254^^^^^253^259^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( Calendar.MILLISECOND, 993 ) ;^255^^^^^253^259^calendar.set ( Calendar.MILLISECOND, 999 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P5_Replace_Variable]^calendar.set ( Calendar. 999 ) ;^255^^^^^253^259^calendar.set ( Calendar.MILLISECOND, 999 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P14_Delete_Statement]^^255^^^^^253^259^calendar.set ( Calendar.MILLISECOND, 999 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^Calendar calendar = Calendar.getInstance ( zone ) ;calendar.set ( Calendar.MILLISECOND, 999 ) ;^255^^^^^253^259^calendar.set ( Calendar.MILLISECOND, 999 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( this.year, Calendar.DECEMBER, 31, 23, 59, 59 ) ;calendar.set ( Calendar.MILLISECOND, 999 ) ;^255^^^^^253^259^calendar.set ( Calendar.MILLISECOND, 999 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( Calendar.MILLISECOND, 0 ) ;calendar.set ( Calendar.MILLISECOND, 999 ) ;^255^^^^^253^259^calendar.set ( Calendar.MILLISECOND, 999 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P11_Insert_Donor_Statement]^calendar.set ( this.year, Calendar.JANUARY, 1, 0, 0, 0 ) ;calendar.set ( Calendar.MILLISECOND, 999 ) ;^255^^^^^253^259^calendar.set ( Calendar.MILLISECOND, 999 ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P7_Replace_Invocation]^return calendar.get (  ) .getTime (  ) ;^258^^^^^253^259^return calendar.getTime (  ) .getTime (  ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P14_Delete_Statement]^^258^^^^^253^259^return calendar.getTime (  ) .getTime (  ) ;^[CLASS] Year  [METHOD] getLastMillisecond [RETURN_TYPE] long   Calendar calendar [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  Calendar  calendar  
[P2_Replace_Operator]^if  ( object == null )  {^273^^^^^272^285^if  ( object != null )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P6_Replace_Expression]^if  ( object instanceof Year )  {^273^^^^^272^285^if  ( object != null )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P6_Replace_Expression]^if  ( this.year == target.getYear() )  {^273^^^^^272^285^if  ( object != null )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P8_Replace_Mix]^if  ( object != false )  {^273^^^^^272^285^if  ( object != null )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P15_Unwrap_Block]^if (object instanceof org.jfree.data.time.Year) {    org.jfree.data.time.Year target = ((org.jfree.data.time.Year) (object));    return (this.year) == (target.getYear());}else {    return false;};^273^274^275^276^277^272^285^if  ( object != null )  { if  ( object instanceof Year )  { Year target =  ( Year )  object; return  ( this.year == target.getYear (  )  ) ; }^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P16_Remove_Block]^^273^274^275^276^277^272^285^if  ( object != null )  { if  ( object instanceof Year )  { Year target =  ( Year )  object; return  ( this.year == target.getYear (  )  ) ; }^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P13_Insert_Block]^if  ( object instanceof Year )  {     Year target =  (  ( Year )   ( object )  ) ;     return  ( this.year )  ==  ( target.getYear (  )  ) ; }else {     return false; }^273^^^^^272^285^[Delete]^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P3_Replace_Literal]^return true;^283^^^^^272^285^return false;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P2_Replace_Operator]^if  ( object  <  Year )  {^274^^^^^272^285^if  ( object instanceof Year )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P6_Replace_Expression]^if  ( this.year == target.getYear() )  {^274^^^^^272^285^if  ( object instanceof Year )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P9_Replace_Statement]^if  ( o1 instanceof Year )  {^274^^^^^272^285^if  ( object instanceof Year )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P15_Unwrap_Block]^org.jfree.data.time.Year target = ((org.jfree.data.time.Year) (object)); return (this.year) == (target.getYear());^274^275^276^277^^272^285^if  ( object instanceof Year )  { Year target =  ( Year )  object; return  ( this.year == target.getYear (  )  ) ; }^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P16_Remove_Block]^^274^275^276^277^^272^285^if  ( object instanceof Year )  { Year target =  ( Year )  object; return  ( this.year == target.getYear (  )  ) ; }^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P13_Insert_Block]^if  ( o1 instanceof Year )  {     Year y =  (  ( Year )   ( o1 )  ) ;     result =  ( this.year )  -  ( y.getYear (  )  ) ; }else     if  ( o1 instanceof RegularTimePeriod )  {         result = 0;     }else {         result = 1;     }^274^^^^^272^285^[Delete]^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P13_Insert_Block]^if  ( object != null )  {     if  ( object instanceof Year )  {         Year target =  (  ( Year )   ( object )  ) ;         return  ( this.year )  ==  ( target.getYear (  )  ) ;     }else {         return false;     } }else {     return false; }^274^^^^^272^285^[Delete]^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P3_Replace_Literal]^return true;^279^^^^^272^285^return false;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P2_Replace_Operator]^return  ( this.year < target.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P5_Replace_Variable]^return  ( year == target.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P5_Replace_Variable]^return  ( target == this.year.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P7_Replace_Invocation]^return  ( this.year == target.Year (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P11_Insert_Donor_Statement]^Year y =  ( Year )  o1;Year target =  ( Year )  object;^275^^^^^272^285^Year target =  ( Year )  object;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P14_Delete_Statement]^^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P2_Replace_Operator]^return  ( this.year >= target.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P8_Replace_Mix]^return  ( year == target.Year (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P2_Replace_Operator]^if  ( object  >  Year )  {^274^^^^^272^285^if  ( object instanceof Year )  {^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P2_Replace_Operator]^return  ( this.year != target.getYear (  )  ) ;^276^^^^^272^285^return  ( this.year == target.getYear (  )  ) ;^[CLASS] Year  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] short  year  Object  object  boolean  Year  target  long  firstMillisecond  lastMillisecond  serialVersionUID  
[P1_Replace_Type]^short  result = 17;^297^^^^^296^301^int result = 17;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P3_Replace_Literal]^int result = c;^297^^^^^296^301^int result = 17;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P11_Insert_Donor_Statement]^int result;int result = 17;^297^^^^^296^301^int result = 17;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P1_Replace_Type]^short  c = this.year;^298^^^^^296^301^int c = this.year;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P5_Replace_Variable]^int c = year;^298^^^^^296^301^int c = this.year;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P2_Replace_Operator]^result = 37 / result + c;^299^^^^^296^301^result = 37 * result + c;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P3_Replace_Literal]^result = result * result + c;^299^^^^^296^301^result = 37 * result + c;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P5_Replace_Variable]^result = 37 * c + result;^299^^^^^296^301^result = 37 * result + c;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P8_Replace_Mix]^result = 37 >> 3 * result + c;^299^^^^^296^301^result = 37 * result + c;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P5_Replace_Variable]^return c;^300^^^^^296^301^return result;^[CLASS] Year  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] short  year  boolean  long  firstMillisecond  lastMillisecond  serialVersionUID  int  c  result  
[P1_Replace_Type]^short  result;^315^^^^^313^340^int result;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P11_Insert_Donor_Statement]^int result = 17;int result;^315^^^^^313^340^int result;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P2_Replace_Operator]^if  ( o1  ||  Year )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P2_Replace_Operator]^if  ( o1  >=  Year )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^if  ( oresult instanceof Year )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P6_Replace_Expression]^if  ( this.year - y.getYear() )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P6_Replace_Expression]^if  ( o1 instanceof RegularTimePeriod )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P9_Replace_Statement]^if  ( object instanceof Year )  {^319^^^^^313^340^if  ( o1 instanceof Year )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P15_Unwrap_Block]^org.jfree.data.time.Year y = ((org.jfree.data.time.Year) (o1)); result = (this.year) - (y.getYear());^319^320^321^322^^313^340^if  ( o1 instanceof Year )  { Year y =  ( Year )  o1; result = this.year - y.getYear (  ) ; }^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P16_Remove_Block]^^319^320^321^322^^313^340^if  ( o1 instanceof Year )  { Year y =  ( Year )  o1; result = this.year - y.getYear (  ) ; }^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P2_Replace_Operator]^else if  ( o1  <  RegularTimePeriod )  {^326^^^^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P15_Unwrap_Block]^result = 0;^326^327^328^329^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {  result = 0; }^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P16_Remove_Block]^^326^327^328^329^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {  result = 0; }^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^result = 3;^335^^^^^326^336^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P11_Insert_Donor_Statement]^result = 0;result = 1;^335^^^^^326^336^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^result = result;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P8_Replace_Mix]^result = 2;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P11_Insert_Donor_Statement]^result = 1;result = 0;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P8_Replace_Mix]^result = 1;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^result = result;^335^^^^^313^340^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P8_Replace_Mix]^result = 4;^335^^^^^313^340^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P11_Insert_Donor_Statement]^result = 0;result = 1;^335^^^^^313^340^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P2_Replace_Operator]^result = this.year  ==  y.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P5_Replace_Variable]^result = year - y.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P5_Replace_Variable]^result = y - this.year.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P7_Replace_Invocation]^result = this.year - y.Year (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P8_Replace_Mix]^result =  this.nullear - null.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P11_Insert_Donor_Statement]^Year target =  ( Year )  object;Year y =  ( Year )  o1;^320^^^^^313^340^Year y =  ( Year )  o1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P14_Delete_Statement]^^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P11_Insert_Donor_Statement]^return  ( this.year == target.getYear (  )  ) ;result = this.year - y.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P2_Replace_Operator]^else if  ( o1  |  RegularTimePeriod )  {^326^^^^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^else if  ( o4 instanceof RegularTimePeriod )  {^326^^^^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P8_Replace_Mix]^if  ( o1 instanceof RegularTimePeriod )  {^326^^^^^313^340^else if  ( o1 instanceof RegularTimePeriod )  {^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^result = 8;^335^^^^^326^336^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P8_Replace_Mix]^result = 2;^335^^^^^326^336^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^result = -5;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P8_Replace_Mix]^result = 0 / 1;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P2_Replace_Operator]^result = this.year  &  y.getYear (  ) ;^321^^^^^313^340^result = this.year - y.getYear (  ) ;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^result = -8;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P8_Replace_Mix]^result = 0L;^328^^^^^313^340^result = 0;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P3_Replace_Literal]^result = 2;^335^^^^^313^340^result = 1;^[CLASS] Year  [METHOD] compareTo [RETURN_TYPE] int   Object o1 [VARIABLES] short  year  Object  o1  boolean  Year  y  long  firstMillisecond  lastMillisecond  serialVersionUID  int  result  
[P5_Replace_Variable]^return Integer.toString ( year ) ;^348^^^^^347^349^return Integer.toString ( this.year ) ;^[CLASS] Year  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P14_Delete_Statement]^^348^^^^^347^349^return Integer.toString ( this.year ) ;^[CLASS] Year  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] short  year  long  firstMillisecond  lastMillisecond  serialVersionUID  boolean  
[P1_Replace_Type]^long  y;^364^^^^^361^379^int y;^[CLASS] Year  [METHOD] parseYear [RETURN_TYPE] Year   String s [VARIABLES] boolean  short  year  NumberFormatException  e  String  s  long  firstMillisecond  lastMillisecond  serialVersionUID  int  y  IllegalArgumentException  e  
[P7_Replace_Invocation]^y = Integer.toString ( s.trim (  )  ) ;^366^^^^^361^379^y = Integer.parseInt ( s.trim (  )  ) ;^[CLASS] Year  [METHOD] parseYear [RETURN_TYPE] Year   String s [VARIABLES] boolean  short  year  NumberFormatException  e  String  s  long  firstMillisecond  lastMillisecond  serialVersionUID  int  y  IllegalArgumentException  e  
[P8_Replace_Mix]^y =  Integer.parnulleInt ( null.trim (  )  ) ;^366^^^^^361^379^y = Integer.parseInt ( s.trim (  )  ) ;^[CLASS] Year  [METHOD] parseYear [RETURN_TYPE] Year   String s [VARIABLES] boolean  short  year  NumberFormatException  e  String  s  long  firstMillisecond  lastMillisecond  serialVersionUID  int  y  IllegalArgumentException  e  
[P14_Delete_Statement]^^366^^^^^361^379^y = Integer.parseInt ( s.trim (  )  ) ;^[CLASS] Year  [METHOD] parseYear [RETURN_TYPE] Year   String s [VARIABLES] boolean  short  year  NumberFormatException  e  String  s  long  firstMillisecond  lastMillisecond  serialVersionUID  int  y  IllegalArgumentException  e  
[P4_Replace_Constructor]^throw throw  new TimePeriodFormatException ( "Year outside valid range." )   ;^369^^^^^361^379^throw new TimePeriodFormatException  (" ")  ;^[CLASS] Year  [METHOD] parseYear [RETURN_TYPE] Year   String s [VARIABLES] boolean  short  year  NumberFormatException  e  String  s  long  firstMillisecond  lastMillisecond  serialVersionUID  int  y  IllegalArgumentException  e  
[P7_Replace_Invocation]^y = Integer .toString ( y )  ;^366^^^^^361^379^y = Integer.parseInt ( s.trim (  )  ) ;^[CLASS] Year  [METHOD] parseYear [RETURN_TYPE] Year   String s [VARIABLES] boolean  short  year  NumberFormatException  e  String  s  long  firstMillisecond  lastMillisecond  serialVersionUID  int  y  IllegalArgumentException  e  
[P4_Replace_Constructor]^throw throw  new TimePeriodFormatException ( "Cannot parse string." )   ;^377^^^^^361^379^throw new TimePeriodFormatException  (" ")  ;^[CLASS] Year  [METHOD] parseYear [RETURN_TYPE] Year   String s [VARIABLES] boolean  short  year  NumberFormatException  e  String  s  long  firstMillisecond  lastMillisecond  serialVersionUID  int  y  IllegalArgumentException  e  
[P8_Replace_Mix]^return ;^377^^^^^361^379^throw new TimePeriodFormatException  (" ")  ;^[CLASS] Year  [METHOD] parseYear [RETURN_TYPE] Year   String s [VARIABLES] boolean  short  year  NumberFormatException  e  String  s  long  firstMillisecond  lastMillisecond  serialVersionUID  int  y  IllegalArgumentException  e  
