[P2_Replace_Operator]^if  ( p1 != null )  {^78^^^^^75^102^if  ( p1 == null )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( p2 == null )  {^78^^^^^75^102^if  ( p1 == null )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^if  ( p1 == this )  {^78^^^^^75^102^if  ( p1 == null )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P9_Replace_Statement]^if  ( value == null )  {^78^^^^^75^102^if  ( p1 == null )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P15_Unwrap_Block]^return p2 == null;^78^79^80^^^75^102^if  ( p1 == null )  { return  ( p2 == null ) ; }^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P16_Remove_Block]^^78^79^80^^^75^102^if  ( p1 == null )  { return  ( p2 == null ) ; }^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P13_Insert_Block]^if  ( value == null )  {     return black; }^78^^^^^75^102^[Delete]^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P13_Insert_Block]^if  ( p2 == null )  {     return false; }^78^^^^^75^102^[Delete]^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P2_Replace_Operator]^return  ( p2 != null ) ;^79^^^^^75^102^return  ( p2 == null ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^return  ( p1 == null ) ;^79^^^^^75^102^return  ( p2 == null ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^return  ( p2 != null ) ;;^79^^^^^75^102^return  ( p2 == null ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P12_Insert_Condition]^if  ( p2 == null )  { return  ( p2 == null ) ; }^79^^^^^75^102^return  ( p2 == null ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P12_Insert_Condition]^if  ( p1 == null )  { return  ( p2 == null ) ; }^79^^^^^75^102^return  ( p2 == null ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^return  ( p2 != true ) ;;^79^^^^^75^102^return  ( p2 == null ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P2_Replace_Operator]^if  ( p2 != null )  {^81^^^^^75^102^if  ( p2 == null )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^if  ( p1 == null )  {^81^^^^^75^102^if  ( p2 == null )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^if  ( p2 == true )  {^81^^^^^75^102^if  ( p2 == null )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P9_Replace_Statement]^if  ( value == null )  {^81^^^^^75^102^if  ( p2 == null )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P15_Unwrap_Block]^return false;^81^82^83^^^75^102^if  ( p2 == null )  { return false; }^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P16_Remove_Block]^^81^82^83^^^75^102^if  ( p2 == null )  { return false; }^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P13_Insert_Block]^if  ( value == null )  {     return black; }^81^^^^^75^102^[Delete]^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P13_Insert_Block]^if  ( p1 == null )  {     return p2 == null; }^81^^^^^75^102^[Delete]^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P13_Insert_Block]^if  ( c.equals ( oColor )  )  {     return name; }^81^^^^^75^102^[Delete]^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P3_Replace_Literal]^return true;^82^^^^^75^102^return false;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P3_Replace_Literal]^boolean result = true;^85^^^^^75^102^boolean result = false;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P2_Replace_Operator]^if  ( p1 instanceof GradientPaint || p2 instanceof GradientPaint )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P2_Replace_Operator]^if  ( p1  &&  GradientPaint && p2 instanceof GradientPaint )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P2_Replace_Operator]^if  ( p1 instanceof GradientPaint && p2  ^  GradientPaint )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^if  ( p2 instanceof GradientPaint && p2 instanceof GradientPaint )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^if  ( p1 instanceof GradientPaint && p1 instanceof GradientPaint )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( p1 instanceof GradientPaint ) {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  (  p2 instanceof GradientPaint )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( getColor1()) && getColor2())) && getPoint1())) && getPoint2())) && (gp1.isCyclic() == gp2.isCyclic()) && gp1.getTransparency() == gp1.getTransparency() )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( getColor1()) && getColor2())) && getPoint1())) && getPoint2()) && gp1.isCyclic() == gp2.isCyclic()) )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( getColor1()) && getColor2())) && getPoint1()) && getPoint2())) )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( getColor1()) && getColor2()) && getPoint1())) )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( getColor1() && getColor2())) )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( gp1.isCyclic (  )  == gp2.isCyclic (  ) )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P6_Replace_Expression]^if  ( gp1.getTransparency (  )  == gp1.getTransparency (  ) )  {^87^^^^^75^102^if  ( p1 instanceof GradientPaint && p2 instanceof GradientPaint )  {^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^result = p2.equals ( p1 ) ;^98^^^^^87^99^result = p1.equals ( p2 ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^result =  p2.equals ( p2 ) ;^98^^^^^87^99^result = p1.equals ( p2 ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P14_Delete_Statement]^^98^^^^^87^99^result = p1.equals ( p2 ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P2_Replace_Operator]^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) || gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^result = gp2.getColor1 (  ) .equals ( gp1.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P7_Replace_Invocation]^result = gp1 .getColor2 (  )  .equals ( gp2^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P7_Replace_Invocation]^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1 .getPoint2 (  )  .equals ( gp2^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P7_Replace_Invocation]^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1 .getPoint1 (  )  .equals ( gp2^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^result =  gp2.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp2.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp2.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp2.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P11_Insert_Donor_Statement]^GradientPaint gp2 =  ( GradientPaint )  p2;GradientPaint gp1 =  ( GradientPaint )  p1;^88^^^^^75^102^GradientPaint gp1 =  ( GradientPaint )  p1;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P11_Insert_Donor_Statement]^GradientPaint gp1 =  ( GradientPaint )  p1;GradientPaint gp2 =  ( GradientPaint )  p2;^89^^^^^75^102^GradientPaint gp2 =  ( GradientPaint )  p2;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^result = gp2.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^result = gp2 .getColor2 (  )  .equals ( gp2^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^result = gp1.getColor1 (  ) .equals ( gp1.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp2.getColor2 (  ) .equals ( gp1.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  )^91^92^93^94^^75^102^&& gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^&& gp1 .getColor1 (  )  .equals ( gp2^91^92^93^94^^75^102^&& gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp2.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  )^91^92^93^94^^75^102^&& gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp1.getColor2 (  ) .equals ( gp1.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  )^91^92^93^94^^75^102^&& gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^&& gp1 .getColor1 (  )  .equals ( gp1^91^92^93^94^^75^102^&& gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp2.getPoint1 (  ) .equals ( gp1.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^92^93^94^95^^75^102^&& gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P7_Replace_Invocation]^&& gp1 .getPoint2 (  )  .equals ( gp2^92^93^94^95^^75^102^&& gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp2.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^92^93^94^95^^75^102^&& gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp1.getPoint1 (  ) .equals ( gp1.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^92^93^94^95^^75^102^&& gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^&& gp1 .getPoint2 (  )  .equals ( gp1^92^93^94^95^^75^102^&& gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp2.getPoint2 (  ) .equals ( gp1.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^93^94^95^^^75^102^&& gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P7_Replace_Invocation]^&& gp1 .getPoint1 (  )  .equals ( gp2^93^94^95^^^75^102^&& gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P14_Delete_Statement]^^93^94^95^^^75^102^&& gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp2.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^93^94^95^^^75^102^&& gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^&& gp2 .getPoint1 (  )  .equals ( gp2^93^94^95^^^75^102^&& gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp1.getPoint2 (  ) .equals ( gp1.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^93^94^95^^^75^102^&& gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  ) && gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^&& gp2.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^94^95^^^^75^102^&& gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P14_Delete_Statement]^^94^95^^^^75^102^&& gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P11_Insert_Donor_Statement]^&& gp1.getTransparency (  )  == gp1.getTransparency (  ) ;&& gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^94^95^^^^75^102^&& gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp1.isCyclic (  )  == gp1.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^94^95^^^^75^102^&& gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P7_Replace_Invocation]^&& gp1 .getTransparency (  )   == gp2^94^95^^^^75^102^&& gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^&& gp2.getTransparency (  )  == gp1.getTransparency (  ) ;^95^^^^^75^102^&& gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P7_Replace_Invocation]^&& gp1 .getPoint1 (  )   == gp1^95^^^^^75^102^&& gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P14_Delete_Statement]^^95^^^^^75^102^&& gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P11_Insert_Donor_Statement]^&& gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;&& gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^95^^^^^75^102^&& gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^&& gp2 .getPoint1 (  )   == gp1^95^^^^^75^102^&& gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P7_Replace_Invocation]^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1 .getColor1 (  )  .equals ( gp2^90^91^92^93^^75^102^result = gp1.getColor1 (  ) .equals ( gp2.getColor1 (  )  ) && gp1.getColor2 (  ) .equals ( gp2.getColor2 (  )  ) && gp1.getPoint1 (  ) .equals ( gp2.getPoint1 (  )  ) && gp1.getPoint2 (  ) .equals ( gp2.getPoint2 (  )  )^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P5_Replace_Variable]^result = p2.equals ( p1 ) ;^98^^^^^75^102^result = p1.equals ( p2 ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^result =  p2.equals ( p2 ) ;^98^^^^^75^102^result = p1.equals ( p2 ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P8_Replace_Mix]^&& gp2 .getTransparency (  )   == gp2^94^95^^^^75^102^&& gp1.isCyclic (  )  == gp2.isCyclic (  ) && gp1.getTransparency (  )  == gp1.getTransparency (  ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P14_Delete_Statement]^^98^^^^^75^102^result = p1.equals ( p2 ) ;^[CLASS] PaintUtilities  [METHOD] equal [RETURN_TYPE] boolean   Paint p1 Paint p2 [VARIABLES] boolean  result  GradientPaint  gp1  gp2  Paint  p1  p2  
[P2_Replace_Operator]^if  ( Modifier.isPublic ( f.getModifiers (  )  ) || Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P6_Replace_Expression]^if  ( Modifier.isPublic ( f.getModifiers (  )  ) ) {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P6_Replace_Expression]^if  (  Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P6_Replace_Expression]^if  ( getModifiers() && getModifiers())) )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P6_Replace_Expression]^if  ( oColor instanceof Color )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^if  ( Modifier.isStatic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^if  ( Modifier .isStatic ( fillUp )  && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^if  ( Modifier.isPublic ( f.get (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^if  ( Modifier.isPublic ( f .getName (  )   ) && Modifier.isFinal ( f^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isPublic ( f.getModifiers (  )  )  )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^if  ( oColor  |  Color )  {^123^^^^^118^128^if  ( oColor instanceof Color )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P15_Unwrap_Block]^if (c.equals(oColor)) {    return name;};^123^124^125^126^^118^128^if  ( oColor instanceof Color )  { if  ( c.equals ( oColor )  )  { return name; }^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P16_Remove_Block]^^123^124^125^126^^118^128^if  ( oColor instanceof Color )  { if  ( c.equals ( oColor )  )  { return name; }^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^if  ( oColor.equals ( c )  )  {^124^^^^^118^128^if  ( c.equals ( oColor )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P15_Unwrap_Block]^return name;^124^125^126^^^118^128^if  ( c.equals ( oColor )  )  { return name; }^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P16_Remove_Block]^^124^125^126^^^118^128^if  ( c.equals ( oColor )  )  { return name; }^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P13_Insert_Block]^if  ( p2 == null )  {     return false; }^124^^^^^118^128^[Delete]^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^return color;^125^^^^^118^128^return name;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P1_Replace_Type]^char name = f.getName (  ) ;^121^^^^^118^128^String name = f.getName (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^String name = f.get (  ) ;^121^^^^^118^128^String name = f.getName (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^String name = f .get ( oColor )  ;^121^^^^^118^128^String name = f.getName (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^Object oColor = f .getName (  )  ;^122^^^^^118^128^Object oColor = f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^121^^^^^118^128^String name = f.getName (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^122^^^^^118^128^Object oColor = f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^return  ( Color )  f.get ( null ) ;Object oColor = f.get ( null ) ;^122^^^^^118^128^Object oColor = f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^if  ( oColor  ==  Color )  {^123^^^^^108^138^if  ( oColor instanceof Color )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P15_Unwrap_Block]^if (c.equals(oColor)) {    return name;};^123^124^125^126^^108^138^if  ( oColor instanceof Color )  { if  ( c.equals ( oColor )  )  { return name; }^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P16_Remove_Block]^^123^124^125^126^^108^138^if  ( oColor instanceof Color )  { if  ( c.equals ( oColor )  )  { return name; }^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P15_Unwrap_Block]^return name;^124^125^126^^^109^139^if  ( c.equals ( oColor )  )  { return name; }^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P16_Remove_Block]^^124^125^126^^^109^139^if  ( c.equals ( oColor )  )  { return name; }^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P13_Insert_Block]^if  ( p2 == null )  {     return false; }^124^^^^^109^139^[Delete]^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^return color;^125^^^^^110^140^return name;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^if  ( oColor.equals ( c )  )  {^124^^^^^109^139^if  ( c.equals ( oColor )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P1_Replace_Type]^for  (  short  i = 0; i < fields.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^for  ( int i = 0; i == fields.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^for  ( int i = fillUp; i < fields.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^for  ( fillUpnt i = 0; i < fields.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^for  ( int i = 0; i < fillUp; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^for  ( int i = 0; i < fields.length.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^for  ( int i = 0; i < fieldsields.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^for  ( fields.lengthnt i = 0; i < i; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier .isPublic ( i )  && Modifier.isStatic ( f.getModifiers (  )  )  )  {^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^if  ( Modifier.isPublic ( f .getName (  )  && Modifier.isFinal ( f^118^119^120^^^103^133^if  ( Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^if  ( oColor  >=  Color )  {^123^^^^^118^128^if  ( oColor instanceof Color )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^121^122^^^^118^128^String name = f.getName (  ) ; Object oColor = f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^if  ( oColor  &  Color )  {^123^^^^^108^138^if  ( oColor instanceof Color )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P1_Replace_Type]^char name = f.getName (  ) ;^121^^^^^106^136^String name = f.getName (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^String name = f.get (  ) ;^121^^^^^106^136^String name = f.getName (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P8_Replace_Mix]^String name = f .get ( oColor )  ;^121^^^^^106^136^String name = f.getName (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^&& Modifier.isPublic ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^119^120^^^^104^134^&& Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^&& Modifier .isPublic ( i )  && Modifier.isStatic ( f.getModifiers (  )  )  )  {^119^120^^^^104^134^&& Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^&& Modifier.isFinal ( f.get (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^119^120^^^^104^134^&& Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^&& Modifier.isFinal ( f .getName (  )   ) && Modifier.isStatic ( f^119^120^^^^104^134^&& Modifier.isFinal ( f.getModifiers (  )  ) && Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^&& Modifier.isPublic ( f.getModifiers (  )  )  )  {^120^^^^^105^135^&& Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^&& Modifier.isStatic ( f.get (  )  )  )  {^120^^^^^105^135^&& Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P8_Replace_Mix]^&& Modifier.isStatic ( f .getName (  )   )  )  {^120^^^^^105^135^&& Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^121^122^^^^106^136^String name = f.getName (  ) ; Object oColor = f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^Object oColor = f .getName (  )  ;^122^^^^^107^137^Object oColor = f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^122^^^^^107^137^Object oColor = f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^return  ( Color )  f.get ( null ) ;Object oColor = f.get ( null ) ;^122^^^^^107^137^Object oColor = f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^if  ( oColor  !=  Color )  {^123^^^^^118^128^if  ( oColor instanceof Color )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^if  ( oColor  >>  Color )  {^123^^^^^108^138^if  ( oColor instanceof Color )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P1_Replace_Type]^for  (  long  i = 0; i < fields.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^for  ( int i = 0; i > fields.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^for  ( int i = -7; i < fields.length; i++ )  {^116^^^^^101^131^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^if  ( oColor  !=  Color )  {^123^^^^^108^138^if  ( oColor instanceof Color )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^&& Modifier .isPublic ( i )   )  {^120^^^^^105^135^&& Modifier.isStatic ( f.getModifiers (  )  )  )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^121^^^^^106^136^String name = f.getName (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P8_Replace_Mix]^Field[] fields = Color.class .getField ( color )  ;^115^^^^^100^130^Field[] fields = Color.class.getFields (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^final Field f = Color.class.getField ( value ) ;Field[] fields = Color.class.getFields (  ) ;^115^^^^^100^130^Field[] fields = Color.class.getFields (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^115^^^^^100^130^Field[] fields = Color.class.getFields (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P8_Replace_Mix]^Field[] fields = Color.class .getField ( name )  ;^115^^^^^100^130^Field[] fields = Color.class.getFields (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P1_Replace_Type]^char color = Integer.toHexchar ( c.getRGB (  )  & 0x00ffffff ) ;^136^^^^^121^151^String color = Integer.toHexString ( c.getRGB (  )  & 0x00ffffff ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^String color = Integer.toHexString ( c.getRGB (  )   >>  0x00ffffff ) ;^136^^^^^121^151^String color = Integer.toHexString ( c.getRGB (  )  & 0x00ffffff ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^String color = Integer.toHexString ( c.decode (  )  & 0x00ffffff ) ;^136^^^^^121^151^String color = Integer.toHexString ( c.getRGB (  )  & 0x00ffffff ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^String color = Integer.toHexString ( c .decode ( color )   & 0x00ffffff ) ;^136^^^^^121^151^String color = Integer.toHexString ( c.getRGB (  )  & 0x00ffffff ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^136^^^^^121^151^String color = Integer.toHexString ( c.getRGB (  )  & 0x00ffffff ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^136^137^^^^121^151^String color = Integer.toHexString ( c.getRGB (  )  & 0x00ffffff ) ; StringBuffer retval = new StringBuffer ( 7 ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^StringBuffer retval = new StringBuffer ( fillUp ) ;^137^^^^^122^152^StringBuffer retval = new StringBuffer ( 7 ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^retval.append ( "" ) ;^138^^^^^123^153^retval.append ( "#" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P8_Replace_Mix]^retval .toString (  )  ;^138^^^^^123^153^retval.append ( "#" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^138^^^^^123^153^retval.append ( "#" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^retval.append ( "0" ) ;retval.append ( "#" ) ;^138^^^^^123^153^retval.append ( "#" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^retval.append ( color ) ;retval.append ( "#" ) ;^138^^^^^123^153^retval.append ( "#" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P1_Replace_Type]^short  fillUp = 6 - color.length (  ) ;^140^^^^^125^155^int fillUp = 6 - color.length (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^int fillUp = 6  |  color.length (  ) ;^140^^^^^125^155^int fillUp = 6 - color.length (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^int fillUp = 9 - color.length (  ) ;^140^^^^^125^155^int fillUp = 6 - color.length (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^int fillUp = 6 - color.length() - 0 ;^140^^^^^125^155^int fillUp = 6 - color.length (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^int fillUp = 6 - name.length (  ) ;^140^^^^^125^155^int fillUp = 6 - color.length (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^int fillUp = 6 - color.length() + 4 ;^140^^^^^125^155^int fillUp = 6 - color.length (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^140^^^^^125^155^int fillUp = 6 - color.length (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P1_Replace_Type]^for  (  short  i = 0; i < fillUp; i++ )  {^141^^^^^126^156^for  ( int i = 0; i < fillUp; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^for  ( int i = 0; i > fillUp; i++ )  {^141^^^^^126^156^for  ( int i = 0; i < fillUp; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^for  ( int i = -2; i < fillUp; i++ )  {^141^^^^^126^156^for  ( int i = 0; i < fillUp; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^for  ( fillUpnt i = 0; i < fillUp; i++ )  {^141^^^^^126^156^for  ( int i = 0; i < fillUp; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^for  ( fillUpnt i = 0; i < i; i++ )  {^141^^^^^126^156^for  ( int i = 0; i < fillUp; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^retval.append ( "" ) ;^142^^^^^127^157^retval.append ( "0" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^retval .toString (  )  ;^142^^^^^127^157^retval.append ( "0" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^142^^^^^127^157^retval.append ( "0" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^retval.append ( color ) ;retval.append ( "0" ) ;^142^^^^^127^157^retval.append ( "0" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^retval.append ( "#" ) ;retval.append ( "0" ) ;^142^^^^^127^157^retval.append ( "0" ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P3_Replace_Literal]^for  ( int i = i; i < fillUp; i++ )  {^141^^^^^126^156^for  ( int i = 0; i < fillUp; i++ )  {^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P5_Replace_Variable]^retval.append ( name ) ;^145^^^^^130^160^retval.append ( color ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^retval .toString (  )  ;^145^^^^^130^160^retval.append ( color ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^145^^^^^130^160^retval.append ( color ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^retval.append ( "0" ) ;retval.append ( color ) ;^145^^^^^130^160^retval.append ( color ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P11_Insert_Donor_Statement]^retval.append ( "#" ) ;retval.append ( color ) ;^145^^^^^130^160^retval.append ( color ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^return retval.StringBuffer (  ) ;^146^^^^^131^161^return retval.toString (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P7_Replace_Invocation]^return retval .StringBuffer ( i )  ;^146^^^^^131^161^return retval.toString (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P14_Delete_Statement]^^146^^^^^131^161^return retval.toString (  ) ;^[CLASS] PaintUtilities  [METHOD] colorToString [RETURN_TYPE] String   Color c [VARIABLES] Field  f  StringBuffer  retval  boolean  Color  c  Object  oColor  String  color  name  Field[]  fields  int  fillUp  i  Exception  e  
[P2_Replace_Operator]^if  ( value != null )  {^157^^^^^155^177^if  ( value == null )  {^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P8_Replace_Mix]^if  ( value == true )  {^157^^^^^155^177^if  ( value == null )  {^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P9_Replace_Statement]^if  ( p2 == null )  {^157^^^^^155^177^if  ( value == null )  {^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P9_Replace_Statement]^if  ( p1 == null )  {^157^^^^^155^177^if  ( value == null )  {^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P15_Unwrap_Block]^return java.awt.Color.black;^157^158^159^^^155^177^if  ( value == null )  { return Color.black; }^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P16_Remove_Block]^^157^158^159^^^155^177^if  ( value == null )  { return Color.black; }^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P13_Insert_Block]^if  ( p1 == null )  {     return p2 == null; }^157^^^^^155^177^[Delete]^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P13_Insert_Block]^if  ( p2 == null )  {     return false; }^157^^^^^155^177^[Delete]^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P7_Replace_Invocation]^return Color.equals ( value ) ;^162^^^^^155^177^return Color.decode ( value ) ;^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P14_Delete_Statement]^^162^^^^^155^177^return Color.decode ( value ) ;^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P8_Replace_Mix]^return  ( Color )  f .getName (  )  ;^170^^^^^155^177^return  ( Color )  f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P7_Replace_Invocation]^final Field f = Color.class .getFields (  )  ;^168^^^^^155^177^final Field f = Color.class.getField ( value ) ;^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P11_Insert_Donor_Statement]^Field[] fields = Color.class.getFields (  ) ;final Field f = Color.class.getField ( value ) ;^168^^^^^155^177^final Field f = Color.class.getField ( value ) ;^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P14_Delete_Statement]^^168^^^^^155^177^final Field f = Color.class.getField ( value ) ;^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P14_Delete_Statement]^^170^^^^^155^177^return  ( Color )  f.get ( null ) ;^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
[P7_Replace_Invocation]^return Color .getRGB (  )  ;^162^^^^^155^177^return Color.decode ( value ) ;^[CLASS] PaintUtilities  [METHOD] stringToColor [RETURN_TYPE] Color   String value [VARIABLES] Field  f  boolean  NumberFormatException  nfe  String  value  Exception  ce  
