[P1_Replace_Type]^private static final  int  serialVersionUID = 4668320403707308155L;^79^^^^^74^84^private static final long serialVersionUID = 4668320403707308155L;^[CLASS] WaferMapPlot   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 4668320403707308155;^79^^^^^74^84^private static final long serialVersionUID = 4668320403707308155L;^[CLASS] WaferMapPlot   [VARIABLES] 
[P3_Replace_Literal]^public static final Stroke DEAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,^82^83^84^85^^82^87^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,^[CLASS] WaferMapPlot   [VARIABLES] 
[P5_Replace_Variable]^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke. BasicStroke.JOIN_BEVEL, 0.0f,^82^83^84^85^^82^87^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,^[CLASS] WaferMapPlot   [VARIABLES] 
[P5_Replace_Variable]^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke. 0.0f,^82^83^84^85^^82^87^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,^[CLASS] WaferMapPlot   [VARIABLES] 
[P8_Replace_Mix]^public static  Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,^82^83^84^85^^82^87^public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke ( 0.5f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f,^[CLASS] WaferMapPlot   [VARIABLES] 
[P8_Replace_Mix]^public static final Paint DEFAULT_GRIDLINE_PAINT ;^90^^^^^85^95^public static final Paint DEFAULT_GRIDLINE_PAINT = Color.lightGray;^[CLASS] WaferMapPlot   [VARIABLES] 
[P3_Replace_Literal]^public static final boolean DEFAULT_CROSSHAIR_VISIBLE = true;^93^^^^^88^98^public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;^[CLASS] WaferMapPlot   [VARIABLES] 
[P8_Replace_Mix]^public  final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;^96^97^^^^96^97^public static final Stroke DEFAULT_CROSSHAIR_STROKE = DEFAULT_GRIDLINE_STROKE;^[CLASS] WaferMapPlot   [VARIABLES] 
[P8_Replace_Mix]^public  final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;^100^^^^^95^105^public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;^[CLASS] WaferMapPlot   [VARIABLES] 
[P3_Replace_Literal]^protected static ResourceBundle localizationResources = ResourceBundle.getBundle ( "art.plot.Locali" ) ;^103^104^^^^103^104^protected static ResourceBundle localizationResources = ResourceBundle.getBundle ( "org.jfree.chart.plot.LocalizationBundle" ) ;^[CLASS] WaferMapPlot   [VARIABLES] 
[P8_Replace_Mix]^protected static ResourceBundle localizationResources ;^103^104^^^^103^104^protected static ResourceBundle localizationResources = ResourceBundle.getBundle ( "org.jfree.chart.plot.LocalizationBundle" ) ;^[CLASS] WaferMapPlot   [VARIABLES] 
[P14_Delete_Statement]^^125^^^^^124^126^this ( null ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapPlot()   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this ( dataset, null ) ;this ( null ) ;^125^^^^^124^126^this ( null ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapPlot()   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^134^^^^^133^135^this ( dataset, null ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapDataset)   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this ( null ) ;this ( dataset, null ) ;^134^^^^^133^135^this ( dataset, null ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapDataset)   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P12_Insert_Condition]^if  ( dataset != null )  { this ( dataset, null ) ; }^134^^^^^133^135^this ( dataset, null ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapDataset)   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P12_Insert_Condition]^if  ( this.dataset != null )  { this ( dataset, null ) ; }^134^^^^^133^135^this ( dataset, null ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapDataset)   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^145^^^^^143^160^super (  ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^this.orientation  =  this.orientation ;^147^^^^^143^160^this.orientation = PlotOrientation.VERTICAL;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P12_Insert_Condition]^if  ( this.orientation == PlotOrientation.HORIZONTAL )  { this.orientation = PlotOrientation.VERTICAL; }^147^^^^^143^160^this.orientation = PlotOrientation.VERTICAL;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^this.dataset =  null;^149^^^^^143^160^this.dataset = dataset;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P2_Replace_Operator]^if  ( dataset == null )  {^150^^^^^143^160^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^if  ( dataset != this )  {^150^^^^^143^160^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( renderer != null )  {^150^^^^^143^160^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( info != null )  {^150^^^^^143^160^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( this.dataset != null )  {^150^^^^^143^160^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P15_Unwrap_Block]^dataset.addChangeListener(this);^150^151^152^^^143^160^if  ( dataset != null )  { dataset.addChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P16_Remove_Block]^^150^151^152^^^143^160^if  ( dataset != null )  { dataset.addChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ;     renderer.addChangeListener ( this ) ; }^150^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ; }^150^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.renderer )  != null )  {     removeChangeListener ( this ) ; }^150^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     setDatasetGroup ( dataset.getGroup (  )  ) ;     dataset.addChangeListener ( this ) ; }^150^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.dataset )  != null )  {     removeChangeListener ( this ) ; }^150^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^dataset.removeChangeListener ( this ) ;^151^^^^^143^160^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^151^^^^^143^160^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^renderer.addChangeListener ( this ) ;dataset.addChangeListener ( this ) ;^151^^^^^143^160^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.dataset.removeChangeListener ( this ) ;dataset.addChangeListener ( this ) ;^151^^^^^143^160^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.renderer.removeChangeListener ( this ) ;dataset.addChangeListener ( this ) ;^151^^^^^143^160^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     dataset.addChangeListener ( this ) ; }^151^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^this.renderer =  null;^154^^^^^143^160^this.renderer = renderer;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P2_Replace_Operator]^if  ( renderer == null )  {^155^^^^^143^160^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^if  ( renderer != this )  {^155^^^^^143^160^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( dataset != null )  {^155^^^^^143^160^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( info != null )  {^155^^^^^143^160^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( this.dataset != null )  {^155^^^^^143^160^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( this.renderer != null )  {^155^^^^^143^160^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P15_Unwrap_Block]^renderer.setPlot(this); renderer.addChangeListener(this);^155^156^157^158^^143^160^if  ( renderer != null )  { renderer.setPlot ( this ) ; renderer.addChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P16_Remove_Block]^^155^156^157^158^^143^160^if  ( renderer != null )  { renderer.setPlot ( this ) ; renderer.addChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     dataset.addChangeListener ( this ) ; }^155^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ; }^155^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.renderer )  != null )  {     removeChangeListener ( this ) ; }^155^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     setDatasetGroup ( dataset.getGroup (  )  ) ;     dataset.addChangeListener ( this ) ; }^155^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.dataset )  != null )  {     removeChangeListener ( this ) ; }^155^^^^^143^160^[Delete]^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^renderer.addChangeListener ( this ) ;^156^^^^^143^160^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^renderer .getChipColor (  )  ;^156^^^^^143^160^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^156^157^^^^143^160^renderer.setPlot ( this ) ; renderer.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^renderer.addChangeListener ( this ) ;renderer.setPlot ( this ) ;^156^^^^^143^160^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.renderer.removeChangeListener ( this ) ;renderer.setPlot ( this ) ;^156^^^^^143^160^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^renderer.removeChangeListener ( this ) ;^157^^^^^143^160^renderer.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^157^^^^^143^160^renderer.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^renderer.setPlot ( this ) ;renderer.addChangeListener ( this ) ;^157^^^^^143^160^renderer.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.dataset.removeChangeListener ( this ) ;renderer.addChangeListener ( this ) ;^157^^^^^143^160^renderer.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^dataset.addChangeListener ( this ) ;renderer.addChangeListener ( this ) ;^157^^^^^143^160^renderer.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.renderer.removeChangeListener ( this ) ;renderer.addChangeListener ( this ) ;^157^^^^^143^160^renderer.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^156^^^^^143^160^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] <init> [RETURN_TYPE] WaferMapRenderer)   WaferMapDataset dataset WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P3_Replace_Literal]^return  ( "WMAP_PlotP_" ) ;^168^^^^^167^169^return  ( "WMAP_Plot" ) ;^[CLASS] WaferMapPlot  [METHOD] getPlotType [RETURN_TYPE] String   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P5_Replace_Variable]^return dataset;^177^^^^^176^178^return this.dataset;^[CLASS] WaferMapPlot  [METHOD] getDataset [RETURN_TYPE] WaferMapDataset   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P2_Replace_Operator]^if  ( this.dataset == null )  {^189^^^^^186^202^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P5_Replace_Variable]^if  ( dataset != null )  {^189^^^^^186^202^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^if  ( this.dataset != true )  {^189^^^^^186^202^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( renderer != null )  {^189^^^^^186^202^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( this.renderer != null )  {^189^^^^^186^202^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P15_Unwrap_Block]^this.dataset.removeChangeListener(this);^189^190^191^^^186^202^if  ( this.dataset != null )  { this.dataset.removeChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P16_Remove_Block]^^189^190^191^^^186^202^if  ( this.dataset != null )  { this.dataset.removeChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ;     renderer.addChangeListener ( this ) ; }^189^^^^^186^202^[Delete]^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     dataset.addChangeListener ( this ) ; }^189^^^^^186^202^[Delete]^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.renderer )  != null )  {     removeChangeListener ( this ) ; }^189^^^^^186^202^[Delete]^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     setDatasetGroup ( dataset.getGroup (  )  ) ;     dataset.addChangeListener ( this ) ; }^189^^^^^186^202^[Delete]^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^this.dataset.getChipSpace ( this ) ;^190^^^^^186^202^this.dataset.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^190^^^^^186^202^this.dataset.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^renderer.addChangeListener ( this ) ;this.dataset.removeChangeListener ( this ) ;^190^^^^^186^202^this.dataset.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^dataset.addChangeListener ( this ) ;this.dataset.removeChangeListener ( this ) ;^190^^^^^186^202^this.dataset.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.renderer.removeChangeListener ( this ) ;this.dataset.removeChangeListener ( this ) ;^190^^^^^186^202^this.dataset.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.dataset )  != null )  {     removeChangeListener ( this ) ; }^190^^^^^186^202^[Delete]^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^this.dataset =  null;^194^^^^^186^202^this.dataset = dataset;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P2_Replace_Operator]^if  ( dataset == null )  {^195^^^^^186^202^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^if  ( dataset != true )  {^195^^^^^186^202^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( renderer != null )  {^195^^^^^186^202^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( info != null )  {^195^^^^^186^202^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( this.dataset != null )  {^195^^^^^186^202^if  ( dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P15_Unwrap_Block]^setDatasetGroup(dataset.getGroup()); dataset.addChangeListener(this);^195^196^197^198^^186^202^if  ( dataset != null )  { setDatasetGroup ( dataset.getGroup (  )  ) ; dataset.addChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P16_Remove_Block]^^195^196^197^198^^186^202^if  ( dataset != null )  { setDatasetGroup ( dataset.getGroup (  )  ) ; dataset.addChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ;     renderer.addChangeListener ( this ) ; }^195^^^^^186^202^[Delete]^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     dataset.addChangeListener ( this ) ; }^195^^^^^186^202^[Delete]^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.dataset )  != null )  {     removeChangeListener ( this ) ; }^195^^^^^186^202^[Delete]^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^notifyListeners ( dataset.getGroup (  )  ) ;^196^^^^^186^202^setDatasetGroup ( dataset.getGroup (  )  ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^setDatasetGroup ( dataset.addChangeListener (  )  ) ;^196^^^^^186^202^setDatasetGroup ( dataset.getGroup (  )  ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^setDatasetGroup ( dataset .getMaxChipX (  )   ) ;^196^^^^^186^202^setDatasetGroup ( dataset.getGroup (  )  ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^196^^^^^186^202^setDatasetGroup ( dataset.getGroup (  )  ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^196^197^^^^186^202^setDatasetGroup ( dataset.getGroup (  )  ) ; dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^dataset.removeChangeListener ( this ) ;^197^^^^^186^202^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^197^^^^^186^202^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^renderer.addChangeListener ( this ) ;dataset.addChangeListener ( this ) ;^197^^^^^186^202^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.dataset.removeChangeListener ( this ) ;dataset.addChangeListener ( this ) ;^197^^^^^186^202^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.renderer.removeChangeListener ( this ) ;dataset.addChangeListener ( this ) ;^197^^^^^186^202^dataset.addChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^setDatasetGroup ( new DatasetChangeEvent ( this, dataset )  ) ;^201^^^^^186^202^datasetChanged ( new DatasetChangeEvent ( this, dataset )  ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^201^^^^^186^202^datasetChanged ( new DatasetChangeEvent ( this, dataset )  ) ;^[CLASS] WaferMapPlot  [METHOD] setDataset [RETURN_TYPE] void   WaferMapDataset dataset [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P2_Replace_Operator]^if  ( this.renderer == null )  {^213^^^^^211^224^if  ( this.renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P5_Replace_Variable]^if  ( renderer != null )  {^213^^^^^211^224^if  ( this.renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^if  ( this.renderer != false )  {^213^^^^^211^224^if  ( this.renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( info != null )  {^213^^^^^211^224^if  ( this.renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( this.dataset != null )  {^213^^^^^211^224^if  ( this.renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P15_Unwrap_Block]^this.renderer.removeChangeListener(this);^213^214^215^^^211^224^if  ( this.renderer != null )  { this.renderer.removeChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P16_Remove_Block]^^213^214^215^^^211^224^if  ( this.renderer != null )  { this.renderer.removeChangeListener ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ;     renderer.addChangeListener ( this ) ; }^213^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     dataset.addChangeListener ( this ) ; }^213^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ; }^213^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.dataset )  != null )  {     removeChangeListener ( this ) ; }^213^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^this.renderer.getLegendCollection ( this ) ;^214^^^^^211^224^this.renderer.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^214^^^^^211^224^this.renderer.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^renderer.addChangeListener ( this ) ;this.renderer.removeChangeListener ( this ) ;^214^^^^^211^224^this.renderer.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^renderer.setPlot ( this ) ;this.renderer.removeChangeListener ( this ) ;^214^^^^^211^224^this.renderer.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.dataset.removeChangeListener ( this ) ;this.renderer.removeChangeListener ( this ) ;^214^^^^^211^224^this.renderer.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^dataset.addChangeListener ( this ) ;this.renderer.removeChangeListener ( this ) ;^214^^^^^211^224^this.renderer.removeChangeListener ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.renderer )  != null )  {     removeChangeListener ( this ) ; }^214^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^this.renderer =  null;^217^^^^^211^224^this.renderer = renderer;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P2_Replace_Operator]^if  ( renderer == null )  {^218^^^^^211^224^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P8_Replace_Mix]^if  ( renderer != false )  {^218^^^^^211^224^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( dataset != null )  {^218^^^^^211^224^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( info != null )  {^218^^^^^211^224^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( this.dataset != null )  {^218^^^^^211^224^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P9_Replace_Statement]^if  ( this.renderer != null )  {^218^^^^^211^224^if  ( renderer != null )  {^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P15_Unwrap_Block]^renderer.setPlot(this);^218^219^220^^^211^224^if  ( renderer != null )  { renderer.setPlot ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P16_Remove_Block]^^218^219^220^^^211^224^if  ( renderer != null )  { renderer.setPlot ( this ) ; }^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( info != null )  {     info.setPlotArea ( area ) ; }^218^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ;     renderer.addChangeListener ( this ) ; }^218^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  ( dataset != null )  {     dataset.addChangeListener ( this ) ; }^218^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( this.renderer )  != null )  {     removeChangeListener ( this ) ; }^218^^^^^211^224^[Delete]^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^renderer.addChangeListener ( this ) ;^219^^^^^211^224^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^219^^^^^211^224^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^renderer.addChangeListener ( this ) ;renderer.setPlot ( this ) ;^219^^^^^211^224^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.renderer.removeChangeListener ( this ) ;renderer.setPlot ( this ) ;^219^^^^^211^224^renderer.setPlot ( this ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^getInsets ( new PlotChangeEvent ( this )  ) ;^222^^^^^211^224^notifyListeners ( new PlotChangeEvent ( this )  ) ;^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^222^223^224^^^211^224^notifyListeners ( new PlotChangeEvent ( this )  ) ;  }^[CLASS] WaferMapPlot  [METHOD] setRenderer [RETURN_TYPE] void   WaferMapRenderer renderer [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P2_Replace_Operator]^boolean b1 =  ( area.getWidth (  )  < MINIMUM_WIDTH_TO_DRAW ) ;^240^^^^^235^258^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^boolean b1 =  ( MINIMUM_WIDTH_TO_DRAW.getWidth (  )  <= area ) ;^240^^^^^235^258^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P7_Replace_Invocation]^boolean b1 =  ( area .getHeight (  )   <= MINIMUM_WIDTH_TO_DRAW ) ;^240^^^^^235^258^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P11_Insert_Donor_Statement]^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^240^^^^^235^258^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P14_Delete_Statement]^^240^^^^^235^258^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P2_Replace_Operator]^boolean b2 =  ( area.getHeight (  )  < MINIMUM_HEIGHT_TO_DRAW ) ;^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^boolean b2 =  ( area.getHeight (  )  <= 1 ) ;^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^boolean b2 =  ( MINIMUM_HEIGHT_TO_DRAW.getHeight (  )  <= area ) ;^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P8_Replace_Mix]^boolean b2 =  ( area .getWidth (  )   <= MINIMUM_HEIGHT_TO_DRAW ) ;^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P11_Insert_Donor_Statement]^boolean b1 =  ( area.getWidth (  )  <= MINIMUM_WIDTH_TO_DRAW ) ;boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P14_Delete_Statement]^^241^^^^^235^258^boolean b2 =  ( area.getHeight (  )  <= MINIMUM_HEIGHT_TO_DRAW ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P2_Replace_Operator]^if  ( b1 && b2 )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^if  ( b1 || DEFAULT_CROSSHAIR_VISIBLE )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^if  ( b2 || b1 )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P6_Replace_Expression]^if  ( b1 ) {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P6_Replace_Expression]^if  (  b2 )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P8_Replace_Mix]^if  ( DEFAULT_CROSSHAIR_VISIBLE || b2 )  {^242^^^^^235^258^if  ( b1 || b2 )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P15_Unwrap_Block]^return ;^242^243^244^^^235^258^if  ( b1 || b2 )  { return; }^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P16_Remove_Block]^^242^243^244^^^235^258^if  ( b1 || b2 )  { return; }^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P2_Replace_Operator]^if  ( info == null )  {^247^^^^^235^258^if  ( info != null )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P8_Replace_Mix]^if  ( info != false )  {^247^^^^^235^258^if  ( info != null )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P9_Replace_Statement]^if  ( dataset != null )  {^247^^^^^235^258^if  ( info != null )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P9_Replace_Statement]^if  ( renderer != null )  {^247^^^^^235^258^if  ( info != null )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P9_Replace_Statement]^if  ( this.renderer != null )  {^247^^^^^235^258^if  ( info != null )  {^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P15_Unwrap_Block]^info.setPlotArea(area);^247^248^249^^^235^258^if  ( info != null )  { info.setPlotArea ( area ) ; }^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P16_Remove_Block]^^247^248^249^^^235^258^if  ( info != null )  { info.setPlotArea ( area ) ; }^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P13_Insert_Block]^if  ( renderer != null )  {     renderer.setPlot ( this ) ; }^247^^^^^235^258^[Delete]^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P14_Delete_Statement]^^248^^^^^235^258^info.setPlotArea ( area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P11_Insert_Donor_Statement]^insets.trim ( area ) ;info.setPlotArea ( area ) ;^248^^^^^235^258^info.setPlotArea ( area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P14_Delete_Statement]^^252^253^^^^235^258^RectangleInsets insets = getInsets (  ) ; insets.trim ( area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P14_Delete_Statement]^^253^^^^^235^258^insets.trim ( area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P11_Insert_Donor_Statement]^info.setPlotArea ( area ) ;insets.trim ( area ) ;^253^^^^^235^258^insets.trim ( area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^drawChipGrid (  area ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^drawChipGrid ( g2 ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^drawChipGrid ( area, g2 ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P7_Replace_Invocation]^drawWaferEdge ( g2, area ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P14_Delete_Statement]^^255^256^^^^235^258^drawChipGrid ( g2, area ) ; drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P11_Insert_Donor_Statement]^drawWaferEdge ( g2, area ) ;drawChipGrid ( g2, area ) ;^255^^^^^235^258^drawChipGrid ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^drawWaferEdge (  area ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^drawWaferEdge ( g2 ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P5_Replace_Variable]^drawWaferEdge ( area, g2 ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P7_Replace_Invocation]^drawChipGrid ( g2, area ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P14_Delete_Statement]^^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P11_Insert_Donor_Statement]^drawChipGrid ( g2, area ) ;drawWaferEdge ( g2, area ) ;^256^^^^^235^258^drawWaferEdge ( g2, area ) ;^[CLASS] WaferMapPlot  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 Rectangle2D area Point2D anchor PlotState state PlotRenderingInfo info [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  PlotRenderingInfo  info  WaferMapDataset  dataset  Rectangle2D  area  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  Point2D  anchor  RectangleInsets  insets  ResourceBundle  localizationResources  WaferMapRenderer  renderer  PlotState  state  
[P7_Replace_Invocation]^Shape savedClip = g2.setClip (  ) ;^268^^^^^253^283^Shape savedClip = g2.getClip (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^Shape savedClip = g2 .setClip ( savedClip )  ;^268^^^^^253^283^Shape savedClip = g2.getClip (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^268^^^^^253^283^Shape savedClip = g2.getClip (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setClip ( getWaferEdge ( chip )  ) ;^269^^^^^254^284^g2.setClip ( getWaferEdge ( plotArea )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2 .getClip (  )  ;^269^^^^^254^284^g2.setClip ( getWaferEdge ( plotArea )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2.setClip ( setRenderer ( plotArea )  ) ;^269^^^^^254^284^g2.setClip ( getWaferEdge ( plotArea )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^269^^^^^254^284^g2.setClip ( getWaferEdge ( plotArea )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^Ellipse2D waferEdge = getWaferEdge ( plotArea ) ;g2.setClip ( getWaferEdge ( plotArea )  ) ;^269^^^^^254^284^g2.setClip ( getWaferEdge ( plotArea )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^g2.setClip ( setRenderer ( chip )  ) ;^269^^^^^254^284^g2.setClip ( getWaferEdge ( plotArea )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^269^270^^^^254^284^g2.setClip ( getWaferEdge ( plotArea )  ) ; Rectangle2D chip = new Rectangle2D.Double (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D chip = Rectangle2D chip =  Rectangle2D.new Double (  )  ;^270^^^^^255^285^Rectangle2D chip = new Rectangle2D.Double (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^long  xchips = 35;^271^^^^^256^286^int xchips = 35;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^int xchips = 34;^271^^^^^256^286^int xchips = 35;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^int ychips = 20;int xchips = 35;^271^^^^^256^286^int xchips = 35;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^short  ychips = 20;^272^^^^^257^287^int ychips = 20;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^int ychips = 14;^272^^^^^257^287^int ychips = 20;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^int xchips = 35;int ychips = 20;^272^^^^^257^287^int ychips = 20;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int space = 1d;^273^^^^^258^288^double space = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double major = 0d;double space = 1d;^273^^^^^258^288^double space = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double chipHeight = 1d;double space = 1d;^273^^^^^258^288^double space = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double minor = 0d;double space = 1d;^273^^^^^258^288^double space = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double chipWidth = 1d;double space = 1d;^273^^^^^258^288^double space = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset == null )  {^274^^^^^259^289^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( getMaxChipX() + 2 )  {^274^^^^^259^289^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( getMaxChipY() + 2 )  {^274^^^^^259^289^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^if  ( this.dataset != true )  {^274^^^^^259^289^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P9_Replace_Statement]^if  ( dataset != null )  {^274^^^^^259^289^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P9_Replace_Statement]^if  ( renderer != null )  {^274^^^^^259^289^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P9_Replace_Statement]^if  ( this.renderer != null )  {^274^^^^^259^289^if  ( this.dataset != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P15_Unwrap_Block]^xchips = (this.dataset.getMaxChipX()) + 2; ychips = (this.dataset.getMaxChipY()) + 2; space = this.dataset.getChipSpace();^274^275^276^277^278^259^289^if  ( this.dataset != null )  { xchips = this.dataset.getMaxChipX (  )  + 2; ychips = this.dataset.getMaxChipY (  )  + 2; space = this.dataset.getChipSpace (  ) ; }^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P16_Remove_Block]^^274^275^276^277^278^259^289^if  ( this.dataset != null )  { xchips = this.dataset.getMaxChipX (  )  + 2; ychips = this.dataset.getMaxChipY (  )  + 2; space = this.dataset.getChipSpace (  ) ; }^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^xchips = this.dataset.getMaxChipX (  &&  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^xchips = this.dataset.getMaxChipX (  )  ;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^xchips = dataset.getMaxChipX (  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^xchips = this.dataset.getMaxChipY (  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^xchips = this.dataset.getMaxChipX (  )  + 2L;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^space = this.dataset.getChipSpace (  ) ;xchips = this.dataset.getMaxChipX (  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^ychips = this.dataset.getMaxChipY (  )  + 2;xchips = this.dataset.getMaxChipX (  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^ychips = this.dataset.getMaxChipY (   instanceof   )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^ychips = this.dataset.getMaxChipY (  )  + ychips;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^ychips = dataset.getMaxChipY (  )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^ychips = this.dataset.getMaxChipX (  )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^ychips = this.dataset.getMaxChipY (  )  + 2 + 3;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^xchips = this.dataset.getMaxChipX (  )  + 2;ychips = this.dataset.getMaxChipY (  )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^space = this.dataset.getChipSpace (  ) ;ychips = this.dataset.getMaxChipY (  )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^space = dataset.getChipSpace (  ) ;^277^^^^^262^292^space = this.dataset.getChipSpace (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^space = this.dataset.getGroup (  ) ;^277^^^^^262^292^space = this.dataset.getChipSpace (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^space  =  space ;^277^^^^^262^292^space = this.dataset.getChipSpace (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^xchips = this.dataset.getMaxChipX (  )  + 2;space = this.dataset.getChipSpace (  ) ;^277^^^^^262^292^space = this.dataset.getChipSpace (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^ychips = this.dataset.getMaxChipY (  )  + 2;space = this.dataset.getChipSpace (  ) ;^277^^^^^262^292^space = this.dataset.getChipSpace (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^276^277^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2; space = this.dataset.getChipSpace (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^277^^^^^262^292^space = this.dataset.getChipSpace (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^xchips = this.dataset.getMaxChipX (  <  )  + 2;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^xchips = this.dataset.getMaxChipX (  )  + x;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^xchips = this.dataset.getMaxChipX (  )  + 2 * 3;^275^^^^^260^290^xchips = this.dataset.getMaxChipX (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^ychips = this.dataset.getMaxChipY (  <<  )  + 2;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^ychips = this.dataset.getMaxChipY (  )  ;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^ychips = this.dataset.getMaxChipY (  )  + 3;^276^^^^^261^291^ychips = this.dataset.getMaxChipY (  )  + 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int startX = plotArea.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double startX = chip.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^double startX = chip .getY (  )  ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double upperLeftX = plotArea.getX (  ) ;double startX = plotArea.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;double startX = plotArea.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;double startX = plotArea.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double upperLeftY = plotArea.getY (  ) ;double startX = plotArea.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^double startX = plotArea .getY (  )  ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;double startX = plotArea.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;double startX = plotArea.getX (  ) ;^279^^^^^264^294^double startX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int startY = plotArea.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double startY = chip.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double upperLeftX = plotArea.getX (  ) ;double startY = plotArea.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;double startY = plotArea.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;double startY = plotArea.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double upperLeftY = plotArea.getY (  ) ;double startY = plotArea.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^double startY = plotArea .getX (  )  ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;double startY = plotArea.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;double startY = plotArea.getY (  ) ;^280^^^^^265^295^double startY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int chipWidth = 1d;^281^^^^^266^296^double chipWidth = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double major = 0d;double chipWidth = 1d;^281^^^^^266^296^double chipWidth = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double chipHeight = 1d;double chipWidth = 1d;^281^^^^^266^296^double chipWidth = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double space = 1d;double chipWidth = 1d;^281^^^^^266^296^double chipWidth = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double minor = 0d;double chipWidth = 1d;^281^^^^^266^296^double chipWidth = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int chipHeight = 1d;^282^^^^^267^297^double chipHeight = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double major = 0d;double chipHeight = 1d;^282^^^^^267^297^double chipHeight = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double space = 1d;double chipHeight = 1d;^282^^^^^267^297^double chipHeight = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double minor = 0d;double chipHeight = 1d;^282^^^^^267^297^double chipHeight = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double chipWidth = 1d;double chipHeight = 1d;^282^^^^^267^297^double chipHeight = 1d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( plotArea.getWidth (  )  == plotArea.getHeight (  )  )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( chip.getWidth (  )  != plotArea.getHeight (  )  )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth() > plotArea.getHeight() )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth() == minor )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( major - minor / 2 )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( major - minor )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth() - ((space * xchips) - 1) / xchips )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth (  )  -  ( space * xchips )  - 1 )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( space * xchips - 1 )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( space * xchips )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth() - ((space * ychips) - 1) / ychips )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth (  )  -  ( space * ychips )  - 1 )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( space * ychips - 1 )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( space * ychips )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getHeight() - ((space * xchips) - 1) / xchips )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getHeight (  )  -  ( space * xchips )  - 1 )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getHeight() - ((space * ychips) - 1) / ychips )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getHeight (  )  -  ( space * ychips )  - 1 )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^if  ( plotArea.getWidth (  )  != plotArea .getWidth (  )   )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^if  ( plotArea .getHeight (  )   != plotArea.getHeight (  )  )  {^283^^^^^268^298^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( plotArea.getWidth (  )  == plotArea.getHeight (  )  )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( chip.getWidth (  )  > plotArea.getHeight (  )  )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^if  ( plotArea .getHeight (  )   > plotArea.getHeight (  )  )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^if  ( plotArea.getWidth (  )  > plotArea .getWidth (  )   )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P9_Replace_Statement]^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P15_Unwrap_Block]^major = plotArea.getWidth(); minor = plotArea.getHeight();^286^287^288^289^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ; }^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P16_Remove_Block]^^286^287^288^289^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ; }^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^major = chip.getHeight (  ) ;^291^^^^^286^293^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^major =  null.getHeight (  ) ;^291^^^^^286^293^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^291^^^^^286^293^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;major = plotArea.getHeight (  ) ;^291^^^^^286^293^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^291^^^^^286^293^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^minor = chip.getWidth (  ) ;^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  == minor )  { minor = plotArea.getWidth (  ) ; }^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^major = plotArea .getWidth (  )  ;^291^^^^^286^293^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^291^292^^^^286^293^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^291^^^^^286^293^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  { major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ; }^291^292^^^^286^293^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ; }^291^292^^^^286^293^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^286^293^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^major = chip.getWidth (  ) ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;major = plotArea.getWidth (  ) ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;major = plotArea.getWidth (  ) ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;major = plotArea.getWidth (  ) ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  == minor )  { major = plotArea.getWidth (  ) ; }^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^minor = chip.getHeight (  ) ;^288^^^^^273^303^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;minor = plotArea.getHeight (  ) ;^288^^^^^273^303^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;minor = plotArea.getHeight (  ) ;^288^^^^^273^303^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;minor = plotArea.getHeight (  ) ;^288^^^^^273^303^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^major = plotArea .getHeight (  )  ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^major = chip .getHeight (  )  ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;major = plotArea.getWidth (  ) ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;major = plotArea.getWidth (  ) ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;major = plotArea.getWidth (  ) ;^287^^^^^272^302^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  { major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ; }^287^288^^^^272^302^major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ; }^287^288^^^^272^302^major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^minor = plotArea .getWidth (  )  ;^288^^^^^273^303^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^288^^^^^273^303^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;minor = plotArea.getHeight (  ) ;^288^^^^^273^303^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( plotArea.getWidth (  )  != minor )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( chip.getWidth (  )  == minor )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( minor.getWidth (  )  == plotArea )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( major - minor / 2 )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( major - minor )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth() - ((space * xchips) - 1) / xchips )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth (  )  -  ( space * xchips )  - 1 )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( space * xchips - 1 )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( space * xchips )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth() - ((space * ychips) - 1) / ychips )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getWidth (  )  -  ( space * ychips )  - 1 )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( space * ychips - 1 )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( space * ychips )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getHeight() - ((space * xchips) - 1) / xchips )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getHeight (  )  -  ( space * xchips )  - 1 )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getHeight() - ((space * ychips) - 1) / ychips )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( plotArea.getHeight (  )  -  ( space * ychips )  - 1 )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^if  ( plotArea .getHeight (  )   == minor )  {^295^^^^^280^310^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startX +=  ( major - minor )  * 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startX +=  ( major  <=  minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^startX +=  ( major - minor )  / -6;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startX +=  ( upperLeftX - minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startX +=  ( major - startY )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startX +=  ( minor - major )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^startX +=  ( major - minor )  / 4;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;startX +=  ( major - minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;startX +=  ( major - minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^startY +=  ( major - minor )  / 2;startX +=  ( major - minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) * xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )   <   ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  >=  1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space - xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( chip.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getHeight (  )  -  ( startY * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( space.getHeight (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getHeight (  )  -  ( xchips * space - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 - 4 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) + ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )    instanceof    ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  <=  1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space + ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - xchips )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( chip.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getHeight (  )  -  ( startX * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * y - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( ychips.getHeight (  )  -  ( space * plotArea - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( space.getHeight (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getHeight (  )  -  ( ychips * space - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^chipHeight =  ( plotArea .getWidth (  )   -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 * 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( plotArea .getWidth (  )   -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startY +=  ( major - minor )  - 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startY +=  ( major  >=  minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^startY +=  ( major - minor )  / -5;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startY +=  ( upperLeftX - minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startY +=  ( major - upperLeftX )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startY +=  ( minor - major )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^startY +=  ( major - minor )  / 0;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;startY +=  ( major - minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;startY +=  ( major - minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^startX +=  ( major - minor )  / 2;startY +=  ( major - minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) - xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )   <   ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips  <  1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space / xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips  )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( chip.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getWidth (  )  -  ( startY * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( xchips.getWidth (  )  -  ( space * plotArea - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getWidth (  )  -  ( xchips * space - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 3 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) + ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )   <=   ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips  ^  1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space / ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips  )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( chip.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getWidth (  )  -  ( startX * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( ychips.getWidth (  )  -  ( space * plotArea - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( space.getWidth (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^chipHeight =  ( plotArea .getHeight (  )   -  ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 % 4 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^major = chip.getHeight (  ) ;^291^^^^^276^306^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^major = plotArea .getWidth (  )  ;^291^^^^^276^306^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^291^^^^^276^306^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;major = plotArea.getHeight (  ) ;^291^^^^^276^306^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^291^^^^^276^306^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^minor = chip.getWidth (  ) ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  == minor )  { minor = plotArea.getWidth (  ) ; }^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startY +=  ( major - minor )  + 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startY +=  ( major  ||  minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^startY +=  ( major - minor )  / ;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startY +=  ( major - startY )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^startY +=  ( major - minor )  / 1;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) + xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )   ^   ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips  |  1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space - xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - ychips )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 0 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) - ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )   &&   ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips  ||  1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space - ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - y )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getWidth (  )  -  ( upperLeftY * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * y - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getWidth (  )  -  ( ychips * space - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 / 0 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startX +=  ( major - minor )  - 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startX +=  ( major  &&  minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^startX +=  ( major - minor )  / y;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startX +=  ( startY - minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startX +=  ( major - upperLeftX )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startX +=  ( minor - major )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^startX +=  ( major - minor )  / 0;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;startX +=  ( major - minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;startX +=  ( major - minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^startY +=  ( major - minor )  / 2;startX +=  ( major - minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) - xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )   ||   ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  ^  1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space - xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - ychips )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( chip.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getHeight (  )  -  ( startY * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( space.getHeight (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getHeight (  )  -  ( xchips * space - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( xchips.getHeight (  )  -  ( space * plotArea - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^chipWidth =  ( plotArea .getWidth (  )   -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 4 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) + ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )   ||   ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  &  1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space - ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( chip.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getHeight (  )  -  ( startY * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( ychips.getHeight (  )  -  ( space * plotArea - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( space.getHeight (  )  -  ( plotArea * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^chipHeight =  ( plotArea .getWidth (  )   -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 4 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int major = 0d;^284^^^^^269^299^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double chipHeight = 1d;double major = 0d;^284^^^^^269^299^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double space = 1d;double major = 0d;^284^^^^^269^299^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double minor = 0d;double major = 0d;^284^^^^^269^299^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double chipWidth = 1d;double major = 0d;^284^^^^^269^299^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int minor = 0d;^285^^^^^270^300^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double major = 0d;double minor = 0d;^285^^^^^270^300^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double chipHeight = 1d;double minor = 0d;^285^^^^^270^300^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double space = 1d;double minor = 0d;^285^^^^^270^300^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double chipWidth = 1d;double minor = 0d;^285^^^^^270^300^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^291^^^^^276^306^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^291^^^^^276^306^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  { major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ; }^291^292^^^^276^306^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ; }^291^292^^^^276^306^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^minor = plotArea .getHeight (  )  ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;minor = plotArea.getWidth (  ) ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( plotArea.getWidth (  )  >= plotArea.getHeight (  )  )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^if  ( chip.getWidth (  )  > plotArea .getWidth (  )   )  {^286^^^^^271^301^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^287^288^^^^272^302^major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startX +=  ( major - minor )  + 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startX +=  ( major  !=  minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^startX +=  ( major - minor )  / -7;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startX +=  ( upperLeftY - minor )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startX +=  ( major - upperLeftY )  / 2;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^startX +=  ( major - minor )  / 3;^303^^^^^295^308^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )   >   ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  &  1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getHeight (  )  -  ( startX * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 3 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )   >>   ( space * ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  |  1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space / ychips - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 - 1 )  ) / ychips;^306^307^^^^295^308^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( chip .getWidth (  )   -  ( space * xchips - 1 )  ) / xchips;^304^305^^^^295^308^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startY +=  ( major  >>  minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )   &   ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips  ^  1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - y )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( space.getWidth (  )  -  ( plotArea * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 4 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) * ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )   !=   ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips  !=  1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space + ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 2 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^chipWidth =  ( plotArea .getHeight (  )   -  ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startY +=  ( major  |  minor )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^startY +=  ( major - minor )  / 7;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^startY +=  ( major - upperLeftY )  / 2;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^startY +=  ( major - minor )  / 2 / 3;^296^^^^^281^311^startY +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) * xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )   ||   ( space * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getWidth (  )  -  ( space + xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getWidth (  )  -  ( startX * xchips - 1 )  ) / xchips;^297^298^^^^282^312^chipWidth =  ( plotArea.getWidth (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )   >>   ( space * ychips - 1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips  &&  1 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 * 2 )  ) / ychips;^299^300^^^^284^314^chipHeight =  ( plotArea.getWidth (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startX +=  ( major - minor )  + 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^startX +=  ( major  <<  minor )  / 2;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^startX +=  ( major - minor )  / ychips;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^startX +=  ( major - minor )  / 4;^303^^^^^288^318^startX +=  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )   &   ( space * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips  <  1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - x )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipWidth =  ( plotArea.getHeight (  )  -  ( startX * xchips - 1 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 / 4 )  ) / xchips;^304^305^^^^289^319^chipWidth =  ( plotArea.getHeight (  )  -  ( space * xchips - 1 )  ) / xchips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) * ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )   >>   ( space * ychips - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips  >>  1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getHeight (  )  -  ( space * y - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chipHeight =  ( plotArea.getHeight (  )  -  ( ychips * space - 1 )  ) / ychips;^306^307^^^^291^321^chipHeight =  ( plotArea.getHeight (  )  -  ( space * ychips - 1 )  ) / ychips;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^291^292^^^^276^306^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^minor = chip .getHeight (  )  ;^292^^^^^277^307^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  == null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  >=  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ||  y  ||  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  |  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x   instanceof   1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  !=  y  !=  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  >=  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^if  ( this.dataset.getChipValue ( x , ychips - y  )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( y - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( x - 1, y - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( x - 1 - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( x - 1chips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( ychips - 1, x - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( y - 1, xchips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( x - 1 )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( ychips - y - 1 )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( ychips - y )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^if  ( this.dataset .getChipSpace (  )   != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  ^  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  |  y  |  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  !=  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - xchips, ychips - y - xchips ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, xchipschips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( dataset.getChipValue ( x - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1 - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1chips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( y - 1, xchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, x - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( ychips.getChipColor ( this.dataset.getChipValue ( x - 1, this.renderer - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( ychips.getChipValue ( x - 1, this.dataset - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2 .fill ( savedClip )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2.setPaint ( this.renderer.getChipColor ( this.dataset .getChipSpace (  )  )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P13_Insert_Block]^if  (  ( getChipValue (  ( x - 1 ) ,  (  ( ychips - y )  - 1 )  )  )  != null )  {     g2.setPaint ( getChipColor ( getChipValue (  ( x - 1 ) ,  (  ( ychips - y )  - 1 )  )  )  ) ; }^320^^^^^305^335^[Delete]^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  <=  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  |  y  |  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  ==  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x , ychips - y  ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, xchips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1 - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1chips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( ychips - 1, x - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - ychips - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( x.getChipValue ( this.dataset - 1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x  ^  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  >  y  >  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  ||  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.dataset.getChipValue ( x , ychips - y  ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( ychips - 1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( x - 1, y - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( x - 1, ychipschips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( x - 1 - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( x - 1chips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( ychips - 1, x - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^for  (  long  x = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  ( int x = 1; x < xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  ||  ( int x = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  <<  ( int x = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  ( int x = 1; x > xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  &&  ( int x = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int x = xchips; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int x = 10; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int x = 3; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int x = -2; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int x = ; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int x = y; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^for  ( int ychips = 1; x <= xchips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^for  ( int x = 1; x <= ychips; x++ )  {^311^^^^^296^326^for  ( int x = 1; x <= xchips; x++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  ^  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  <<  y  <<  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  !=  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  >  y  >  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  &  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^if  ( this.dataset.getChipValue ( x - y, ychips - y - y )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^if  ( this.dataset.getChipValue ( x - xchips, ychips - y - xchips )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( x - 1, xchips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( x - 1, xchipschips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( y.getChipValue ( x - 1, this.datasetchips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^if  ( this.dataset.getChipValue ( x - 1 / 0, ychips - y - 1 / 0 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  <  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <=  y  <=  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  |  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - y, ychips - y - y ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x , ychips - y  ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x   instanceof   1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  !=  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - ychips, ychips - y - ychips ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( y - 1, xchips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( y.getChipValue ( x - 1, this.datasetchips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( ychips.getChipValue ( x - 1, this.dataset - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^this.renderer.getChipColor ( this.dataset .getChipSpace (  )  ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x  ==  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  <=  y  <=  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  !=  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.dataset.getChipValue ( x - xchips, ychips - y - xchips ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( x - 1, xchips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( x - 1, xchipschips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^this.dataset .getChipSpace (  )  ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^for  (  short  y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  ( int y = 1; y < ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  <<  ( int y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  &  ( int y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = xchips; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = x; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = 6; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = ; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = 5; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^for  ( int ychips = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^for  ( int y = 1; y <= xchips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^for  ( int ychips = 1; y <= y; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  &  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  <=  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ^  y  ^  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ==  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^if  ( this.dataset.getChipValue ( x - x, ychips - y - x )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( ychips - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( this.dataset.getChipValue ( x - 1, y - ychips - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^if  ( this.dataset.getChipValue ( x - 4, ychips - y - 4 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <<  y  <<  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <=  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - x, ychips - y - x ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( y - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, xchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.dataset.getChipColor ( this.renderer.getChipValue ( x - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( x.getChipValue ( this.dataset - 1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  >  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  ^  y  ^  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <<  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - x, ychips - y - x ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, xchipschips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x  &  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  &  y  &  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  <  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.dataset.getChipValue ( x - x, ychips - y - x ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( y - 1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  >  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =   instanceof   ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ( startY  ||  chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight - y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double - upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  >>  1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( upperLeftX - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( startY - startY )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * ychips ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( upperLeftX *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( space - chipHeight )  +  ( chipHeight * y ) +  ( startY *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( startY - y )  +  ( chipHeight * chipHeight ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * space ) +  ( y *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, plotAreaWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( startY, upperLeftY, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftX, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, startX, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, upperLeftX ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftYWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame (  upperLeftY, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX,  chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY,  chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, chipHeightWidth, chip ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( chipHeight, upperLeftY, chipWidth, upperLeftX ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftY, upperLeftX, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, chipHeight, chipWidth ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chip.setFrame ( upperLeftY, upperLeftY, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^317^318^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ; g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2.setClip ( Color.white ) ;^318^^^^^303^333^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^318^^^^^303^333^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setClip ( savedClip ) ;g2.setColor ( Color.white ) ;^318^^^^^303^333^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.lightGray ) ;g2.setColor ( Color.white ) ;^318^^^^^303^333^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.black ) ;g2.setColor ( Color.white ) ;^318^^^^^303^333^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  <  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  <  y  <  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  <  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  <<  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >  y  >  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  ^  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( y.getChipValue ( x - 1, this.datasetchips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  <  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >>  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - xchips, ychips - y - xchips ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  >>  y  >>  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( y - 1, xchips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^this.dataset.getChipValue ( x - 1, y - ychips - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.fill ( plotArea ) ;^326^^^^^311^341^g2.fill ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^326^327^^^^311^341^g2.fill ( chip ) ; g2.setColor ( Color.lightGray ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.fill ( notch ) ;g2.fill ( chip ) ;^326^^^^^311^341^g2.fill ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setClip ( savedClip ) ;g2.fill ( chip ) ;^326^^^^^311^341^g2.fill ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( chip ) ;g2.fill ( chip ) ;^326^^^^^311^341^g2.fill ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( notch ) ;g2.fill ( chip ) ;^326^^^^^311^341^g2.fill ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2.setClip ( Color.lightGray ) ;^327^^^^^312^342^g2.setColor ( Color.lightGray ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^327^328^^^^312^342^g2.setColor ( Color.lightGray ) ; g2.draw ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setClip ( savedClip ) ;g2.setColor ( Color.lightGray ) ;^327^^^^^312^342^g2.setColor ( Color.lightGray ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.black ) ;g2.setColor ( Color.lightGray ) ;^327^^^^^312^342^g2.setColor ( Color.lightGray ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.white ) ;g2.setColor ( Color.lightGray ) ;^327^^^^^312^342^g2.setColor ( Color.lightGray ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.draw ( plotArea ) ;^328^^^^^313^343^g2.draw ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^328^^^^^313^343^g2.draw ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.fill ( notch ) ;g2.draw ( chip ) ;^328^^^^^313^343^g2.draw ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.fill ( chip ) ;g2.draw ( chip ) ;^328^^^^^313^343^g2.draw ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( waferEdge ) ;g2.draw ( chip ) ;^328^^^^^313^343^g2.draw ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( notch ) ;g2.draw ( chip ) ;^328^^^^^313^343^g2.draw ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftX =  ==  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftX =  <=  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftX =  ( startX  &&  chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth / x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double - upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x  ==  1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x  )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( space - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( startX - upperLeftY )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * ychips ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( upperLeftY *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( chipWidth - startX )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( startX - space )  +  ( chipWidth * x ) +  ( chipWidth *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( x - chipWidth )  +  ( chipWidth * startX ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^double upperLeftX =  ( upperLeftY - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  <<  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ==  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double / upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y   instanceof   1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( space - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( chipHeight - startY )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( y - chipHeight )  +  ( chipHeight * startY ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^double upperLeftY =  ( startY - upperLeftX )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, upperLeftX, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, upperLeftY ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( chip, upperLeftY, upperLeftXWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( chipWidth, upperLeftY, upperLeftX, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, chip, upperLeftYWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^chip.setFrame ( upperLeftX, startY, chipWidth, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2 .setClip ( savedClip )  ;^318^^^^^303^333^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  ||  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  &&  y  &&  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( ychips.getChipValue ( x - 1, this.dataset - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  |  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >=  y  >=  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  >=  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, y - ychips - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  >=  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  ==  y  ==  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - y, ychips - y - y ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  <<  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.dataset.getChipValue ( x - ychips, ychips - y - ychips ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2 .setClip ( savedClip )  ;^327^^^^^312^342^g2.setColor ( Color.lightGray ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  |  ( int y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^for  ^  ( int y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = y; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = ychips; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = -7; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^for  ( int y = -1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  <<  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ||  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  ==  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ==  y  ==  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^if  ( this.dataset.getChipValue ( x - ychips, ychips - y - ychips )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( x.getChipValue ( this.dataset - 1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^if  ( this.dataset.getChipValue ( x - 3, y - y - 3 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <<  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^g2.setPaint ( renderer.getChipColor ( this.dataset .getChipSpace (  )  )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  |  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <<  y  <<  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  &&  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  >=  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ^  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  |  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ( startY  |  chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  ||  1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( startX - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( startX *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, startY, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, startX ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, chipHeight, chipWidth, upperLeftY ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, chipWidth, upperLeftY, chipHeight ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  ^  y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x  >  1, ychips - y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  ||  y  ||  1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - ychips, ychips - y - ychips ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - , ychips - y -  ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2.setPaint ( this.renderer .setPlot ( null )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <  y  <  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  <=  y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x  <<  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^326^^^^^311^341^g2.fill ( chip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setColor ( Color.null ) ;^327^^^^^312^342^g2.setColor ( Color.lightGray ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^327^^^^^312^342^g2.setColor ( Color.lightGray ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftX =  >>  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftX =  ( startX  >>  chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double / upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x  !=  1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - ychips )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( startX - startY )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftX =  ( space - chipWidth )  +  ( chipWidth * x ) +  ( startX *  ( x - 1 )  ) ;^312^313^^^^297^327^double upperLeftX =  ( startX - chipWidth )  +  ( chipWidth * x ) +  ( space *  ( x - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^for  (  long  y = 1; y <= ychips; y++ )  {^314^^^^^299^329^for  ( int y = 1; y <= ychips; y++ )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  >=  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y  >=  1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - xchips )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double upperLeftY =  ( startY - space )  +  ( chipHeight * y ) +  ( chipHeight *  ( y - 1 )  ) ;^315^316^^^^300^330^double upperLeftY =  ( startY - chipHeight )  +  ( chipHeight * y ) +  ( space *  ( y - 1 )  ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, startY ) ;^317^^^^^302^332^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^g2.setColor ( Color.this ) ;^318^^^^^303^333^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x  !=  1, ychips - y - 1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.dataset.getChipValue ( x - 1, ychips  &  y  &  1 )  != null )  {^319^^^^^304^334^if  ( this.dataset.getChipValue ( x - 1, ychips - y - 1 )  != null )  {^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  &&  y - 1 ) )^320^321^322^323^^305^335^g2.setPaint ( this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) )^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x  &  1, ychips - y - 1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips  &&  y  &&  1 ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.renderer.getChipColor ( this.dataset.getChipValue ( x - , ychips - y -  ) ) ) ;^321^322^323^324^^306^336^this.renderer.getChipColor ( this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x  <  1, ychips - y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  ||  y  ||  1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^this.dataset.getChipValue ( x - 1, ychips  <=  y - 1 ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^this.dataset.getChipValue ( x - y, ychips - y - y ) ) ) ;^322^323^324^^^307^337^this.dataset.getChipValue ( x - 1, ychips - y - 1 ) ) ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2 .getClip (  )  ;^331^^^^^316^346^g2.setClip ( savedClip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^331^^^^^316^346^g2.setClip ( savedClip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.fill ( chip ) ;g2.setClip ( savedClip ) ;^331^^^^^316^346^g2.setClip ( savedClip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.lightGray ) ;g2.setClip ( savedClip ) ;^331^^^^^316^346^g2.setClip ( savedClip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.black ) ;g2.setClip ( savedClip ) ;^331^^^^^316^346^g2.setClip ( savedClip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.white ) ;g2.setClip ( savedClip ) ;^331^^^^^316^346^g2.setClip ( savedClip ) ;^[CLASS] WaferMapPlot  [METHOD] drawChipGrid [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  Shape  savedClip  WaferMapDataset  dataset  double  chipHeight  chipWidth  major  minor  space  startX  startY  upperLeftX  upperLeftY  Rectangle2D  chip  plotArea  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  long  serialVersionUID  int  x  xchips  y  ychips  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Ellipse2D edge = Ellipse2D edge =  Ellipse2D.new Double (  )  ;^342^^^^^341^370^Ellipse2D edge = new Ellipse2D.Double (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^Rectangle2D chip = new Rectangle2D.Double (  ) ;Ellipse2D edge = new Ellipse2D.Double (  ) ;^342^^^^^341^370^Ellipse2D edge = new Ellipse2D.Double (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P1_Replace_Type]^int diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^double diameter = plotArea .getHeight (  )  ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double upperLeftX = plotArea.getX (  ) ;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double notchDiameter = waferFrame.getWidth (  )  * 0.04;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double upperLeftY = plotArea.getY (  ) ;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^343^344^^^^341^370^double diameter = plotArea.getWidth (  ) ; double upperLeftX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;double diameter = plotArea.getWidth (  ) ;^343^^^^^341^370^double diameter = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P1_Replace_Type]^int upperLeftX = plotArea.getX (  ) ;^344^^^^^341^370^double upperLeftX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;double upperLeftX = plotArea.getX (  ) ;^344^^^^^341^370^double upperLeftX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;double upperLeftX = plotArea.getX (  ) ;^344^^^^^341^370^double upperLeftX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;double upperLeftX = plotArea.getX (  ) ;^344^^^^^341^370^double upperLeftX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double upperLeftY = plotArea.getY (  ) ;double upperLeftX = plotArea.getX (  ) ;^344^^^^^341^370^double upperLeftX = plotArea.getX (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^344^345^^^^341^370^double upperLeftX = plotArea.getX (  ) ; double upperLeftY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P1_Replace_Type]^int upperLeftY = plotArea.getY (  ) ;^345^^^^^341^370^double upperLeftY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^double upperLeftY = plotArea .getX (  )  ;^345^^^^^341^370^double upperLeftY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double upperLeftX = plotArea.getX (  ) ;double upperLeftY = plotArea.getY (  ) ;^345^^^^^341^370^double upperLeftY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;double upperLeftY = plotArea.getY (  ) ;^345^^^^^341^370^double upperLeftY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;double upperLeftY = plotArea.getY (  ) ;^345^^^^^341^370^double upperLeftY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;double upperLeftY = plotArea.getY (  ) ;^345^^^^^341^370^double upperLeftY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^345^^^^^341^370^double upperLeftY = plotArea.getY (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^if  ( plotArea.getWidth (  )  == plotArea.getHeight (  )  )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( plotArea.getWidth() > plotArea.getHeight() )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( plotArea.getWidth() == minor )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( plotArea.getY() + (major - minor) / 2 )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( major - minor / 2 )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( major - minor )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( plotArea.getX() + (major - minor) / 2 )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^if  ( plotArea .getHeight (  )   != plotArea.getHeight (  )  )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^if  ( plotArea.getWidth (  )  != plotArea .getWidth (  )   )  {^347^^^^^341^370^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^if  ( plotArea.getWidth (  )  >= plotArea.getHeight (  )  )  {^350^^^^^341^370^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^if  ( plotArea .getHeight (  )   > plotArea.getHeight (  )  )  {^350^^^^^341^370^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P9_Replace_Statement]^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  {^350^^^^^341^370^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P15_Unwrap_Block]^major = plotArea.getWidth(); minor = plotArea.getHeight();^350^351^352^353^^341^370^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ; }^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P16_Remove_Block]^^350^351^352^353^^341^370^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ; }^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^major = plotArea .getWidth (  )  ;^355^^^^^350^357^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^major =  null.getHeight (  ) ;^355^^^^^350^357^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^355^^^^^350^357^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;major = plotArea.getHeight (  ) ;^355^^^^^350^357^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^355^^^^^350^357^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  { major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ; }^355^356^^^^350^357^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ; }^355^356^^^^350^357^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^minor =  null.getWidth (  ) ;^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  == minor )  { minor = plotArea.getWidth (  ) ; }^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^355^^^^^350^357^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^355^^^^^350^357^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^minor = plotArea .getHeight (  )  ;^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^350^357^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^major =  null.getWidth (  ) ;^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;major = plotArea.getWidth (  ) ;^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;major = plotArea.getWidth (  ) ;^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;major = plotArea.getWidth (  ) ;^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  == minor )  { major = plotArea.getWidth (  ) ; }^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^minor =  null.getHeight (  ) ;^352^^^^^341^370^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;minor = plotArea.getHeight (  ) ;^352^^^^^341^370^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;minor = plotArea.getHeight (  ) ;^352^^^^^341^370^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;minor = plotArea.getHeight (  ) ;^352^^^^^341^370^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^major = plotArea .getHeight (  )  ;^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^351^352^^^^341^370^major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;major = plotArea.getWidth (  ) ;^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;major = plotArea.getWidth (  ) ;^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;major = plotArea.getWidth (  ) ;^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  { major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ; }^351^352^^^^341^370^major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ; }^351^352^^^^341^370^major = plotArea.getWidth (  ) ; minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^minor = plotArea .getWidth (  )  ;^352^^^^^341^370^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^352^^^^^341^370^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;minor = plotArea.getHeight (  ) ;^352^^^^^341^370^minor = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^if  ( plotArea.getWidth (  )  <= minor )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^if  ( plotArea.getWidth (  )  == upperLeftY )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^if  ( minor.getWidth (  )  == plotArea )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( plotArea.getY() + (major - minor) / 2 )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( major - minor / 2 )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( major - minor )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P6_Replace_Expression]^if  ( plotArea.getX() + (major - minor) / 2 )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P15_Unwrap_Block]^upperLeftY = (plotArea.getY()) + ((major - minor) / 2);^361^362^363^^^341^370^if  ( plotArea.getWidth (  )  == minor )  { upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2; }^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P16_Remove_Block]^^361^362^363^^^341^370^if  ( plotArea.getWidth (  )  == minor )  { upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2; }^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  >>  )  +  ( major - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  + 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  )  +  ( major  &  minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P3_Replace_Literal]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / -1;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = plotArea.getX (  )  +  ( upperLeftY - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = plotArea.getX (  )  +  ( major - upperLeftY )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = minor.getX (  )  +  ( major - plotArea )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = plotArea.getX (  )  +  ( minor - major )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 1;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^startY +=  ( major - minor )  / 2;upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^startX +=  ( major - minor )  / 2;upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftY = plotArea.getY (  ^  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  - 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftY = plotArea.getY (  )  +  ( major  |  minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P3_Replace_Literal]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / -2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftY = plotArea.getY (  )  +  ( upperLeftY - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftY = plotArea.getY (  )  +  ( major - upperLeftY )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftY = minor.getY (  )  +  ( major - plotArea )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftY = plotArea.getY (  )  +  ( minor - major )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^upperLeftY = plotArea .getX (  )   +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 3;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^startY +=  ( major - minor )  / 2;upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^startX +=  ( major - minor )  / 2;upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^major =  null.getHeight (  ) ;^355^^^^^341^370^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^355^^^^^341^370^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;major = plotArea.getHeight (  ) ;^355^^^^^341^370^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^355^^^^^341^370^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  != plotArea.getHeight (  )  )  { major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ; }^355^356^^^^341^370^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  { major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ; }^355^356^^^^341^370^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^minor =  null.getWidth (  ) ;^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getWidth (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^minor = plotArea.getHeight (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^major = plotArea.getHeight (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P12_Insert_Condition]^if  ( plotArea.getWidth (  )  == minor )  { minor = plotArea.getWidth (  ) ; }^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^diameter = upperLeftY;^359^^^^^341^370^diameter = minor;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftY = plotArea.getY (  >  )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  * 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftY = plotArea.getY (  )  +  ( major  <<  minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P3_Replace_Literal]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 8;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftY = major.getY (  )  +  ( plotArea - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 4;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  ||  )  +  ( major - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  + 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  )  +  ( major  ||  minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P3_Replace_Literal]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 9;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = plotArea.getX (  )  +  ( upperLeftY - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = plotArea.getX (  )  +  ( major - upperLeftY )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = minor.getX (  )  +  ( major - plotArea )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = plotArea.getX (  )  +  ( minor - major )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^upperLeftX = plotArea .getY (  )   +  ( major - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 0;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^startY +=  ( major - minor )  / 2;upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^startX +=  ( major - minor )  / 2;upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P1_Replace_Type]^int major = 0d;^348^^^^^341^370^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double chipHeight = 1d;double major = 0d;^348^^^^^341^370^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double space = 1d;double major = 0d;^348^^^^^341^370^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double minor = 0d;double major = 0d;^348^^^^^341^370^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double chipWidth = 1d;double major = 0d;^348^^^^^341^370^double major = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P1_Replace_Type]^int minor = 0d;^349^^^^^341^370^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double major = 0d;double minor = 0d;^349^^^^^341^370^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double chipHeight = 1d;double minor = 0d;^349^^^^^341^370^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double space = 1d;double minor = 0d;^349^^^^^341^370^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double chipWidth = 1d;double minor = 0d;^349^^^^^341^370^double minor = 0d;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^if  ( plotArea.getWidth (  )  > plotArea .getWidth (  )   )  {^350^^^^^341^370^if  ( plotArea.getWidth (  )  > plotArea.getHeight (  )  )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^major = plotArea .getWidth (  )  ;^355^^^^^341^370^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^355^^^^^341^370^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;major = plotArea.getHeight (  ) ;^355^^^^^341^370^major = plotArea.getHeight (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^minor = plotArea .getHeight (  )  ;^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startY = plotArea.getY (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double startX = plotArea.getX (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;minor = plotArea.getWidth (  ) ;^356^^^^^341^370^minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^355^356^^^^350^357^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^351^^^^^341^370^major = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^if  ( plotArea.getWidth (  )  > minor )  {^361^^^^^341^370^if  ( plotArea.getWidth (  )  == minor )  {^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  <<  )  +  ( major - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  * 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  )  +  ( major  |  minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P3_Replace_Literal]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 5;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^upperLeftX = major.getX (  )  +  ( plotArea - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2 / 3;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P7_Replace_Invocation]^upperLeftX = plotArea .getY (  )   +  ( major - minor )  / 2;^365^^^^^361^366^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftY = plotArea.getY (  )  +  ( major  >>  minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P3_Replace_Literal]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 9;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 1;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^diameter =  null;^359^^^^^341^370^diameter = minor;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftY = plotArea.getY (   instanceof   )  +  ( major - minor )  / 2;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P3_Replace_Literal]^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / -5;^362^^^^^341^370^upperLeftY = plotArea.getY (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  <=  )  +  ( major - minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  * 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P2_Replace_Operator]^upperLeftX = plotArea.getX (  )  +  ( major  ==  minor )  / 2;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P3_Replace_Literal]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / -5;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 3;^365^^^^^341^370^upperLeftX = plotArea.getX (  )  +  ( major - minor )  / 2;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^355^356^^^^341^370^major = plotArea.getHeight (  ) ; minor = plotArea.getWidth (  ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^edge.setFrame ( minor, upperLeftY, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^edge.setFrame ( upperLeftX, upperLeftX, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^edge.setFrame ( upperLeftX, upperLeftY, upperLeftY, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^edge.setFrame (  upperLeftY, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^edge.setFrame ( upperLeftX,  diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^edge.setFrame ( upperLeftX, upperLeftY,  diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^edge.setFrame ( diameter, upperLeftY, upperLeftX, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^edge.setFrame ( upperLeftX, diameter, upperLeftY, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P8_Replace_Mix]^edge.setFrame ( upperLeftY, upperLeftY, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P14_Delete_Statement]^^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P11_Insert_Donor_Statement]^chip.setFrame ( upperLeftX, upperLeftY, chipWidth, chipHeight ) ;edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^368^^^^^341^370^edge.setFrame ( upperLeftX, upperLeftY, diameter, diameter ) ;^[CLASS] WaferMapPlot  [METHOD] getWaferEdge [RETURN_TYPE] Ellipse2D   Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  double  diameter  major  minor  upperLeftX  upperLeftY  Rectangle2D  plotArea  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  Ellipse2D  edge  
[P5_Replace_Variable]^Ellipse2D waferEdge = getWaferEdge ( waferFrame ) ;^380^^^^^365^395^Ellipse2D waferEdge = getWaferEdge ( plotArea ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^Ellipse2D waferEdge = setRenderer ( plotArea ) ;^380^^^^^365^395^Ellipse2D waferEdge = getWaferEdge ( plotArea ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^380^381^^^^365^395^Ellipse2D waferEdge = getWaferEdge ( plotArea ) ; g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setClip ( getWaferEdge ( plotArea )  ) ;Ellipse2D waferEdge = getWaferEdge ( plotArea ) ;^380^^^^^365^395^Ellipse2D waferEdge = getWaferEdge ( plotArea ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2.setClip ( Color.black ) ;^381^^^^^366^396^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^381^382^^^^366^396^g2.setColor ( Color.black ) ; g2.draw ( waferEdge ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setClip ( savedClip ) ;g2.setColor ( Color.black ) ;^381^^^^^366^396^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.lightGray ) ;g2.setColor ( Color.black ) ;^381^^^^^366^396^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.white ) ;g2.setColor ( Color.black ) ;^381^^^^^366^396^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^382^^^^^367^397^g2.draw ( waferEdge ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( chip ) ;g2.draw ( waferEdge ) ;^382^^^^^367^397^g2.draw ( waferEdge ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( notch ) ;g2.draw ( waferEdge ) ;^382^^^^^367^397^g2.draw ( waferEdge ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^Rectangle2D waferFrame = waferEdge .setFrame ( notchDiameter , notchDiameter , notchDiameter , notchDiameter )  ;^387^^^^^372^402^Rectangle2D waferFrame = waferEdge.getFrame (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^387^^^^^372^402^Rectangle2D waferFrame = waferEdge.getFrame (  ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P1_Replace_Type]^int notchDiameter = waferFrame.getWidth (  )  * 0.04;^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^double - notchDiameter = waferFrame.getWidth (  )  * 0.04;^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^double notchDiameter = waferFrame.getWidth (  )  * 0.0044444444444444444;^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^double notchDiameter = plotArea.getWidth (  )  * 0.04;^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^double notchDiameter = waferFrame .getHeight (  )   * 0.04;^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^double diameter = plotArea.getWidth (  ) ;double notchDiameter = waferFrame.getWidth (  )  * 0.04;^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^388^^^^^373^403^double notchDiameter = waferFrame.getWidth (  )  * 0.04;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^if  ( this.orientation != PlotOrientation.HORIZONTAL )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^if  ( orientation == PlotOrientation.HORIZONTAL )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  (  ( waferFrame.getX (  )  )  +  ( waferFrame.getWidth (  )  )  - notchDiameter / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( waferFrame.getX (  )  + waferFrame.getWidth (  ) )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( notchDiameter / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  (  ( waferFrame.getY (  )  )  +  (  ( waferFrame.getHeight (  )  )  / 2 )  - notchDiameter / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( waferFrame.getY (  )  +  ( waferFrame.getHeight (  )  )  / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( waferFrame.getHeight (  )  / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  (  ( waferFrame.getX (  )  )  +  (  ( waferFrame.getWidth (  )  )  / 2 )  - notchDiameter / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  )  / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( waferFrame.getWidth (  )  / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  (  ( waferFrame.getY (  )  )  +  ( waferFrame.getHeight (  )  )  - notchDiameter / 2 )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P6_Replace_Expression]^if  ( waferFrame.getY (  )  + waferFrame.getHeight (  ) )  {^389^^^^^374^404^if  ( this.orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^notch = new Arc2.ouble ( notchFrame, 0d, 180d, Arc2.OPEN ) ;^407^^^^^389^408^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^notch = notch =  Arc2D.new Double ( notchFrame, 90.0, 180.0, OPEN )  ;^407^^^^^389^408^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^notch = new Arc2D.Double ( waferFrame, 0d, 180d, Arc2D.OPEN ) ;^407^^^^^389^408^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^notch = new Arc2D.Double (  0d, 180d, Arc2D.OPEN ) ;^407^^^^^389^408^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^407^^^^^389^408^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  !=   ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (   instanceof   )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  + 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter - 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter - 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  >>   ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter + 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter + 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle-6D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / -6 ) -  ( notchDiameter / -6 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / -6 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle-5D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / -5 ) -  ( notchDiameter / -5 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / -5 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle10D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 10 ) -  ( notchDiameter / 10 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 10 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D.new Double (  (  (  ( waferFrame.getX (  )  )  +  ( waferFrame.getWidth (  )  )  )  -  ( notchDiameter / 2 )  ) ,  (  (  ( waferFrame.getY (  )  )  +  (  ( waferFrame.getHeight (  )  )  / 2 )  )  -  ( notchDiameter / 2 )  ) , notchDiameter, notchDiameter )   +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) .getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^new Rectangle2D.Double ( plotArea.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^new Rectangle2D.Double ( waferFrame .getY (  )   +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame .getX (  )  + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame .getWidth (  )   -  ( notchDiameter / 2 ) ,^401^402^403^404^^389^408^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )   instanceof    ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  <  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  - 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter * 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  !=   ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  |  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter + 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle8D notchFrame = new Rectangle8D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 8 ) -  ( notchDiameter / 8 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle-5D notchFrame = new Rectangle-5D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / -5 ) -  ( notchDiameter / -5 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle4D notchFrame = new Rectangle4D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 4 ) -  ( notchDiameter / 4 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D notchFrame = Rectangle2D notchFrame =  Rectangle2D.new Double (  (  (  ( waferFrame.getX (  )  )  +  ( waferFrame.getWidth (  )  )  )  -  ( notchDiameter / 2 )  ) ,  (  (  ( waferFrame.getY (  )  )  +  (  ( waferFrame.getHeight (  )  )  / 2 )  )  -  ( notchDiameter / 2 )  ) , notchDiameter, notchDiameter )   +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) .getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^Rectangle2D notchFrame = new Rectangle2D.Double ( plotArea.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame .getY (  )   +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame .getHeight (  )   / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^Rectangle2D notchFrame = new Rectangle2D.Double ( plotArea .getY (  )   +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^389^408^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^waferFrame.getX (  )  +  ( plotArea.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^402^403^404^405^^389^408^waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^waferFrame .getY (  )   +  ( plotArea.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^402^403^404^405^^389^408^waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^waferFrame.getX (  )  +  ( waferFrame .getHeight (  )   / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^402^403^404^405^^389^408^waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^-  ( notchDiameter / 2 ) , plotArea.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^403^404^405^406^^389^408^-  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^+ waferFrame .getWidth (  )   -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^404^405^406^^^389^408^+ waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^+ plotArea.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^404^405^406^^^389^408^+ waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^404^405^406^^^389^408^+ waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^notch = new Arc2.ouble ( notchFrame, 90d, 180d, Arc2.OPEN ) ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^notch = notch =  Arc2D.new Double ( notchFrame, 0.0, 180.0, OPEN )  ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^notch = new Arc2D.Double ( waferFrame, 90d, 180d, Arc2D.OPEN ) ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^notch = new Arc2D.Double (  90d, 180d, Arc2D.OPEN ) ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  |   ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )   ^  waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter * 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter * 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (   instanceof   )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  * 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter + 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter + 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle-5D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / -5 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / -5 )  -  ( notchDiameter / -5 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle0D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 0 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 0 )  -  ( notchDiameter / 0 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle5D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 5 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 5 )  -  ( notchDiameter / 5 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D.new Double (  (  (  ( waferFrame.getX (  )  )  +  (  ( waferFrame.getWidth (  )  )  / 2 )  )  -  ( notchDiameter / 2 )  ) ,  (  (  ( waferFrame.getY (  )  )  +  ( waferFrame.getHeight (  )  )  )  -  ( notchDiameter / 2 )  ) , notchDiameter, notchDiameter )   + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) .getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^new Rectangle2D.Double ( plotArea.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^new Rectangle2D.Double ( notchDiameter.getX (  )  + waferFrame.getWidth (  ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame .getHeight (  )  -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame .getWidth (  )   / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  !=   ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )   &  waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter - 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  >>  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter + 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter * 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^RectangleD notchFrame = new RectangleD.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter /  ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle10D notchFrame = new Rectangle10D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 10 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D notchFrame = Rectangle2D notchFrame =  Rectangle2D.new Double (  (  (  ( waferFrame.getX (  )  )  +  (  ( waferFrame.getWidth (  )  )  / 2 )  )  -  ( notchDiameter / 2 )  ) ,  (  (  ( waferFrame.getY (  )  )  +  ( waferFrame.getHeight (  )  )  )  -  ( notchDiameter / 2 )  ) , notchDiameter, notchDiameter )   + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) .getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^Rectangle2D notchFrame = new Rectangle2D.Double ( plotArea.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  + waferFrame.getWidth (  ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame .getX (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^waferFrame.getX (  )  + plotArea.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^392^393^394^395^^377^407^waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^-  ( notchDiameter / 2 ) , plotArea.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^393^394^395^396^^378^408^-  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^+  ( waferFrame .getWidth (  )   / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^394^395^396^^^379^409^+  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^+  ( plotArea.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^394^395^396^^^379^409^+  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^394^395^396^^^379^409^+  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^notch =  new Arc2D.Double ( null, 90d, 180d, Arc2D.OPEN ) ;^397^^^^^382^412^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^notch = new Arc2.ouble ( notchFrame, 0d, 180d, Arc2.OPEN ) ;^407^^^^^392^422^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^notch = notch =  Arc2D.new Double ( notchFrame, 90.0, 180.0, OPEN )  ;^407^^^^^392^422^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^notch = new Arc2D.Double ( waferFrame, 0d, 180d, Arc2D.OPEN ) ;^407^^^^^392^422^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^notch = new Arc2D.Double (  0d, 180d, Arc2D.OPEN ) ;^407^^^^^392^422^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^notch = new Arc2D.Double ( notchFrame, 90d, 180d, Arc2D.OPEN ) ;notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^407^^^^^392^422^notch = new Arc2D.Double ( notchFrame, 0d, 180d, Arc2D.OPEN ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  &   ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )   <  waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  ||   ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  ||  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  - 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle7D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 7 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 7 )  -  ( notchDiameter / 7 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame .getX (  )  +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^new Rectangle2D.Double ( plotArea.getX (  )  + waferFrame .getHeight (  )  -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^391^392^393^394^^376^406^new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  <=   ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  >=  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  + 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter + 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter + 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  &   ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  !=  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter - 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter - 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle-7D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / -7 ) -  ( notchDiameter / -7 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / -7 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new RectangleD.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  /  ) -  ( notchDiameter /  ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter /  ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^new Rectangle3D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 3 ) -  ( notchDiameter / 3 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 3 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D.new Double (  (  (  ( waferFrame.getX (  )  )  +  ( waferFrame.getWidth (  )  )  )  -  ( notchDiameter / 2 )  ) ,  (  (  ( waferFrame.getY (  )  )  +  (  ( waferFrame.getHeight (  )  )  / 2 )  )  -  ( notchDiameter / 2 )  ) , notchDiameter, notchDiameter )   +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) .getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^new Rectangle2D.Double ( plotArea.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^401^402^403^404^^386^416^new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) ,^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  |   ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )   &&  waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  )  ^   ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  &  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle-7D notchFrame = new Rectangle-7D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / -7 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle0D notchFrame = new Rectangle0D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 0 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle1D notchFrame = new Rectangle1D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 1 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^Rectangle2D notchFrame = new Rectangle2D.Double ( plotArea.getX (  )  + waferFrame .getHeight (  )  -  ( notchDiameter / 2 ) , waferFrame.getY (  )^390^391^392^393^^375^405^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  &&   ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  ||  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  + 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter * 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 )  <<   ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P2_Replace_Operator]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  >  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle7D notchFrame = new Rectangle7D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 7 ) -  ( notchDiameter / 7 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P3_Replace_Literal]^Rectangle10D notchFrame = new Rectangle10D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 10 ) -  ( notchDiameter / 10 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D notchFrame = Rectangle2D notchFrame =  Rectangle2D.new Double (  (  (  ( waferFrame.getX (  )  )  +  ( waferFrame.getWidth (  )  )  )  -  ( notchDiameter / 2 )  ) ,  (  (  ( waferFrame.getY (  )  )  +  (  ( waferFrame.getHeight (  )  )  / 2 )  )  -  ( notchDiameter / 2 )  ) , notchDiameter, notchDiameter )   +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P4_Replace_Constructor]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) .getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^Rectangle2D notchFrame = new Rectangle2D.Double ( plotArea.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^Rectangle2D notchFrame = new Rectangle2D.Double ( notchDiameter.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( waferFrame / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame .getHeight (  )   / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame .getX (  )^400^401^402^403^^385^415^Rectangle2D notchFrame = new Rectangle2D.Double ( waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  )^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^waferFrame .getY (  )   + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^392^393^394^395^^377^407^waferFrame.getX (  )  + waferFrame.getWidth (  ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) +  ( waferFrame.getHeight (  )  / 2 )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^waferFrame.getX (  )  +  ( plotArea.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^402^403^404^405^^387^417^waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^waferFrame .getY (  )   +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^402^403^404^405^^387^417^waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^waferFrame.getX (  )  +  ( plotArea .getHeight (  )   / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^402^403^404^405^^387^417^waferFrame.getX (  )  +  ( waferFrame.getWidth (  )  / 2 ) -  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^-  ( notchDiameter / 2 ) , plotArea.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^403^404^405^406^^388^418^-  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^-  ( notchDiameter / 2 ) , waferFrame .getX (  )  + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^403^404^405^406^^388^418^-  ( notchDiameter / 2 ) , waferFrame.getY (  ) + waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P5_Replace_Variable]^+ plotArea.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^404^405^406^^^389^419^+ waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^+ waferFrame .getWidth (  )   -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^404^405^406^^^389^419^+ waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^404^405^406^^^389^419^+ waferFrame.getHeight (  )  -  ( notchDiameter / 2 ) , notchDiameter, notchDiameter ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2.setClip ( Color.white ) ;^409^^^^^394^424^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^409^410^^^^394^424^g2.setColor ( Color.white ) ; g2.fill ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setClip ( savedClip ) ;g2.setColor ( Color.white ) ;^409^^^^^394^424^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.lightGray ) ;g2.setColor ( Color.white ) ;^409^^^^^394^424^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.black ) ;g2.setColor ( Color.white ) ;^409^^^^^394^424^g2.setColor ( Color.white ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2 .setPaint ( DEFAULT_GRIDLINE_PAINT )  ;^410^^^^^395^425^g2.fill ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P8_Replace_Mix]^g2 .setPaint ( DEFAULT_CROSSHAIR_PAINT )  ;^410^^^^^395^425^g2.fill ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^410^^^^^395^425^g2.fill ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.fill ( chip ) ;g2.fill ( notch ) ;^410^^^^^395^425^g2.fill ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( chip ) ;g2.fill ( notch ) ;^410^^^^^395^425^g2.fill ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( notch ) ;g2.fill ( notch ) ;^410^^^^^395^425^g2.fill ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^g2.setClip ( Color.black ) ;^411^^^^^396^426^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^411^^^^^396^426^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setClip ( savedClip ) ;g2.setColor ( Color.black ) ;^411^^^^^396^426^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.lightGray ) ;g2.setColor ( Color.black ) ;^411^^^^^396^426^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.setColor ( Color.white ) ;g2.setColor ( Color.black ) ;^411^^^^^396^426^g2.setColor ( Color.black ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P14_Delete_Statement]^^412^^^^^397^427^g2.draw ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.fill ( notch ) ;g2.draw ( notch ) ;^412^^^^^397^427^g2.draw ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.fill ( chip ) ;g2.draw ( notch ) ;^412^^^^^397^427^g2.draw ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( waferEdge ) ;g2.draw ( notch ) ;^412^^^^^397^427^g2.draw ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P11_Insert_Donor_Statement]^g2.draw ( chip ) ;g2.draw ( notch ) ;^412^^^^^397^427^g2.draw ( notch ) ;^[CLASS] WaferMapPlot  [METHOD] drawWaferEdge [RETURN_TYPE] void   Graphics2D g2 Rectangle2D plotArea [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  WaferMapDataset  dataset  double  notchDiameter  Rectangle2D  notchFrame  plotArea  waferFrame  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  Arc2D  notch  long  serialVersionUID  Ellipse2D  waferEdge  Graphics2D  g2  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  ResourceBundle  localizationResources  WaferMapRenderer  renderer  
[P7_Replace_Invocation]^return this.renderer.getChipColor (  ) ;^422^^^^^421^423^return this.renderer.getLegendCollection (  ) ;^[CLASS] WaferMapPlot  [METHOD] getLegendItems [RETURN_TYPE] LegendItemCollection   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P5_Replace_Variable]^return renderer.getLegendCollection (  ) ;^422^^^^^421^423^return this.renderer.getLegendCollection (  ) ;^[CLASS] WaferMapPlot  [METHOD] getLegendItems [RETURN_TYPE] LegendItemCollection   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P14_Delete_Statement]^^422^^^^^421^423^return this.renderer.getLegendCollection (  ) ;^[CLASS] WaferMapPlot  [METHOD] getLegendItems [RETURN_TYPE] LegendItemCollection   [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  long  serialVersionUID  
[P7_Replace_Invocation]^getInsets ( new PlotChangeEvent ( this )  ) ;^431^^^^^430^432^notifyListeners ( new PlotChangeEvent ( this )  ) ;^[CLASS] WaferMapPlot  [METHOD] rendererChanged [RETURN_TYPE] void   RendererChangeEvent event [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  RendererChangeEvent  event  long  serialVersionUID  
[P14_Delete_Statement]^^431^432^^^^430^432^notifyListeners ( new PlotChangeEvent ( this )  ) ; }^[CLASS] WaferMapPlot  [METHOD] rendererChanged [RETURN_TYPE] void   RendererChangeEvent event [VARIABLES] Stroke  DEFAULT_CROSSHAIR_STROKE  DEFAULT_GRIDLINE_STROKE  PlotOrientation  orientation  boolean  DEFAULT_CROSSHAIR_VISIBLE  b1  b2  WaferMapDataset  dataset  ResourceBundle  localizationResources  Paint  DEFAULT_CROSSHAIR_PAINT  DEFAULT_GRIDLINE_PAINT  WaferMapRenderer  renderer  RendererChangeEvent  event  long  serialVersionUID  
