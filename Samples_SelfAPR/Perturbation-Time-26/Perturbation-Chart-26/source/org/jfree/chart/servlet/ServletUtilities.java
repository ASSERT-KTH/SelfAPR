[P1_Replace_Type]^private static char tempFilePrefix = "jfreechart-";^86^^^^^81^91^private static String tempFilePrefix = "jfreechart-";^[CLASS] ServletUtilities   [VARIABLES] 
[P1_Replace_Type]^private static char tempOneTimeFilePrefix = "jfreechart-onetime-";^89^^^^^84^94^private static String tempOneTimeFilePrefix = "jfreechart-onetime-";^[CLASS] ServletUtilities   [VARIABLES] 
[P3_Replace_Literal]^private static String tempOneTimeFilePrefix = "rt-one";^89^^^^^84^94^private static String tempOneTimeFilePrefix = "jfreechart-onetime-";^[CLASS] ServletUtilities   [VARIABLES] 
[P2_Replace_Operator]^if  ( prefix != null )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( tempOneTimeFilePrefix == null )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^if  ( prefix == this )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( chartDeleter == null )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( chart == null )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( session == null )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( mimeType != null )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( session != null )  {^106^^^^^105^110^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'prefix' argument.");^106^107^108^^^105^110^if  ( prefix == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P16_Remove_Block]^^106^107^108^^^105^110^if  ( prefix == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P13_Insert_Block]^if  ( chart == null )  {     throw new IllegalArgumentException ( "Null 'chart' argument." ) ; }^106^^^^^105^110^[Delete]^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'chart' argument." )   ;^107^^^^^105^110^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P13_Insert_Block]^if  ( chart == null )  {     throw new IllegalArgumentException ( "Null 'chart' argument." ) ; }^107^^^^^105^110^[Delete]^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P13_Insert_Block]^if  ( prefix == null )  {     throw new IllegalArgumentException ( "Null 'prefix' argument." ) ; }^107^^^^^105^110^[Delete]^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P11_Insert_Donor_Statement]^throw new FileNotFoundException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^107^^^^^105^110^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^ServletUtilities.tempFilePrefix = tempOneTimeFilePrefix;^109^^^^^105^110^ServletUtilities.tempFilePrefix = prefix;^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P11_Insert_Donor_Statement]^prefix = ServletUtilities.tempOneTimeFilePrefix;ServletUtilities.tempFilePrefix = prefix;^109^^^^^105^110^ServletUtilities.tempFilePrefix = prefix;^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P11_Insert_Donor_Statement]^ServletUtilities.tempOneTimeFilePrefix = prefix;ServletUtilities.tempFilePrefix = prefix;^109^^^^^105^110^ServletUtilities.tempFilePrefix = prefix;^[CLASS] ServletUtilities  [METHOD] setTempFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^if  ( prefix != null )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( tempOneTimeFilePrefix == null )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^if  ( prefix == false )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( chartDeleter == null )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( chart == null )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( session == null )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( mimeType != null )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( session != null )  {^129^^^^^128^133^if  ( prefix == null )  {^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'prefix' argument.");^129^130^131^^^128^133^if  ( prefix == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P16_Remove_Block]^^129^130^131^^^128^133^if  ( prefix == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P13_Insert_Block]^if  ( chart == null )  {     throw new IllegalArgumentException ( "Null 'chart' argument." ) ; }^129^^^^^128^133^[Delete]^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'chart' argument." )   ;^130^^^^^128^133^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P13_Insert_Block]^if  ( chart == null )  {     throw new IllegalArgumentException ( "Null 'chart' argument." ) ; }^130^^^^^128^133^[Delete]^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P13_Insert_Block]^if  ( prefix == null )  {     throw new IllegalArgumentException ( "Null 'prefix' argument." ) ; }^130^^^^^128^133^[Delete]^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P11_Insert_Donor_Statement]^throw new FileNotFoundException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^130^^^^^128^133^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^throw new FileNotFoundException  (" ")  ; ;^130^^^^^128^133^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^ServletUtilities.tempOneTimeFilePrefix = tempOneTimeFilePrefix;^132^^^^^128^133^ServletUtilities.tempOneTimeFilePrefix = prefix;^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^ServletUtilities.tempOneTimeFilePrefix =  tempFilePrefix;^132^^^^^128^133^ServletUtilities.tempOneTimeFilePrefix = prefix;^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P11_Insert_Donor_Statement]^prefix = ServletUtilities.tempOneTimeFilePrefix;ServletUtilities.tempOneTimeFilePrefix = prefix;^132^^^^^128^133^ServletUtilities.tempOneTimeFilePrefix = prefix;^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P11_Insert_Donor_Statement]^ServletUtilities.tempFilePrefix = prefix;ServletUtilities.tempOneTimeFilePrefix = prefix;^132^^^^^128^133^ServletUtilities.tempOneTimeFilePrefix = prefix;^[CLASS] ServletUtilities  [METHOD] setTempOneTimeFilePrefix [RETURN_TYPE] void   String prefix [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( chart, height, height, null, session ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG (  width, height, null, session ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( chart,  height, null, session ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( chart, width,  null, session ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( chart, width, height, null ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( width, chart, height, null, session ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( chart, height, width, null, session ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( chart, width, session, null, height ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( chart, session, height, null, width ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P7_Replace_Invocation]^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( chart, width, width, null, session ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsPNG ( session, width, height, null, chart ) ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P8_Replace_Mix]^return ServletUtilities .saveChartAsPNG ( chart , height , height , session )  ;^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P14_Delete_Statement]^^153^154^^^^150^156^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P2_Replace_Operator]^if  ( chart != null )  {^180^^^^^177^196^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^if  ( chart == this )  {^180^^^^^177^196^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^180^^^^^177^196^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( chartDeleter == null )  {^180^^^^^177^196^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( prefix == null )  {^180^^^^^177^196^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( session == null )  {^180^^^^^177^196^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( mimeType != null )  {^180^^^^^177^196^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( session != null )  {^180^^^^^177^196^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'chart' argument.");^180^181^182^^^177^196^if  ( chart == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P16_Remove_Block]^^180^181^182^^^177^196^if  ( chart == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( prefix == null )  {     throw new IllegalArgumentException ( "Null 'prefix' argument." ) ; }^180^^^^^177^196^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'prefix' argument." )   ;^181^^^^^177^196^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( chart == null )  {     throw new IllegalArgumentException ( "Null 'chart' argument." ) ; }^181^^^^^177^196^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( prefix == null )  {     throw new IllegalArgumentException ( "Null 'prefix' argument." ) ; }^181^^^^^177^196^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^throw new FileNotFoundException  (" ")  ; ;^181^^^^^177^196^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^throw new FileNotFoundException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^181^^^^^177^196^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^183^184^^^^177^196^ServletUtilities.createTempDir (  ) ; String prefix = ServletUtilities.tempFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ServletUtilities.sendTempFile ( file, response ) ;ServletUtilities.createTempDir (  ) ;^183^^^^^177^196^ServletUtilities.createTempDir (  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P1_Replace_Type]^char prefix = ServletUtilities.tempFilePrefix;^184^^^^^177^196^String prefix = ServletUtilities.tempFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P2_Replace_Operator]^if  ( session != null )  {^185^^^^^177^196^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^if  ( session == true )  {^185^^^^^177^196^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^185^^^^^177^196^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( chart == null )  {^185^^^^^177^196^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( prefix == null )  {^185^^^^^177^196^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( mimeType != null )  {^185^^^^^177^196^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P15_Unwrap_Block]^prefix = org.jfree.chart.servlet.ServletUtilities.tempOneTimeFilePrefix;^185^186^187^^^177^196^if  ( session == null )  { prefix = ServletUtilities.tempOneTimeFilePrefix; }^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P16_Remove_Block]^^185^186^187^^^177^196^if  ( session == null )  { prefix = ServletUtilities.tempOneTimeFilePrefix; }^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session != null )  {     registerChartForDeletion ( tempFile, session ) ; }^185^^^^^177^196^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^prefix  =  prefix ;^186^^^^^177^196^prefix = ServletUtilities.tempOneTimeFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ServletUtilities.tempFilePrefix = prefix;prefix = ServletUtilities.tempOneTimeFilePrefix;^186^^^^^177^196^prefix = ServletUtilities.tempOneTimeFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ServletUtilities.tempOneTimeFilePrefix = prefix;prefix = ServletUtilities.tempOneTimeFilePrefix;^186^^^^^177^196^prefix = ServletUtilities.tempOneTimeFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session != null )  {     registerChartForDeletion ( tempFile, session ) ; }^186^^^^^177^196^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session == null )  {     prefix = tempOneTimeFilePrefix; }^186^^^^^177^196^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^new File ( System.getProperty ( "java.io.tmpdirjava." )  )  ) ;^189^^^^^177^196^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P4_Replace_Constructor]^new File ( getProperty ( tmpdir" ) , filename )   )  ) ;^189^^^^^177^196^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "va.ioava.io.tmpdir" )  )  ) ;^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P4_Replace_Constructor]^File tempFile = File.createTempFile ( prefix, ".png", new File ( getProperty ( tmpdir" ) , filename )   )  ) ;^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^File tempFile = File.createTempFile ( tempOneTimeFilePrefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^File tempFile = File.createTempFile ( prefix, ".png.p", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir.tmpdi" )  )  ) ;^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^188^189^^^^177^196^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^new File ( System.getProperty ( ".tava.io.tmpdir" )  )  ) ;^189^^^^^177^196^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^189^^^^^177^196^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^189^^^^^177^196^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^189^^^^^177^196^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile, chart, height, height, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, width, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG (  chart, width, height, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile,  width, height, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile, chart,  height, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile, chart, width,  info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( height, chart, width, tempFile, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile, info, width, height, chart ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile, chart, height, width, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, info, height ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, width, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^190^^^^^177^196^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P2_Replace_Operator]^if  ( session == null )  {^191^^^^^177^196^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^if  ( session != this )  {^191^^^^^177^196^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^191^^^^^177^196^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( chart == null )  {^191^^^^^177^196^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( prefix == null )  {^191^^^^^177^196^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( mimeType != null )  {^191^^^^^177^196^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P15_Unwrap_Block]^org.jfree.chart.servlet.ServletUtilities.registerChartForDeletion(tempFile, session);^191^192^193^^^177^196^if  ( session != null )  { ServletUtilities.registerChartForDeletion ( tempFile, session ) ; }^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P16_Remove_Block]^^191^192^193^^^177^196^if  ( session != null )  { ServletUtilities.registerChartForDeletion ( tempFile, session ) ; }^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session == null )  {     prefix = tempOneTimeFilePrefix; }^191^^^^^177^196^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ServletUtilities.registerChartForDeletion (  session ) ;^192^^^^^177^196^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ServletUtilities.registerChartForDeletion ( tempFile ) ;^192^^^^^177^196^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ServletUtilities.registerChartForDeletion ( session, tempFile ) ;^192^^^^^177^196^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^ServletUtilities.sendTempFile ( tempFile, session ) ;^192^^^^^177^196^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^192^^^^^177^196^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ServletUtilities.sendTempFile ( file, response ) ;ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^192^^^^^177^196^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session != null )  {     registerChartForDeletion ( tempFile, session ) ; }^192^^^^^177^196^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^return tempFile.File (  ) ;^194^^^^^177^196^return tempFile.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^194^^^^^177^196^return tempFile.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsPNG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( chart, width, width, null, session ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG (  width, height, null, session ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( chart,  height, null, session ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( chart, width,  null, session ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( width, chart, height, null, session ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( chart, height, width, null, session ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( chart, session, height, null, width ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P7_Replace_Invocation]^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( height, width, chart, null, session ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P5_Replace_Variable]^return ServletUtilities.saveChartAsJPEG ( chart, width, session, null, height ) ;^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P14_Delete_Statement]^^222^223^^^^218^225^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height HttpSession session [VARIABLES] String  prefix  tempFilePrefix  tempOneTimeFilePrefix  boolean  JFreeChart  chart  int  height  width  HttpSession  session  
[P2_Replace_Operator]^if  ( chart != null )  {^254^^^^^250^271^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^if  ( chart == this )  {^254^^^^^250^271^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^254^^^^^250^271^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( chartDeleter == null )  {^254^^^^^250^271^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( prefix == null )  {^254^^^^^250^271^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( session == null )  {^254^^^^^250^271^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( mimeType != null )  {^254^^^^^250^271^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( session != null )  {^254^^^^^250^271^if  ( chart == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'chart' argument.");^254^255^256^^^250^271^if  ( chart == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P16_Remove_Block]^^254^255^256^^^250^271^if  ( chart == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( prefix == null )  {     throw new IllegalArgumentException ( "Null 'prefix' argument." ) ; }^254^^^^^250^271^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'prefix' argument." )   ;^255^^^^^250^271^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( chart == null )  {     throw new IllegalArgumentException ( "Null 'chart' argument." ) ; }^255^^^^^250^271^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( prefix == null )  {     throw new IllegalArgumentException ( "Null 'prefix' argument." ) ; }^255^^^^^250^271^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^throw new FileNotFoundException  (" ")  ; ;^255^^^^^250^271^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^throw new FileNotFoundException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^255^^^^^250^271^throw new IllegalArgumentException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^258^^^^^250^271^ServletUtilities.createTempDir (  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ServletUtilities.sendTempFile ( file, response ) ;ServletUtilities.createTempDir (  ) ;^258^^^^^250^271^ServletUtilities.createTempDir (  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P1_Replace_Type]^char prefix = ServletUtilities.tempFilePrefix;^259^^^^^250^271^String prefix = ServletUtilities.tempFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P2_Replace_Operator]^if  ( session != null )  {^260^^^^^250^271^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^if  ( session == true )  {^260^^^^^250^271^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^260^^^^^250^271^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( chart == null )  {^260^^^^^250^271^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( prefix == null )  {^260^^^^^250^271^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( mimeType != null )  {^260^^^^^250^271^if  ( session == null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P15_Unwrap_Block]^prefix = org.jfree.chart.servlet.ServletUtilities.tempOneTimeFilePrefix;^260^261^262^^^250^271^if  ( session == null )  { prefix = ServletUtilities.tempOneTimeFilePrefix; }^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P16_Remove_Block]^^260^261^262^^^250^271^if  ( session == null )  { prefix = ServletUtilities.tempOneTimeFilePrefix; }^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session != null )  {     registerChartForDeletion ( tempFile, session ) ; }^260^^^^^250^271^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^prefix ;^261^^^^^250^271^prefix = ServletUtilities.tempOneTimeFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ServletUtilities.tempFilePrefix = prefix;prefix = ServletUtilities.tempOneTimeFilePrefix;^261^^^^^250^271^prefix = ServletUtilities.tempOneTimeFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ServletUtilities.tempOneTimeFilePrefix = prefix;prefix = ServletUtilities.tempOneTimeFilePrefix;^261^^^^^250^271^prefix = ServletUtilities.tempOneTimeFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session != null )  {     registerChartForDeletion ( tempFile, session ) ; }^261^^^^^250^271^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session == null )  {     prefix = tempOneTimeFilePrefix; }^261^^^^^250^271^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^prefix  =  prefix ;^261^^^^^250^271^prefix = ServletUtilities.tempOneTimeFilePrefix;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^new File ( System.getProperty ( "java.io.tmpdirj" )  )  ) ;^264^^^^^250^271^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P4_Replace_Constructor]^new File ( getProperty ( tmpdir" ) , filename )   )  ) ;^264^^^^^250^271^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^File tempFile = File.createTempFile ( prefix, "pe", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdirava.io.t" )  )  ) ;^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P4_Replace_Constructor]^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( getProperty ( tmpdir" ) , filename )   )  ) ;^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^File tempFile = File.createTempFile ( tempOneTimeFilePrefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^File tempFile = File.createTempFile ( prefix, "jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^263^264^^^^250^271^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P3_Replace_Literal]^new File ( System.getProperty ( "avava.io.tmpdir" )  )  ) ;^264^^^^^250^271^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^264^^^^^250^271^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^264^^^^^250^271^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^264^^^^^250^271^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, width, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG (  chart, width, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( tempFile,  width, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( tempFile, chart,  height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width,  info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( width, chart, tempFile, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( chart, tempFile, width, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( height, chart, width, tempFile, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ChartUtilities.saveChartAsJPEG ( tempFile, chart, info, height, width ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^ChartUtilities .saveChartAsJPEG ( chart , width , height , session )  ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^ChartUtilities.saveChartAsJPEG ( tempFile, chart, height, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^return ServletUtilities.saveChartAsJPEG ( chart, width, height, null, session ) ;ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ChartUtilities.saveChartAsPNG ( tempFile, chart, width, height, info ) ;ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^return ServletUtilities.saveChartAsPNG ( chart, width, height, null, session ) ;ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^265^^^^^250^271^ChartUtilities.saveChartAsJPEG ( tempFile, chart, width, height, info ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P2_Replace_Operator]^if  ( session == null )  {^266^^^^^250^271^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P8_Replace_Mix]^if  ( session != this )  {^266^^^^^250^271^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^266^^^^^250^271^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( chart == null )  {^266^^^^^250^271^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( prefix == null )  {^266^^^^^250^271^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P9_Replace_Statement]^if  ( mimeType != null )  {^266^^^^^250^271^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P15_Unwrap_Block]^org.jfree.chart.servlet.ServletUtilities.registerChartForDeletion(tempFile, session);^266^267^268^^^250^271^if  ( session != null )  { ServletUtilities.registerChartForDeletion ( tempFile, session ) ; }^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P16_Remove_Block]^^266^267^268^^^250^271^if  ( session != null )  { ServletUtilities.registerChartForDeletion ( tempFile, session ) ; }^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session == null )  {     prefix = tempOneTimeFilePrefix; }^266^^^^^250^271^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ServletUtilities.registerChartForDeletion (  session ) ;^267^^^^^250^271^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ServletUtilities.registerChartForDeletion ( tempFile ) ;^267^^^^^250^271^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P5_Replace_Variable]^ServletUtilities.registerChartForDeletion ( session, tempFile ) ;^267^^^^^250^271^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^ServletUtilities.sendTempFile ( tempFile, session ) ;^267^^^^^250^271^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^267^^^^^250^271^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P11_Insert_Donor_Statement]^ServletUtilities.sendTempFile ( file, response ) ;ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^267^^^^^250^271^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P13_Insert_Block]^if  ( session != null )  {     registerChartForDeletion ( tempFile, session ) ; }^267^^^^^250^271^[Delete]^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^ServletUtilities .saveChartAsJPEG ( chart , width , width , info , session )  ;^267^^^^^250^271^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^return tempFile.File (  ) ;^269^^^^^250^271^return tempFile.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P7_Replace_Invocation]^return tempFile .createTempFile ( tempFilePrefix , tempFilePrefix , tempFile )  ;^269^^^^^250^271^return tempFile.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P14_Delete_Statement]^^269^^^^^250^271^return tempFile.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] saveChartAsJPEG [RETURN_TYPE] String   JFreeChart chart int width int height ChartRenderingInfo info HttpSession session [VARIABLES] boolean  HttpSession  session  ChartRenderingInfo  info  String  prefix  tempFilePrefix  tempOneTimeFilePrefix  File  tempFile  JFreeChart  chart  int  height  width  
[P1_Replace_Type]^char tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^283^^^^^282^294^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^String tempDirName = System.getProperty ( "java.io.tmpdi" ) ;^283^^^^^282^294^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P11_Insert_Donor_Statement]^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^283^^^^^282^294^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^String tempDirName = System.getProperty ( "java.io.tmp" ) ;^283^^^^^282^294^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P14_Delete_Statement]^^283^^^^^282^294^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P11_Insert_Donor_Statement]^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^283^^^^^282^294^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^if  ( tempDirName != null )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( tempOneTimeFilePrefix == null )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P6_Replace_Expression]^if  ( "Temporary directory system property " + " ( tmpdir )  is null." )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^if  ( tempDirName == this )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( chart == null )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( prefix == null )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( session == null )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( mimeType != null )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( session != null )  {^284^^^^^282^294^if  ( tempDirName == null )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P15_Unwrap_Block]^throw new java.lang.RuntimeException(("Temporary directory system property " + "(java.io.tmpdir) is null."));^284^285^286^287^^282^294^if  ( tempDirName == null )  { throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ; }^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P16_Remove_Block]^^284^285^286^287^^282^294^if  ( tempDirName == null )  { throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ; }^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )   instanceof   is null." ) ;^285^286^^^^282^294^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^throw new RuntimeException ( "Temporary directory system property Temporar" + " ( java.io.tmpdir )  is null." ) ;^285^286^^^^282^294^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P13_Insert_Block]^if  ( tempDirName == null )  {     throw new RuntimeException (  ( "Temporary directory system property " + " ( tmpdir )  is null." )  ) ; }^285^^^^^282^294^[Delete]^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  ^  is null." ) ;^285^286^^^^282^294^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^throw new RuntimeException ( "y demporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^285^286^^^^282^294^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  >  is null." ) ;^285^286^^^^282^294^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^throw new RuntimeException ( "Temporary directory system property rary dir" + " ( java.io.tmpdir )  is null." ) ;^285^286^^^^282^294^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^throw new RuntimeException ( "emporaemporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^285^286^^^^282^294^throw new RuntimeException ( "Temporary directory system property " + " ( java.io.tmpdir )  is null." ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^File tempDir = new File ( tempOneTimeFilePrefix ) ;^290^^^^^282^294^File tempDir = new File ( tempDirName ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P7_Replace_Invocation]^if  ( !tempDir.File (  )  )  {^291^^^^^282^294^if  ( !tempDir.exists (  )  )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( file.exists (  )  )  {^291^^^^^282^294^if  ( !tempDir.exists (  )  )  {^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P15_Unwrap_Block]^tempDir.mkdirs();^291^292^293^^^282^294^if  ( !tempDir.exists (  )  )  { tempDir.mkdirs (  ) ; }^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P16_Remove_Block]^^291^292^293^^^282^294^if  ( !tempDir.exists (  )  )  { tempDir.mkdirs (  ) ; }^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P7_Replace_Invocation]^tempDir.File (  ) ;^292^^^^^282^294^tempDir.mkdirs (  ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^tempDir .lastModified (  )  ;^292^^^^^282^294^tempDir.mkdirs (  ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P14_Delete_Statement]^^292^^^^^282^294^tempDir.mkdirs (  ) ;^[CLASS] ServletUtilities  [METHOD] createTempDir [RETURN_TYPE] void   [VARIABLES] File  tempDir  String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^if  ( session == null )  {^308^^^^^304^320^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P6_Replace_Expression]^if  ( chartDeleter == null )  {^308^^^^^304^320^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P8_Replace_Mix]^if  ( session != this )  {^308^^^^^304^320^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^308^^^^^304^320^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P9_Replace_Statement]^if  ( chart == null )  {^308^^^^^304^320^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P9_Replace_Statement]^if  ( prefix == null )  {^308^^^^^304^320^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P9_Replace_Statement]^if  ( mimeType != null )  {^308^^^^^304^320^if  ( session != null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^System.out.println ( "is null - chart wi" ) ;^318^^^^^304^320^System.out.println ( "Session is null - chart will not be deleted" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P14_Delete_Statement]^^318^^^^^304^320^System.out.println ( "Session is null - chart will not be deleted" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P2_Replace_Operator]^if  ( chartDeleter != null )  {^311^^^^^304^320^if  ( chartDeleter == null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P8_Replace_Mix]^if  ( chartDeleter == false )  {^311^^^^^304^320^if  ( chartDeleter == null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P9_Replace_Statement]^if  ( chart == null )  {^311^^^^^304^320^if  ( chartDeleter == null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P9_Replace_Statement]^if  ( prefix == null )  {^311^^^^^304^320^if  ( chartDeleter == null )  {^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P15_Unwrap_Block]^chartDeleter = new org.jfree.chart.servlet.ChartDeleter(); session.setAttribute("JFreeChart_Deleter", chartDeleter);^311^312^313^314^^304^320^if  ( chartDeleter == null )  { chartDeleter = new ChartDeleter (  ) ; session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ; }^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P16_Remove_Block]^^311^312^313^314^^304^320^if  ( chartDeleter == null )  { chartDeleter = new ChartDeleter (  ) ; session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ; }^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P8_Replace_Mix]^chartDeleter ;^312^^^^^304^320^chartDeleter = new ChartDeleter (  ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^session.setAttribute ( "JFreeFreeChart_Deleter", chartDeleter ) ;^313^^^^^304^320^session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P5_Replace_Variable]^session.setAttribute ( "JFreeChart_Deleter" ) ;^313^^^^^304^320^session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P14_Delete_Statement]^^313^^^^^304^320^session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P8_Replace_Mix]^chartDeleter  =  chartDeleter ;^312^^^^^304^320^chartDeleter = new ChartDeleter (  ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P7_Replace_Invocation]^ChartDeleter chartDeleter =  ( ChartDeleter )  session.setAttribute ( "JFreeChart_Deleter" ) ;^309^310^^^^304^320^ChartDeleter chartDeleter =  ( ChartDeleter )  session.getAttribute ( "JFreeChart_Deleter" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P13_Insert_Block]^if  ( chartDeleter == null )  {     chartDeleter = new ChartDeleter (  ) ;     session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ; }^309^^^^^304^320^[Delete]^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^=  ( ChartDeleter )  session.getAttribute ( "JFreeChart_DeleterJ" ) ;^310^^^^^304^320^=  ( ChartDeleter )  session.getAttribute ( "JFreeChart_Deleter" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P7_Replace_Invocation]^=  ( ChartDeleter )  session.setAttribute ( "JFreeChart_Deleter" ) ;^310^^^^^304^320^=  ( ChartDeleter )  session.getAttribute ( "JFreeChart_Deleter" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P14_Delete_Statement]^^310^^^^^304^320^=  ( ChartDeleter )  session.getAttribute ( "JFreeChart_Deleter" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^session.setAttribute ( "artFreeChart_Deleter", chartDeleter ) ;^313^^^^^304^320^session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P8_Replace_Mix]^session .getAttribute ( tempFilePrefix )  ;^313^^^^^304^320^session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P7_Replace_Invocation]^chartDeleter.addChart ( tempFile.File (  )  ) ;^315^^^^^304^320^chartDeleter.addChart ( tempFile.getName (  )  ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P14_Delete_Statement]^^315^^^^^304^320^chartDeleter.addChart ( tempFile.getName (  )  ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P11_Insert_Donor_Statement]^return tempFile.getName (  ) ;chartDeleter.addChart ( tempFile.getName (  )  ) ;^315^^^^^304^320^chartDeleter.addChart ( tempFile.getName (  )  ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^session.setAttribute ( "JFreeCFreeChart_Deleter", chartDeleter ) ;^313^^^^^304^320^session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^ChartDeleter chartDeleter =  ( ChartDeleter )  session.getAttribute ( "Chart_DeFreeChart_Deleter" ) ;^309^310^^^^304^320^ChartDeleter chartDeleter =  ( ChartDeleter )  session.getAttribute ( "JFreeChart_Deleter" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^=  ( ChartDeleter )  session.getAttribute ( "JFreeChart_Deleterr" ) ;^310^^^^^304^320^=  ( ChartDeleter )  session.getAttribute ( "JFreeChart_Deleter" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^session.setAttribute ( "eeC", chartDeleter ) ;^313^^^^^304^320^session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P8_Replace_Mix]^session .getAttribute ( tempOneTimeFilePrefix )  ;^313^^^^^304^320^session.setAttribute ( "JFreeChart_Deleter", chartDeleter ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P7_Replace_Invocation]^chartDeleter .ChartDeleter (  )  ;^315^^^^^304^320^chartDeleter.addChart ( tempFile.getName (  )  ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^System.out.println ( " char" ) ;^318^^^^^304^320^System.out.println ( "Session is null - chart will not be deleted" ) ;^[CLASS] ServletUtilities  [METHOD] registerChartForDeletion [RETURN_TYPE] void   File tempFile HttpSession session [VARIABLES] String  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  tempFile  HttpSession  session  ChartDeleter  chartDeleter  
[P3_Replace_Literal]^File file = new File ( System.getProperty ( "aava.io.tmpdir" ) , filename ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P4_Replace_Constructor]^File file = new File ( getProperty ( tmpdir" )  )  , filename ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , tempOneTimeFilePrefix ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , tempFilePrefix ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^File file = new File ( System.getProperty ( ".iava.io.tmpdir" ) , filename ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^File tempFile = File.createTempFile ( prefix, ".png", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^File tempFile = File.createTempFile ( prefix, ".jpeg", new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^String tempDirName = System.getProperty ( "java.io.tmpdir" ) ;File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P14_Delete_Statement]^^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^new File ( System.getProperty ( "java.io.tmpdir" )  )  ) ;File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^334^^^^^331^336^File file = new File ( System.getProperty ( "java.io.tmpdir" ) , filename ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile (  response ) ;^335^^^^^331^336^ServletUtilities.sendTempFile ( file, response ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile ( file ) ;^335^^^^^331^336^ServletUtilities.sendTempFile ( file, response ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile ( response, file ) ;^335^^^^^331^336^ServletUtilities.sendTempFile ( file, response ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P14_Delete_Statement]^^335^^^^^331^336^ServletUtilities.sendTempFile ( file, response ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^ServletUtilities.sendTempFile ( file, response, mimeType ) ;ServletUtilities.sendTempFile ( file, response ) ;^335^^^^^331^336^ServletUtilities.sendTempFile ( file, response ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^ServletUtilities.createTempDir (  ) ;ServletUtilities.sendTempFile ( file, response ) ;^335^^^^^331^336^ServletUtilities.sendTempFile ( file, response ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^ServletUtilities.registerChartForDeletion ( tempFile, session ) ;ServletUtilities.sendTempFile ( file, response ) ;^335^^^^^331^336^ServletUtilities.sendTempFile ( file, response ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   String filename HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P1_Replace_Type]^char mimeType = null;^349^^^^^346^362^String mimeType = null;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P1_Replace_Type]^char filename = file.getName (  ) ;^350^^^^^346^362^String filename = file.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P7_Replace_Invocation]^String filename = file.File (  ) ;^350^^^^^346^362^String filename = file.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^String filename = file .createTempFile ( filename , tempOneTimeFilePrefix , file )  ;^350^^^^^346^362^String filename = file.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^String filename = file .createTempFile ( tempFilePrefix , tempFilePrefix , file )  ;^350^^^^^346^362^String filename = file.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P14_Delete_Statement]^^350^^^^^346^362^String filename = file.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^return tempFile.getName (  ) ;String filename = file.getName (  ) ;^350^^^^^346^362^String filename = file.getName (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^if  ( filename.length (  )  >= 5 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.length (  )  > 1 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.length (  )  > 8 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.length() + 0  > 5 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^if  ( tempFilePrefix.length (  )  > 5 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P6_Replace_Expression]^if  ( filename.length (  )  - 5 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P6_Replace_Expression]^if  ( filename.length (  )  - 4 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P7_Replace_Invocation]^if  ( filename.valueOf (  )  > 5 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^if  ( filename.length (  )  > 0  )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P15_Unwrap_Block]^if (filename.substring(((filename.length()) - 5), filename.length()).equals(".jpeg")) {    mimeType = "image/jpeg";}else    if (filename.substring(((filename.length()) - 4), filename.length()).equals(".png")) {        mimeType = "image/png";    };^351^352^353^354^355^346^362^if  ( filename.length (  )  > 5 )  { if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  { mimeType = "image/jpeg"; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P16_Remove_Block]^^351^352^353^354^355^346^362^if  ( filename.length (  )  > 5 )  { if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  { mimeType = "image/jpeg"; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P13_Insert_Block]^if  ( filename.substring (  (  ( filename.length (  )  )  - 5 ) , filename.length (  )  ) .equals ( ".jpeg" )  )  {     mimeType = "image/jpeg"; }else     if  ( filename.substring (  (  ( filename.length (  )  )  - 4 ) , filename.length (  )  ) .equals ( ".png" )  )  {         mimeType = "image/png";     }^351^^^^^346^362^[Delete]^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^if  ( filename.substring ( filename.length (  )   |  5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length (  )  , filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpegj" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length() - 0  - 5, filename.length() - 0  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^if  ( tempOneTimeFilePrefix.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P6_Replace_Expression]^if  ( filename.length (  )  - 4 )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P7_Replace_Invocation]^if  ( filename.substring ( filename.valueOf (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^if  ( tempOneTimeFilePrefix.substring ( filename.valueOf (  )  - 0 , filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P15_Unwrap_Block]^mimeType = "image/jpeg";^352^353^354^355^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  { mimeType = "image/jpeg"; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P16_Remove_Block]^^352^353^354^355^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  { mimeType = "image/jpeg"; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P13_Insert_Block]^if  (  ( filename.length (  )  )  > 5 )  {     if  ( filename.substring (  (  ( filename.length (  )  )  - 5 ) , filename.length (  )  ) .equals ( ".jpeg" )  )  {         mimeType = "image/jpeg";     }else         if  ( filename.substring (  (  ( filename.length (  )  )  - 4 ) , filename.length (  )  ) .equals ( ".png" )  )  {             mimeType = "image/png";         }      }^352^^^^^346^362^[Delete]^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^else if  ( filename.substring ( filename.length (  )   &&  4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length (  )  , filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( "pnpng" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() + 6  - 4, filename.length() + 6  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^else if  ( tempOneTimeFilePrefix.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P7_Replace_Invocation]^else if  ( filename.substring ( filename.valueOf (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^if  ( filename.substring ( filename.valueOf (  )  - 0 , filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P15_Unwrap_Block]^mimeType = "image/png";^356^357^358^359^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  { mimeType = "image/png"; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P16_Remove_Block]^^356^357^358^359^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  { mimeType = "image/png"; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "agemage/png";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^mimeType  = null ;^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^mimeType = "image/jpeg";mimeType = "image/png";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "image/pnmage/png";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^mimeType ;^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^else if  ( filename.substring ( filename.length (  )   |  4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( "png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P13_Insert_Block]^if  ( filename.substring (  (  ( filename.length (  )  )  - 4 ) , filename.length (  )  ) .equals ( ".png" )  )  {     mimeType = "image/png"; }^356^^^^^346^362^[Delete]^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^else if  ( filename.substring ( filename.length (  )   !=  4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() + 7  - 4, filename.length() + 7  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^else if  ( tempFilePrefix.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() + 9  - 4, filename.length() + 9  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^else if  ( tempFilePrefix.substring ( filename.valueOf (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^filename.length() - 0  ) .equals ( ".png" )  )  {^357^^^^^346^362^filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P7_Replace_Invocation]^filename.valueOf (  )  ) .equals ( ".png" )  )  {^357^^^^^346^362^filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P14_Delete_Statement]^^357^358^^^^346^362^filename.length (  )  ) .equals ( ".png" )  )  { mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "image/jpegmage/";^354^^^^^346^362^mimeType = "image/jpeg";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^mimeType  = null ;^354^^^^^346^362^mimeType = "image/jpeg";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^mimeType = "image/png";mimeType = "image/jpeg";^354^^^^^346^362^mimeType = "image/jpeg";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^else if  ( filename.substring ( filename.length (  )   >=  4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length (  )  - 3, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( "n" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() + 8  - 4, filename.length() + 8  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^else {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "gemage/png";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^mimeType  =  mimeType ;^354^^^^^346^362^mimeType = "image/jpeg";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "image/pngi";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^if  ( filename.substring ( filename.length (  )    instanceof   5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( "jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length() - 9  - 5, filename.length() - 9  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P13_Insert_Block]^if  ( filename.substring (  (  ( filename.length (  )  )  - 4 ) , filename.length (  )  ) .equals ( ".png" )  )  {     mimeType = "image/png"; }^352^^^^^346^362^[Delete]^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^if  ( filename.substring ( filename.length (  )   ==  5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length() + 5  - 5, filename.length() + 5  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^if  ( tempFilePrefix.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length() + 1  - 5, filename.length() + 1  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^filename.length() + 5  ) .equals ( ".jpeg" )  )  {^353^^^^^346^362^filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P7_Replace_Invocation]^filename.valueOf (  )  ) .equals ( ".jpeg" )  )  {^353^^^^^346^362^filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P14_Delete_Statement]^^353^354^^^^346^362^filename.length (  )  ) .equals ( ".jpeg" )  )  { mimeType = "image/jpeg";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png.pn" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() - 7  - 4, filename.length() - 7  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() - 8  - 4, filename.length() - 8  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^filename.length() + 3  ) .equals ( ".png" )  )  {^357^^^^^346^362^filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^if  ( filename.substring ( filename.length (  )   ||  5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( "pjpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length() - 2  - 5, filename.length() - 2  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^if  ( filename.substring ( filename.length (  )  - 0 , filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length (  )  - 1, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() - 1  - 4, filename.length() - 1  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "image/pngge/p";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "mage/png";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^mimeType  =  mimeType ;^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( "" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() + 4  - 4, filename.length() + 4  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^else if  ( filename.substring ( filename.length (  )    instanceof   4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() - 3  - 4, filename.length() - 3  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() + 3  - 4, filename.length() + 3  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^filename.length() - 5  ) .equals ( ".png" )  )  {^357^^^^^346^362^filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "e/mage/jpeg";^354^^^^^346^362^mimeType = "image/jpeg";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() - 0  - 4, filename.length() - 0  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "age/";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "ge/jmage/jpeg";^354^^^^^346^362^mimeType = "image/jpeg";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^mimeType = "ma";^358^^^^^346^362^mimeType = "image/png";^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.length() + 2  > 5 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^if  ( tempOneTimeFilePrefix.valueOf (  )  > 5 )  {^351^^^^^346^362^if  ( filename.length (  )  > 5 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^if  ( filename.substring ( filename.length (  )   >=  5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length() + 4  - 5, filename.length() + 4  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^if  ( filename.substring ( filename.length (  )   &  5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length() - 4  - 5, filename.length() - 4  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^if  ( filename.substring ( filename.length() - 3  - 5, filename.length() - 3  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P8_Replace_Mix]^if  ( tempOneTimeFilePrefix.substring ( filename.valueOf (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^352^353^^^^346^362^if  ( filename.substring ( filename.length (  )  - 5, filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^filename.length() + 2  ) .equals ( ".jpeg" )  )  {^353^^^^^346^362^filename.length (  )  ) .equals ( ".jpeg" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^else if  ( filename.substring ( filename.length() + 5  - 4, filename.length() + 5  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^else if  ( filename.substring ( filename.length (  )   >  4, filename.length (  )  ) .equals ( ".png" )  )  {^356^357^^^^346^362^else if  ( filename.substring ( filename.length (  )  - 4, filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P3_Replace_Literal]^filename.length() - 8  ) .equals ( ".png" )  )  {^357^^^^^346^362^filename.length (  )  ) .equals ( ".png" )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile ( file, response, tempOneTimeFilePrefix ) ;^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile (  response, mimeType ) ;^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile ( file,  mimeType ) ;^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile ( file, response ) ;^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile ( mimeType, response, file ) ;^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P5_Replace_Variable]^ServletUtilities.sendTempFile ( file, mimeType, response ) ;^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P7_Replace_Invocation]^ServletUtilities.searchReplace ( file, response, mimeType ) ;^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P14_Delete_Statement]^^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P11_Insert_Donor_Statement]^ServletUtilities.sendTempFile ( file, response ) ;ServletUtilities.sendTempFile ( file, response, mimeType ) ;^361^^^^^346^362^ServletUtilities.sendTempFile ( file, response, mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response [VARIABLES] HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  File  file  
[P2_Replace_Operator]^if  ( length != -1 )  {^397^^^^^382^412^if  ( length == -1 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^if  ( length == -length )  {^397^^^^^382^412^if  ( length == -1 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^if  ( length == -0  )  {^397^^^^^382^412^if  ( length == -1 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P9_Replace_Statement]^if  ( i == -1 )  {^397^^^^^382^412^if  ( length == -1 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P15_Unwrap_Block]^eof = true;^397^398^399^^^382^412^if  ( length == -1 )  { eof = true; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P16_Remove_Block]^^397^398^399^^^382^412^if  ( length == -1 )  { eof = true; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^bos.write ( input, , length ) ;^401^^^^^397^402^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^bos.write (  0, length ) ;^401^^^^^397^402^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^bos.write ( input, 0 ) ;^401^^^^^397^402^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^bos.write ( length, 0, input ) ;^401^^^^^397^402^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^401^^^^^397^402^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^eof = false;^398^^^^^383^413^eof = true;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P1_Replace_Type]^long  length = bis.read ( input ) ;^396^^^^^381^411^int length = bis.read ( input ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^int length = input.read ( bis ) ;^396^^^^^381^411^int length = bis.read ( input ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^396^^^^^381^411^int length = bis.read ( input ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^bos.write ( input, length, length ) ;^401^^^^^386^416^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^bos.write (  0, length ) ;^401^^^^^386^416^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^bos.write ( input, 0 ) ;^401^^^^^386^416^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^bos.write ( length, 0, input ) ;^401^^^^^386^416^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^401^^^^^386^416^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P6_Replace_Expression]^if  ( length == -1 )  {^376^^^^^361^391^if  ( file.exists (  )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^if  ( file.File (  )  )  {^376^^^^^361^391^if  ( file.exists (  )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^if  ( file .getAbsolutePath (  )   )  {^376^^^^^361^391^if  ( file.exists (  )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P9_Replace_Statement]^if  ( !tempDir.exists (  )  )  {^376^^^^^361^391^if  ( file.exists (  )  )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new FileNotFoundException  (" ")  ;^409^^^^^394^424^throw new FileNotFoundException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^409^^^^^394^424^throw new FileNotFoundException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^bos.write ( input, length, length ) ;^401^^^^^397^402^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P1_Replace_Type]^short  length = bis.read ( input ) ;^396^^^^^381^411^int length = bis.read ( input ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^bos.write ( input, -1, length ) ;^401^^^^^386^416^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P2_Replace_Operator]^if  ( mimeType == null )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^if  ( tempOneTimeFilePrefix != null )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^if  ( mimeType != this )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P9_Replace_Statement]^if  ( tempDirName == null )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P9_Replace_Statement]^if  ( chart == null )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P9_Replace_Statement]^if  ( prefix == null )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P9_Replace_Statement]^if  ( session == null )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P9_Replace_Statement]^if  ( session != null )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P15_Unwrap_Block]^response.setHeader("Content-Type", mimeType);^381^382^383^^^366^396^if  ( mimeType != null )  { response.setHeader ( "Content-Type", mimeType ) ; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P16_Remove_Block]^^381^382^383^^^366^396^if  ( mimeType != null )  { response.setHeader ( "Content-Type", mimeType ) ; }^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "Content-Typeon", mimeType ) ;^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^response.setHeader ( "Content-Type", tempFilePrefix ) ;^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^response.setHeader ( "Content-Type" ) ;^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^response .getOutputStream (  )  ;^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P13_Insert_Block]^if  ( mimeType != null )  {     response.setHeader ( "Content-Type", mimeType ) ; }^382^^^^^367^397^[Delete]^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^SimpleDateFormat sdf = new SimpleDateFormat ( "EEE, dd MMM yyyy HH:mm:ss zMM yyyy HH:mm:s", Locale.ENGLISH ) ;^385^386^^^^370^400^SimpleDateFormat sdf = new SimpleDateFormat ( "EEE, dd MMM yyyy HH:mm:ss z", Locale.ENGLISH ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^sdf.format ( new Date ( file.File (  )  )  )  ) ;^389^^^^^374^404^sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^sdf.format ( new Date ( file .mkdirs (  )   )  )  ) ;^389^^^^^374^404^sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^BufferedOutputStream bos = new BufferedOutputStream ( response .setHeader ( mimeType , tempFilePrefix )   ) ;^391^392^^^^376^406^BufferedOutputStream bos = new BufferedOutputStream ( response.getOutputStream (  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^BufferedOutputStream bos = new BufferedOutputStream ( response .setHeader ( filename , tempDirName )   ) ;^391^392^^^^376^406^BufferedOutputStream bos = new BufferedOutputStream ( response.getOutputStream (  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^BufferedOutputStream bos = new BufferedOutputStream ( response.getOutputStream (  )  ) ;BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( file )  ) ;^377^378^^^^362^392^BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( file )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^SimpleDateFormat sdf = new SimpleDateFormat ( "EE,EE, dd MMM yyyy HH:mm:ss z", Locale.ENGLISH ) ;^385^386^^^^370^400^SimpleDateFormat sdf = new SimpleDateFormat ( "EEE, dd MMM yyyy HH:mm:ss z", Locale.ENGLISH ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^BufferedInputStream bis = new BufferedInputStream ( new FileInputStream ( file )  ) ;BufferedOutputStream bos = new BufferedOutputStream ( response.getOutputStream (  )  ) ;^391^392^^^^376^406^BufferedOutputStream bos = new BufferedOutputStream ( response.getOutputStream (  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^byte[] input = new byte[length];^393^^^^^378^408^byte[] input = new byte[1024];^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^boolean eof = true;^394^^^^^379^409^boolean eof = false;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "Content-TypeConten", mimeType ) ;^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^response.setHeader ( "Content-Type", tempOneTimeFilePrefix ) ;^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "onontent-Length", String.valueOf ( file.length (  )  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "Content-Length", String.valueOf ( file.length() + 6  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^response.setHeader ( "Content-Length", String.substring ( file.length (  )  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^response.setHeader ( "Content-Length", String .indexOf ( tempDirName )   ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^response.setHeader ( "Content-Length", String.valueOf ( file.File (  )  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "Content-Length", String.valueOf ( file.length() - 9  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^response.setHeader ( "Content-Length", String .indexOf ( tempOneTimeFilePrefix )   ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "Content-Length", String.valueOf ( file.length() - 6  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^response.setHeader ( "Content-Length", String.valueOf ( file .substring ( length , length )   )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^sdf.setTimeZone ( TimeZone.getTimeZone ( "GMTGM" )  ) ;^387^^^^^372^402^sdf.setTimeZone ( TimeZone.getTimeZone ( "GMT" )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^sdf .format ( null )  ;^387^^^^^372^402^sdf.setTimeZone ( TimeZone.getTimeZone ( "GMT" )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^387^^^^^372^402^sdf.setTimeZone ( TimeZone.getTimeZone ( "GMT" )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "odifieast-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^388^389^^^^373^403^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P4_Replace_Constructor]^response.setHeader ( "Last-Modified".format ( new Date ( file.lastModified (  )  )  )  ) ;^388^389^^^^373^403^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file.File (  )  )  )  ) ;^388^389^^^^373^403^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file .mkdirs (  )   )  )  ) ;^388^389^^^^373^403^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^response .setHeader ( mimeType , prefix )   ) ;^392^^^^^377^407^response.getOutputStream (  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^392^393^^^^377^407^response.getOutputStream (  )  ) ; byte[] input = new byte[1024];^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^bos.write ( input, 4, length ) ;^401^^^^^386^416^bos.write ( input, 0, length ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^bos.BufferedOutputStream (  ) ;^404^^^^^389^419^bos.flush (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^404^405^^^^389^419^bos.flush (  ) ; bis.close (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^bos.close (  ) ;bos.flush (  ) ;^404^^^^^389^419^bos.flush (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^bis.close (  ) ;bos.flush (  ) ;^404^^^^^389^419^bos.flush (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^bis.BufferedInputStream (  ) ;^405^^^^^390^420^bis.close (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^405^406^^^^390^420^bis.close (  ) ; bos.close (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^bos.close (  ) ;bis.close (  ) ;^405^^^^^390^420^bis.close (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^bos.flush (  ) ;bis.close (  ) ;^405^^^^^390^420^bis.close (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P14_Delete_Statement]^^406^^^^^391^421^bos.close (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^bis.close (  ) ;bos.close (  ) ;^406^^^^^391^421^bos.close (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P11_Insert_Donor_Statement]^bos.flush (  ) ;bos.close (  ) ;^406^^^^^391^421^bos.close (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^if  ( mimeType != false )  {^381^^^^^366^396^if  ( mimeType != null )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "tenontent-Type", mimeType ) ;^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P2_Replace_Operator]^if  ( length >= -1 )  {^397^^^^^382^412^if  ( length == -1 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^if  ( length == --8 )  {^397^^^^^382^412^if  ( length == -1 )  {^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^SimpleDateFormat sdf = new SimpleDateFormat ( "EEE, dd MMM yyyy HH:mm:ss zEE, dd MMM ", Locale.ENGLISH ) ;^385^386^^^^370^400^SimpleDateFormat sdf = new SimpleDateFormat ( "EEE, dd MMM yyyy HH:mm:ss z", Locale.ENGLISH ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^SimpleDateFormat sdf = new SimpleDateFormat ( "EEE, dd MMM yyyy HH:mm:ss z, dd MMM y", Locale.ENGLISH ) ;^385^386^^^^370^400^SimpleDateFormat sdf = new SimpleDateFormat ( "EEE, dd MMM yyyy HH:mm:ss z", Locale.ENGLISH ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^byte[] input = new byte[1020];^393^^^^^378^408^byte[] input = new byte[1024];^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^return ;^409^^^^^394^424^throw new FileNotFoundException  (" ")  ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "ont", mimeType ) ;^382^^^^^367^397^response.setHeader ( "Content-Type", mimeType ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "nt", String.valueOf ( file.length (  )  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "Content-Length", String.valueOf ( file.length() - 8  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "Content-Length", String.valueOf ( file.length() + 8  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "Content-Length", String.valueOf ( file.length() + 3  )  ) ;^384^^^^^369^399^response.setHeader ( "Content-Length", String.valueOf ( file.length (  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^sdf.setTimeZone ( TimeZone.getTimeZone ( "GM" )  ) ;^387^^^^^372^402^sdf.setTimeZone ( TimeZone.getTimeZone ( "GMT" )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^sdf.setTimeZone ( TimeZone.getTimeZone ( "G" )  ) ;^387^^^^^372^402^sdf.setTimeZone ( TimeZone.getTimeZone ( "GMT" )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P3_Replace_Literal]^response.setHeader ( "t-Modast-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^388^389^^^^373^403^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P5_Replace_Variable]^response.setHeader ( "Last-Modified", file.format ( new Date ( sdf.lastModified (  )  )  )  ) ;^388^389^^^^373^403^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P8_Replace_Mix]^response .getOutputStream (  )   )  ) ;^388^389^^^^373^403^response.setHeader ( "Last-Modified", sdf.format ( new Date ( file.lastModified (  )  )  )  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P7_Replace_Invocation]^bos .BufferedOutputStream ( 3 )  ;^404^^^^^389^419^bos.flush (  ) ;^[CLASS] ServletUtilities  [METHOD] sendTempFile [RETURN_TYPE] void   File file HttpServletResponse response String mimeType [VARIABLES] byte[]  input  boolean  eof  BufferedInputStream  bis  HttpServletResponse  response  String  filename  mimeType  prefix  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  File  file  SimpleDateFormat  sdf  BufferedOutputStream  bos  int  length  
[P1_Replace_Type]^short  i = inputString.indexOf ( searchString ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^int i = searchString.indexOf ( searchString ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^int i = inputString.indexOf ( replaceString ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^int i = searchString.indexOf ( inputString ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P7_Replace_Invocation]^int i = inputString.substring ( searchString ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P1_Replace_Type]^int i = inputString.indexOf ( searchchar ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^int i = tempOneTimeFilePrefix.indexOf ( searchString ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^int i = inputString.indexOf ( tempDirName ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^int i = tempOneTimeFilePrefix.substring ( searchString ) ;^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P14_Delete_Statement]^^428^^^^^424^441^int i = inputString.indexOf ( searchString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^if  ( i >= -1 )  {^429^^^^^424^441^if  ( i == -1 )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^if  ( i == -i )  {^429^^^^^424^441^if  ( i == -1 )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^if  ( i == -2 )  {^429^^^^^424^441^if  ( i == -1 )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P9_Replace_Statement]^if  ( length == -1 )  {^429^^^^^424^441^if  ( i == -1 )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P15_Unwrap_Block]^return inputString;^429^430^431^^^424^441^if  ( i == -1 )  { return inputString; }^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P16_Remove_Block]^^429^430^431^^^424^441^if  ( i == -1 )  { return inputString; }^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^return searchString;^430^^^^^424^441^return inputString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^return tempOneTimeFilePrefix;^430^^^^^424^441^return inputString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P1_Replace_Type]^char r = "";^433^^^^^424^441^String r = "";^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^r += inputString.substring ( 0, i )  >  + replaceString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^r += inputString.substring ( i, i )  + replaceString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += tempOneTimeFilePrefix.substring ( 0, i )  + replaceString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += inputString.substring ( 0, i )  + tempDirName;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += inputString.substring ( 0 )  + replaceString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += i.substring ( 0, inputString )  + replaceString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += inputStringnputString.substring ( 0, i )  + replaceString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += replaceString.substring ( 0, i )  + inputString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^r += inputString.substring ( 2, i )  + replaceString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^r += inputString.substring ( 9, i )  + replaceString;^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P14_Delete_Statement]^^434^^^^^424^441^r += inputString.substring ( 0, i )  + replaceString;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^if  ( i + searchString.length (  )  <= inputString.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^if  ( i   instanceof   searchString.length (  )  < inputString.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^if  <=  ( i + searchString.length (  )  < inputString.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^if  ( i + searchString.length() + 5  < inputString.length() + 5  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( i + tempOneTimeFilePrefix.length (  )  < inputString.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( i + searchString.length (  )  < tempOneTimeFilePrefix.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( inputString + searchString.length (  )  < i.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( i + inputString.length (  )  < searchString.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P6_Replace_Expression]^if  ( i + searchString.length (  ) )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P7_Replace_Invocation]^if  ( i + searchString.valueOf (  )  < inputString.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P15_Unwrap_Block]^r += org.jfree.chart.servlet.ServletUtilities.searchReplace(inputString.substring((i + (searchString.length()))), searchString, replaceString);^435^436^437^438^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  { r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ; }^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P16_Remove_Block]^^435^436^437^438^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  { r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ; }^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P1_Replace_Type]^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replacechar ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^r += searchReplace ( inputString.substring ( i  &  searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^r += searchReplace ( inputString.substring ( i + searchString.length() + 2  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( tempFilePrefix.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + tempFilePrefix.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, tempDirName ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) ,  replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( replaceString.substring ( i + searchString.length (  )  ) , searchString, inputString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputStringnputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + replaceString.length (  )  ) , searchString, searchString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P7_Replace_Invocation]^r += saveChartAsJPEG ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P7_Replace_Invocation]^r += searchReplace ( inputString.substring ( i + searchString.valueOf (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P13_Insert_Block]^if  (  ( i +  ( searchString.length (  )  )  )  <  ( inputString.length (  )  )  )  {     r += searchReplace ( inputString.substring (  ( i +  ( searchString.length (  )  )  )  ) , searchString, replaceString ) ; }^436^^^^^424^441^[Delete]^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^r += searchReplace ( inputString.substring ( i  <=  searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^r += searchReplace ( inputString.substring ( i + searchString.length() + 7  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( tempOneTimeFilePrefix.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + tempOneTimeFilePrefix.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, tempOneTimeFilePrefix ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( searchString.substring ( i + inputString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( searchStringnputString.substring ( i + i.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( replaceStringnputString.substring ( i + searchString.length (  )  ) , searchString, i ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P7_Replace_Invocation]^r += searchReplace ( inputString.substring ( i + searchString .substring ( i , i )   ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, tempFilePrefix ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P14_Delete_Statement]^^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^r += searchReplace ( inputString.substring ( i  ^  searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + replaceString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^r += searchReplace ( inputString.substring ( i + searchString.length() + 5  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^r += searchReplace ( inputString.substring ( i + replaceString .substring ( i , i )   ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P2_Replace_Operator]^r += searchReplace ( inputString.substring ( i  >>  searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( inputString.substring ( i + tempDirName.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^if  ( i + searchString.length() - 2  < inputString.length() - 2  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( i + replaceString.length (  )  < inputString.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^if  ( i + searchString.length() - 7  < inputString.length() - 7  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^if  ( i + searchString.length (  )  < searchString.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P7_Replace_Invocation]^if  ( i + searchString .substring ( i , i )   < inputString^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^if  ( i + searchString.length (  )  < tempDirName.length (  )  )  {^435^^^^^424^441^if  ( i + searchString.length (  )  < inputString.length (  )  )  {^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^r += searchReplace ( inputString.substring ( i + searchString.length() - 4  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^r += searchReplace ( tempDirName.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P3_Replace_Literal]^r += searchReplace ( inputString.substring ( i + searchString.length() - 9  ) , searchString, replaceString ) ;^436^437^^^^424^441^r += searchReplace ( inputString.substring ( i + searchString.length (  )  ) , searchString, replaceString ) ;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P5_Replace_Variable]^return searchString;^440^^^^^424^441^return r;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
[P8_Replace_Mix]^return tempDirName;^440^^^^^424^441^return r;^[CLASS] ServletUtilities  [METHOD] searchReplace [RETURN_TYPE] String   String inputString String searchString String replaceString [VARIABLES] int  i  String  filename  inputString  mimeType  prefix  r  replaceString  searchString  tempDirName  tempFilePrefix  tempOneTimeFilePrefix  boolean  
