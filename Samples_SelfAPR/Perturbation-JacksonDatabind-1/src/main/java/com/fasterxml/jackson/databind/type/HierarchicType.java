[P8_Replace_Mix]^protected  Type _actualType;^18^^^^^13^23^protected final Type _actualType;^[CLASS] HierarchicType   [VARIABLES] 
[P8_Replace_Mix]^protected  ParameterizedType _genericType;^22^^^^^17^27^protected final ParameterizedType _genericType;^[CLASS] HierarchicType   [VARIABLES] 
[P5_Replace_Variable]^this._actualType = _actualType;^30^^^^^28^40^this._actualType = type;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P11_Insert_Donor_Statement]^_actualType = actualType;this._actualType = type;^30^^^^^28^40^this._actualType = type;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P2_Replace_Operator]^if  ( type  >=  Class<?> )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P2_Replace_Operator]^if  ( type  ^  Class<?> )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P5_Replace_Variable]^if  ( _actualType instanceof Class<?> )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P6_Replace_Expression]^if  ( type instanceof ParameterizedType )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P6_Replace_Expression]^if  ( "Type " +  ( type.getClass (  ) .getName (  )  )  + " can not be used to construct HierarchicType" )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P6_Replace_Expression]^if  ( "Type " + type.getClass (  ) .getName (  ) )  {^31^^^^^28^40^if  ( type instanceof Class<?> )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P2_Replace_Operator]^} else if  ( type  >=  ParameterizedType )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P5_Replace_Variable]^} else if  ( _actualType instanceof ParameterizedType )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P6_Replace_Expression]^} else if  ( "Type " +  ( type.getClass (  ) .getName (  )  )  + " can not be used to construct HierarchicType" )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P6_Replace_Expression]^} else if  ( "Type " + type.getClass (  ) .getName (  ) )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P6_Replace_Expression]^} else {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P8_Replace_Mix]^}  if  ( _actualType instanceof ParameterizedType )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P15_Unwrap_Block]^_genericType = ((java.lang.reflect.ParameterizedType) (type)); _rawClass = ((java.lang.Class<?>) (_genericType.getRawType()));^34^35^36^37^38^28^40^} else if  ( type instanceof ParameterizedType )  { _genericType =  ( ParameterizedType )  type; _rawClass =  ( Class<?> )  _genericType.getRawType (  ) ; } else { throw new IllegalArgumentException  (" ")  ; }^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P16_Remove_Block]^^34^35^36^37^38^28^40^} else if  ( type instanceof ParameterizedType )  { _genericType =  ( ParameterizedType )  type; _rawClass =  ( Class<?> )  _genericType.getRawType (  ) ; } else { throw new IllegalArgumentException  (" ")  ; }^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P14_Delete_Statement]^^38^^^^^28^40^throw new IllegalArgumentException  (" ")  ;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P8_Replace_Mix]^_genericType =   ( ParameterizedType )  type;^35^^^^^28^40^_genericType =  ( ParameterizedType )  type;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P11_Insert_Donor_Statement]^_genericType = genericType;_genericType =  ( ParameterizedType )  type;^35^^^^^28^40^_genericType =  ( ParameterizedType )  type;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P8_Replace_Mix]^_rawClass  =  _rawClass ;^36^^^^^28^40^_rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P11_Insert_Donor_Statement]^_rawClass =  ( Class<?> )  type;_rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^36^^^^^28^40^_rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P14_Delete_Statement]^^36^^^^^28^40^_rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P8_Replace_Mix]^_rawClass ;^36^^^^^28^40^_rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P8_Replace_Mix]^_rawClass =   ( Class<?> )  type;^32^^^^^28^40^_rawClass =  ( Class<?> )  type;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P11_Insert_Donor_Statement]^_rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;_rawClass =  ( Class<?> )  type;^32^^^^^28^40^_rawClass =  ( Class<?> )  type;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P11_Insert_Donor_Statement]^_rawClass = rawClass;_rawClass =  ( Class<?> )  type;^32^^^^^28^40^_rawClass =  ( Class<?> )  type;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P8_Replace_Mix]^_genericType = this;^33^^^^^28^40^_genericType = null;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P11_Insert_Donor_Statement]^_genericType = genericType;_genericType = null;^33^^^^^28^40^_genericType = null;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P12_Insert_Condition]^if  ( _genericType != null )  { _genericType = null; }^33^^^^^28^40^_genericType = null;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P2_Replace_Operator]^} else if  ( type  <<  ParameterizedType )  {^34^^^^^28^40^} else if  ( type instanceof ParameterizedType )  {^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P8_Replace_Mix]^return ;^38^^^^^28^40^throw new IllegalArgumentException  (" ")  ;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P8_Replace_Mix]^_genericType = true;^33^^^^^28^40^_genericType = null;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] Type)   Type type [VARIABLES] ParameterizedType  _genericType  Type  _actualType  type  Class  _rawClass  boolean  HierarchicType  _subType  _superType  
[P5_Replace_Variable]^_actualType = type;^45^^^^^42^50^_actualType = actualType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_superType = superType;_actualType = actualType;^45^^^^^42^50^_actualType = actualType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^this._actualType = type;_actualType = actualType;^45^^^^^42^50^_actualType = actualType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_subType = subType;_actualType = actualType;^45^^^^^42^50^_actualType = actualType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P8_Replace_Mix]^_rawClass =  null;^46^^^^^42^50^_rawClass = rawClass;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_rawClass =  ( Class<?> )  type;_rawClass = rawClass;^46^^^^^42^50^_rawClass = rawClass;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P5_Replace_Variable]^_genericType = _genericType;^47^^^^^42^50^_genericType = genericType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P8_Replace_Mix]^_genericType =  null;^47^^^^^42^50^_genericType = genericType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_genericType = null;_genericType = genericType;^47^^^^^42^50^_genericType = genericType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_superType = superType;_genericType = genericType;^47^^^^^42^50^_genericType = genericType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_genericType =  ( ParameterizedType )  type;_genericType = genericType;^47^^^^^42^50^_genericType = genericType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P5_Replace_Variable]^_superType = subType;^48^^^^^42^50^_superType = superType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_actualType = actualType;_superType = superType;^48^^^^^42^50^_superType = superType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_subType = subType;_superType = superType;^48^^^^^42^50^_superType = superType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_genericType = genericType;_superType = superType;^48^^^^^42^50^_superType = superType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P5_Replace_Variable]^_subType = superType;^49^^^^^42^50^_subType = subType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_superType = superType;_subType = subType;^49^^^^^42^50^_subType = subType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P11_Insert_Donor_Statement]^_actualType = actualType;_subType = subType;^49^^^^^42^50^_subType = subType;^[CLASS] HierarchicType  [METHOD] <init> [RETURN_TYPE] HierarchicType)   Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  subType  superType  
[P2_Replace_Operator]^HierarchicType sup =  ( _superType != null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^58^^^^^56^64^HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType sup =  ( superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^58^^^^^56^64^HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P6_Replace_Expression]^HierarchicType sup =  ( _superType.deepCloneWithoutSubtype (  ) ;^58^^^^^56^64^HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P8_Replace_Mix]^HierarchicType sup =  ( superType == null )  ? null : _superType .setSubType ( sup )  ;^58^^^^^56^64^HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P14_Delete_Statement]^^58^59^^^^56^64^HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ; HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, superType, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( type, _rawClass, _genericType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, genericType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType,  null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType (  _rawClass, _genericType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _actualType,  _genericType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _actualType, _rawClass,  sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _actualType, sup, _genericType, _rawClass, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _rawClass, _actualType, _genericType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, sup, _genericType, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P8_Replace_Mix]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, subType, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( sup, _rawClass, _genericType, _actualType, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _actualType, _genericType, _rawClass, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^HierarchicType result = new HierarchicType ( _genericType, _rawClass, _actualType, sup, null ) ;^59^^^^^56^64^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P2_Replace_Operator]^if  ( sup == null )  {^60^^^^^56^64^if  ( sup != null )  {^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^if  ( superType != null )  {^60^^^^^56^64^if  ( sup != null )  {^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P8_Replace_Mix]^if  ( sup != this )  {^60^^^^^56^64^if  ( sup != null )  {^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P15_Unwrap_Block]^sup.setSubType(result);^60^61^62^^^56^64^if  ( sup != null )  { sup.setSubType ( result ) ; }^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P16_Remove_Block]^^60^61^62^^^56^64^if  ( sup != null )  { sup.setSubType ( result ) ; }^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^sup.setSubType ( superType ) ;^61^^^^^56^64^sup.setSubType ( result ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P14_Delete_Statement]^^61^^^^^56^64^sup.setSubType ( result ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P7_Replace_Invocation]^sup .setSuperType ( _subType )  ;^61^^^^^56^64^sup.setSubType ( result ) ;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^return sup;^63^^^^^56^64^return result;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P8_Replace_Mix]^return superType;^63^^^^^56^64^return result;^[CLASS] HierarchicType  [METHOD] deepCloneWithoutSubtype [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^public void setSuperType ( HierarchicType superType )  { _superType = sup; }^66^^^^^61^71^public void setSuperType ( HierarchicType sup )  { _superType = sup; }^[CLASS] HierarchicType  [METHOD] setSuperType [RETURN_TYPE] void   HierarchicType sup [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P8_Replace_Mix]^public void setSuperType ( HierarchicType sup )  { _superType =  superType; }^66^^^^^61^71^public void setSuperType ( HierarchicType sup )  { _superType = sup; }^[CLASS] HierarchicType  [METHOD] setSuperType [RETURN_TYPE] void   HierarchicType sup [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^public final HierarchicType getSuperType (  )  { return superType; }^67^^^^^62^72^public final HierarchicType getSuperType (  )  { return _superType; }^[CLASS] HierarchicType  [METHOD] getSuperType [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  subType  sup  superType  
[P5_Replace_Variable]^public void setSubType ( HierarchicType superType )  { _subType = sub; }^68^^^^^63^73^public void setSubType ( HierarchicType sub )  { _subType = sub; }^[CLASS] HierarchicType  [METHOD] setSubType [RETURN_TYPE] void   HierarchicType sub [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P8_Replace_Mix]^public void setSubType ( HierarchicType sub )  { _subType =  superType; }^68^^^^^63^73^public void setSubType ( HierarchicType sub )  { _subType = sub; }^[CLASS] HierarchicType  [METHOD] setSubType [RETURN_TYPE] void   HierarchicType sub [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P5_Replace_Variable]^public final HierarchicType getSubType (  )  { return sup; }^69^^^^^64^74^public final HierarchicType getSubType (  )  { return _subType; }^[CLASS] HierarchicType  [METHOD] getSubType [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P8_Replace_Mix]^public final HierarchicType getSubType (  )  { return superType; }^69^^^^^64^74^public final HierarchicType getSubType (  )  { return _subType; }^[CLASS] HierarchicType  [METHOD] getSubType [RETURN_TYPE] HierarchicType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P2_Replace_Operator]^public final boolean isGeneric (  )  { return _genericType == null; }^71^^^^^66^76^public final boolean isGeneric (  )  { return _genericType != null; }^[CLASS] HierarchicType  [METHOD] isGeneric [RETURN_TYPE] boolean   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P5_Replace_Variable]^public final boolean isGeneric (  )  { return genericType != null; }^71^^^^^66^76^public final boolean isGeneric (  )  { return _genericType != null; }^[CLASS] HierarchicType  [METHOD] isGeneric [RETURN_TYPE] boolean   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P5_Replace_Variable]^public final ParameterizedType asGeneric (  )  { return genericType; }^72^^^^^67^77^public final ParameterizedType asGeneric (  )  { return _genericType; }^[CLASS] HierarchicType  [METHOD] asGeneric [RETURN_TYPE] ParameterizedType   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P2_Replace_Operator]^if  ( _genericType == null )  {^78^^^^^77^82^if  ( _genericType != null )  {^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P5_Replace_Variable]^if  ( genericType != null )  {^78^^^^^77^82^if  ( _genericType != null )  {^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P8_Replace_Mix]^if  ( _genericType != this )  {^78^^^^^77^82^if  ( _genericType != null )  {^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P15_Unwrap_Block]^return _genericType.toString();^78^79^80^^^77^82^if  ( _genericType != null )  { return _genericType.toString (  ) ; }^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P16_Remove_Block]^^78^79^80^^^77^82^if  ( _genericType != null )  { return _genericType.toString (  ) ; }^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P5_Replace_Variable]^return genericType.toString (  ) ;^79^^^^^77^82^return _genericType.toString (  ) ;^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P7_Replace_Invocation]^return _genericType.Object (  ) ;^79^^^^^77^82^return _genericType.toString (  ) ;^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P14_Delete_Statement]^^79^^^^^77^82^return _genericType.toString (  ) ;^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P8_Replace_Mix]^return null.getName (  ) ;^81^^^^^77^82^return _rawClass.getName (  ) ;^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
[P14_Delete_Statement]^^81^^^^^77^82^return _rawClass.getName (  ) ;^[CLASS] HierarchicType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] ParameterizedType  _genericType  genericType  Type  _actualType  actualType  type  Class  _rawClass  rawClass  boolean  HierarchicType  _subType  _superType  result  sub  subType  sup  superType  
