[P1_Replace_Type]^final static  short  INT_SPACE = ' ';^18^^^^^13^23^final static int INT_SPACE = ' ';^[CLASS] TextNode   [VARIABLES] 
[P4_Replace_Constructor]^final static TextNode EMPTY_STRING_NODE = final static new TextNode ( v )  ;^20^^^^^15^25^final static TextNode EMPTY_STRING_NODE = new TextNode ( "" ) ;^[CLASS] TextNode   [VARIABLES] 
[P8_Replace_Mix]^static new TextNode ( v )  ;^20^^^^^15^25^final static TextNode EMPTY_STRING_NODE = new TextNode ( "" ) ;^[CLASS] TextNode   [VARIABLES] 
[P1_Replace_Type]^final char _value;^22^^^^^17^27^final String _value;^[CLASS] TextNode   [VARIABLES] 
[P1_Replace_Type]^public TextNode ( char v )  { _value = v; }^24^^^^^19^29^public TextNode ( String v )  { _value = v; }^[CLASS] TextNode  [METHOD] <init> [RETURN_TYPE] String)   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P5_Replace_Variable]^public TextNode ( String _value )  { _value = v; }^24^^^^^19^29^public TextNode ( String v )  { _value = v; }^[CLASS] TextNode  [METHOD] <init> [RETURN_TYPE] String)   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P8_Replace_Mix]^public TextNode ( String v )  { _value =  null; }^24^^^^^19^29^public TextNode ( String v )  { _value = v; }^[CLASS] TextNode  [METHOD] <init> [RETURN_TYPE] String)   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P2_Replace_Operator]^if  ( v != null )  {^37^^^^^35^44^if  ( v == null )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P5_Replace_Variable]^if  ( _value == null )  {^37^^^^^35^44^if  ( v == null )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P8_Replace_Mix]^if  ( v == true )  {^37^^^^^35^44^if  ( v == null )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P9_Replace_Statement]^if  ( msg != null )  {^37^^^^^35^44^if  ( v == null )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P9_Replace_Statement]^if  ( _value != null )  {^37^^^^^35^44^if  ( v == null )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P15_Unwrap_Block]^return null;^37^38^39^^^35^44^if  ( v == null )  { return null; }^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P16_Remove_Block]^^37^38^39^^^35^44^if  ( v == null )  { return null; }^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P8_Replace_Mix]^return false;^38^^^^^35^44^return null;^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P8_Replace_Mix]^return true;^38^^^^^35^44^return null;^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P2_Replace_Operator]^if  ( v.length (  )  >= 0 )  {^40^^^^^35^44^if  ( v.length (  )  == 0 )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P3_Replace_Literal]^if  ( v.length (  )  == INT_SPACE )  {^40^^^^^35^44^if  ( v.length (  )  == 0 )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P3_Replace_Literal]^if  ( v.length() - 0  == 0 )  {^40^^^^^35^44^if  ( v.length (  )  == 0 )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P5_Replace_Variable]^if  ( _value.length (  )  == 0 )  {^40^^^^^35^44^if  ( v.length (  )  == 0 )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P7_Replace_Invocation]^if  ( v.charAt (  )  == 0 )  {^40^^^^^35^44^if  ( v.length (  )  == 0 )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P8_Replace_Mix]^if  ( v.length (  )  == 0  )  {^40^^^^^35^44^if  ( v.length (  )  == 0 )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P15_Unwrap_Block]^return com.fasterxml.jackson.databind.node.TextNode.EMPTY_STRING_NODE;^40^41^42^^^35^44^if  ( v.length (  )  == 0 )  { return EMPTY_STRING_NODE; }^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P16_Remove_Block]^^40^41^42^^^35^44^if  ( v.length (  )  == 0 )  { return EMPTY_STRING_NODE; }^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P13_Insert_Block]^if  (  ( v.length (  )  )  == 0 )  {     return EMPTY_STRING_NODE; }^41^^^^^35^44^[Delete]^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P3_Replace_Literal]^if  ( v.length() + 1  == 0 )  {^40^^^^^35^44^if  ( v.length (  )  == 0 )  {^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P5_Replace_Variable]^return new TextNode ( _value ) ;^43^^^^^35^44^return new TextNode ( v ) ;^[CLASS] TextNode  [METHOD] valueOf [RETURN_TYPE] TextNode   String v [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P5_Replace_Variable]^return EMPTY_STRING_NODE;^49^^^^^47^50^return JsonNodeType.STRING;^[CLASS] TextNode  [METHOD] getNodeType [RETURN_TYPE] JsonNodeType   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P5_Replace_Variable]^@Override public JsonToken asToken (  )  { return EMPTY_STRING_NODE; }^52^^^^^47^57^@Override public JsonToken asToken (  )  { return JsonToken.VALUE_STRING; }^[CLASS] TextNode  [METHOD] asToken [RETURN_TYPE] JsonToken   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P5_Replace_Variable]^return v;^56^^^^^55^57^return _value;^[CLASS] TextNode  [METHOD] textValue [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  v  boolean  int  INT_SPACE  
[P3_Replace_Literal]^ByteArrayBuilder builder = new ByteArrayBuilder ( 96 ) ;^68^^^^^53^83^ByteArrayBuilder builder = new ByteArrayBuilder ( 100 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^ByteArrayBuilder builder = new ByteArrayBuilder ( 103 ) ;^68^^^^^53^83^ByteArrayBuilder builder = new ByteArrayBuilder ( 100 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^StringBuilder sb = new StringBuilder ( len ) ;ByteArrayBuilder builder = new ByteArrayBuilder ( 100 ) ;^68^^^^^53^83^ByteArrayBuilder builder = new ByteArrayBuilder ( 100 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P1_Replace_Type]^final char str = _value;^69^^^^^54^84^final String str = _value;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^final String str = v;^69^^^^^54^84^final String str = _value;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P1_Replace_Type]^short  ptr = 0;^70^^^^^55^85^int ptr = 0;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^int ptr = INT_SPACE;^70^^^^^55^85^int ptr = 0;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P1_Replace_Type]^short  len = str.length (  ) ;^71^^^^^56^86^int len = str.length (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^int len = str.length() + 6 ;^71^^^^^56^86^int len = str.length (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^int len = v.length (  ) ;^71^^^^^56^86^int len = str.length (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^int len = str.charAt (  ) ;^71^^^^^56^86^int len = str.length (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^int len = _value.length (  ) ;int len = str.length (  ) ;^71^^^^^56^86^int len = str.length (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^int len = str.length() - 1 ;^71^^^^^56^86^int len = str.length (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^71^^^^^56^86^int len = str.length (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^while  ( ptr <= len )  {^74^^^^^59^89^while  ( ptr < len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^while  ( ptr > len )  {^74^^^^^59^89^while  ( ptr < len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^while  ( len < len )  {^74^^^^^59^89^while  ( ptr < len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^while  ( ptr < ptr )  {^74^^^^^59^89^while  ( ptr < len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( ptr < len )  {^79^^^^^64^94^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( decodedData >= len )  {^79^^^^^64^94^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr >= decodedData )  {^79^^^^^64^94^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len >= ptr )  {^79^^^^^64^94^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^break main_loop;^79^80^81^^^64^94^if  ( ptr >= len )  { break main_loop; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^79^80^81^^^64^94^if  ( ptr >= len )  { break main_loop; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( v == null )  {     return null; }^79^^^^^64^94^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ptr >= len )  {     _reportBase64EOF (  ) ; }^79^^^^^64^94^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits <= 0 )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < 8 )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < ptr )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr < 0 )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( len < 0L )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^_reportInvalidBase64(b64variant, ch, 0);^84^85^86^^^69^99^if  ( bits < 0 )  { _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^84^85^86^^^69^99^if  ( bits < 0 )  { _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^84^^^^^69^99^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits !=  ( Base64Variant.BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^84^^^^^69^99^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits !=  ( Base64Variant.BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( b64variant, ch, 2 ) ; }^84^^^^^69^99^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, INT_SPACE ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 (  ch, 0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( b64variant,  0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( ch, b64variant, 0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 3 ) ;_reportInvalidBase64 ( b64variant, ch, 0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;_reportInvalidBase64 ( b64variant, ch, 0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 1 ) ;_reportInvalidBase64 ( b64variant, ch, 0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 2 ) ;_reportInvalidBase64 ( b64variant, ch, 0 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^85^^^^^70^100^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^85^^^^^70^100^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( ptr > len )  {^89^^^^^74^104^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( decodedData >= len )  {^89^^^^^74^104^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr >= decodedData )  {^89^^^^^74^104^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len >= ptr )  {^89^^^^^74^104^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^_reportBase64EOF();^89^90^91^^^74^104^if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^89^90^91^^^74^104^if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ptr >= len )  {     break main_loop; }^89^^^^^74^104^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^90^^^^^75^105^_reportBase64EOF (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits <= 0 )  {^94^^^^^79^109^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < INT_SPACE )  {^94^^^^^79^109^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr < 0 )  {^94^^^^^79^109^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( bits < 3 )  {^94^^^^^79^109^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^_reportInvalidBase64(b64variant, ch, 1);^94^95^96^^^79^109^if  ( bits < 0 )  { _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^94^95^96^^^79^109^if  ( bits < 0 )  { _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits !=  ( Base64Variant.BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^94^^^^^79^109^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits !=  ( Base64Variant.BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( b64variant, ch, 2 ) ; }^94^^^^^79^109^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^94^^^^^79^109^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 (  ch, 1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( b64variant,  1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( ch, b64variant, 1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 3 ) ;_reportInvalidBase64 ( b64variant, ch, 1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;_reportInvalidBase64 ( b64variant, ch, 1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 0 ) ;_reportInvalidBase64 ( b64variant, ch, 1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 2 ) ;_reportInvalidBase64 ( b64variant, ch, 1 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^95^^^^^80^110^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^95^^^^^80^110^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( ptr > len )  {^99^^^^^84^114^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len >= len )  {^99^^^^^84^114^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr >= ptr )  {^99^^^^^84^114^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len >= ptr )  {^99^^^^^84^114^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( decodedData >= len )  {^99^^^^^84^114^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( !b6lenvariant.usesPadding (  )  )  {^101^^^^^86^116^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( !b64variant.usesPaddingChar (  )  )  {^101^^^^^86^116^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( !b64Lvariant.usesPadding (  )  )  {^101^^^^^86^116^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^decodedData >>= 4; builder.append(decodedData); break;^101^102^103^104^105^86^116^if  ( !b64variant.usesPadding (  )  )  {  decodedData >>= 4; builder.append ( decodedData ) ; break; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^101^102^103^104^105^86^116^if  ( !b64variant.usesPadding (  )  )  {  decodedData >>= 4; builder.append ( decodedData ) ; break; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ptr >= len )  {     if  ( ! ( b64variant.usesPadding (  )  )  )  {         decodedData >>= 2;         builder.appendTwoBytes ( decodedData ) ;         break;     }     _reportBase64EOF (  ) ; }^101^^^^^86^116^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ! ( b64variant.usesPadding (  )  )  )  {     decodedData >>= 2;     builder.appendTwoBytes ( decodedData ) ;     break; }^101^^^^^86^116^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ptr >= len )  {     if  ( ! ( b64variant.usesPadding (  )  )  )  {         decodedData >>= 4;         builder.append ( decodedData ) ;         break;     }     _reportBase64EOF (  ) ; }^101^^^^^86^116^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= INT_SPACE;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 4 * 2;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^decodedData >>= 2;decodedData >>= 4;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^builder.append ( ptr ) ;^104^^^^^89^119^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^104^^^^^89^119^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.appendTwoBytes ( decodedData ) ;builder.append ( decodedData ) ;^104^^^^^89^119^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.appendThreeBytes ( decodedData ) ;builder.append ( decodedData ) ;^104^^^^^89^119^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 4 + 2;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( !b64variant .usesPaddingChar ( ch )   )  {^101^^^^^86^116^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^builder.append ( len ) ;^104^^^^^89^119^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^104^105^^^^89^119^builder.append ( decodedData ) ; break;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^107^^^^^92^122^_reportBase64EOF (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( !b6decodedDatavariant.usesPadding (  )  )  {^101^^^^^86^116^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( !b60variant.usesPadding (  )  )  {^101^^^^^86^116^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= -5;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 3;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits <= 0 )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len < 0 )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P6_Replace_Expression]^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P6_Replace_Expression]^if  ( ptr >= len )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P6_Replace_Expression]^if  ( "expected padding character '" +  ( b64variant.getPaddingChar (  )  )  + "'" )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P6_Replace_Expression]^if  ( "expected padding character '" + b64variant.getPaddingChar (  ) )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( bits < 3 )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^if (bits != (Base64Variant.BASE64_VALUE_PADDING)) {    _reportInvalidBase64(b64variant, ch, 2);}; if (ptr >= len) {    _reportBase64EOF();}; ch = str.charAt((ptr++)); if (!(b64variant.usesPaddingChar(ch))) {    _reportInvalidBase64(b64variant, ch, 3, (("expected padding character '" + (b64variant.getPaddingChar())) + "'"));}; decodedData >>= 4; builder.append(decodedData); continue;^113^114^115^116^^98^128^if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 2 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^113^114^115^116^^98^128^if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 2 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits == Base64Variant.BASE64_VALUE_PADDING )  {^114^^^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len != Base64Variant.BASE64_VALUE_PADDING )  {^114^^^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( bits != EMPTY_STRING_NODE )  {^114^^^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( Base64Variant.BASE64_VALUE_PADDING != bits )  {^114^^^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^_reportInvalidBase64(b64variant, ch, 2);^114^115^116^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 2 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^114^115^116^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 2 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^114^^^^^99^129^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits !=  ( Base64Variant.BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^114^^^^^99^129^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^114^^^^^99^129^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, ptr ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 (  ch, 2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( b64variant,  2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( ch, b64variant, 2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 3 ) ;_reportInvalidBase64 ( b64variant, ch, 2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;_reportInvalidBase64 ( b64variant, ch, 2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 1 ) ;_reportInvalidBase64 ( b64variant, ch, 2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 0 ) ;_reportInvalidBase64 ( b64variant, ch, 2 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^115^^^^^100^130^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^115^^^^^100^130^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( ptr > len )  {^118^^^^^103^133^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( decodedData >= len )  {^118^^^^^103^133^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr >= decodedData )  {^118^^^^^103^133^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len >= ptr )  {^118^^^^^103^133^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^_reportBase64EOF();^118^119^120^^^103^133^if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^118^119^120^^^103^133^if  ( ptr >= len )  { _reportBase64EOF (  ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ptr >= len )  {     break main_loop; }^118^^^^^103^133^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^119^^^^^104^134^_reportBase64EOF (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P6_Replace_Expression]^if  ( "expected padding character '" + b64variant.getPaddingChar (  ) )  {^122^^^^^107^137^if  ( !b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( !b64variant .getPaddingChar (  )   )  {^122^^^^^107^137^if  ( !b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( b64variant.usesPaddingChar ( ch )  )  {^122^^^^^107^137^if  ( !b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^_reportInvalidBase64(b64variant, ch, 3, (("expected padding character '" + (b64variant.getPaddingChar())) + "'"));^122^123^124^^^107^137^if  ( !b64variant.usesPaddingChar ( ch )  )  { _reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^122^123^124^^^107^137^if  ( !b64variant.usesPaddingChar ( ch )  )  { _reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  >=  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  &&  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, INT_SPACE, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character ' char"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 (  ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( b64variant,  3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( ch, b64variant, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.usesPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ! ( b64variant.usesPaddingChar ( ch )  )  )  {     _reportInvalidBase64 ( b64variant, ch, 3,  (  ( "expected padding character '" +  ( b64variant.getPaddingChar (  )  )  )  + "'" )  ) ; }^123^^^^^108^138^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^ch = v.charAt ( ptr++ ) ;^121^^^^^106^136^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str.equals ( ptr++ ) ;^121^^^^^106^136^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str .trim (  )  ;^121^^^^^106^136^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= 2;^126^^^^^111^141^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 4 - 3;^126^^^^^111^141^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^decodedData >>= 2;decodedData >>= 4;^126^^^^^111^141^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^121^^^^^106^136^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (   instanceof   ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "addi"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^builder.append ( ptr ) ;^127^^^^^112^142^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^builder .append ( len )  ;^127^^^^^112^142^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^127^128^^^^112^142^builder.append ( decodedData ) ; continue;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.appendTwoBytes ( decodedData ) ;builder.append ( decodedData ) ;^127^^^^^112^142^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.appendThreeBytes ( decodedData ) ;builder.append ( decodedData ) ;^127^^^^^112^142^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr != Base64Variant.BASE64_VALUE_PADDING )  {^114^^^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, -6 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  >  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  <<  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "padding charactexpected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant .usesPaddingChar ( ch )  +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( ptr > len )  {^133^^^^^118^148^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( decodedData >= len )  {^133^^^^^118^148^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr >= decodedData )  {^133^^^^^118^148^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len >= ptr )  {^133^^^^^118^148^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( !b64variant.usesPaddingChar (  )  )  {^135^^^^^120^150^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( !b64variant .usesPaddingChar ( ch )   )  {^135^^^^^120^150^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^decodedData >>= 2; builder.appendTwoBytes(decodedData); break;^135^136^137^138^139^120^150^if  ( !b64variant.usesPadding (  )  )  { decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ; break; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^135^136^137^138^139^120^150^if  ( !b64variant.usesPadding (  )  )  { decodedData >>= 2; builder.appendTwoBytes ( decodedData ) ; break; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ! ( b64variant.usesPadding (  )  )  )  {     decodedData >>= 4;     builder.append ( decodedData ) ;     break; }^135^^^^^120^150^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ptr >= len )  {     if  ( ! ( b64variant.usesPadding (  )  )  )  {         decodedData >>= 2;         builder.appendTwoBytes ( decodedData ) ;         break;     }     _reportBase64EOF (  ) ; }^135^^^^^120^150^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( ptr >= len )  {     if  ( ! ( b64variant.usesPadding (  )  )  )  {         decodedData >>= 4;         builder.append ( decodedData ) ;         break;     }     _reportBase64EOF (  ) ; }^135^^^^^120^150^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= -4;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 2 * 1;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^decodedData >>= 4;decodedData >>= 2;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^builder.appendTwoBytes ( ptr ) ;^137^^^^^122^152^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^builder .appendThreeBytes ( len )  ;^137^^^^^122^152^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^137^^^^^122^152^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.appendThreeBytes ( decodedData ) ;builder.appendTwoBytes ( decodedData ) ;^137^^^^^122^152^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.append ( decodedData ) ;builder.appendTwoBytes ( decodedData ) ;^137^^^^^122^152^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= 11;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 4;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^builder.appendTwoBytes ( len ) ;^137^^^^^122^152^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^140^^^^^125^155^_reportBase64EOF (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= ptr;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 1;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^137^138^^^^122^152^builder.appendTwoBytes ( decodedData ) ; break;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits == 0 )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < INT_SPACE )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr < 0 )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P6_Replace_Expression]^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P6_Replace_Expression]^if  ( decodedData << 6 | bits )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P6_Replace_Expression]^if  ( decodedData << 6 )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( bits < 4 )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^if (bits != (Base64Variant.BASE64_VALUE_PADDING)) {    _reportInvalidBase64(b64variant, ch, 3);}; decodedData >>= 2; builder.appendTwoBytes(decodedData);^144^145^146^147^^129^159^if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^144^145^146^147^^129^159^if  ( bits < 0 )  { if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData  <<  =  ( decodedData << 6 )  | bits;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData =  ( decodedData  >  6 )  | bits;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData =  ( decodedData << -3 )  | bits;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( ptr << 6 )  | bits;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | ptr;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( bits << 6 )  | decodedData;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData =  ( decodedData << 2 )  | bits;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^builder.appendThreeBytes ( ptr ) ;^153^^^^^144^154^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^153^^^^^144^154^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.appendTwoBytes ( decodedData ) ;builder.appendThreeBytes ( decodedData ) ;^153^^^^^144^154^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.append ( decodedData ) ;builder.appendThreeBytes ( decodedData ) ;^153^^^^^144^154^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits == Base64Variant.BASE64_VALUE_PADDING )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( len != Base64Variant.BASE64_VALUE_PADDING )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( bits != EMPTY_STRING_NODE )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^_reportInvalidBase64(b64variant, ch, 3);^145^146^147^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^145^146^147^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  { _reportInvalidBase64 ( b64variant, ch, 3 ) ; }^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^145^^^^^130^160^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits !=  ( Base64Variant.BASE64_VALUE_PADDING )  )  {     _reportInvalidBase64 ( b64variant, ch, 2 ) ; }^145^^^^^130^160^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^145^^^^^130^160^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, decodedData ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 (  ch, 3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( b64variant,  3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( ch, b64variant, 3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;_reportInvalidBase64 ( b64variant, ch, 3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 1 ) ;_reportInvalidBase64 ( b64variant, ch, 3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 0 ) ;_reportInvalidBase64 ( b64variant, ch, 3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 2 ) ;_reportInvalidBase64 ( b64variant, ch, 3 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 1 ) ; }^146^^^^^131^161^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( bits < 0 )  {     _reportInvalidBase64 ( b64variant, ch, 0 ) ; }^146^^^^^131^161^[Delete]^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= -1;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 2 - 3;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^decodedData >>= 4;decodedData >>= 2;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^builder.appendTwoBytes ( ptr ) ;^149^^^^^134^164^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^builder .appendThreeBytes ( bits )  ;^149^^^^^134^164^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^builder.appendTwoBytes ( len ) ;^149^^^^^134^164^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^149^^^^^134^164^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.appendThreeBytes ( decodedData ) ;builder.appendTwoBytes ( decodedData ) ;^149^^^^^134^164^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.append ( decodedData ) ;builder.appendTwoBytes ( decodedData ) ;^149^^^^^134^164^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits >= Base64Variant.BASE64_VALUE_PADDING )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr != Base64Variant.BASE64_VALUE_PADDING )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( bits = Base64Variant.BASE64_VALUE_PADDING )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, -2 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^ch = v.charAt ( ptr++ ) ;^78^^^^^63^93^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str.equals ( ptr++ ) ;^78^^^^^63^93^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str .trim (  )  ;^78^^^^^63^93^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^ch = v.charAt ( ptr++ ) ;^92^^^^^77^107^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str.equals ( ptr++ ) ;^92^^^^^77^107^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^bits = ch.decodeBase64Char ( b64variant ) ;^93^^^^^78^108^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^bits =  null.decodeBase64Char ( ch ) ;^93^^^^^78^108^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P12_Insert_Condition]^if  ( !b64variant.usesPaddingChar ( ch )  )  { bits = b64variant.decodeBase64Char ( ch ) ; }^93^^^^^78^108^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData  <  =  ( decodedData << 6 )  | bits;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData =  ( decodedData  ==  6 )  | bits;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( ptr << 6 )  | bits;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | ptr;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( bits << 6 )  | decodedData;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData =  ( decodedData << 6 >> 3 )  | bits;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= -1;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 6;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^ch = v.charAt ( ptr++ ) ;^109^^^^^94^124^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str.equals ( ptr++ ) ;^109^^^^^94^124^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^bits = ch.decodeBase64Char ( b64variant ) ;^110^^^^^95^125^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^bits = b64variant .getPaddingChar (  )  ;^110^^^^^95^125^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^bits =  null.decodeBase64Char ( ch ) ;^110^^^^^95^125^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P12_Insert_Condition]^if  ( !b64variant.usesPaddingChar ( ch )  )  { bits = b64variant.decodeBase64Char ( ch ) ; }^110^^^^^95^125^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= 13;^126^^^^^111^141^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 1;^126^^^^^111^141^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData  &&  =  ( decodedData << 6 )  | bits;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData =  ( decodedData  >>  6 )  | bits;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData =  ( decodedData << 8 )  | bits;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( ptr << 6 )  | bits;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | ptr;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( bits << 6 )  | decodedData;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData =  ( decodedData << 5 )  | bits;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= 0;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 2L;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^ch = v.charAt ( ptr++ ) ;^142^^^^^127^157^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str.equals ( ptr++ ) ;^142^^^^^127^157^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^bits = ch.decodeBase64Char ( b64variant ) ;^143^^^^^128^158^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^bits = b64variant .getPaddingChar (  )  ;^143^^^^^128^158^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^bits =  null.decodeBase64Char ( ch ) ;^143^^^^^128^158^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P12_Insert_Condition]^if  ( !b64variant.usesPaddingChar ( ch )  )  { bits = b64variant.decodeBase64Char ( ch ) ; }^143^^^^^128^158^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= decodedData;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 5;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData  ^  =  ( decodedData << 6 )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData =  ( decodedData  >>  6 )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData =  ( decodedData << INT_SPACE )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( ptr << 6 )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( bits << 6 )  | decodedData;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData =  ( decodedData << 6 - 2 )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P1_Replace_Type]^int ch;^76^^^^^61^91^char ch;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P1_Replace_Type]^short  bits = b64variant.decodeBase64Char ( ch ) ;^83^^^^^68^98^int bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^int bits = ch.decodeBase64Char ( b64variant ) ;^83^^^^^68^98^int bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^int bits = b64variant .getPaddingChar (  )  ;^83^^^^^68^98^int bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P1_Replace_Type]^short  decodedData = bits;^87^^^^^72^102^int decodedData = bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^int decodedData = ptr;^87^^^^^72^102^int decodedData = bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^78^^^^^63^93^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^83^^^^^68^98^int bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^bits = b64variant.decodeBase64Char ( ch ) ;int bits = b64variant.decodeBase64Char ( ch ) ;^83^^^^^68^98^int bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, -3 ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^92^^^^^77^107^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^bits = b64variant .getPaddingChar (  )  ;^93^^^^^78^108^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^93^^^^^78^108^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^int bits = b64variant.decodeBase64Char ( ch ) ;bits = b64variant.decodeBase64Char ( ch ) ;^93^^^^^78^108^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str .trim (  )  ;^109^^^^^94^124^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^ch = v.equals ( ptr++ ) ;^109^^^^^94^124^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^109^^^^^94^124^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^110^^^^^95^125^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^int bits = b64variant.decodeBase64Char ( ch ) ;bits = b64variant.decodeBase64Char ( ch ) ;^110^^^^^95^125^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ||  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  <  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 5, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "xpecxpected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^builder .appendThreeBytes ( INT_SPACE )  ;^137^^^^^122^152^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^ch = str .trim (  )  ;^142^^^^^127^157^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^142^143^^^^127^157^ch = str.charAt ( ptr++ ) ; bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^143^^^^^128^158^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^int bits = b64variant.decodeBase64Char ( ch ) ;bits = b64variant.decodeBase64Char ( ch ) ;^143^^^^^128^158^bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, len ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^builder.appendThreeBytes ( len ) ;^153^^^^^138^168^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^153^^^^^138^168^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.appendTwoBytes ( decodedData ) ;builder.appendThreeBytes ( decodedData ) ;^153^^^^^138^168^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P11_Insert_Donor_Statement]^builder.append ( decodedData ) ;builder.appendThreeBytes ( decodedData ) ;^153^^^^^138^168^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( ptr > len )  {^79^^^^^64^94^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits == 0 )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < decodedData )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < bits )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( bits < 1 )  {^84^^^^^69^99^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, bits ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < ptr )  {^94^^^^^79^109^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 4 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr >= decodedData )  {^99^^^^^84^114^if  ( ptr >= len )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= -2;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 4 * 3;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^builder .append ( bits )  ;^104^^^^^89^119^builder.append ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= decodedData;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 4 << 2;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( !b611variant.usesPadding (  )  )  {^101^^^^^86^116^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( !b63variant.usesPadding (  )  )  {^101^^^^^86^116^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 5;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < len )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( ptr < 0 )  {^113^^^^^98^128^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits >= Base64Variant.BASE64_VALUE_PADDING )  {^114^^^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( bits = Base64Variant.BASE64_VALUE_PADDING )  {^114^^^^^99^129^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 10 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  |  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, bits, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "dding xpected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= -5;^126^^^^^111^141^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 6 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  &  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, -4, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "ected padding xpected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 11, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character 'ed p"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= decodedData;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 2 - 3;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( b64variant.usesPadding (  )  )  {^135^^^^^120^150^if  ( !b64variant.usesPadding (  )  )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= 8;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits <= 0 )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( bits < bits )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( bits < 0 - 3 )  {^144^^^^^129^159^if  ( bits < 0 )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData  <=  =  ( decodedData << 6 )  | bits;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData =  ( decodedData  !=  6 )  | bits;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData =  ( decodedData << bits )  | bits;^152^^^^^144^154^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^builder .appendTwoBytes ( INT_SPACE )  ;^153^^^^^144^154^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( bits <= Base64Variant.BASE64_VALUE_PADDING )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= INT_SPACE;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 2 * 4;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, INT_SPACE ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( Base64Variant.BASE64_VALUE_PADDING != bits )  {^145^^^^^130^160^if  ( bits != Base64Variant.BASE64_VALUE_PADDING )  {^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData  &&  =  ( decodedData << 6 )  | bits;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData =  ( decodedData << ptr )  | bits;^97^^^^^82^112^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= 8;^103^^^^^88^118^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^ch =  null.charAt ( ptr++ ) ;^121^^^^^106^136^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= -3;^126^^^^^111^141^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 0;^126^^^^^111^141^decodedData >>= 4;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData  &  =  ( decodedData << 6 )  | bits;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData =  ( decodedData << INT_SPACE )  | bits;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData =  ( decodedData << 2 )  | bits;^131^^^^^116^146^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 2 + 2;^136^^^^^121^151^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^ch =  null.charAt ( ptr++ ) ;^142^^^^^127^157^ch = str.charAt ( ptr++ ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData >>= 9;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData >>= 2 * 0;^148^^^^^133^163^decodedData >>= 2;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData   instanceof   =  ( decodedData << 6 )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^decodedData =  ( decodedData  ||  6 )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^decodedData =  ( decodedData << 5 )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^decodedData =  ( decodedData << 6 )  | ptr;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^decodedData =  ( decodedData << 4 )  | bits;^152^^^^^137^167^decodedData =  ( decodedData << 6 )  | bits;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, ptr ) ;^85^^^^^70^100^_reportInvalidBase64 ( b64variant, ch, 0 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 9 ) ;^95^^^^^80^110^_reportInvalidBase64 ( b64variant, ch, 1 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^109^110^^^^94^124^ch = str.charAt ( ptr++ ) ; bits = b64variant.decodeBase64Char ( ch ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 8 ) ;^115^^^^^100^130^_reportInvalidBase64 ( b64variant, ch, 2 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, decodedData, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 3, "e"+b64variant.getPaddingChar (  ) +"'" ) ;^123^^^^^108^138^_reportInvalidBase64 ( b64variant, ch, 3, "expected padding character '"+b64variant.getPaddingChar (  ) +"'" ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^_reportInvalidBase64 ( b64variant, ch, 9 ) ;^146^^^^^131^161^_reportInvalidBase64 ( b64variant, ch, 3 ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^builder .appendThreeBytes ( decodedData )  ;^149^^^^^134^164^builder.appendTwoBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^builder.appendThreeBytes ( ptr ) ;^153^^^^^138^168^builder.appendThreeBytes ( decodedData ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^return builder.ByteArrayBuilder (  ) ;^156^^^^^141^171^return builder.toByteArray (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^return builder .ByteArrayBuilder ( len )  ;^156^^^^^141^171^return builder.toByteArray (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^156^^^^^141^171^return builder.toByteArray (  ) ;^[CLASS] TextNode  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] boolean  char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  str  v  ByteArrayBuilder  builder  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^return _reportBase64EOF ( Base64Variants.getDefaultVariant (  )  ) ;^162^^^^^160^163^return getBinaryValue ( Base64Variants.getDefaultVariant (  )  ) ;^[CLASS] TextNode  [METHOD] binaryValue [RETURN_TYPE] byte[]   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  len  ptr  
[P14_Delete_Statement]^^162^^^^^160^163^return getBinaryValue ( Base64Variants.getDefaultVariant (  )  ) ;^[CLASS] TextNode  [METHOD] binaryValue [RETURN_TYPE] byte[]   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^return v;^173^^^^^172^174^return _value;^[CLASS] TextNode  [METHOD] asText [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  len  ptr  
[P2_Replace_Operator]^if  ( _value == null )  {^180^^^^^179^186^if  ( _value != null )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( v != null )  {^180^^^^^179^186^if  ( _value != null )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( _value != this )  {^180^^^^^179^186^if  ( _value != null )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P9_Replace_Statement]^if  ( msg != null )  {^180^^^^^179^186^if  ( _value != null )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P9_Replace_Statement]^if  ( v == null )  {^180^^^^^179^186^if  ( _value != null )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^if ("true".equals(_value.trim())) {    return true;};^180^181^182^183^^179^186^if  ( _value != null )  { if  ( "true".equals ( _value.trim (  )  )  )  { return true; }^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^180^181^182^183^^179^186^if  ( _value != null )  { if  ( "true".equals ( _value.trim (  )  )  )  { return true; }^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( "true".equals ( _value.trim (  )  )  )  {     return true; }^180^^^^^179^186^[Delete]^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( "t".equals ( _value.trim (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( "false".equals ( _value.trim (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^if  ( "true".equals ( v.trim (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( "true".charAt ( _value.trim (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( "true".equals ( _value.length (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P15_Unwrap_Block]^return true;^181^182^183^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  { return true; }^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P16_Remove_Block]^^181^182^183^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  { return true; }^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  (  ( _value )  != null )  {     if  ( "true".equals ( _value.trim (  )  )  )  {         return true;     } }^181^^^^^179^186^[Delete]^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  (  ( o.getClass (  )  )  !=  ( getClass (  )  )  )  {     return false; }^181^^^^^179^186^[Delete]^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^return false;^182^^^^^179^186^return true;^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( "r".equals ( _value.trim (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( "true".equals ( _value .charAt ( INT_SPACE )   )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P13_Insert_Block]^if  ( "true".equals ( _value.trim (  )  )  )  {     return true; }^181^^^^^179^186^[Delete]^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( "true".equals ( _value .charAt ( bits )   )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( "tr".equals ( _value.trim (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( "true".charAt ( v.trim (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P3_Replace_Literal]^if  ( "ru".equals ( _value.trim (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P7_Replace_Invocation]^if  ( "true".equals ( _value .charAt ( len )   )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P8_Replace_Mix]^if  ( "true".equals ( v.length (  )  )  )  {^181^^^^^179^186^if  ( "true".equals ( _value.trim (  )  )  )  {^[CLASS] TextNode  [METHOD] asBoolean [RETURN_TYPE] boolean   boolean defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  defaultValue  int  INT_SPACE  bits  decodedData  len  ptr  
[P5_Replace_Variable]^return NumberInput.parseAsInt ( _value, len ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^return NumberInput.parseAsInt ( v, defaultValue ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^return NumberInput.parseAsInt ( _value ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^return NumberInput.parseAsInt (  defaultValue ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^return NumberInput.parseAsInt ( defaultValue, _value ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^return NumberInput.parseAsInt ( _value, ptr ) ;^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^190^^^^^189^191^return NumberInput.parseAsInt ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asInt [RETURN_TYPE] int   int defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^return NumberInput.parseAsLong ( v, defaultValue ) ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[P5_Replace_Variable]^return NumberInput.parseAsLong ( _value ) ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[P5_Replace_Variable]^return NumberInput.parseAsLong (  defaultValue ) ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[P5_Replace_Variable]^return NumberInput.parseAsLong ( defaultValue, _value ) ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[P7_Replace_Invocation]^return NumberInput .parseAsInt ( _value , defaultValue )  ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[P8_Replace_Mix]^return NumberInput .parseAsInt ( _value , ptr )  ;^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[P14_Delete_Statement]^^195^^^^^194^196^return NumberInput.parseAsLong ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asLong [RETURN_TYPE] long   long defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  long  defaultValue  
[P5_Replace_Variable]^return NumberInput.parseAsDouble ( v, defaultValue ) ;^200^^^^^199^201^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asDouble [RETURN_TYPE] double   double defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  double  defaultValue  
[P5_Replace_Variable]^return NumberInput.parseAsDouble ( _value ) ;^200^^^^^199^201^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asDouble [RETURN_TYPE] double   double defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  double  defaultValue  
[P5_Replace_Variable]^return NumberInput.parseAsDouble (  defaultValue ) ;^200^^^^^199^201^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asDouble [RETURN_TYPE] double   double defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  double  defaultValue  
[P5_Replace_Variable]^return NumberInput.parseAsDouble ( defaultValue, _value ) ;^200^^^^^199^201^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asDouble [RETURN_TYPE] double   double defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  double  defaultValue  
[P14_Delete_Statement]^^200^^^^^199^201^return NumberInput.parseAsDouble ( _value, defaultValue ) ;^[CLASS] TextNode  [METHOD] asDouble [RETURN_TYPE] double   double defaultValue [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  double  defaultValue  
[P2_Replace_Operator]^if  ( _value != null )  {^213^^^^^210^218^if  ( _value == null )  {^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^if  ( v == null )  {^213^^^^^210^218^if  ( _value == null )  {^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^if  ( _value == true )  {^213^^^^^210^218^if  ( _value == null )  {^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P9_Replace_Statement]^if  ( msg != null )  {^213^^^^^210^218^if  ( _value == null )  {^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P15_Unwrap_Block]^jg.writeNull();^213^214^215^216^217^210^218^if  ( _value == null )  { jg.writeNull (  ) ; } else { jg.writeString ( _value ) ; }^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P16_Remove_Block]^^213^214^215^216^217^210^218^if  ( _value == null )  { jg.writeNull (  ) ; } else { jg.writeString ( _value ) ; }^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^jg.writeString ( v ) ;^216^^^^^210^218^jg.writeString ( _value ) ;^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^jg .writeNull (  )  ;^216^^^^^210^218^jg.writeString ( _value ) ;^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^216^^^^^210^218^jg.writeString ( _value ) ;^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^jg.writeNull (  ) ;jg.writeString ( _value ) ;^216^^^^^210^218^jg.writeString ( _value ) ;^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^jg.writeString (  ) ;^214^^^^^210^218^jg.writeNull (  ) ;^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^214^^^^^210^218^jg.writeNull (  ) ;^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^jg.writeString ( _value ) ;jg.writeNull (  ) ;^214^^^^^210^218^jg.writeNull (  ) ;^[CLASS] TextNode  [METHOD] serialize [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider [VARIABLES] JsonGenerator  jg  TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  SerializerProvider  provider  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^if  ( o > this )  return true;^229^^^^^227^235^if  ( o == this )  return true;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^if  ( o == this )  return false;^229^^^^^227^235^if  ( o == this )  return true;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P15_Unwrap_Block]^return true;^229^230^231^232^233^227^235^if  ( o == this )  return true; if  ( o == null )  return false; if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P16_Remove_Block]^^229^230^231^232^233^227^235^if  ( o == this )  return true; if  ( o == null )  return false; if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^if  ( o != null )  return false;^230^^^^^227^235^if  ( o == null )  return false;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^if  ( o == null )  return true;^230^^^^^227^235^if  ( o == null )  return false;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^if  ( o == this )  return false;^230^^^^^227^235^if  ( o == null )  return false;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P15_Unwrap_Block]^return false;^230^231^232^233^^227^235^if  ( o == null )  return false; if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P16_Remove_Block]^^230^231^232^233^^227^235^if  ( o == null )  return false; if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P12_Insert_Condition]^if  ( v == null )  { if  ( o == null )  return false; }^230^^^^^227^235^if  ( o == null )  return false;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^if  ( o.getClass (  )  < getClass (  )  )  {^231^^^^^227^235^if  ( o.getClass (  )  != getClass (  )  )  {^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^if  ( o.Object (  )  != getClass (  )  )  {^231^^^^^227^235^if  ( o.getClass (  )  != getClass (  )  )  {^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P15_Unwrap_Block]^return false;^231^232^233^^^227^235^if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P16_Remove_Block]^^231^232^233^^^227^235^if  ( o.getClass (  )  != getClass (  )  )  { return false; }^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^return true;^232^^^^^227^235^return false;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^return  (  ( TextNode )  o ) ._value.equals ( v ) ;^234^^^^^227^235^return  (  ( TextNode )  o ) ._value.equals ( _value ) ;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^return  (  ( TextNode )  o ) ._value.charAt ( _value ) ;^234^^^^^227^235^return  (  ( TextNode )  o ) ._value.equals ( _value ) ;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^return  (  ( TextNode )  o ) ._value .equals ( o )  ;^234^^^^^227^235^return  (  ( TextNode )  o ) ._value.equals ( _value ) ;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^234^^^^^227^235^return  (  ( TextNode )  o ) ._value.equals ( _value ) ;^[CLASS] TextNode  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] TextNode  EMPTY_STRING_NODE  Object  o  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^public int hashCode (  )  { return v.hashCode (  ) ; }^238^^^^^233^243^public int hashCode (  )  { return _value.hashCode (  ) ; }^[CLASS] TextNode  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^public int hashCode (  )  { return _value.length (  ) ; }^238^^^^^233^243^public int hashCode (  )  { return _value.hashCode (  ) ; }^[CLASS] TextNode  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^public int hashCode (  )  { return _value .charAt ( INT_SPACE )  ; }^238^^^^^233^243^public int hashCode (  )  { return _value.hashCode (  ) ; }^[CLASS] TextNode  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^public int hashCode (  )  { return v.length (  ) ; }^238^^^^^233^243^public int hashCode (  )  { return _value.hashCode (  ) ; }^[CLASS] TextNode  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P1_Replace_Type]^short  len = _value.length (  ) ;^246^^^^^244^251^int len = _value.length (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^int len = _value.length() + 5 ;^246^^^^^244^251^int len = _value.length (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^int len = v.length (  ) ;^246^^^^^244^251^int len = _value.length (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^int len = _value.trim (  ) ;^246^^^^^244^251^int len = _value.length (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^int len = str.length (  ) ;int len = _value.length (  ) ;^246^^^^^244^251^int len = _value.length (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^int len = _value.length() + 0 ;^246^^^^^244^251^int len = _value.length (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^246^247^^^^244^251^int len = _value.length (  ) ; len = len + 2 +  ( len >> 4 ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^len = len + 2 +  |  ( len >> 4 ) ;^247^^^^^244^251^len = len + 2 +  ( len >> 4 ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^len = len  !=  2 +  ( len >> 4 ) ;^247^^^^^244^251^len = len + 2 +  ( len >> 4 ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^len = len + 2 +  ( len   instanceof   4 ) ;^247^^^^^244^251^len = len + 2 +  ( len >> 4 ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^len = len +  +  ( len >> 4 ) ;^247^^^^^244^251^len = len + 2 +  ( len >> 4 ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^len = len + 2 +  ( len >> 1 ) ;^247^^^^^244^251^len = len + 2 +  ( len >> 4 ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^len = ptr + 2 +  ( len >> 4 ) ;^247^^^^^244^251^len = len + 2 +  ( len >> 4 ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^len = len + 1 +  ( len >> 4 ) ;^247^^^^^244^251^len = len + 2 +  ( len >> 4 ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^StringBuilder sb = new StringBuilder ( ptr ) ;^248^^^^^244^251^StringBuilder sb = new StringBuilder ( len ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^ByteArrayBuilder builder = new ByteArrayBuilder ( 100 ) ;StringBuilder sb = new StringBuilder ( len ) ;^248^^^^^244^251^StringBuilder sb = new StringBuilder ( len ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^appendQuoted ( sb, v ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^appendQuoted (  _value ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^appendQuoted ( sb ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^appendQuoted ( _value, sb ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^TextNode ( sb, _value ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^249^250^^^^244^251^appendQuoted ( sb, _value ) ; return sb.toString (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^CharTypes.appendQuoted ( sb, content ) ;appendQuoted ( sb, _value ) ;^249^^^^^244^251^appendQuoted ( sb, _value ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^return sb.StringBuilder (  ) ;^250^^^^^244^251^return sb.toString (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^return sb .StringBuilder ( decodedData )  ;^250^^^^^244^251^return sb.toString (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^return sb .StringBuilder ( INT_SPACE )  ;^250^^^^^244^251^return sb.toString (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^250^^^^^244^251^return sb.toString (  ) ;^[CLASS] TextNode  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^255^^^^^253^258^sb.append ( '"' ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^CharTypes.appendQuoted ( sb, v ) ;^256^^^^^253^258^CharTypes.appendQuoted ( sb, content ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^CharTypes.appendQuoted (  content ) ;^256^^^^^253^258^CharTypes.appendQuoted ( sb, content ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^CharTypes.appendQuoted ( sb ) ;^256^^^^^253^258^CharTypes.appendQuoted ( sb, content ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^CharTypes.appendQuoted ( content, sb ) ;^256^^^^^253^258^CharTypes.appendQuoted ( sb, content ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^256^257^^^^253^258^CharTypes.appendQuoted ( sb, content ) ; sb.append ( '"' ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^appendQuoted ( sb, _value ) ;CharTypes.appendQuoted ( sb, content ) ;^256^^^^^253^258^CharTypes.appendQuoted ( sb, content ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^257^^^^^253^258^sb.append ( '"' ) ;^[CLASS] TextNode  [METHOD] appendQuoted [RETURN_TYPE] void   StringBuilder sb String content [VARIABLES] TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  StringBuilder  sb  int  INT_SPACE  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( b64variant, ch, len, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 (  ch, bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( b64variant,  bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( b64variant, ch,  null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( bindex, ch, b64variant, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^_reportInvalidBase64 ( ch, b64variant, bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^_reportInvalidBase64 ( b64variant, ch, ptr, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 3 ) ;_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 1 ) ;_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 0 ) ;_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^_reportInvalidBase64 ( b64variant, ch, 2 ) ;_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^269^^^^^266^270^_reportInvalidBase64 ( b64variant, ch, bindex, null ) ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  content  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P1_Replace_Type]^char base;^279^^^^^276^294^String base;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^if  ( ch < INT_SPACE )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^if  ( ch <= ptr )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^if  ( INT_SPACE <= ch )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( (("Illegal white space character (code 0x" + toHexString(ch)) + ") as character #") + (bindex + 1) + " of 4-char base64 unit: can only used between units" )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  (  ( "Illegal white space character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  as character #" + bindex + 1 )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( "Illegal white space character  ( code 0x" +  ( toHexString ( ch )  )  + " )  as character #" )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( "Illegal white space character  ( code 0x" + toHexString ( ch ) )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( bindex + 1 )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( (("Unexpected padding character ('" + b64variant.getPaddingChar()) + "') as character #") + (bindex + 1) + " of 4-char base64 unit: padding only legal as 3rd or 4th character" )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  (  ( "Unexpected padding character  ( '" +  ( b64variant.getPaddingChar (  )  )  )  + "' )  as character #" + bindex + 1 )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( "Unexpected padding character  ( '" +  ( b64variant.getPaddingChar (  )  )  + "' )  as character #" )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( "Unexpected padding character  ( '" + b64variant.getPaddingChar (  ) )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( isDefined(ch)) || isISOControl(ch) )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( "Illegal character (code 0x" + toHexString(ch) + ") in base64 content" )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( "Illegal character  ( code 0x" + toHexString ( ch ) )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( (("Illegal character '" + ch) + "' (code 0x") + toHexString(ch) + ") in base64 content" )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  (  ( "Illegal character '" + ch )  + "'  ( code 0x" + toHexString ( ch ) )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( "Illegal character '" + ch + "'  ( code 0x" )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( "Illegal character '" + ch )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^if  ( ch <= len )  {^280^^^^^276^294^if  ( ch <= INT_SPACE )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^} else if  ( ch.usesPaddingChar ( b64variant )  )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  (  ( "Unexpected padding character  ( '" +  ( b64variant.getPaddingChar (  )  )  )  + "' )  as character #" + bindex + 1 )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Unexpected padding character  ( '" +  ( b64variant.getPaddingChar (  )  )  + "' )  as character #" )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Unexpected padding character  ( '" + b64variant.getPaddingChar (  ) )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( bindex + 1 )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( isDefined(ch)) || isISOControl(ch) )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Illegal character (code 0x" + toHexString(ch) + ") in base64 content" )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Illegal character  ( code 0x" + toHexString ( ch ) )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( (("Illegal character '" + ch) + "' (code 0x") + toHexString(ch) + ") in base64 content" )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  (  ( "Illegal character '" + ch )  + "'  ( code 0x" + toHexString ( ch ) )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Illegal character '" + ch + "'  ( code 0x" )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Illegal character '" + ch )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^} else if  ( b64variant .getPaddingChar (  )   )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P13_Insert_Block]^if  ( ch <=  ( INT_SPACE )  )  {     base =  (  (  ( "Illegal white space character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  as character #" )  +  ( bindex + 1 )  )  + " of 4-char base64 unit: can only used between units"; }else     if  ( b64variant.usesPaddingChar ( ch )  )  {         base =  (  (  ( "Unexpected padding character  ( '" +  ( b64variant.getPaddingChar (  )  )  )  + "' )  as character #" )  +  ( bindex + 1 )  )  + " of 4-char base64 unit: padding only legal as 3rd or 4th character";     }else         if  (  ( ! ( isDefined ( ch )  )  )  ||  ( isISOControl ( ch )  )  )  {             base =  ( "Illegal character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  in base64 content";         }else {             base =  (  (  ( "Illegal character '" + ch )  + "'  ( code 0x" )  +  ( toHexString ( ch )  )  )  + " )  in base64 content";         }^282^^^^^276^294^[Delete]^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P13_Insert_Block]^if  (  ( ! ( isDefined ( ch )  )  )  ||  ( isISOControl ( ch )  )  )  {     base =  ( "Illegal character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  in base64 content"; }else {     base =  (  (  ( "Illegal character '" + ch )  + "'  ( code 0x" )  +  ( toHexString ( ch )  )  )  + " )  in base64 content"; }^282^^^^^276^294^[Delete]^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^} else if  ( !Character.isDefined ( ch )  && Character.isISOControl ( ch )  )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( !Character.isDefined ( ch )  ) {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  (  Character.isISOControl ( ch )  )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Illegal character (code 0x" + toHexString(ch) + ") in base64 content" )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Illegal character  ( code 0x" + toHexString ( ch ) )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( (("Illegal character '" + ch) + "' (code 0x") + toHexString(ch) + ") in base64 content" )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  (  ( "Illegal character '" + ch )  + "'  ( code 0x" + toHexString ( ch ) )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Illegal character '" + ch + "'  ( code 0x" )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else if  ( "Illegal character '" + ch )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^} else {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^} else if  ( !Character.isISOControl ( ch )  || Character.isISOControl ( ch )  )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^} else if  ( !Character.isDefined ( ch )  || Character.isDefined ( ch )  )  {^284^^^^^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P15_Unwrap_Block]^base = ("Illegal character (code 0x" + (java.lang.Integer.toHexString(ch))) + ") in base64 content";^284^285^286^287^288^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {  base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; } else { base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; }^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P16_Remove_Block]^^284^285^286^287^288^276^294^} else if  ( !Character.isDefined ( ch )  || Character.isISOControl ( ch )  )  {  base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; } else { base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content"; }^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P13_Insert_Block]^if  ( b64variant.usesPaddingChar ( ch )  )  {     base =  (  (  ( "Unexpected padding character  ( '" +  ( b64variant.getPaddingChar (  )  )  )  + "' )  as character #" )  +  ( bindex + 1 )  )  + " of 4-char base64 unit: padding only legal as 3rd or 4th character"; }else     if  (  ( ! ( isDefined ( ch )  )  )  ||  ( isISOControl ( ch )  )  )  {         base =  ( "Illegal character  ( code 0x" +  ( toHexString ( ch )  )  )  + " )  in base64 content";     }else {         base =  (  (  ( "Illegal character '" + ch )  + "'  ( code 0x" )  +  ( toHexString ( ch )  )  )  + " )  in base64 content";     }^284^^^^^276^294^[Delete]^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P1_Replace_Type]^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexchar ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  &  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  &&  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'   instanceof   ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "l char"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^base =  "Illegal nullaracter '"+null+"'  ( code 0x"+Integer.toHexString ( null ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P1_Replace_Type]^base = "Illegal character  ( code 0x"+Integer.toHexchar ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  ^  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  &&  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^base =  "Illegal nullaracter  ( code 0x"+Integer.toHexString ( null ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  >=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  >  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  >=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  !=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  ||  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Illegal character 'll"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  |  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character   instanceof   ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  <=  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+2 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( defaultValue+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^base = "Unexpected padding character  ( '"+b64variant.usesPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^base =  "Unexpected padding character  ( '"+null.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  |  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  <=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Illegal character 'Illega"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  !=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  <<  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  ==  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  >  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  &  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  !=  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+9 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th characterof 4-char base64 unit: padding only legal as 3rd ";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( ptr+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character   instanceof   ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  ^  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  <  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "leg"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P1_Replace_Type]^base = "Illegal white space character  ( code 0x"+Integer.toHexchar ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal white space character  <  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal white space character  ^  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal white space character  >  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal white space character  >=  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal white space character  <=  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+ptr ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between unitsse64 u";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( ptr+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^base = "Illegal white space bindexaracter  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( ch+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^base =  "Illegal white space nullaracter  ( code 0x"+Integer.toHexString ( null ) +" )  as nullaracter #"+ ( bindex+1 ) +" of 4-nullar base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P11_Insert_Donor_Statement]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P14_Delete_Statement]^^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^}  if  ( b64variant.usesPaddingChar ( ch )  )  {^282^^^^^276^294^} else if  ( b64variant.usesPaddingChar ( ch )  )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "racter "+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  <  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  >>  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  <<  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  ==  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Illegal character 'l"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  >=  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  <  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+10 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character of 4-c";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Illegal character 'legal cha"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  <=  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal white space character  !=  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal white space character  |  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+5 ) +" of 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +"f 4-char base64 unit: can only used between unitof 4-char base64 unit: can only used between units";^281^^^^^276^294^base = "Illegal white space character  ( code 0x"+Integer.toHexString ( ch ) +" )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: can only used between units";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  >>  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Unexpected padding character  ||  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+len ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit:of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( len+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P7_Replace_Invocation]^base = "Unexpected padding character  ( '"+b64variant .usesPaddingChar ( ch )  +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^283^^^^^276^294^base = "Unexpected padding character  ( '"+b64variant.getPaddingChar (  ) +"' )  as character #"+ ( bindex+1 ) +" of 4-char base64 unit: padding only legal as 3rd or 4th character";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character  ==  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^286^^^^^276^294^base = "Illegal character  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = "Illegal character '"+ch+"'  >>  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = "cter"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^288^^^^^276^294^base = "Illegal character '"+ch+"'  ( code 0x"+Integer.toHexString ( ch ) +" )  in base64 content";^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^if  ( msg == null )  {^290^^^^^276^294^if  ( msg != null )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^if  ( v != null )  {^290^^^^^276^294^if  ( msg != null )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( base + ": " + msg )  {^290^^^^^276^294^if  ( msg != null )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P6_Replace_Expression]^if  ( base + ": " )  {^290^^^^^276^294^if  ( msg != null )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^if  ( msg != false )  {^290^^^^^276^294^if  ( msg != null )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P9_Replace_Statement]^if  ( _value == null )  {^290^^^^^276^294^if  ( msg != null )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P9_Replace_Statement]^if  ( _value != null )  {^290^^^^^276^294^if  ( msg != null )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P9_Replace_Statement]^if  ( v == null )  {^290^^^^^276^294^if  ( msg != null )  {^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P15_Unwrap_Block]^base = (base + ": ") + msg;^290^291^292^^^276^294^if  ( msg != null )  { base = base + ": " + msg; }^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P16_Remove_Block]^^290^291^292^^^276^294^if  ( msg != null )  { base = base + ": " + msg; }^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = base  >  ": " + msg;^291^^^^^276^294^base = base + ": " + msg;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^base = v + ": " + msg;^291^^^^^276^294^base = base + ": " + msg;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^base = base + ": " + v;^291^^^^^276^294^base = base + ": " + msg;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P5_Replace_Variable]^base = msg + ": " + base;^291^^^^^276^294^base = base + ": " + msg;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P2_Replace_Operator]^base = base  |  ": " + msg;^291^^^^^276^294^base = base + ": " + msg;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P3_Replace_Literal]^base = base + "" + msg;^291^^^^^276^294^base = base + ": " + msg;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
[P8_Replace_Mix]^return 0;^293^^^^^276^294^throw new JsonParseException  (" ")  ;^[CLASS] TextNode  [METHOD] _reportInvalidBase64 [RETURN_TYPE] void   Base64Variant b64variant char ch int bindex String msg [VARIABLES] char  ch  Base64Variant  b64variant  TextNode  EMPTY_STRING_NODE  String  _value  base  content  msg  str  v  boolean  int  INT_SPACE  bindex  bits  decodedData  defaultValue  len  ptr  
