[P8_Replace_Mix]^public  static NameTransformer NOP = new NameTransformer (  )  {^14^^^^^14^24^public final static NameTransformer NOP = new NameTransformer (  )  {^[CLASS] NameTransformer 1 2 3 4 Chained   [VARIABLES] 
[P8_Replace_Mix]^protected  NameTransformer _t1, _t2;^111^^^^^106^116^protected final NameTransformer _t1, _t2;^[CLASS] NameTransformer 1 2 3 4 Chained   [VARIABLES] 
[P5_Replace_Variable]^_t1 = t2;^114^^^^^113^116^_t1 = t1;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P11_Insert_Donor_Statement]^_t2 = t2;_t1 = t1;^114^^^^^113^116^_t1 = t1;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P5_Replace_Variable]^_t2 = t1;^115^^^^^113^116^_t2 = t2;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P11_Insert_Donor_Statement]^_t1 = t1;_t2 = t2;^115^^^^^113^116^_t2 = t2;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^boolean hasPrefix =  ( prefix != null )  ||  ( prefix.length (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^boolean hasPrefix =  ( prefix == null )  &&  ( prefix.length (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  >= 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > -8 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length() + 0  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^boolean hasPrefix =  ( transformed != null )  &&  ( prefix.length (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.substring (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^boolean hasPrefix =  ( suffix != null )  &&  ( prefix.length (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P11_Insert_Donor_Statement]^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length() - 5  > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix .endsWith ( name )   > 0 ) ;^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P14_Delete_Statement]^^34^^^^^19^49^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^boolean hasSuffix =  ( suffix != null )  ||  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^boolean hasSuffix =  ( suffix == null )  &&  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  >= 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 9 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length() + 6  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^boolean hasSuffix =  ( str != null )  &&  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.substring (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^boolean hasSuffix =  ( suffix != null )  &&  ( suffix .endsWith ( prefix )   > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^boolean hasSuffix =  ( transformed != null )  &&  ( suffix.substring (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P11_Insert_Donor_Statement]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length() + 0  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^boolean hasSuffix =  ( transformed != null )  &&  ( suffix.length (  )  > 0 ) ;^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P14_Delete_Statement]^^35^^^^^20^50^boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( hasSuffix )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( prefix + name )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( str.length (  )  - suffix.length (  ) )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( (("[PreAndSuffixTransformer('" + prefix) + "','") + suffix + "')]" )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  (  ( "[PreAndSuffixTransformer ( '" + prefix )  + "','" + suffix )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( "[PreAndSuffixTransformer ( '" + prefix + "','" )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( "[PreAndSuffixTransformer ( '" + prefix )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( "[PrefixTransformer('" + prefix + "')]" )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( "[PrefixTransformer ( '" + prefix )  {^37^^^^^22^52^if  ( hasPrefix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P15_Unwrap_Block]^if (hasSuffix) {    return new com.fasterxml.jackson.databind.util.NameTransformer() {        @java.lang.Override        public java.lang.String transform(java.lang.String name) {            return (prefix + name) + suffix;        }        @java.lang.Override        public java.lang.String reverse(java.lang.String transformed) {            if (transformed.startsWith(prefix)) {                java.lang.String str = transformed.substring(prefix.length());                if (str.endsWith(suffix)) {                    return str.substring(0, ((str.length()) - (suffix.length())));                }            }            return null;        }        @java.lang.Override        public java.lang.String toString() {            return ((("[PreAndSuffixTransformer('" + prefix) + "','") + suffix) + "')]";        }    };}; return new com.fasterxml.jackson.databind.util.NameTransformer() {    @java.lang.Override    public java.lang.String transform(java.lang.String name) {        return prefix + name;    }    @java.lang.Override    public java.lang.String reverse(java.lang.String transformed) {        if (transformed.startsWith(prefix)) {            return transformed.substring(prefix.length());        }        return null;    }    @java.lang.Override    public java.lang.String toString() {        return ("[PrefixTransformer('" + prefix) + "')]";    }};^37^38^39^40^41^22^52^if  ( hasPrefix )  { if  ( hasSuffix )  { return new NameTransformer (  )  { @Override public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P16_Remove_Block]^^37^38^39^40^41^22^52^if  ( hasPrefix )  { if  ( hasSuffix )  { return new NameTransformer (  )  { @Override public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( hasPrefix )  {^38^^^^^23^53^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( prefix + name )  {^38^^^^^23^53^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( str.length (  )  - suffix.length (  ) )  {^38^^^^^23^53^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( (("[PreAndSuffixTransformer('" + prefix) + "','") + suffix + "')]" )  {^38^^^^^23^53^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  (  ( "[PreAndSuffixTransformer ( '" + prefix )  + "','" + suffix )  {^38^^^^^23^53^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( "[PreAndSuffixTransformer ( '" + prefix + "','" )  {^38^^^^^23^53^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( "[PreAndSuffixTransformer ( '" + prefix )  {^38^^^^^23^53^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P15_Unwrap_Block]^return new com.fasterxml.jackson.databind.util.NameTransformer() {    @java.lang.Override    public java.lang.String transform(java.lang.String name) {        return (prefix + name) + suffix;    }    @java.lang.Override    public java.lang.String reverse(java.lang.String transformed) {        if (transformed.startsWith(prefix)) {            java.lang.String str = transformed.substring(prefix.length());            if (str.endsWith(suffix)) {                return str.substring(0, ((str.length()) - (suffix.length())));            }        }        return null;    }    @java.lang.Override    public java.lang.String toString() {        return ((("[PreAndSuffixTransformer('" + prefix) + "','") + suffix) + "')]";    }};^38^39^40^41^^23^53^if  ( hasSuffix )  { return new NameTransformer (  )  { @Override public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P16_Remove_Block]^^38^39^40^41^^23^53^if  ( hasSuffix )  { return new NameTransformer (  )  { @Override public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( suffix.startsWith ( prefix )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( transformed.startsWith ( transformed )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( transformed.substring ( prefix )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( transformed .endsWith ( prefix )   )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P9_Replace_Statement]^if  ( transformed.endsWith ( suffix )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P15_Unwrap_Block]^java.lang.String str = transformed.substring(prefix.length()); if (str.endsWith(suffix)) {    return str.substring(0, ((str.length()) - (suffix.length())));};^44^45^46^47^48^29^59^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P16_Remove_Block]^^44^45^46^47^48^29^59^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( transformed.endsWith ( suffix )  )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( str.endsWith ( transformed )  )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( suffix.endsWith ( str )  )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( str.substring ( suffix )  )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P15_Unwrap_Block]^return str.substring(0, ((str.length()) - (suffix.length())));^46^47^48^^^31^61^if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P16_Remove_Block]^^46^47^48^^^31^61^if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P13_Insert_Block]^if  ( transformed.endsWith ( suffix )  )  {     return transformed.substring ( 0,  (  ( transformed.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^46^^^^^31^61^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   |  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -5, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 8  - suffix.length() - 8  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return transformed.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return str.substring ( 0, str.length (  )  - transformed.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return str.substring ( 0.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return suffix.substring ( 0, str.length (  )  - str.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return str.substring ( 0, str.substring (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( transformed )   - suffix^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P13_Insert_Block]^if  ( str.endsWith ( suffix )  )  {     return str.substring ( 0,  (  ( str.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^47^^^^^32^62^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   ==  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -9, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 5  - suffix.length() - 5  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P14_Delete_Statement]^^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 8  - suffix.length() + 8  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return suffix.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( name )   - suffix^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return transformed.substring ( 0, str .endsWith ( str )   - suffix^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 4  - suffix.length() + 4  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -7, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 0  - suffix.length() + 0  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P1_Replace_Type]^char str = transformed.substring ( prefix.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() + 8  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^String str = suffix.substring ( prefix.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^String str = transformed.substring ( transformed.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^String str = prefix.substring ( transformed.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix.substring (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P12_Insert_Condition]^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; }^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P13_Insert_Block]^if  ( transformed.startsWith ( prefix )  )  {     return transformed.substring ( prefix.length (  )  ) ; }^45^^^^^30^60^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() + 4  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^String str = transformed.substring ( suffix.length (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^String str = suffix.substring ( prefix .endsWith ( prefix )   ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P14_Delete_Statement]^^45^46^47^48^^30^60^String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 2  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 5  - suffix.length() + 5  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( suffix )   - suffix^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return transformed.substring ( 0, str.substring (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( str .startsWith ( suffix )   )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   &  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 4  - suffix.length() - 4  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( str )   - suffix^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )    instanceof   suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 2  - suffix.length() + 2  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 0  - suffix.length() - 0  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P1_Replace_Type]^public char transform ( char name )  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  |  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  { return prefix  <<  name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String name )  { return transformed + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String transformed )  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String name )  { return prefix + name + transformed; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String name )  { return suffix + name + prefix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String suffix )  { return prefix + name + name; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   <  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 8, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 3  - suffix.length() + 3  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( prefix )   - suffix^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return this;^50^^^^^35^65^return null;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P1_Replace_Type]^public char tochar (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  >  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  ^  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  ||  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  <=  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+""+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String toString (  )  { return "[PreAndSuffixTransformer ( '" ^ prefix ^ "','" ^ suffix ^ "' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() + 6  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix .endsWith ( str )   ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( transformed.startsWith ( suffix )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( prefix.startsWith ( transformed )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^if  ( transformed.substring ( suffix )  )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 8  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix .endsWith ( name )   ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( str .startsWith ( prefix )   )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -8, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return str .substring ( 3 )   ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return suffix.substring ( 0, str.substring (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0, str.length (  )  - str.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 1  - suffix.length() + 1  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   &&  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -3, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return str .substring ( null )   ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0, str.substring (  )  - suffix.length (  )  + 3 ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 6  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   >>  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 9  - suffix.length() - 9  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 3, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 3  - suffix.length() - 3  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 1, str .endsWith ( transformed )   - transformed^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 4, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0, str .endsWith ( transformed )   - str^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( suffix.startsWith ( prefix )  )  {^61^^^^^46^76^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( transformed.startsWith ( suffix )  )  {^61^^^^^46^76^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( prefix.startsWith ( transformed )  )  {^61^^^^^46^76^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( transformed.substring ( prefix )  )  {^61^^^^^46^76^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P9_Replace_Statement]^if  ( transformed.endsWith ( suffix )  )  {^61^^^^^46^76^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P15_Unwrap_Block]^return transformed.substring(prefix.length());^61^62^63^^^46^76^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P16_Remove_Block]^^61^62^63^^^46^76^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P13_Insert_Block]^if  ( transformed.endsWith ( suffix )  )  {     return transformed.substring ( 0,  (  ( transformed.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^61^^^^^46^76^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 2  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return suffix.substring ( prefix.length (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return transformed.substring ( suffix.length (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return prefix.substring ( transformed.length (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed.substring ( prefix.substring (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed.substring ( prefix .endsWith ( str )   ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P12_Insert_Condition]^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 6  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P14_Delete_Statement]^^62^63^^^^47^77^return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 1  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return transformed.substring ( transformed.length (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  ||  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  { return prefix  !=  name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String prefix )  { return name + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String transform ( String transformed )  { return prefix + name +transformed; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   <=  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -6, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 7  - suffix.length() - 7  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  <<  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (   instanceof   )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  |  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  &  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"'"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String toString (  )  { return "[PreAndSuffixTransformer ( '" << prefix << "','" << suffix << "' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P1_Replace_Type]^public char transform ( char name )  { return prefix + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  <=  { return prefix + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String name )  { return transformed + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String transformed )  { return prefix + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String prefix )  { return name + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 2  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return false;^64^^^^^49^79^return null;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P1_Replace_Type]^public char tochar (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  >>  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  !=  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String toString (  )  { return "[PrefixTransformer ( '"  instanceof  prefix  instanceof  "' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 4  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^String str = suffix.substring ( prefix.substring (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( transformed .endsWith ( str )   )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 7  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 6  - suffix.length() + 6  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0, str.substring (  )  - transformed.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 6  - suffix.length() - 6  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 5  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return transformed.substring ( suffix.substring (  )  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 0  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed.substring ( prefix .endsWith ( prefix )   ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( transformed .endsWith ( name )   )  {^44^^^^^29^59^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   >  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( null, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   ^  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 9  - suffix.length() + 9  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   ||  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -4, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0, str .endsWith ( prefix )   - transformed^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() + 2  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix .endsWith ( suffix )   ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^String str = transformed.substring ( transformed.substring (  )  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 1  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( str .startsWith ( name )   )  {^46^^^^^31^61^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   <<  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 6, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( -2, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   >=  suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 7, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  ==  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 4, str .endsWith ( transformed )   - suffix^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return false;^50^^^^^35^65^return null;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  <  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  >>  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  ==  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+",'"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String toString (  )  { return "[PreAndSuffixTransformer ( '"  instanceof  prefix  instanceof  "','"  instanceof  suffix  instanceof  "' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix .endsWith ( prefix )   ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 3  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 2, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0 , str.substring (  )  - suffix.length (  )  /  2 ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix .endsWith ( transformed )   ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return str.substring ( 9, str.length (  )  - suffix.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return transformed.substring ( prefix .endsWith ( transformed )   ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  !=  { return prefix + name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  { return prefix  >>  name + suffix; }^41^^^^^26^56^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"',"+suffix+"' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String toString (  )  { return "[PreAndSuffixTransformer ( '" >> prefix >> "','" >> suffix >> "' ) ]"; }^53^^^^^38^68^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  &  { return prefix + name; }^58^^^^^43^73^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 7  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return this;^64^^^^^49^79^return null;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  ||  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (   instanceof   )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String toString (  )  { return "[PrefixTransformer ( '" > prefix > "' ) ]"; }^67^^^^^52^82^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 0  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() + 9  ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^String str = transformed.substring ( suffix .endsWith ( transformed )   ) ;^45^^^^^30^60^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0, str.substring (  )  - str.length (  )  ) ;^47^^^^^32^62^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 8  ) ;^62^^^^^47^77^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( hasPrefix )  {^70^^^^^55^85^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( transformed.length (  )  - suffix.length (  ) )  {^70^^^^^55^85^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( "[SuffixTransformer('" + suffix + "')]" )  {^70^^^^^55^85^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P6_Replace_Expression]^if  ( "[SuffixTransformer ( '" + suffix )  {^70^^^^^55^85^if  ( hasSuffix )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P15_Unwrap_Block]^return new com.fasterxml.jackson.databind.util.NameTransformer() {    @java.lang.Override    public java.lang.String transform(java.lang.String name) {        return name + suffix;    }    @java.lang.Override    public java.lang.String reverse(java.lang.String transformed) {        if (transformed.endsWith(suffix)) {            return transformed.substring(0, ((transformed.length()) - (suffix.length())));        }        return null;    }    @java.lang.Override    public java.lang.String toString() {        return ("[SuffixTransformer('" + suffix) + "')]";    }};^70^71^72^73^^55^85^if  ( hasSuffix )  { return new NameTransformer (  )  { @Override public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P16_Remove_Block]^^70^71^72^73^^55^85^if  ( hasSuffix )  { return new NameTransformer (  )  { @Override public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( str.endsWith ( suffix )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( transformed.endsWith ( str )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^if  ( suffix.endsWith ( transformed )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( transformed.substring ( suffix )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^if  ( transformed .startsWith ( str )   )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P9_Replace_Statement]^if  ( transformed.startsWith ( prefix )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P15_Unwrap_Block]^return transformed.substring(0, ((transformed.length()) - (suffix.length())));^76^77^78^^^61^91^if  ( transformed.endsWith ( suffix )  )  { return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P16_Remove_Block]^^76^77^78^^^61^91^if  ( transformed.endsWith ( suffix )  )  { return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P13_Insert_Block]^if  ( transformed.startsWith ( prefix )  )  {     return transformed.substring ( prefix.length (  )  ) ; }^76^^^^^61^91^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P13_Insert_Block]^if  ( str.endsWith ( suffix )  )  {     return str.substring ( 0,  (  ( str.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^76^^^^^61^91^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   <  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 1  - suffix.length() - 1  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return transformed.substring ( 0, transformed.length (  )  - str.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return transformed.substring ( 0.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return suffix.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed .substring ( this )   ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed.substring (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed .endsWith ( name )   - suffix^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return transformed.substring ( 0, transformed .endsWith ( prefix )   - suffix^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P13_Insert_Block]^if  ( transformed.endsWith ( suffix )  )  {     return transformed.substring ( 0,  (  ( transformed.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^77^^^^^62^92^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   >  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( -9, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 5  - suffix.length() + 5  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return str.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed .endsWith ( suffix )   - suffix^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0, transformed .endsWith ( transformed )   - suffix^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P14_Delete_Statement]^^77^78^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 3  - suffix.length() - 3  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return suffix.substring ( 0, transformed.substring (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 8  - suffix.length() + 8  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed .endsWith ( str )   - suffix^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P1_Replace_Type]^public char transform ( char name )  { return name + suffix; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  >>  { return name + suffix; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String name )  { return name + transformed; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String suffix )  { return name + name; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   ^  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 5, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 0  - suffix.length() + 0  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return this;^79^^^^^64^94^return null;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P1_Replace_Type]^public char tochar (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  &&  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  ==  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String toString (  )  { return "[SuffixTransformer ( '" > suffix > "' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 6  - suffix.length() + 6  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return suffix.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return transformed.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   <<  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 2  - suffix.length() - 2  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed .endsWith ( transformed )   - suffix^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   >=  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 5  - suffix.length() - 5  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 4  - suffix.length() - 4  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 1  - suffix.length() + 1  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String transform ( String name )  ||  { return name + suffix; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^public String transform ( String transformed )  { return name + suffix; }^73^^^^^58^88^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 9, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 0  - suffix.length() - 0  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return transformed.substring ( 0, transformed.substring (  )  - suffix.length (  )  /  0.5  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  !=  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^public String toString (  ^  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^public String toString (  )  { return "[SuffixTransformer ( '" | transformed | "' ) ]"; }^82^^^^^67^97^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^if  ( str.substring ( suffix )  )  {^76^^^^^61^91^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   >>  suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return str.substring ( 0, transformed.substring (  )  - suffix.length (  )  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 9  - suffix.length() - 9  ) ;^77^^^^^62^92^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P5_Replace_Variable]^return t1;^85^^^^^70^100^return NOP;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P8_Replace_Mix]^return t2;^85^^^^^70^100^return NOP;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] simpleTransformer [RETURN_TYPE] NameTransformer   String prefix String suffix [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  prefix  str  suffix  transformed  boolean  hasPrefix  hasSuffix  
[P1_Replace_Type]^public char transform ( char name )  { return prefix + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P2_Replace_Operator]^public String transform ( String name )  &  { return prefix + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P2_Replace_Operator]^public String transform ( String name )  { return prefix  &&  name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^public String transform ( String name )  { return prefix + name + name; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^public String transform ( String prefix )  { return name + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^public String transform ( String suffix )  { return prefix + name + name; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^if  ( transformed.startsWith ( transformed )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^if  ( transformed.substring ( prefix )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P9_Replace_Statement]^if  ( transformed.endsWith ( suffix )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P15_Unwrap_Block]^java.lang.String str = transformed.substring(prefix.length()); if (str.endsWith(suffix)) {    return str.substring(0, ((str.length()) - (suffix.length())));};^44^45^46^47^48^43^51^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P16_Remove_Block]^^44^45^46^47^48^43^51^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^if  ( transformed.endsWith ( suffix )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^if  ( str.endsWith ( transformed )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^if  ( suffix.endsWith ( str )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^if  ( str.substring ( suffix )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P15_Unwrap_Block]^return str.substring(0, ((str.length()) - (suffix.length())));^46^47^48^^^43^51^if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P16_Remove_Block]^^46^47^48^^^43^51^if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P13_Insert_Block]^if  ( transformed.endsWith ( suffix )  )  {     return transformed.substring ( 0,  (  ( transformed.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^46^^^^^43^51^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   >  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 4  - suffix.length() - 4  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^return transformed.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^return str.substring ( 0, str.length (  )  - transformed.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^return str.substring ( 0.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^return suffix.substring ( 0, str.length (  )  - str.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^return str.substring ( 0, str.substring (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( str )   - suffix^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P13_Insert_Block]^if  ( str.endsWith ( suffix )  )  {     return str.substring ( 0,  (  ( str.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^47^^^^^43^51^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   >>  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 1  - suffix.length() - 1  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P14_Delete_Statement]^^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 3  - suffix.length() + 3  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 2  - suffix.length() - 2  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   <  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 8, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 4  - suffix.length() + 4  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( transformed )   - suffix^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P1_Replace_Type]^char str = transformed.substring ( prefix.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() + 4  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^String str = transformed.substring ( transformed.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^String str = prefix.substring ( transformed.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix.substring (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P12_Insert_Condition]^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; }^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P13_Insert_Block]^if  ( transformed.startsWith ( prefix )  )  {     return transformed.substring ( prefix.length (  )  ) ; }^45^^^^^43^51^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 3  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^String str = str.substring ( prefix.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^String str = transformed.substring ( str.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P14_Delete_Statement]^^45^46^47^48^^43^51^String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 6  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix .endsWith ( str )   ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P8_Replace_Mix]^String str = transformed.substring ( transformed.substring (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P8_Replace_Mix]^if  ( transformed.substring ( suffix )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   <=  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( -1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 0  - suffix.length() - 0  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 2  - suffix.length() + 2  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 8  - suffix.length() + 8  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   |  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( this, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   !=  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 1  - suffix.length() + 1  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P8_Replace_Mix]^return str.substring ( 0, str.substring (  )  - transformed.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( -3, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 8  - suffix.length() - 8  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^if  ( transformed.startsWith ( str )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P5_Replace_Variable]^if  ( prefix.startsWith ( transformed )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^if  ( transformed .endsWith ( transformed )   )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P8_Replace_Mix]^if  ( str.startsWith ( prefix )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 8  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 0  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P7_Replace_Invocation]^if  ( str .startsWith ( transformed )   )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 5, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 6  - suffix.length() + 6  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 7  - suffix.length() - 7  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P8_Replace_Mix]^return transformed.substring ( 0, str.substring (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 0  - suffix.length() + 0  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P8_Replace_Mix]^return true;^50^^^^^43^51^return null;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  str  transformed  boolean  
[P1_Replace_Type]^public char tochar (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  |  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  >=  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  <=  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  <<  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P3_Replace_Literal]^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"'"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P8_Replace_Mix]^public String toString (  )  { return "[PreAndSuffixTransformer ( '" << prefix << "','" << suffix << "' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P1_Replace_Type]^public char transform ( char name )  { return prefix + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P2_Replace_Operator]^public String transform ( String name )   instanceof   { return prefix + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^public String transform ( String prefix )  { return name + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P8_Replace_Mix]^public String transform ( String name )  { return prefix  ^  name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^if  ( prefix.startsWith ( transformed )  )  {^61^^^^^60^65^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^if  ( transformed.substring ( prefix )  )  {^61^^^^^60^65^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P9_Replace_Statement]^if  ( transformed.endsWith ( suffix )  )  {^61^^^^^60^65^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P15_Unwrap_Block]^return transformed.substring(prefix.length());^61^62^63^^^60^65^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P16_Remove_Block]^^61^62^63^^^60^65^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P13_Insert_Block]^if  ( transformed.endsWith ( suffix )  )  {     return transformed.substring ( 0,  (  ( transformed.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^61^^^^^60^65^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 1  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^return prefix.substring ( transformed.length (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^return transformed.substring ( prefix.substring (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P12_Insert_Condition]^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 4  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P14_Delete_Statement]^^62^63^^^^60^65^return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 0  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^return transformed.substring ( transformed.length (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 2  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^if  ( transformed .endsWith ( transformed )   )  {^61^^^^^60^65^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 7  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^return transformed .substring ( this )  ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 0  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^return transformed.substring ( transformed.substring (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^return true;^64^^^^^60^65^return null;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P1_Replace_Type]^public char tochar (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  !=  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  ^  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P8_Replace_Mix]^public String toString (  )  { return "[PrefixTransformer ( '" >= prefix >= "' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P1_Replace_Type]^public char transform ( char name )  { return name + suffix; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P2_Replace_Operator]^public String transform ( String name )   instanceof   { return name + suffix; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^public String transform ( String suffix )  { return name + name; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P8_Replace_Mix]^public String transform ( String name )  { return name  ||  suffix; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^if  ( suffix.endsWith ( transformed )  )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^if  ( transformed.substring ( suffix )  )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^if  ( transformed .startsWith ( transformed )   )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P9_Replace_Statement]^if  ( str.endsWith ( suffix )  )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P9_Replace_Statement]^if  ( transformed.startsWith ( prefix )  )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P15_Unwrap_Block]^return transformed.substring(0, ((transformed.length()) - (suffix.length())));^76^77^78^^^75^80^if  ( transformed.endsWith ( suffix )  )  { return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P16_Remove_Block]^^76^77^78^^^75^80^if  ( transformed.endsWith ( suffix )  )  { return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P13_Insert_Block]^if  ( transformed.startsWith ( prefix )  )  {     return transformed.substring ( prefix.length (  )  ) ; }^76^^^^^75^80^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P13_Insert_Block]^if  ( str.endsWith ( suffix )  )  {     return str.substring ( 0,  (  ( str.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^76^^^^^75^80^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )    instanceof   suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( 7, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 1  - suffix.length() - 1  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^return transformed.substring ( 0.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^return suffix.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed.substring (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed .endsWith ( transformed )   - suffix^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^return transformed.substring ( 0 + 0, transformed .endsWith ( transformed )   - suffix^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P13_Insert_Block]^if  ( transformed.endsWith ( suffix )  )  {     return transformed.substring ( 0,  (  ( transformed.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^77^^^^^75^80^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   >>  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( -6, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 6  - suffix.length() - 6  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P14_Delete_Statement]^^77^78^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 3  - suffix.length() - 3  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 8  - suffix.length() + 8  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^return transformed.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   !=  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( -2, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   ^  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 2  - suffix.length() - 2  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 4  - suffix.length() - 4  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^return true;^79^^^^^75^80^return null;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P1_Replace_Type]^public char tochar (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  !=  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  ==  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P8_Replace_Mix]^public String toString (  )  { return "[SuffixTransformer ( '" <= suffix <= "' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P4_Replace_Constructor]^return new Chained (  t2 ) ;^94^^^^^93^95^return new Chained ( t1, t2 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] chainedTransformer [RETURN_TYPE] NameTransformer   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P4_Replace_Constructor]^return new Chained ( t1 ) ;^94^^^^^93^95^return new Chained ( t1, t2 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] chainedTransformer [RETURN_TYPE] NameTransformer   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P5_Replace_Variable]^return new Chained ( _t2, t2 ) ;^94^^^^^93^95^return new Chained ( t1, t2 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] chainedTransformer [RETURN_TYPE] NameTransformer   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P5_Replace_Variable]^return new Chained ( t1, _t2 ) ;^94^^^^^93^95^return new Chained ( t1, t2 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] chainedTransformer [RETURN_TYPE] NameTransformer   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P5_Replace_Variable]^return new Chained ( t2, t1 ) ;^94^^^^^93^95^return new Chained ( t1, t2 ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] chainedTransformer [RETURN_TYPE] NameTransformer   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P5_Replace_Variable]^return t2.transform ( _t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^return _t1.transform ( t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^return name.transform ( _t2.transform ( _t1 )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^return _t2.transform ( _t1.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P7_Replace_Invocation]^return _t1.reverse ( _t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P7_Replace_Invocation]^return _t1 .reverse ( name )  ( _t2^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P14_Delete_Statement]^^120^121^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^return _t1.transform ( name.transform ( _t2 )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^transformed = t1.reverse ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^transformed = transformed.reverse ( _t1 ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^transformed = _t1.transform ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^transformed =  _t1.reverse ( null ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P11_Insert_Donor_Statement]^transformed = _t2.reverse ( transformed ) ;transformed = _t1.reverse ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^transformed = t2.reverse ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P14_Delete_Statement]^^125^126^127^128^^124^130^transformed = _t1.reverse ( transformed ) ; if  ( transformed != null )  { transformed = _t2.reverse ( transformed ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P2_Replace_Operator]^if  ( transformed == null )  {^126^^^^^124^130^if  ( transformed != null )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^if  ( transformed != true )  {^126^^^^^124^130^if  ( transformed != null )  {^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P15_Unwrap_Block]^transformed = _t2.reverse(transformed);^126^127^128^^^124^130^if  ( transformed != null )  { transformed = _t2.reverse ( transformed ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P16_Remove_Block]^^126^127^128^^^124^130^if  ( transformed != null )  { transformed = _t2.reverse ( transformed ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^transformed = t1.reverse ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^transformed = transformed.reverse ( _t2 ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^transformed = _t2.transform ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^transformed =  _t2.reverse ( null ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P11_Insert_Donor_Statement]^transformed = _t1.reverse ( transformed ) ;transformed = _t2.reverse ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P13_Insert_Block]^if  ( transformed != null )  {     transformed = _t2.reverse ( transformed ) ; }^127^^^^^124^130^[Delete]^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P14_Delete_Statement]^^127^128^^^^124^130^transformed = _t2.reverse ( transformed ) ; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^transformed = t2.reverse ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^transformed = t2.transform ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  String  transformed  boolean  
[P1_Replace_Type]^public char tochar (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  ^  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (   instanceof   )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  |  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  ||  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P8_Replace_Mix]^public String toString (  )  { return "[ChainedTransformer ( " && _t1 && ", " && _t2 && " ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] NameTransformer 1 2 3 4 Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  NOP  _t1  _t2  t1  t2  boolean  
[P1_Replace_Type]^public char transform ( char name )  { return prefix + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P2_Replace_Operator]^public String transform ( String name )  &  { return prefix + name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P2_Replace_Operator]^public String transform ( String name )  { return prefix  <=  name + suffix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^public String transform ( String name )  { return prefix + name + name; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^public String transform ( String name )  { return suffix + name + prefix; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^public String transform ( String suffix )  { return prefix + name + name; }^41^^^^^36^46^public String transform ( String name )  { return prefix + name + suffix; }^[CLASS] 2  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^if  ( transformed.startsWith ( transformed )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^if  ( prefix.startsWith ( transformed )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^if  ( transformed.substring ( prefix )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P15_Unwrap_Block]^java.lang.String str = transformed.substring(prefix.length()); if (str.endsWith(suffix)) {    return str.substring(0, ((str.length()) - (suffix.length())));};^44^45^46^47^48^43^51^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P16_Remove_Block]^^44^45^46^47^48^43^51^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^if  ( transformed.endsWith ( suffix )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^if  ( str.endsWith ( transformed )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^if  ( suffix.endsWith ( str )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^if  ( str.substring ( suffix )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^if  ( str .startsWith ( str )   )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P15_Unwrap_Block]^return str.substring(0, ((str.length()) - (suffix.length())));^46^47^48^^^43^51^if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P16_Remove_Block]^^46^47^48^^^43^51^if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   <=  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 1, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 3  - suffix.length() - 3  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^return transformed.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^return str.substring ( 0, str.length (  )  - transformed.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^return str.substring ( 0.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^return suffix.substring ( 0, str.length (  )  - str.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^return str.substring ( 0, str.substring (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( str )   - suffix^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P13_Insert_Block]^if  ( str.endsWith ( suffix )  )  {     return str.substring ( 0,  (  ( str.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^47^^^^^43^51^[Delete]^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   >=  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 4, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 7  - suffix.length() + 7  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^return str.substring ( 0, str .endsWith ( transformed )   - suffix^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P14_Delete_Statement]^^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 7  - suffix.length() - 7  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 1  - suffix.length() - 1  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( -4, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 8  - suffix.length() + 8  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P1_Replace_Type]^char str = transformed.substring ( prefix.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 5  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^String str = transformed.substring ( transformed.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^String str = prefix.substring ( transformed.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix.substring (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P12_Insert_Condition]^if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; }^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 9  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^String str = str.substring ( prefix.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^String str = transformed.substring ( str.length (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P14_Delete_Statement]^^45^46^47^48^^43^51^String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() + 9  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^if  ( str .startsWith ( transformed )   )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P8_Replace_Mix]^if  ( transformed.substring ( suffix )  )  {^46^^^^^43^51^if  ( str.endsWith ( suffix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( , str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 3  - suffix.length() + 3  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P8_Replace_Mix]^return transformed.substring ( 0, str.substring (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 6  - suffix.length() - 6  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 0  - suffix.length() - 0  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   |  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( -6, str.length (  )  - suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 9  - suffix.length() - 9  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() - 8  - suffix.length() - 8  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P8_Replace_Mix]^return str.substring ( 0, str.substring (  )  - transformed.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   <  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 2  - suffix.length() + 2  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 4  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P7_Replace_Invocation]^String str = transformed.substring ( prefix .endsWith ( str )   ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P5_Replace_Variable]^if  ( transformed.startsWith ( str )  )  {^44^^^^^43^51^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 7  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^String str = transformed.substring ( prefix.length() - 0  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P8_Replace_Mix]^String str = transformed.substring ( transformed.substring (  )  ) ;^45^^^^^43^51^String str = transformed.substring ( prefix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P2_Replace_Operator]^return str.substring ( 0, str.length (  )   &  suffix.length (  )  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P3_Replace_Literal]^return str.substring ( 0, str.length() + 0  - suffix.length() + 0  ) ;^47^^^^^43^51^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P8_Replace_Mix]^return false;^50^^^^^43^51^return null;^[CLASS] 2  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  str  transformed  
[P1_Replace_Type]^public char tochar (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P2_Replace_Operator]^public String toString (  <=  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P2_Replace_Operator]^public String toString (  &  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P2_Replace_Operator]^public String toString (  !=  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P2_Replace_Operator]^public String toString (  ==  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P3_Replace_Literal]^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+""+suffix+"' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^public String toString (  )  { return "[PreAndSuffixTransformer ( '" || prefix || "','" || suffix || "' ) ]"; }^53^^^^^48^58^public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[CLASS] 2  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P1_Replace_Type]^public char transform ( char name )  { return prefix + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] 3  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P2_Replace_Operator]^public String transform ( String name )   instanceof   { return prefix + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] 3  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^public String transform ( String prefix )  { return name + name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] 3  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P8_Replace_Mix]^public String transform ( String name )  { return prefix  &  name; }^58^^^^^53^63^public String transform ( String name )  { return prefix + name; }^[CLASS] 3  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^if  ( prefix.startsWith ( transformed )  )  {^61^^^^^60^65^if  ( transformed.startsWith ( prefix )  )  {^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P15_Unwrap_Block]^return transformed.substring(prefix.length());^61^62^63^^^60^65^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P16_Remove_Block]^^61^62^63^^^60^65^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 3  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P5_Replace_Variable]^return prefix.substring ( transformed.length (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P7_Replace_Invocation]^return transformed.substring ( prefix.substring (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P12_Insert_Condition]^if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 5  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P14_Delete_Statement]^^62^63^^^^60^65^return transformed.substring ( prefix.length (  )  ) ; }^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 3  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P5_Replace_Variable]^return transformed.substring ( transformed.length (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() + 4  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P7_Replace_Invocation]^return transformed .startsWith ( transformed )  ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 7  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( prefix.length() - 2  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P8_Replace_Mix]^return transformed.substring ( transformed.substring (  )  ) ;^62^^^^^60^65^return transformed.substring ( prefix.length (  )  ) ;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P8_Replace_Mix]^return true;^64^^^^^60^65^return null;^[CLASS] 3  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P1_Replace_Type]^public char tochar (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] 3  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P2_Replace_Operator]^public String toString (   instanceof   )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] 3  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P2_Replace_Operator]^public String toString (  >  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] 3  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^public String toString (  )  { return "[PrefixTransformer ( '" | prefix | "' ) ]"; }^67^^^^^62^72^public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[CLASS] 3  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P1_Replace_Type]^public char transform ( char name )  { return name + suffix; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] 4  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P2_Replace_Operator]^public String transform ( String name )  ^  { return name + suffix; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] 4  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^public String transform ( String suffix )  { return name + name; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] 4  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P8_Replace_Mix]^public String transform ( String name )  { return name  <<  suffix; }^73^^^^^68^78^public String transform ( String name )  { return name + suffix; }^[CLASS] 4  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^if  ( suffix.endsWith ( transformed )  )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P7_Replace_Invocation]^if  ( transformed.substring ( suffix )  )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P7_Replace_Invocation]^if  ( transformed .length (  )   )  {^76^^^^^75^80^if  ( transformed.endsWith ( suffix )  )  {^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P15_Unwrap_Block]^return transformed.substring(0, ((transformed.length()) - (suffix.length())));^76^77^78^^^75^80^if  ( transformed.endsWith ( suffix )  )  { return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P16_Remove_Block]^^76^77^78^^^75^80^if  ( transformed.endsWith ( suffix )  )  { return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   !=  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( -3, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 0  - suffix.length() + 0  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P5_Replace_Variable]^return transformed.substring ( 0.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P5_Replace_Variable]^return suffix.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed.endsWith (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P13_Insert_Block]^if  ( transformed.endsWith ( suffix )  )  {     return transformed.substring ( 0,  (  ( transformed.length (  )  )  -  ( suffix.length (  )  )  )  ) ; }^77^^^^^75^80^[Delete]^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   <=  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( -6, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 1  - suffix.length() - 1  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P14_Delete_Statement]^^77^78^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ; }^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 2  - suffix.length() + 2  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P7_Replace_Invocation]^return transformed.substring ( 0, transformed .endsWith ( transformed )   - suffix^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 2  - suffix.length() - 2  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P5_Replace_Variable]^return transformed.substring ( 0, transformed.length (  )  - transformed.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   ^  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( null, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() - 0  - suffix.length() - 0  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P8_Replace_Mix]^return transformed.substring ( 0, transformed.endsWith (  )  - suffix.length (  )  *  0.5  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P2_Replace_Operator]^return transformed.substring ( 0, transformed.length (  )   ==  suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( -2, transformed.length (  )  - suffix.length (  )  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P3_Replace_Literal]^return transformed.substring ( 0, transformed.length() + 3  - suffix.length() + 3  ) ;^77^^^^^75^80^return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P8_Replace_Mix]^return false;^79^^^^^75^80^return null;^[CLASS] 4  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] boolean  String  transformed  
[P1_Replace_Type]^public char tochar (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] 4  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P2_Replace_Operator]^public String toString (  >  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] 4  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P2_Replace_Operator]^public String toString (  <<  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] 4  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^public String toString (  )  { return "[SuffixTransformer ( '" == suffix == "' ) ]"; }^82^^^^^77^87^public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[CLASS] 4  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P8_Replace_Mix]^protected  NameTransformer _t1, _t2;^111^^^^^106^116^protected final NameTransformer _t1, _t2;^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  
[P5_Replace_Variable]^_t1 = t2;^114^^^^^113^116^_t1 = t1;^[CLASS] Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P8_Replace_Mix]^_t1 =  null;^114^^^^^113^116^_t1 = t1;^[CLASS] Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P11_Insert_Donor_Statement]^_t2 = t2;_t1 = t1;^114^^^^^113^116^_t1 = t1;^[CLASS] Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P5_Replace_Variable]^_t2 = t1;^115^^^^^113^116^_t2 = t2;^[CLASS] Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P11_Insert_Donor_Statement]^_t1 = t1;_t2 = t2;^115^^^^^113^116^_t2 = t2;^[CLASS] Chained  [METHOD] <init> [RETURN_TYPE] NameTransformer)   NameTransformer t1 NameTransformer t2 [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P5_Replace_Variable]^return _t1.transform ( t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^return name.transform ( _t2.transform ( _t1 )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^return _t2.transform ( _t1.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[P7_Replace_Invocation]^return _t1.reverse ( _t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[P7_Replace_Invocation]^return _t1 .NameTransformer (  )  ( _t2^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^return t2.transform ( _t2.transform ( name )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[P14_Delete_Statement]^^120^121^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ; }^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^return _t1.transform ( name.transform ( _t2 )  ) ;^120^^^^^119^121^return _t1.transform ( _t2.transform ( name )  ) ;^[CLASS] Chained  [METHOD] transform [RETURN_TYPE] String   String name [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  name  boolean  
[P5_Replace_Variable]^transformed = t2.reverse ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^transformed = transformed.reverse ( _t1 ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^transformed = _t1.transform ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^transformed =  _t1.reverse ( null ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P11_Insert_Donor_Statement]^transformed = _t2.reverse ( transformed ) ;transformed = _t1.reverse ( transformed ) ;^125^^^^^124^130^transformed = _t1.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P14_Delete_Statement]^^125^126^127^128^^124^130^transformed = _t1.reverse ( transformed ) ; if  ( transformed != null )  { transformed = _t2.reverse ( transformed ) ; }^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P2_Replace_Operator]^if  ( transformed == null )  {^126^^^^^124^130^if  ( transformed != null )  {^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^if  ( transformed != true )  {^126^^^^^124^130^if  ( transformed != null )  {^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P15_Unwrap_Block]^transformed = _t2.reverse(transformed);^126^127^128^^^124^130^if  ( transformed != null )  { transformed = _t2.reverse ( transformed ) ; }^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P16_Remove_Block]^^126^127^128^^^124^130^if  ( transformed != null )  { transformed = _t2.reverse ( transformed ) ; }^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^transformed = transformed.reverse ( _t2 ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P7_Replace_Invocation]^transformed = _t2.transform ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^transformed =  _t2.reverse ( null ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P11_Insert_Donor_Statement]^transformed = _t1.reverse ( transformed ) ;transformed = _t2.reverse ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P13_Insert_Block]^if  ( transformed != null )  {     transformed = _t2.reverse ( transformed ) ; }^127^^^^^124^130^[Delete]^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P5_Replace_Variable]^transformed = t2.reverse ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P8_Replace_Mix]^transformed = t2.transform ( transformed ) ;^127^^^^^124^130^transformed = _t2.reverse ( transformed ) ;^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P14_Delete_Statement]^^127^128^^^^124^130^transformed = _t2.reverse ( transformed ) ; }^[CLASS] Chained  [METHOD] reverse [RETURN_TYPE] String   String transformed [VARIABLES] NameTransformer  _t1  _t2  t1  t2  String  transformed  boolean  
[P1_Replace_Type]^public char tochar (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  >  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (   instanceof   )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  <  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P2_Replace_Operator]^public String toString (  <<  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P3_Replace_Literal]^public String toString (  )  { return "[ChainedTransformer ( "+_t1+" "+_t2+" ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
[P8_Replace_Mix]^public String toString (  )  { return "[ChainedTransformer ( " == t2 == ", " == _t2 == " ) ]"; }^133^^^^^128^138^public String toString (  )  { return "[ChainedTransformer ( "+_t1+", "+_t2+" ) ]"; }^[CLASS] Chained  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] NameTransformer  _t1  _t2  t1  t2  boolean  
