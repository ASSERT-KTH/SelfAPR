[P8_Replace_Mix]^private  boolean isEncapsulating;^28^^^^^23^33^private final boolean isEncapsulating;^[CLASS] Lexer   [VARIABLES] 
[P8_Replace_Mix]^private  boolean isEscaping;^29^^^^^24^34^private final boolean isEscaping;^[CLASS] Lexer   [VARIABLES] 
[P8_Replace_Mix]^private  boolean isCommentEnabled;^30^^^^^25^35^private final boolean isCommentEnabled;^[CLASS] Lexer   [VARIABLES] 
[P1_Replace_Type]^private final int delimiter;^32^^^^^27^37^private final char delimiter;^[CLASS] Lexer   [VARIABLES] 
[P1_Replace_Type]^private final int escape;^33^^^^^28^38^private final char escape;^[CLASS] Lexer   [VARIABLES] 
[P8_Replace_Mix]^private final String escape;^33^^^^^28^38^private final char escape;^[CLASS] Lexer   [VARIABLES] 
[P1_Replace_Type]^private final int encapsulator;^34^^^^^29^39^private final char encapsulator;^[CLASS] Lexer   [VARIABLES] 
[P1_Replace_Type]^private final int commmentStart;^35^^^^^30^40^private final char commmentStart;^[CLASS] Lexer   [VARIABLES] 
[P8_Replace_Mix]^boolean surroundingSpacesIgnored;^37^^^^^32^42^final boolean surroundingSpacesIgnored;^[CLASS] Lexer   [VARIABLES] 
[P8_Replace_Mix]^boolean emptyLinesIgnored;^38^^^^^33^43^final boolean emptyLinesIgnored;^[CLASS] Lexer   [VARIABLES] 
[P8_Replace_Mix]^CSVFormat format;^40^^^^^35^45^final CSVFormat format;^[CLASS] Lexer   [VARIABLES] 
[P8_Replace_Mix]^this.format =  null;^46^^^^^45^57^this.format = format;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.in =  null;^47^^^^^45^57^this.in = in;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.isEncapsulating =  null.isEncapsulating (  ) ;^48^^^^^45^57^this.isEncapsulating = format.isEncapsulating (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.escape = format.getEscape (  ) ;this.isEncapsulating = format.isEncapsulating (  ) ;^48^^^^^45^57^this.isEncapsulating = format.isEncapsulating (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isCommentEnabled = format.isCommentingEnabled (  ) ;this.isEncapsulating = format.isEncapsulating (  ) ;^48^^^^^45^57^this.isEncapsulating = format.isEncapsulating (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEscaping = format.isEscaping (  ) ;this.isEncapsulating = format.isEncapsulating (  ) ;^48^^^^^45^57^this.isEncapsulating = format.isEncapsulating (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.encapsulator = format.getEncapsulator (  ) ;this.isEncapsulating = format.isEncapsulating (  ) ;^48^^^^^45^57^this.isEncapsulating = format.isEncapsulating (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P7_Replace_Invocation]^this .isEscaping (  )  = format^48^^^^^45^57^this.isEncapsulating = format.isEncapsulating (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.isEscaping =  null.isEscaping (  ) ;^49^^^^^45^57^this.isEscaping = format.isEscaping (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;this.isEscaping = format.isEscaping (  ) ;^49^^^^^45^57^this.isEscaping = format.isEscaping (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.escape = format.getEscape (  ) ;this.isEscaping = format.isEscaping (  ) ;^49^^^^^45^57^this.isEscaping = format.isEscaping (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEncapsulating = format.isEncapsulating (  ) ;this.isEscaping = format.isEscaping (  ) ;^49^^^^^45^57^this.isEscaping = format.isEscaping (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isCommentEnabled = format.isCommentingEnabled (  ) ;this.isEscaping = format.isEscaping (  ) ;^49^^^^^45^57^this.isEscaping = format.isEscaping (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.encapsulator = format.getEncapsulator (  ) ;this.isEscaping = format.isEscaping (  ) ;^49^^^^^45^57^this.isEscaping = format.isEscaping (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.delimiter = format.getDelimiter (  ) ;this.isEscaping = format.isEscaping (  ) ;^49^^^^^45^57^this.isEscaping = format.isEscaping (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P7_Replace_Invocation]^this.isCommentEnabled = format .getCommentStart (  )  ;^50^^^^^45^57^this.isCommentEnabled = format.isCommentingEnabled (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.isCommentEnabled =  null.isCommentingEnabled (  ) ;^50^^^^^45^57^this.isCommentEnabled = format.isCommentingEnabled (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;this.isCommentEnabled = format.isCommentingEnabled (  ) ;^50^^^^^45^57^this.isCommentEnabled = format.isCommentingEnabled (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.escape = format.getEscape (  ) ;this.isCommentEnabled = format.isCommentingEnabled (  ) ;^50^^^^^45^57^this.isCommentEnabled = format.isCommentingEnabled (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEncapsulating = format.isEncapsulating (  ) ;this.isCommentEnabled = format.isCommentingEnabled (  ) ;^50^^^^^45^57^this.isCommentEnabled = format.isCommentingEnabled (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEscaping = format.isEscaping (  ) ;this.isCommentEnabled = format.isCommentingEnabled (  ) ;^50^^^^^45^57^this.isCommentEnabled = format.isCommentingEnabled (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.commmentStart = format.getCommentStart (  ) ;this.isCommentEnabled = format.isCommentingEnabled (  ) ;^50^^^^^45^57^this.isCommentEnabled = format.isCommentingEnabled (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.delimiter =  null.getDelimiter (  ) ;^51^^^^^45^57^this.delimiter = format.getDelimiter (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;this.delimiter = format.getDelimiter (  ) ;^51^^^^^45^57^this.delimiter = format.getDelimiter (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.escape = format.getEscape (  ) ;this.delimiter = format.getDelimiter (  ) ;^51^^^^^45^57^this.delimiter = format.getDelimiter (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEscaping = format.isEscaping (  ) ;this.delimiter = format.getDelimiter (  ) ;^51^^^^^45^57^this.delimiter = format.getDelimiter (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.commmentStart = format.getCommentStart (  ) ;this.delimiter = format.getDelimiter (  ) ;^51^^^^^45^57^this.delimiter = format.getDelimiter (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.encapsulator = format.getEncapsulator (  ) ;this.delimiter = format.getDelimiter (  ) ;^51^^^^^45^57^this.delimiter = format.getDelimiter (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P7_Replace_Invocation]^this.delimiter = format .getEscape (  )  ;^51^^^^^45^57^this.delimiter = format.getDelimiter (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.escape =  null.getEscape (  ) ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;this.escape = format.getEscape (  ) ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEncapsulating = format.isEncapsulating (  ) ;this.escape = format.getEscape (  ) ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isCommentEnabled = format.isCommentingEnabled (  ) ;this.escape = format.getEscape (  ) ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEscaping = format.isEscaping (  ) ;this.escape = format.getEscape (  ) ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.commmentStart = format.getCommentStart (  ) ;this.escape = format.getEscape (  ) ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.encapsulator = format.getEncapsulator (  ) ;this.escape = format.getEscape (  ) ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.delimiter = format.getDelimiter (  ) ;this.escape = format.getEscape (  ) ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P7_Replace_Invocation]^this.escape = format .getEncapsulator (  )  ;^52^^^^^45^57^this.escape = format.getEscape (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P14_Delete_Statement]^^52^53^54^55^56^45^57^this.escape = format.getEscape (  ) ; this.encapsulator = format.getEncapsulator (  ) ; this.commmentStart = format.getCommentStart (  ) ; this.surroundingSpacesIgnored = format.isSurroundingSpacesIgnored (  ) ; this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ; }^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.encapsulator =  null.getEncapsulator (  ) ;^53^^^^^45^57^this.encapsulator = format.getEncapsulator (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.escape = format.getEscape (  ) ;this.encapsulator = format.getEncapsulator (  ) ;^53^^^^^45^57^this.encapsulator = format.getEncapsulator (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEncapsulating = format.isEncapsulating (  ) ;this.encapsulator = format.getEncapsulator (  ) ;^53^^^^^45^57^this.encapsulator = format.getEncapsulator (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEscaping = format.isEscaping (  ) ;this.encapsulator = format.getEncapsulator (  ) ;^53^^^^^45^57^this.encapsulator = format.getEncapsulator (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.commmentStart = format.getCommentStart (  ) ;this.encapsulator = format.getEncapsulator (  ) ;^53^^^^^45^57^this.encapsulator = format.getEncapsulator (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.delimiter = format.getDelimiter (  ) ;this.encapsulator = format.getEncapsulator (  ) ;^53^^^^^45^57^this.encapsulator = format.getEncapsulator (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P14_Delete_Statement]^^53^54^55^56^57^45^57^this.encapsulator = format.getEncapsulator (  ) ; this.commmentStart = format.getCommentStart (  ) ; this.surroundingSpacesIgnored = format.isSurroundingSpacesIgnored (  ) ; this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ; }^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P7_Replace_Invocation]^this.commmentStart = format .getEscape (  )  ;^54^^^^^45^57^this.commmentStart = format.getCommentStart (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.commmentStart =  null.getCommentStart (  ) ;^54^^^^^45^57^this.commmentStart = format.getCommentStart (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.escape = format.getEscape (  ) ;this.commmentStart = format.getCommentStart (  ) ;^54^^^^^45^57^this.commmentStart = format.getCommentStart (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isCommentEnabled = format.isCommentingEnabled (  ) ;this.commmentStart = format.getCommentStart (  ) ;^54^^^^^45^57^this.commmentStart = format.getCommentStart (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.encapsulator = format.getEncapsulator (  ) ;this.commmentStart = format.getCommentStart (  ) ;^54^^^^^45^57^this.commmentStart = format.getCommentStart (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.delimiter = format.getDelimiter (  ) ;this.commmentStart = format.getCommentStart (  ) ;^54^^^^^45^57^this.commmentStart = format.getCommentStart (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P14_Delete_Statement]^^54^55^56^57^^45^57^this.commmentStart = format.getCommentStart (  ) ; this.surroundingSpacesIgnored = format.isSurroundingSpacesIgnored (  ) ; this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ; }^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.surroundingSpacesIgnored =  null.isSurroundingSpacesIgnored (  ) ;^55^^^^^45^57^this.surroundingSpacesIgnored = format.isSurroundingSpacesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;this.surroundingSpacesIgnored = format.isSurroundingSpacesIgnored (  ) ;^55^^^^^45^57^this.surroundingSpacesIgnored = format.isSurroundingSpacesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P14_Delete_Statement]^^55^56^57^^^45^57^this.surroundingSpacesIgnored = format.isSurroundingSpacesIgnored (  ) ; this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ; }^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.emptyLinesIgnored =  null.isEmptyLinesIgnored (  ) ;^56^^^^^45^57^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.escape = format.getEscape (  ) ;this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^56^^^^^45^57^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.surroundingSpacesIgnored = format.isSurroundingSpacesIgnored (  ) ;this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^56^^^^^45^57^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isCommentEnabled = format.isCommentingEnabled (  ) ;this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^56^^^^^45^57^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.isEscaping = format.isEscaping (  ) ;this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^56^^^^^45^57^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P11_Insert_Donor_Statement]^this.delimiter = format.getDelimiter (  ) ;this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^56^^^^^45^57^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P8_Replace_Mix]^this.emptyLinesIgnored = format .isSurroundingSpacesIgnored (  )  ;^56^^^^^45^57^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ;^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P14_Delete_Statement]^^56^57^^^^45^57^this.emptyLinesIgnored = format.isEmptyLinesIgnored (  ) ; }^[CLASS] Lexer  [METHOD] <init> [RETURN_TYPE] ExtendedBufferedReader)   CSVFormat format ExtendedBufferedReader in [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P7_Replace_Invocation]^return in.read (  ) ;^60^^^^^59^61^return in.getLineNumber (  ) ;^[CLASS] Lexer  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P14_Delete_Statement]^^60^^^^^59^61^return in.getLineNumber (  ) ;^[CLASS] Lexer  [METHOD] getLineNumber [RETURN_TYPE] int   [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  
[P7_Replace_Invocation]^c = in.lookAhead (  ) ;^65^^^^^63^80^c = in.read (  ) ;^[CLASS] Lexer  [METHOD] readEscape [RETURN_TYPE] int   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P8_Replace_Mix]^c ;^65^^^^^63^80^c = in.read (  ) ;^[CLASS] Lexer  [METHOD] readEscape [RETURN_TYPE] int   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P14_Delete_Statement]^^65^^^^^63^80^c = in.read (  ) ;^[CLASS] Lexer  [METHOD] readEscape [RETURN_TYPE] int   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P1_Replace_Type]^short  length = buffer.length (  ) ;^83^^^^^82^90^int length = buffer.length (  ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^int length = buffer.length() + 9 ;^83^^^^^82^90^int length = buffer.length (  ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P7_Replace_Invocation]^int length = buffer.setLength (  ) ;^83^^^^^82^90^int length = buffer.length (  ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P7_Replace_Invocation]^int length = buffer .setLength ( length )  ;^83^^^^^82^90^int length = buffer.length (  ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P12_Insert_Condition]^if  ( length != buffer.length (  )  )  { int length = buffer.length (  ) ; }^83^^^^^82^90^int length = buffer.length (  ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^int length = buffer.length() + 8 ;^83^^^^^82^90^int length = buffer.length (  ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P14_Delete_Statement]^^83^^^^^82^90^int length = buffer.length (  ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^while  ( length > 0 || Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^while  ( length >= 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length  &&  1 )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length  >>  1 )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^while  ( length > 6 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - length )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length  )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P5_Replace_Variable]^while  ( buffer > 0 && Character.isWhitespace ( length.charAt ( length - 1 )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^length = length  ^  1;^85^^^^^82^90^length = length - 1;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^length = length - length;^85^^^^^82^90^length = length - 1;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P8_Replace_Mix]^length = length - 0 ;^85^^^^^82^90^length = length - 1;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^length = length  <  1;^85^^^^^82^90^length = length - 1;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^length = length ;^85^^^^^82^90^length = length - 1;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length  ^  1 )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P8_Replace_Mix]^while  ( length > 0 && Character.isWhitespace ( buffer .setLength ( length )   )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P14_Delete_Statement]^^84^85^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  { length = length - 1;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length  ==  1 )  )  )  {^84^^^^^82^90^while  ( length > 0 && Character.isWhitespace ( buffer.charAt ( length - 1 )  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^if  ( length >= buffer.length (  )  )  {^87^^^^^82^90^if  ( length != buffer.length (  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^if  ( length != buffer.length() - 9  )  {^87^^^^^82^90^if  ( length != buffer.length (  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P5_Replace_Variable]^if  ( buffer != length.length (  )  )  {^87^^^^^82^90^if  ( length != buffer.length (  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P7_Replace_Invocation]^if  ( length != buffer.setLength (  )  )  {^87^^^^^82^90^if  ( length != buffer.length (  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P15_Unwrap_Block]^buffer.setLength(length);^87^88^89^^^82^90^if  ( length != buffer.length (  )  )  { buffer.setLength ( length ) ; }^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P16_Remove_Block]^^87^88^89^^^82^90^if  ( length != buffer.length (  )  )  { buffer.setLength ( length ) ; }^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P7_Replace_Invocation]^buffer .length (  )  ;^88^^^^^82^90^buffer.setLength ( length ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P14_Delete_Statement]^^88^^^^^82^90^buffer.setLength ( length ) ;^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P3_Replace_Literal]^if  ( length != buffer.length() + 0  )  {^87^^^^^82^90^if  ( length != buffer.length (  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P7_Replace_Invocation]^if  ( length != buffer .setLength ( length )   )  {^87^^^^^82^90^if  ( length != buffer.length (  )  )  {^[CLASS] Lexer  [METHOD] trimTrailingSpaces [RETURN_TYPE] void   StringBuilder buffer [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  StringBuilder  buffer  int  length  
[P2_Replace_Operator]^return  ( c != format.getDelimiter (  )  )  || Character.isWhitespace (  ( char )  c ) ;^96^^^^^95^97^return  ( c != format.getDelimiter (  )  )  && Character.isWhitespace (  ( char )  c ) ;^[CLASS] Lexer  [METHOD] isWhitespace [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return  ( c == format.getDelimiter (  )  )  && Character.isWhitespace (  ( char )  c ) ;^96^^^^^95^97^return  ( c != format.getDelimiter (  )  )  && Character.isWhitespace (  ( char )  c ) ;^[CLASS] Lexer  [METHOD] isWhitespace [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return  ( format != c.getDelimiter (  )  )  && Character.isWhitespace (  ( char )  c ) ;^96^^^^^95^97^return  ( c != format.getDelimiter (  )  )  && Character.isWhitespace (  ( char )  c ) ;^[CLASS] Lexer  [METHOD] isWhitespace [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P7_Replace_Invocation]^return  ( c != format.getEscape (  )  )  && Character.isWhitespace (  ( char )  c ) ;^96^^^^^95^97^return  ( c != format.getDelimiter (  )  )  && Character.isWhitespace (  ( char )  c ) ;^[CLASS] Lexer  [METHOD] isWhitespace [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P7_Replace_Invocation]^return  ( c != format.getDelimiter (  )  )  && Character .isWhitespace ( c )  ;^96^^^^^95^97^return  ( c != format.getDelimiter (  )  )  && Character.isWhitespace (  ( char )  c ) ;^[CLASS] Lexer  [METHOD] isWhitespace [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P14_Delete_Statement]^^96^97^^^^95^97^return  ( c != format.getDelimiter (  )  )  && Character.isWhitespace (  ( char )  c ) ; }^[CLASS] Lexer  [METHOD] isWhitespace [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^if  ( c == '\r' || in.lookAhead (  )  == '\n' )  {^107^^^^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^if  ( c <= '\r' && in.lookAhead (  )  == '\n' )  {^107^^^^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^if  ( c == '\r' && in.lookAhead (  )  >= '\n' )  {^107^^^^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^if  ( in == '\r' && c.lookAhead (  )  == '\n' )  {^107^^^^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P6_Replace_Expression]^if  ( c == '\r' ) {^107^^^^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P6_Replace_Expression]^if  (  in.lookAhead (  )  == '\n' )  {^107^^^^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P7_Replace_Invocation]^if  ( c == '\r' && in.read (  )  == '\n' )  {^107^^^^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P15_Unwrap_Block]^c = in.read();^107^108^109^110^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {  c = in.read (  ) ; }^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P16_Remove_Block]^^107^108^109^110^^105^112^if  ( c == '\r' && in.lookAhead (  )  == '\n' )  {  c = in.read (  ) ; }^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P7_Replace_Invocation]^c = in.lookAhead (  ) ;^109^^^^^105^112^c = in.read (  ) ;^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P8_Replace_Mix]^c  =  c ;^109^^^^^105^112^c = in.read (  ) ;^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P14_Delete_Statement]^^109^^^^^105^112^c = in.read (  ) ;^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return  ( c == '\n' && c == '\r' ) ;^111^^^^^105^112^return  ( c == '\n' || c == '\r' ) ;^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return  ( c != '\n' || c == '\r' ) ;^111^^^^^105^112^return  ( c == '\n' || c == '\r' ) ;^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return  ( c == '\n' || c != '\r' ) ;^111^^^^^105^112^return  ( c == '\n' || c == '\r' ) ;^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P8_Replace_Mix]^return  ( c ;^111^^^^^105^112^return  ( c == '\n' || c == '\r' ) ;^[CLASS] Lexer  [METHOD] isEndOfLine [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return c >= ExtendedBufferedReader.END_OF_STREAM;^118^^^^^117^119^return c == ExtendedBufferedReader.END_OF_STREAM;^[CLASS] Lexer  [METHOD] isEndOfFile [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return ExtendedBufferedReader.END_OF_STREAM == c;^118^^^^^117^119^return c == ExtendedBufferedReader.END_OF_STREAM;^[CLASS] Lexer  [METHOD] isEndOfFile [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P8_Replace_Mix]^return c  ||  ExtendedBufferedReader.END_OF_STREAM;^118^^^^^117^119^return c == ExtendedBufferedReader.END_OF_STREAM;^[CLASS] Lexer  [METHOD] isEndOfFile [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return c < delimiter;^124^^^^^123^125^return c == delimiter;^[CLASS] Lexer  [METHOD] isDelimiter [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return c == escape;^124^^^^^123^125^return c == delimiter;^[CLASS] Lexer  [METHOD] isDelimiter [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return delimiter == c;^124^^^^^123^125^return c == delimiter;^[CLASS] Lexer  [METHOD] isDelimiter [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P8_Replace_Mix]^return c  ||  delimiter;^124^^^^^123^125^return c == delimiter;^[CLASS] Lexer  [METHOD] isDelimiter [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return isEscaping || c == escape;^128^^^^^127^129^return isEscaping && c == escape;^[CLASS] Lexer  [METHOD] isEscape [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return isEscaping && c != escape;^128^^^^^127^129^return isEscaping && c == escape;^[CLASS] Lexer  [METHOD] isEscape [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return surroundingSpacesIgnored && c == escape;^128^^^^^127^129^return isEscaping && c == escape;^[CLASS] Lexer  [METHOD] isEscape [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return isEscaping && c == encapsulator;^128^^^^^127^129^return isEscaping && c == escape;^[CLASS] Lexer  [METHOD] isEscape [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return c && isEscaping == escape;^128^^^^^127^129^return isEscaping && c == escape;^[CLASS] Lexer  [METHOD] isEscape [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return escape && c == isEscaping;^128^^^^^127^129^return isEscaping && c == escape;^[CLASS] Lexer  [METHOD] isEscape [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P8_Replace_Mix]^return   c ;^128^^^^^127^129^return isEscaping && c == escape;^[CLASS] Lexer  [METHOD] isEscape [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return isEncapsulating || c == encapsulator;^132^^^^^131^133^return isEncapsulating && c == encapsulator;^[CLASS] Lexer  [METHOD] isEncapsulator [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return isEncapsulating && c <= encapsulator;^132^^^^^131^133^return isEncapsulating && c == encapsulator;^[CLASS] Lexer  [METHOD] isEncapsulator [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return surroundingSpacesIgnored && c == encapsulator;^132^^^^^131^133^return isEncapsulating && c == encapsulator;^[CLASS] Lexer  [METHOD] isEncapsulator [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return isEncapsulating && c == escape;^132^^^^^131^133^return isEncapsulating && c == encapsulator;^[CLASS] Lexer  [METHOD] isEncapsulator [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return isEncapsulating && encapsulator == c;^132^^^^^131^133^return isEncapsulating && c == encapsulator;^[CLASS] Lexer  [METHOD] isEncapsulator [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return encapsulator && c == isEncapsulating;^132^^^^^131^133^return isEncapsulating && c == encapsulator;^[CLASS] Lexer  [METHOD] isEncapsulator [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P8_Replace_Mix]^return isEncapsulating || c ;^132^^^^^131^133^return isEncapsulating && c == encapsulator;^[CLASS] Lexer  [METHOD] isEncapsulator [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return isCommentEnabled || c == commmentStart;^136^^^^^135^137^return isCommentEnabled && c == commmentStart;^[CLASS] Lexer  [METHOD] isCommentStart [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P2_Replace_Operator]^return isCommentEnabled && c < commmentStart;^136^^^^^135^137^return isCommentEnabled && c == commmentStart;^[CLASS] Lexer  [METHOD] isCommentStart [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return surroundingSpacesIgnored && c == commmentStart;^136^^^^^135^137^return isCommentEnabled && c == commmentStart;^[CLASS] Lexer  [METHOD] isCommentStart [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return isCommentEnabled && c == escape;^136^^^^^135^137^return isCommentEnabled && c == commmentStart;^[CLASS] Lexer  [METHOD] isCommentStart [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return isCommentEnabled && commmentStart == c;^136^^^^^135^137^return isCommentEnabled && c == commmentStart;^[CLASS] Lexer  [METHOD] isCommentStart [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P5_Replace_Variable]^return commmentStart && c == isCommentEnabled;^136^^^^^135^137^return isCommentEnabled && c == commmentStart;^[CLASS] Lexer  [METHOD] isCommentStart [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
[P8_Replace_Mix]^return isCommentEnabled || c ;^136^^^^^135^137^return isCommentEnabled && c == commmentStart;^[CLASS] Lexer  [METHOD] isCommentStart [RETURN_TYPE] boolean   int c [VARIABLES] char  commmentStart  delimiter  encapsulator  escape  ExtendedBufferedReader  in  CSVFormat  format  boolean  emptyLinesIgnored  isCommentEnabled  isEncapsulating  isEscaping  surroundingSpacesIgnored  int  c  
