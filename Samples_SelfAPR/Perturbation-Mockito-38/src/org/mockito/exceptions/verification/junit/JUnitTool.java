[P3_Replace_Literal]^Class<?> clazz = Class.forName ( "ArgumentsAreDifferent" ) ;^28^^^^^26^35^Class<?> clazz = Class.forName ( "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent" ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P8_Replace_Mix]^Class<?> clazz = Class .getConstructors (  )  ;^28^^^^^26^35^Class<?> clazz = Class.forName ( "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent" ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P3_Replace_Literal]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [1].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable 
[P4_Replace_Constructor]^org.mockito.exceptions.verification.junit.ArgumentsAreDifferent throwable =  ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable 
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, message, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, wanted ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance (  wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message,  actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  wanted.getConstructors (  ) [0].newInstance ( message, clazz, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( actual, wanted, message ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, actual, wanted ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P7_Replace_Invocation]^AssertionError throwable =  ( AssertionError )  clazz.forName (  ) [0].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P7_Replace_Invocation]^AssertionError throwable =  ( AssertionError )  clazz .forName ( wanted )  [0].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P8_Replace_Mix]^AssertionError throwable =  ( AssertionError )  clazz.forName (  ) [0].newInstance ( wanted, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P3_Replace_Literal]^Class<?> clazz = Class.forName ( "ArgumentsAreDifferent" ) ;^28^^^^^26^35^Class<?> clazz = Class.forName ( "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent" ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P3_Replace_Literal]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [1].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P4_Replace_Constructor]^org.mockito.exceptions.verification.junit.ArgumentsAreDifferent throwable =  ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent )  clazz.getConstructors (  ) [1].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( actual, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, message ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( wanted, message, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  actual.getConstructors (  ) [0].newInstance ( message, wanted, clazz ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P8_Replace_Mix]^AssertionError throwable =  ( AssertionError )  clazz.forName (  ) [0].newInstance ( message, actual, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P14_Delete_Statement]^^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P8_Replace_Mix]^AssertionError throwable =  ( AssertionError )  clazz .forName ( message )  [0].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P14_Delete_Statement]^^29^30^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ; return throwable;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^return new ArgumentsAreDifferent ( wanted ) ;^33^^^^^26^35^return new ArgumentsAreDifferent ( message ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P3_Replace_Literal]^Class<?> clazz = Class.forName ( "AssertionError" ) ;^28^^^^^26^35^Class<?> clazz = Class.forName ( "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent" ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P3_Replace_Literal]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [3].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P5_Replace_Variable]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( wanted, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P7_Replace_Invocation]^AssertionError throwable =  ( AssertionError )  clazz .forName ( actual )  [0].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P3_Replace_Literal]^Class<?> clazz = Class.forName ( "ArgumentsAreDifferent" ) ;^28^^^^^26^35^Class<?> clazz = Class.forName ( "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent" ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[P3_Replace_Literal]^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [2].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
[[P4_Replace_Constructor]]^org.mockito.exceptions.verification.junit.ArgumentsAreDifferent throwable =  ( org.mockito.exceptions.verification.junit.ArgumentsAreDifferent )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^29^^^^^26^35^AssertionError throwable =  ( AssertionError )  clazz.getConstructors (  ) [0].newInstance ( message, wanted, actual ) ;^[CLASS] JUnitTool  [METHOD] createArgumentsAreDifferentException [RETURN_TYPE] AssertionError   String message String wanted String actual [VARIABLES] Throwable  t  Class  clazz  boolean  hasJUnit  String  actual  message  wanted  AssertionError  throwable  
