[P8_Replace_Mix]^private  InvocationMatcher wanted;^126^^^^^121^131^private final InvocationMatcher wanted;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder   [VARIABLES] 
[P8_Replace_Mix]^this.wanted =  null;^129^^^^^128^130^this.wanted = wanted;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] <init> [RETURN_TYPE] InvocationMatcher)   InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  boolean  
[P4_Replace_Constructor]^return ListUtil.filter ( invocations, return ListUtil.filter ( invocations,  new RemoveUnverifiedInOrder (  )   ) ;^17^^^^^16^18^return ListUtil.filter ( invocations, new RemoveNotMatching ( wanted )  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findInvocations [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  
[P4_Replace_Constructor]^return ListUtil.filter (  new RemoveNotMatching ( wanted )  ) ;^17^^^^^16^18^return ListUtil.filter ( invocations, new RemoveNotMatching ( wanted )  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findInvocations [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  
[P5_Replace_Variable]^return ListUtil.filter ( wanted, new RemoveNotMatching ( invocations )  ) ;^17^^^^^16^18^return ListUtil.filter ( invocations, new RemoveNotMatching ( wanted )  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findInvocations [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  
[P14_Delete_Statement]^^17^^^^^16^18^return ListUtil.filter ( invocations, new RemoveNotMatching ( wanted )  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findInvocations [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  
[P7_Replace_Invocation]^List<Invocation> unverified = findPreviousVerifiedInOrder ( invocations ) ;^21^^^^^20^23^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findAllMatchingUnverifiedChunks [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  
[P11_Insert_Donor_Statement]^List<Invocation> unverified = new LinkedList<Invocation> (  ) ;List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^21^^^^^20^23^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findAllMatchingUnverifiedChunks [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  
[P11_Insert_Donor_Statement]^List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^21^^^^^20^23^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findAllMatchingUnverifiedChunks [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  
[P14_Delete_Statement]^^21^22^23^^^20^23^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ; return ListUtil.filter ( unverified, new RemoveNotMatching ( wanted )  ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findAllMatchingUnverifiedChunks [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  
[P4_Replace_Constructor]^return ListUtil.filter ( unverified, return ListUtil.filter ( unverified,  new RemoveUnverifiedInOrder (  )   ) ;^22^^^^^20^23^return ListUtil.filter ( unverified, new RemoveNotMatching ( wanted )  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findAllMatchingUnverifiedChunks [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  
[P4_Replace_Constructor]^return ListUtil.filter (  new RemoveNotMatching ( wanted )  ) ;^22^^^^^20^23^return ListUtil.filter ( unverified, new RemoveNotMatching ( wanted )  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findAllMatchingUnverifiedChunks [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  
[P5_Replace_Variable]^return ListUtil.filter ( wanted, new RemoveNotMatching ( unverified )  ) ;^22^^^^^20^23^return ListUtil.filter ( unverified, new RemoveNotMatching ( wanted )  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findAllMatchingUnverifiedChunks [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  
[P14_Delete_Statement]^^22^23^^^^20^23^return ListUtil.filter ( unverified, new RemoveNotMatching ( wanted )  ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findAllMatchingUnverifiedChunks [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  
[P7_Replace_Invocation]^List<Invocation> unverified = findPreviousVerifiedInOrder ( invocations ) ;^41^^^^^40^49^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P11_Insert_Donor_Statement]^List<Invocation> unverified = new LinkedList<Invocation> (  ) ;List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^41^^^^^40^49^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P11_Insert_Donor_Statement]^List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^41^^^^^40^49^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P5_Replace_Variable]^List<Invocation> firstChunk = getFirstMatchingChunk (  unverified ) ;^42^^^^^40^49^List<Invocation> firstChunk = getFirstMatchingChunk ( wanted, unverified ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P5_Replace_Variable]^List<Invocation> firstChunk = getFirstMatchingChunk ( wanted ) ;^42^^^^^40^49^List<Invocation> firstChunk = getFirstMatchingChunk ( wanted, unverified ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P5_Replace_Variable]^List<Invocation> firstChunk = getFirstMatchingChunk ( unverified, wanted ) ;^42^^^^^40^49^List<Invocation> firstChunk = getFirstMatchingChunk ( wanted, unverified ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P7_Replace_Invocation]^List<Invocation> firstChunk = findInvocations ( wanted, unverified ) ;^42^^^^^40^49^List<Invocation> firstChunk = getFirstMatchingChunk ( wanted, unverified ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P11_Insert_Donor_Statement]^List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;List<Invocation> firstChunk = getFirstMatchingChunk ( wanted, unverified ) ;^42^^^^^40^49^List<Invocation> firstChunk = getFirstMatchingChunk ( wanted, unverified ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P2_Replace_Operator]^if  ( wantedCount == firstChunk.size (  )  )  {^44^^^^^40^49^if  ( wantedCount != firstChunk.size (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P3_Replace_Literal]^if  ( wantedCount != firstChunk.size() - 0  )  {^44^^^^^40^49^if  ( wantedCount != firstChunk.size (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P5_Replace_Variable]^if  ( wanted != firstChunk.size (  )  )  {^44^^^^^40^49^if  ( wantedCount != firstChunk.size (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P5_Replace_Variable]^if  ( firstChunkCount != wanted.size (  )  )  {^44^^^^^40^49^if  ( wantedCount != firstChunk.size (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P7_Replace_Invocation]^if  ( wantedCount != firstChunk.add (  )  )  {^44^^^^^40^49^if  ( wantedCount != firstChunk.size (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P15_Unwrap_Block]^return this.findAllMatchingUnverifiedChunks(invocations, wanted);^44^45^46^47^48^40^49^if  ( wantedCount != firstChunk.size (  )  )  { return this.findAllMatchingUnverifiedChunks ( invocations, wanted ) ; } else { return firstChunk; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P16_Remove_Block]^^44^45^46^47^48^40^49^if  ( wantedCount != firstChunk.size (  )  )  { return this.findAllMatchingUnverifiedChunks ( invocations, wanted ) ; } else { return firstChunk; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P8_Replace_Mix]^return null;^47^^^^^40^49^return firstChunk;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P5_Replace_Variable]^return this.findAllMatchingUnverifiedChunks (  wanted ) ;^45^^^^^40^49^return this.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P5_Replace_Variable]^return this.findAllMatchingUnverifiedChunks ( invocations ) ;^45^^^^^40^49^return this.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P5_Replace_Variable]^return this.findAllMatchingUnverifiedChunks ( wanted, invocations ) ;^45^^^^^40^49^return this.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P7_Replace_Invocation]^return this.findInvocations ( invocations, wanted ) ;^45^^^^^40^49^return this.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P14_Delete_Statement]^^45^46^47^48^^40^49^return this.findAllMatchingUnverifiedChunks ( invocations, wanted ) ; } else { return firstChunk; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P3_Replace_Literal]^if  ( wantedCount != firstChunk.size() + 1  )  {^44^^^^^40^49^if  ( wantedCount != firstChunk.size (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P7_Replace_Invocation]^if  ( wantedCount != firstChunk .isEmpty (  )   )  {^44^^^^^40^49^if  ( wantedCount != firstChunk.size (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findMatchingChunk [RETURN_TYPE] List   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] InvocationMatcher  wanted  List  firstChunk  invocations  unverified  boolean  int  wantedCount  
[P1_Replace_Type]^List<Invocation> firstChunk = new  ArrayList <Invocation> (  ) ;^52^^^^^51^61^List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P11_Insert_Donor_Statement]^List<Invocation> unverified = new LinkedList<Invocation> (  ) ;List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;^52^^^^^51^61^List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P11_Insert_Donor_Statement]^List<Invocation> firstChunk = getFirstMatchingChunk ( wanted, unverified ) ;List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;^52^^^^^51^61^List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P11_Insert_Donor_Statement]^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;^52^^^^^51^61^List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P9_Replace_Statement]^if  ( wanted.hasSameMethod ( invocation )  )  {^54^^^^^51^61^if  ( wanted.matches ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P9_Replace_Statement]^if  ( !wanted.hasSimilarMethod ( invocation )  )  {^54^^^^^51^61^if  ( wanted.matches ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P15_Unwrap_Block]^firstChunk.add(invocation);^54^55^56^57^58^51^61^if  ( wanted.matches ( invocation )  )  { firstChunk.add ( invocation ) ; } else if  ( !firstChunk.isEmpty (  )  )  { break; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P16_Remove_Block]^^54^55^56^57^58^51^61^if  ( wanted.matches ( invocation )  )  { firstChunk.add ( invocation ) ; } else if  ( !firstChunk.isEmpty (  )  )  { break; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P6_Replace_Expression]^} else {^56^^^^^51^61^} else if  ( !firstChunk.isEmpty (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P7_Replace_Invocation]^} else if  ( !firstChunk.add (  )  )  {^56^^^^^51^61^} else if  ( !firstChunk.isEmpty (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P15_Unwrap_Block]^break;^56^57^58^^^51^61^} else if  ( !firstChunk.isEmpty (  )  )  { break; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P16_Remove_Block]^^56^57^58^^^51^61^} else if  ( !firstChunk.isEmpty (  )  )  { break; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P7_Replace_Invocation]^} else if  ( !firstChunk .get (  )   )  {^56^^^^^51^61^} else if  ( !firstChunk.isEmpty (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P13_Insert_Block]^if  ( ! ( firstChunk.isEmpty (  )  )  )  {     break; }^56^^^^^51^61^[Delete]^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P14_Delete_Statement]^^55^^^^^51^61^firstChunk.add ( invocation ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P11_Insert_Donor_Statement]^return !wanted.matches ( invocation ) ;firstChunk.add ( invocation ) ;^55^^^^^51^61^firstChunk.add ( invocation ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P5_Replace_Variable]^if  ( invocation.matches ( wanted )  )  {^54^^^^^51^61^if  ( wanted.matches ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P7_Replace_Invocation]^if  ( wanted .hasSimilarMethod ( invocation )   )  {^54^^^^^51^61^if  ( wanted.matches ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P5_Replace_Variable]^return 3;^60^^^^^51^61^return firstChunk;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P8_Replace_Mix]^return this;^60^^^^^51^61^return firstChunk;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getFirstMatchingChunk [RETURN_TYPE] List   InvocationMatcher wanted Invocation> unverified [VARIABLES] InvocationMatcher  wanted  List  firstChunk  unverified  boolean  Invocation  invocation  
[P12_Insert_Condition]^if  ( firstSimilar == null )  { Invocation firstSimilar = null; }^64^^^^^63^78^Invocation firstSimilar = null;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P5_Replace_Variable]^if  ( !wanted.hasSimilarMethod ( firstSimilar )  )  {^66^^^^^63^78^if  ( !wanted.hasSimilarMethod ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P9_Replace_Statement]^if  ( wanted.matches ( invocation )  )  {^66^^^^^63^78^if  ( !wanted.hasSimilarMethod ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P9_Replace_Statement]^if  ( wanted.hasSameMethod ( invocation )  )  {^66^^^^^63^78^if  ( !wanted.hasSimilarMethod ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P15_Unwrap_Block]^continue;^66^67^68^^^63^78^if  ( !wanted.hasSimilarMethod ( invocation )  )  { continue; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P16_Remove_Block]^^66^67^68^^^63^78^if  ( !wanted.hasSimilarMethod ( invocation )  )  { continue; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P13_Insert_Block]^if  ( wanted.hasSameMethod ( invocation )  )  {     return invocation; }^66^^^^^63^78^[Delete]^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P2_Replace_Operator]^if  ( firstSimilar != null )  {^69^^^^^63^78^if  ( firstSimilar == null )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P8_Replace_Mix]^if  ( firstSimilar == this )  {^69^^^^^63^78^if  ( firstSimilar == null )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P15_Unwrap_Block]^firstSimilar = invocation;^69^70^71^^^63^78^if  ( firstSimilar == null )  { firstSimilar = invocation; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P16_Remove_Block]^^69^70^71^^^63^78^if  ( firstSimilar == null )  { firstSimilar = invocation; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P5_Replace_Variable]^firstSimilar = firstSimilar;^70^^^^^63^78^firstSimilar = invocation;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P8_Replace_Mix]^firstSimilar =  null;^70^^^^^63^78^firstSimilar = invocation;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P5_Replace_Variable]^if  ( wanted.hasSameMethod ( firstSimilar )  )  {^72^^^^^63^78^if  ( wanted.hasSameMethod ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P5_Replace_Variable]^if  ( invocation.hasSameMethod ( wanted )  )  {^72^^^^^63^78^if  ( wanted.hasSameMethod ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P9_Replace_Statement]^if  ( wanted.matches ( invocation )  )  {^72^^^^^63^78^if  ( wanted.hasSameMethod ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P9_Replace_Statement]^if  ( !wanted.hasSimilarMethod ( invocation )  )  {^72^^^^^63^78^if  ( wanted.hasSameMethod ( invocation )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P15_Unwrap_Block]^return invocation;^72^73^74^^^63^78^if  ( wanted.hasSameMethod ( invocation )  )  { return invocation; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P16_Remove_Block]^^72^73^74^^^63^78^if  ( wanted.hasSameMethod ( invocation )  )  { return invocation; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P13_Insert_Block]^if  ( ! ( wanted.hasSimilarMethod ( invocation )  )  )  {     continue; }^72^^^^^63^78^[Delete]^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P5_Replace_Variable]^return firstSimilar;^73^^^^^63^78^return invocation;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P13_Insert_Block]^if  ( ! ( wanted.hasSimilarMethod ( invocation )  )  )  {     continue; }^66^^^^^63^78^[Delete]^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P5_Replace_Variable]^return invocation;^77^^^^^63^78^return firstSimilar;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findSimilarInvocation [RETURN_TYPE] Invocation   Invocation> invocations InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  firstSimilar  invocation  
[P7_Replace_Invocation]^return findAllMatchingUnverifiedChunks ( invocations, null ) ;^81^^^^^80^82^return findFirstUnverified ( invocations, null ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  
[P14_Delete_Statement]^^81^82^^^^80^82^return findFirstUnverified ( invocations, null ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  
[P2_Replace_Operator]^if  ( !i.isVerified (  )  || mockIsValid )  {^87^^^^^84^92^if  ( !i.isVerified (  )  && mockIsValid )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P6_Replace_Expression]^if  ( !i.isVerified (  )  ) {^87^^^^^84^92^if  ( !i.isVerified (  )  && mockIsValid )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P6_Replace_Expression]^if  (  mockIsValid )  {^87^^^^^84^92^if  ( !i.isVerified (  )  && mockIsValid )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P15_Unwrap_Block]^return i;^87^88^89^^^84^92^if  ( !i.isVerified (  )  && mockIsValid )  { return i; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P16_Remove_Block]^^87^88^89^^^84^92^if  ( !i.isVerified (  )  && mockIsValid )  { return i; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P2_Replace_Operator]^boolean mockIsValid = mock == null && mock == i.getMock (  ) ;^86^^^^^84^92^boolean mockIsValid = mock == null || mock == i.getMock (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P2_Replace_Operator]^boolean mockIsValid = mock != null || mock == i.getMock (  ) ;^86^^^^^84^92^boolean mockIsValid = mock == null || mock == i.getMock (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P2_Replace_Operator]^boolean mockIsValid = mock == null || mock != i.getMock (  ) ;^86^^^^^84^92^boolean mockIsValid = mock == null || mock == i.getMock (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P5_Replace_Variable]^boolean iIsValid = mock == null || mock == mock.getMock (  ) ;^86^^^^^84^92^boolean mockIsValid = mock == null || mock == i.getMock (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P8_Replace_Mix]^boolean mockIsValid = mock == null || mock == i .getLocation (  )  ;^86^^^^^84^92^boolean mockIsValid = mock == null || mock == i.getMock (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P14_Delete_Statement]^^86^^^^^84^92^boolean mockIsValid = mock == null || mock == i.getMock (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P7_Replace_Invocation]^if  ( !i .isVerifiedInOrder (  )   && mockIsValid )  {^87^^^^^84^92^if  ( !i.isVerified (  )  && mockIsValid )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P8_Replace_Mix]^return this;^91^^^^^84^92^return null;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findFirstUnverified [RETURN_TYPE] Invocation   Invocation> invocations Object mock [VARIABLES] InvocationMatcher  wanted  List  invocations  Object  mock  boolean  mockIsValid  Invocation  i  
[P7_Replace_Invocation]^if  ( invocations.add (  )  )  {^95^^^^^94^101^if  ( invocations.isEmpty (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P7_Replace_Invocation]^if  ( invocations .get (  )   )  {^95^^^^^94^101^if  ( invocations.isEmpty (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P9_Replace_Statement]^if  ( verifiedOnly.isEmpty (  )  )  {^95^^^^^94^101^if  ( invocations.isEmpty (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P15_Unwrap_Block]^return null;^95^96^97^98^99^94^101^if  ( invocations.isEmpty (  )  )  { return null; } else { Invocation last = invocations.get ( invocations.size (  )  - 1 ) ; return last.getLocation (  ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P16_Remove_Block]^^95^96^97^98^99^94^101^if  ( invocations.isEmpty (  )  )  { return null; } else { Invocation last = invocations.get ( invocations.size (  )  - 1 ) ; return last.getLocation (  ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P7_Replace_Invocation]^return last .getMock (  )  ;^99^^^^^94^101^return last.getLocation (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P2_Replace_Operator]^Invocation last = invocations.get ( invocations.size (  )   >=  1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P3_Replace_Literal]^Invocation last = invocations.get ( invocations.size (  )   ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P3_Replace_Literal]^Invocation last = invocations.get ( invocations.size() + 8  - 1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P7_Replace_Invocation]^Invocation last = invocations.get ( invocations.add (  )  - 1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P8_Replace_Mix]^Invocation last = invocations.get ( invocations .isEmpty (  )   - 1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P13_Insert_Block]^if  ( invocations.isEmpty (  )  )  {     return null; }else {     Invocation last = invocations.get (  (  ( invocations.size (  )  )  - 1 )  ) ;     return last.getLocation (  ) ; }^98^^^^^94^101^[Delete]^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P2_Replace_Operator]^Invocation last = invocations.get ( invocations.size (  )   <=  1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P3_Replace_Literal]^Invocation last = invocations.get ( invocations.size (  )  -  ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P3_Replace_Literal]^Invocation last = invocations.get ( invocations.size() + 3  - 1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P7_Replace_Invocation]^Invocation last = invocations .isEmpty (  )  ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P14_Delete_Statement]^^98^99^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ; return last.getLocation (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P3_Replace_Literal]^Invocation last = invocations.get ( invocations.size() - 9  - 1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P14_Delete_Statement]^^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P14_Delete_Statement]^^99^^^^^94^101^return last.getLocation (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P8_Replace_Mix]^return this;^96^^^^^94^101^return null;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P8_Replace_Mix]^return true;^96^^^^^94^101^return null;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P2_Replace_Operator]^Invocation last = invocations.get ( invocations.size (  )   <<  1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P3_Replace_Literal]^Invocation last = invocations.get ( invocations.size() - 2  - 1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P3_Replace_Literal]^Invocation last = invocations.get ( invocations.size() - 0  - 1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P3_Replace_Literal]^Invocation last = invocations.get ( invocations.size() + 1  - 1 ) ;^98^^^^^94^101^Invocation last = invocations.get ( invocations.size (  )  - 1 ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] getLastLocation [RETURN_TYPE] Location   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  Invocation  last  
[P4_Replace_Constructor]^LinkedList<Invocation> verifiedOnly = ListUtil.filter ( invocations, LinkedList<Invocation> verifiedOnly = ListUtil.filter ( invocations,  new RemoveNotMatching ( wanted )   ) ;^104^^^^^103^111^LinkedList<Invocation> verifiedOnly = ListUtil.filter ( invocations, new RemoveUnverifiedInOrder (  )  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P7_Replace_Invocation]^if  ( verifiedOnly .get (  )   )  {^106^^^^^103^111^if  ( verifiedOnly.isEmpty (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P9_Replace_Statement]^if  ( invocations.isEmpty (  )  )  {^106^^^^^103^111^if  ( verifiedOnly.isEmpty (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P15_Unwrap_Block]^return null;^106^107^108^109^110^103^111^if  ( verifiedOnly.isEmpty (  )  )  { return null; } else { return verifiedOnly.getLast (  ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P16_Remove_Block]^^106^107^108^109^110^103^111^if  ( verifiedOnly.isEmpty (  )  )  { return null; } else { return verifiedOnly.getLast (  ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P7_Replace_Invocation]^return verifiedOnly .LinkedList (  )  ;^109^^^^^103^111^return verifiedOnly.getLast (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P12_Insert_Condition]^if  ( verifiedOnly.isEmpty (  )  )  { return verifiedOnly.getLast (  ) ; }^109^^^^^103^111^return verifiedOnly.getLast (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P5_Replace_Variable]^return 3.getLast (  ) ;^109^^^^^103^111^return verifiedOnly.getLast (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P14_Delete_Statement]^^109^110^^^^103^111^return verifiedOnly.getLast (  ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P8_Replace_Mix]^return false;^107^^^^^103^111^return null;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P5_Replace_Variable]^return null.getLast (  ) ;^109^^^^^103^111^return verifiedOnly.getLast (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] findPreviousVerifiedInOrder [RETURN_TYPE] Invocation   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  boolean  LinkedList  verifiedOnly  
[P1_Replace_Type]^List<Invocation> unverified = new  ArrayList <Invocation> (  ) ;^114^^^^^113^123^List<Invocation> unverified = new LinkedList<Invocation> (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P11_Insert_Donor_Statement]^List<Invocation> unverified = removeVerifiedInOrder ( invocations ) ;List<Invocation> unverified = new LinkedList<Invocation> (  ) ;^114^^^^^113^123^List<Invocation> unverified = new LinkedList<Invocation> (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P11_Insert_Donor_Statement]^List<Invocation> firstChunk = new LinkedList<Invocation> (  ) ;List<Invocation> unverified = new LinkedList<Invocation> (  ) ;^114^^^^^113^123^List<Invocation> unverified = new LinkedList<Invocation> (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P7_Replace_Invocation]^if  ( i .isVerified (  )   )  {^116^^^^^113^123^if  ( i.isVerifiedInOrder (  )  )  {^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P15_Unwrap_Block]^unverified.clear();^116^117^118^119^120^113^123^if  ( i.isVerifiedInOrder (  )  )  { unverified.clear (  ) ; } else { unverified.add ( i ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P16_Remove_Block]^^116^117^118^119^120^113^123^if  ( i.isVerifiedInOrder (  )  )  { unverified.clear (  ) ; } else { unverified.add ( i ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P14_Delete_Statement]^^119^120^^^^113^123^unverified.add ( i ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P7_Replace_Invocation]^unverified.add (  ) ;^117^^^^^113^123^unverified.clear (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P7_Replace_Invocation]^unverified .get (  )  ;^117^^^^^113^123^unverified.clear (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P14_Delete_Statement]^^117^118^119^120^^113^123^unverified.clear (  ) ; } else { unverified.add ( i ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] removeVerifiedInOrder [RETURN_TYPE] List   Invocation> invocations [VARIABLES] InvocationMatcher  wanted  List  invocations  unverified  boolean  Invocation  i  
[P7_Replace_Invocation]^return !wanted.hasSameMethod ( invocation ) ;^133^^^^^132^134^return !wanted.matches ( invocation ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P7_Replace_Invocation]^return !wanted .hasSimilarMethod ( invocation )  ;^133^^^^^132^134^return !wanted.matches ( invocation ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P12_Insert_Condition]^if  ( wanted.matches ( invocation )  )  { return !wanted.matches ( invocation ) ; }^133^^^^^132^134^return !wanted.matches ( invocation ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P12_Insert_Condition]^if  ( wanted.hasSameMethod ( invocation )  )  { return !wanted.matches ( invocation ) ; }^133^^^^^132^134^return !wanted.matches ( invocation ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P12_Insert_Condition]^if  ( !wanted.hasSimilarMethod ( invocation )  )  { return !wanted.matches ( invocation ) ; }^133^^^^^132^134^return !wanted.matches ( invocation ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P14_Delete_Statement]^^133^^^^^132^134^return !wanted.matches ( invocation ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P8_Replace_Mix]^return !invocation .isVerified (  )  ;^139^^^^^138^140^return !invocation.isVerifiedInOrder (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P12_Insert_Condition]^if  ( i.isVerifiedInOrder (  )  )  { return !invocation.isVerifiedInOrder (  ) ; }^139^^^^^138^140^return !invocation.isVerifiedInOrder (  ) ;^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P14_Delete_Statement]^^139^140^^^^138^140^return !invocation.isVerifiedInOrder (  ) ; }^[CLASS] InvocationsFinder RemoveNotMatching RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P8_Replace_Mix]^this.wanted =  null;^129^^^^^128^130^this.wanted = wanted;^[CLASS] RemoveNotMatching  [METHOD] <init> [RETURN_TYPE] InvocationMatcher)   InvocationMatcher wanted [VARIABLES] InvocationMatcher  wanted  boolean  
[P14_Delete_Statement]^^133^^^^^132^134^return !wanted.matches ( invocation ) ;^[CLASS] RemoveNotMatching  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] Invocation  invocation  InvocationMatcher  wanted  boolean  
[P14_Delete_Statement]^^139^140^^^^138^140^return !invocation.isVerifiedInOrder (  ) ; }^[CLASS] RemoveUnverifiedInOrder  [METHOD] isOut [RETURN_TYPE] boolean   Invocation invocation [VARIABLES] boolean  Invocation  invocation  
