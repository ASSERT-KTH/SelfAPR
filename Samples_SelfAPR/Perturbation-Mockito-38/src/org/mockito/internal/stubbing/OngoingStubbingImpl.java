[P8_Replace_Mix]^private  MockitoStubber mockitoStubber;^14^^^^^9^19^private final MockitoStubber mockitoStubber;^[CLASS] OngoingStubbingImpl   [VARIABLES] 
[P8_Replace_Mix]^private  RegisteredInvocations registeredInvocations;^15^^^^^10^20^private final RegisteredInvocations registeredInvocations;^[CLASS] OngoingStubbingImpl   [VARIABLES] 
[P8_Replace_Mix]^this.mockitoStubber =  null;^19^^^^^17^21^this.mockitoStubber = mockitoStubber;^[CLASS] OngoingStubbingImpl  [METHOD] <init> [RETURN_TYPE] RegisteredInvocations)   MockitoStubber mockitoStubber RegisteredInvocations registeredInvocations [VARIABLES] RegisteredInvocations  registeredInvocations  MockitoStubber  mockitoStubber  boolean  
[P8_Replace_Mix]^this.registeredInvocations =  null;^20^^^^^17^21^this.registeredInvocations = registeredInvocations;^[CLASS] OngoingStubbingImpl  [METHOD] <init> [RETURN_TYPE] RegisteredInvocations)   MockitoStubber mockitoStubber RegisteredInvocations registeredInvocations [VARIABLES] RegisteredInvocations  registeredInvocations  MockitoStubber  mockitoStubber  boolean  
[P14_Delete_Statement]^^24^25^^^^23^27^registeredInvocations.removeLast (  ) ; mockitoStubber.addAnswer ( answer ) ;^[CLASS] OngoingStubbingImpl  [METHOD] thenAnswer [RETURN_TYPE] OngoingStubbing   Answer<?> answer [VARIABLES] Answer  answer  RegisteredInvocations  registeredInvocations  boolean  MockitoStubber  mockitoStubber  
[P14_Delete_Statement]^^25^^^^^23^27^mockitoStubber.addAnswer ( answer ) ;^[CLASS] OngoingStubbingImpl  [METHOD] thenAnswer [RETURN_TYPE] OngoingStubbing   Answer<?> answer [VARIABLES] Answer  answer  RegisteredInvocations  registeredInvocations  boolean  MockitoStubber  mockitoStubber  
[P14_Delete_Statement]^^30^^^^^29^33^registeredInvocations.removeLast (  ) ;^[CLASS] OngoingStubbingImpl  [METHOD] toAnswer [RETURN_TYPE] DeprecatedOngoingStubbing   Answer<?> answer [VARIABLES] Answer  answer  RegisteredInvocations  registeredInvocations  boolean  MockitoStubber  mockitoStubber  
[P14_Delete_Statement]^^31^32^^^^29^33^mockitoStubber.addAnswer ( answer ) ; return new ConsecutiveStubbing<T> ( mockitoStubber ) ;^[CLASS] OngoingStubbingImpl  [METHOD] toAnswer [RETURN_TYPE] DeprecatedOngoingStubbing   Answer<?> answer [VARIABLES] Answer  answer  RegisteredInvocations  registeredInvocations  boolean  MockitoStubber  mockitoStubber  
