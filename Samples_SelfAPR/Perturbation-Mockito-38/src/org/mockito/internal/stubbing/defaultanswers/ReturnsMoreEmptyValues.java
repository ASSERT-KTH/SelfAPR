[P5_Replace_Variable]^Object ret = 1.answer ( invocation ) ;^51^^^^^50^58^Object ret = delegate.answer ( invocation ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P5_Replace_Variable]^Object ret = invocation.answer ( delegate ) ;^51^^^^^50^58^Object ret = delegate.answer ( invocation ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P7_Replace_Invocation]^Object ret = delegate .answer ( invocation )  ;^51^^^^^50^58^Object ret = delegate.answer ( invocation ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P8_Replace_Mix]^Object ret = 2.answer ( invocation ) ;^51^^^^^50^58^Object ret = delegate.answer ( invocation ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P14_Delete_Statement]^^51^^^^^50^58^Object ret = delegate.answer ( invocation ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P2_Replace_Operator]^if  ( ret == null )  {^52^^^^^50^58^if  ( ret != null )  {^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P8_Replace_Mix]^if  ( ret != false )  {^52^^^^^50^58^if  ( ret != null )  {^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P15_Unwrap_Block]^return ret;^52^53^54^^^50^58^if  ( ret != null )  { return ret; }^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P16_Remove_Block]^^52^53^54^^^50^58^if  ( ret != null )  { return ret; }^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P14_Delete_Statement]^^56^^^^^50^58^Class<?> returnType = invocation.getMethod (  ) .getReturnType (  ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P7_Replace_Invocation]^return answer ( returnType ) ;^57^^^^^50^58^return returnValueFor ( returnType ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P14_Delete_Statement]^^57^^^^^50^58^return returnValueFor ( returnType ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] Answer  delegate  Object  ret  Class  returnType  boolean  InvocationOnMock  invocation  
[P2_Replace_Operator]^if  ( type >= String.class )  {^61^^^^^60^68^if  ( type == String.class )  {^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P5_Replace_Variable]^if  ( type == String.type )  {^61^^^^^60^68^if  ( type == String.class )  {^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P15_Unwrap_Block]^return "";^61^62^63^64^65^60^68^if  ( type == String.class )  { return ""; }  else if  ( type.isArray (  )  )  { Class<?> componenetType = type.getComponentType (  ) ; return Array.newInstance ( componenetType, 0 ) ; }^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P16_Remove_Block]^^61^62^63^64^65^60^68^if  ( type == String.class )  { return ""; }  else if  ( type.isArray (  )  )  { Class<?> componenetType = type.getComponentType (  ) ; return Array.newInstance ( componenetType, 0 ) ; }^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P13_Insert_Block]^if  ( type.isArray (  )  )  {     Class<?> componenetType = type.getComponentType (  ) ;     return newInstance ( componenetType, 0 ) ; }^61^^^^^60^68^[Delete]^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P6_Replace_Expression]^} else {^63^^^^^60^68^}  else if  ( type.isArray (  )  )  {^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P15_Unwrap_Block]^java.lang.Class<?> componenetType = type.getComponentType(); return java.lang.reflect.Array.newInstance(componenetType, 0);^63^64^65^66^^60^68^}  else if  ( type.isArray (  )  )  { Class<?> componenetType = type.getComponentType (  ) ; return Array.newInstance ( componenetType, 0 ) ; }^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P16_Remove_Block]^^63^64^65^66^^60^68^}  else if  ( type.isArray (  )  )  { Class<?> componenetType = type.getComponentType (  ) ; return Array.newInstance ( componenetType, 0 ) ; }^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P13_Insert_Block]^if  ( type ==  ( class )  )  {     return ""; }else     if  ( type.isArray (  )  )  {         Class<?> componenetType = type.getComponentType (  ) ;         return newInstance ( componenetType, 0 ) ;     }^63^^^^^60^68^[Delete]^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P8_Replace_Mix]^return Array.newInstance ( componenetType, 0L ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P7_Replace_Invocation]^Class<?> componenetType = type .isArray (  )  ;^64^^^^^60^68^Class<?> componenetType = type.getComponentType (  ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P14_Delete_Statement]^^64^65^^^^60^68^Class<?> componenetType = type.getComponentType (  ) ; return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P3_Replace_Literal]^return Array.newInstance ( componenetType, 5 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P14_Delete_Statement]^^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P3_Replace_Literal]^return Array.newInstance ( componenetType, 8 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P8_Replace_Mix]^return Array.newInstance ( componenetType, 0 + 2 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P5_Replace_Variable]^}  else if  ( 1.isArray (  )  )  {^63^^^^^60^68^}  else if  ( type.isArray (  )  )  {^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P7_Replace_Invocation]^}  else if  ( type .getComponentType (  )   )  {^63^^^^^60^68^}  else if  ( type.isArray (  )  )  {^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P3_Replace_Literal]^return Array.newInstance ( componenetType, -6 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P8_Replace_Mix]^return Array.newInstance ( componenetType, 1 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P14_Delete_Statement]^^64^^^^^60^68^Class<?> componenetType = type.getComponentType (  ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P3_Replace_Literal]^return Array.newInstance ( componenetType, -3 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P3_Replace_Literal]^return Array.newInstance ( componenetType, -5 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P8_Replace_Mix]^return Array.newInstance ( componenetType, 0 * 4 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P5_Replace_Variable]^Class<?> componenetType = this.getComponentType (  ) ;^64^^^^^60^68^Class<?> componenetType = type.getComponentType (  ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P3_Replace_Literal]^return Array.newInstance ( componenetType, -7 ) ;^65^^^^^60^68^return Array.newInstance ( componenetType, 0 ) ;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
[P8_Replace_Mix]^return false;^67^^^^^60^68^return null;^[CLASS] ReturnsMoreEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] Answer  delegate  Class  componenetType  type  boolean  
