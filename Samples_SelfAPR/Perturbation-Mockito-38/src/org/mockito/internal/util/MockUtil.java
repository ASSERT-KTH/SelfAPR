[P8_Replace_Mix]^private  CreationValidator creationValidator;^21^^^^^16^26^private final CreationValidator creationValidator;^[CLASS] MockUtil   [VARIABLES] 
[P8_Replace_Mix]^this.creationValidator =  null;^24^^^^^23^25^this.creationValidator = creationValidator;^[CLASS] MockUtil  [METHOD] <init> [RETURN_TYPE] CreationValidator)   CreationValidator creationValidator [VARIABLES] CreationValidator  creationValidator  boolean  
[P14_Delete_Statement]^^28^^^^^27^29^this ( new CreationValidator (  )  ) ;^[CLASS] MockUtil  [METHOD] <init> [RETURN_TYPE] MockUtil()   [VARIABLES] CreationValidator  creationValidator  boolean  
[P7_Replace_Invocation]^creationValidator.validateExtraInterfaces ( classToMock ) ;^32^^^^^31^49^creationValidator.validateType ( classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P14_Delete_Statement]^^32^^^^^31^49^creationValidator.validateType ( classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^creationValidator.validateExtraInterfaces (  settings.getExtraInterfaces (  )  ) ;^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^creationValidator.validateExtraInterfaces ( classToMock.getExtraInterfaces (  )  ) ;^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P8_Replace_Mix]^creationValidator.validateExtraInterfaces ( classToMock, settings .getSpiedInstance (  )   ) ;^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P14_Delete_Statement]^^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P11_Insert_Donor_Statement]^Class<?>[] interfaces = settings.getExtraInterfaces (  ) ;creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P4_Replace_Constructor]^MockName mockName = new MockName ( settings.getMockName (  )  ) ;^35^^^^^31^49^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^MockName mockName = new MockName ( classToMock.getMockName (  ) , settings ) ;^35^^^^^31^49^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P7_Replace_Invocation]^MockName mockName = new MockName ( settings .getSpiedInstance (  )  , classToMock ) ;^35^^^^^31^49^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P14_Delete_Statement]^^35^^^^^31^49^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P4_Replace_Constructor]^MockHandler<T> mockHandler = new MockHandler<T> (  progress, new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P4_Replace_Constructor]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName,  new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P4_Replace_Constructor]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  )  ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^MockHandler<T> mockHandler = new MockHandler<T> ( progress, mockName, new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, settings, new MatchersBinder (  ) , progress ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^MockHandler<T> mockHandler = new MockHandler<T> ( settings, progress, new MatchersBinder (  ) , mockName ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P11_Insert_Donor_Statement]^MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P11_Insert_Donor_Statement]^MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P4_Replace_Constructor]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> (  mockHandler ) ;^37^^^^^31^49^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P4_Replace_Constructor]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock ) ;^37^^^^^31^49^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( mockHandler, classToMock ) ;^37^^^^^31^49^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P11_Insert_Donor_Statement]^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^37^^^^^31^49^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P7_Replace_Invocation]^Class<?>[] interfaces = settings .getSpiedInstance (  )  ;^38^^^^^31^49^Class<?>[] interfaces = settings.getExtraInterfaces (  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P14_Delete_Statement]^^38^^^^^31^49^Class<?>[] interfaces = settings.getExtraInterfaces (  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P11_Insert_Donor_Statement]^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;Class<?>[] interfaces = settings.getExtraInterfaces (  ) ;^38^^^^^31^49^Class<?>[] interfaces = settings.getExtraInterfaces (  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P2_Replace_Operator]^Class<?>[] ancillaryTypes = interfaces != null ? new Class<?>[0] : interfaces;^39^^^^^31^49^Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P3_Replace_Literal]^Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[1] : interfaces;^39^^^^^31^49^Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P6_Replace_Expression]^Class<?>[] ancillaryTypes = interfaces;^39^^^^^31^49^Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P6_Replace_Expression]^Class<?>[] ancillaryTypes = new Class<?>[0];^39^^^^^31^49^Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P7_Replace_Invocation]^Object spiedInstance = settings .getExtraInterfaces (  )  ;^40^^^^^31^49^Object spiedInstance = settings.getSpiedInstance (  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P14_Delete_Statement]^^40^^^^^31^49^Object spiedInstance = settings.getSpiedInstance (  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^T mock = ClassImposterizer.INSTANCE.imposterise (  classToMock, ancillaryTypes ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter,  ancillaryTypes ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^T mock = ClassImposterizer.INSTANCE.imposterise ( classToMock, filter, ancillaryTypes ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^T mock = ClassImposterizer.INSTANCE.imposterise ( ancillaryTypes, classToMock, filter ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, ancillaryTypes, classToMock ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P8_Replace_Mix]^T mock = ClassImposterizer.INSTANCE.imposterise ( this, classToMock, ancillaryTypes ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P14_Delete_Statement]^^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P2_Replace_Operator]^if  ( spiedInstance == null )  {^44^^^^^31^49^if  ( spiedInstance != null )  {^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P8_Replace_Mix]^if  ( spiedInstance != false )  {^44^^^^^31^49^if  ( spiedInstance != null )  {^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P15_Unwrap_Block]^new org.mockito.internal.util.copy.LenientCopyTool().copyToMock(spiedInstance, mock);^44^45^46^^^31^49^if  ( spiedInstance != null )  { new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ; }^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P16_Remove_Block]^^44^45^46^^^31^49^if  ( spiedInstance != null )  { new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ; }^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P4_Replace_Constructor]^new LenientCopyTool (  ) .copyToMock (  mock ) ;^45^^^^^31^49^new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P4_Replace_Constructor]^new LenientCopyTool (  ) .copyToMock ( spiedInstance ) ;^45^^^^^31^49^new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P5_Replace_Variable]^new LenientCopyTool (  ) .copyToMock ( mock, spiedInstance ) ;^45^^^^^31^49^new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P14_Delete_Statement]^^45^^^^^31^49^new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P13_Insert_Block]^if  ( spiedInstance != null )  {     new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ; }^45^^^^^31^49^[Delete]^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[P7_Replace_Invocation]^MockHandler<T> oldMockHandler =  ( MockHandler<T> )  isMockitoMock ( mock ) ;^52^^^^^51^56^MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P11_Insert_Donor_Statement]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;^52^^^^^51^56^MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P11_Insert_Donor_Statement]^MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;^52^^^^^51^56^MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P14_Delete_Statement]^^52^53^^^^51^56^MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ; MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P11_Insert_Donor_Statement]^return getMockHandler ( mock ) .getMockName (  ) ;MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;^52^^^^^51^56^MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P8_Replace_Mix]^MockHandler<T> newMockHandler = new MockHandler<T> ( this ) ;^53^^^^^51^56^MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P11_Insert_Donor_Statement]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;^53^^^^^51^56^MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P11_Insert_Donor_Statement]^MockHandler<T> oldMockHandler =  ( MockHandler<T> )  getMockHandler ( mock ) ;MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;^53^^^^^51^56^MockHandler<T> newMockHandler = new MockHandler<T> ( oldMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P4_Replace_Constructor]^MethodInterceptorFilter<MockHandler<T>> MethodInterceptorFilter<MockHandler<T>> Filter =  MethodInterceptorFilter<MockHandler<T>> ( new MockHandler<T>> ( classToMock, mockHandler )  ;^54^^^^^51^56^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P5_Replace_Variable]^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class ) ;^54^^^^^51^56^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P5_Replace_Variable]^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object. newMockHandler ) ;^54^^^^^51^56^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P8_Replace_Mix]^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, null ) ;^54^^^^^51^56^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P11_Insert_Donor_Statement]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^54^^^^^51^56^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P3_Replace_Literal]^(  ( Factory )  mock ) .setCallback ( 4, newFilter ) ;^55^^^^^51^56^(  ( Factory )  mock ) .setCallback ( 0, newFilter ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P5_Replace_Variable]^(  ( Factory )  mock ) .setCallback ( 0 ) ;^55^^^^^51^56^(  ( Factory )  mock ) .setCallback ( 0, newFilter ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P14_Delete_Statement]^^55^^^^^51^56^(  ( Factory )  mock ) .setCallback ( 0, newFilter ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[P2_Replace_Operator]^if  ( mock != null )  {^59^^^^^58^68^if  ( mock == null )  {^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P8_Replace_Mix]^if  ( mock == this )  {^59^^^^^58^68^if  ( mock == null )  {^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P15_Unwrap_Block]^throw new org.mockito.exceptions.misusing.NotAMockException("Argument should be a mock, but is null!");^59^60^61^^^58^68^if  ( mock == null )  { throw new NotAMockException  (" ")  ; }^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P16_Remove_Block]^^59^60^61^^^58^68^if  ( mock == null )  { throw new NotAMockException  (" ")  ; }^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P13_Insert_Block]^if  ( isMockitoMock ( mock )  )  {     return getInterceptor ( mock ) .getDelegate (  ) ; }else {     throw new NotAMockException (  ( "Argument should be a mock, but is: " +  ( mock.getClass (  )  )  )  ) ; }^59^^^^^58^68^[Delete]^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P4_Replace_Constructor]^throw throw  new NotAMockException (  ( "Argument should be a mock, but is: " +  ( mock.getClass (  )  )  )  )   ;^60^^^^^58^68^throw new NotAMockException  (" ")  ;^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P13_Insert_Block]^if  ( mock == null )  {     throw new NotAMockException ( "Argument should be a mock, but is null!" ) ; }^60^^^^^58^68^[Delete]^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P8_Replace_Mix]^return true;^60^^^^^58^68^throw new NotAMockException  (" ")  ;^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P8_Replace_Mix]^return ;^60^^^^^58^68^throw new NotAMockException  (" ")  ;^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P7_Replace_Invocation]^if  ( getMockHandler ( mock )  )  {^63^^^^^58^68^if  ( isMockitoMock ( mock )  )  {^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P15_Unwrap_Block]^return getInterceptor(mock).getDelegate();^63^64^65^66^67^58^68^if  ( isMockitoMock ( mock )  )  { return getInterceptor ( mock ) .getDelegate (  ) ; } else { throw new NotAMockException  (" ")  ; }^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P16_Remove_Block]^^63^64^65^66^67^58^68^if  ( isMockitoMock ( mock )  )  { return getInterceptor ( mock ) .getDelegate (  ) ; } else { throw new NotAMockException  (" ")  ; }^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P13_Insert_Block]^if  ( mock == null )  {     throw new NotAMockException ( "Argument should be a mock, but is null!" ) ; }^63^^^^^58^68^[Delete]^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P4_Replace_Constructor]^throw throw  new NotAMockException ( "Argument should be a mock, but is null!" )   ;^66^^^^^58^68^throw new NotAMockException  (" ")  ;^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P13_Insert_Block]^if  ( isMockitoMock ( mock )  )  {     return getInterceptor ( mock ) .getDelegate (  ) ; }else {     throw new NotAMockException (  ( "Argument should be a mock, but is: " +  ( mock.getClass (  )  )  )  ) ; }^66^^^^^58^68^[Delete]^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P13_Insert_Block]^if  ( mock == null )  {     throw new NotAMockException ( "Argument should be a mock, but is null!" ) ; }^66^^^^^58^68^[Delete]^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P14_Delete_Statement]^^66^^^^^58^68^throw new NotAMockException  (" ")  ;^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P7_Replace_Invocation]^return getMockHandler ( mock ) .getDelegate (  ) ;^64^^^^^58^68^return getInterceptor ( mock ) .getDelegate (  ) ;^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P14_Delete_Statement]^^64^^^^^58^68^return getInterceptor ( mock ) .getDelegate (  ) ;^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P2_Replace_Operator]^return Enhancer.isEnhanced ( mock.getClass (  )  )  || getInterceptor ( mock )  != null;^71^^^^^70^72^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  != null;^[CLASS] MockUtil  [METHOD] isMockitoMock [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P2_Replace_Operator]^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  == null;^71^^^^^70^72^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  != null;^[CLASS] MockUtil  [METHOD] isMockitoMock [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P7_Replace_Invocation]^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getMockHandler ( mock )  != null;^71^^^^^70^72^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  != null;^[CLASS] MockUtil  [METHOD] isMockitoMock [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P14_Delete_Statement]^^71^^^^^70^72^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  != null;^[CLASS] MockUtil  [METHOD] isMockitoMock [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[P2_Replace_Operator]^return mock != null || isMockitoMock ( mock ) ;^75^^^^^74^76^return mock != null && isMockitoMock ( mock ) ;^[CLASS] MockUtil  [METHOD] isMock [RETURN_TYPE] boolean   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
[P2_Replace_Operator]^return mock == null && isMockitoMock ( mock ) ;^75^^^^^74^76^return mock != null && isMockitoMock ( mock ) ;^[CLASS] MockUtil  [METHOD] isMock [RETURN_TYPE] boolean   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
[P7_Replace_Invocation]^return mock != null && getMockHandler ( mock ) ;^75^^^^^74^76^return mock != null && isMockitoMock ( mock ) ;^[CLASS] MockUtil  [METHOD] isMock [RETURN_TYPE] boolean   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
[P8_Replace_Mix]^return false ;^75^^^^^74^76^return mock != null && isMockitoMock ( mock ) ;^[CLASS] MockUtil  [METHOD] isMock [RETURN_TYPE] boolean   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
[P14_Delete_Statement]^^75^^^^^74^76^return mock != null && isMockitoMock ( mock ) ;^[CLASS] MockUtil  [METHOD] isMock [RETURN_TYPE] boolean   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
[P3_Replace_Literal]^Callback callback = factory.getCallback ( 4 ) ;^81^^^^^79^86^Callback callback = factory.getCallback ( 0 ) ;^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P7_Replace_Invocation]^Callback callback = factory.setCallback ( 0 ) ;^81^^^^^79^86^Callback callback = factory.getCallback ( 0 ) ;^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P3_Replace_Literal]^Callback callback = factory.getCallback ( -5 ) ;^81^^^^^79^86^Callback callback = factory.getCallback ( 0 ) ;^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P14_Delete_Statement]^^81^^^^^79^86^Callback callback = factory.getCallback ( 0 ) ;^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P2_Replace_Operator]^if  ( callback  >>  MethodInterceptorFilter )  {^82^^^^^79^86^if  ( callback instanceof MethodInterceptorFilter )  {^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P15_Unwrap_Block]^return ((org.mockito.internal.creation.MethodInterceptorFilter<org.mockito.internal.MockHandler<T>>) (callback));^82^83^84^^^79^86^if  ( callback instanceof MethodInterceptorFilter )  { return  ( MethodInterceptorFilter<MockHandler<T>> )  callback; }^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P16_Remove_Block]^^82^83^84^^^79^86^if  ( callback instanceof MethodInterceptorFilter )  { return  ( MethodInterceptorFilter<MockHandler<T>> )  callback; }^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P13_Insert_Block]^if  ( callback instanceof MethodInterceptorFilter )  {     return  (  ( MockHandler<T>> )   ( callback )  ) ; }^83^^^^^79^86^[Delete]^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P8_Replace_Mix]^return this;^85^^^^^79^86^return null;^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[P7_Replace_Invocation]^return isMockitoMock ( mock ) .getMockName (  ) ;^89^^^^^88^90^return getMockHandler ( mock ) .getMockName (  ) ;^[CLASS] MockUtil  [METHOD] getMockName [RETURN_TYPE] MockName   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
[P14_Delete_Statement]^^89^^^^^88^90^return getMockHandler ( mock ) .getMockName (  ) ;^[CLASS] MockUtil  [METHOD] getMockName [RETURN_TYPE] MockName   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
