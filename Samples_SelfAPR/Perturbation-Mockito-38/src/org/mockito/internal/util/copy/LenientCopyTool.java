[P4_Replace_Constructor]^FieldCopier fieldCopier = new AccessibilityChanger (  )  ;^13^^^^^8^18^FieldCopier fieldCopier = new FieldCopier (  ) ;^[CLASS] LenientCopyTool   [VARIABLES] 
[P8_Replace_Mix]^FieldCopier fieldCopier  = null ;^13^^^^^8^18^FieldCopier fieldCopier = new FieldCopier (  ) ;^[CLASS] LenientCopyTool   [VARIABLES] 
[P5_Replace_Variable]^Class clazz = mock.getClass (  ) ;^16^^^^^15^25^Class clazz = from.getClass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P14_Delete_Statement]^^16^17^^^^15^25^Class clazz = from.getClass (  ) ; Class mockSuperClass = mock.getClass (  ) .getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P11_Insert_Donor_Statement]^clazz = clazz.getSuperclass (  ) ;Class clazz = from.getClass (  ) ;^16^^^^^15^25^Class clazz = from.getClass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^Class fromSuperClass = mock.getClass (  ) .getSuperclass (  ) ;^17^^^^^15^25^Class mockSuperClass = mock.getClass (  ) .getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P7_Replace_Invocation]^Class mockSuperClass = mock.getClass (  )  .getDeclaredFields (  )  ;^17^^^^^15^25^Class mockSuperClass = mock.getClass (  ) .getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P14_Delete_Statement]^^17^^^^^15^25^Class mockSuperClass = mock.getClass (  ) .getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P2_Replace_Operator]^while  ( clazz >= Object.class )  {^21^^^^^15^25^while  ( clazz != Object.class )  {^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^while  ( mockSuperClass != Object.class )  {^21^^^^^15^25^while  ( clazz != Object.class )  {^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^while  ( clazz != Object.mockSuperClass )  {^21^^^^^15^25^while  ( clazz != Object.class )  {^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^clazz = mockSuperClass.getSuperclass (  ) ;^23^^^^^15^25^clazz = clazz.getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^copyValues ( from, mock, mockSuperClass ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^copyValues (  mock, clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^copyValues ( from,  clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^copyValues ( from, mock ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^copyValues ( mock, from, clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^copyValues ( from, clazz, mock ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P8_Replace_Mix]^copyValues ( from, from, clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P14_Delete_Statement]^^22^23^^^^15^25^copyValues ( from, mock, clazz ) ; clazz = clazz.getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P11_Insert_Donor_Statement]^fieldCopier.copyValue ( from, mock, field ) ;copyValues ( from, mock, clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P7_Replace_Invocation]^clazz = clazz .getDeclaredFields (  )  ;^23^^^^^15^25^clazz = clazz.getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P14_Delete_Statement]^^23^^^^^15^25^clazz = clazz.getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P11_Insert_Donor_Statement]^Class clazz = from.getClass (  ) ;clazz = clazz.getSuperclass (  ) ;^23^^^^^15^25^clazz = clazz.getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P8_Replace_Mix]^clazz =  null.getSuperclass (  ) ;^23^^^^^15^25^clazz = clazz.getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P5_Replace_Variable]^copyValues ( clazz, mock, from ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[P7_Replace_Invocation]^Field[] fields = classFrom .getSuperclass (  )  ;^28^^^^^27^46^Field[] fields = classFrom.getDeclaredFields (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P14_Delete_Statement]^^28^^^^^27^46^Field[] fields = classFrom.getDeclaredFields (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P15_Unwrap_Block]^continue;^33^34^35^^^27^46^if  ( Modifier.isStatic ( field.getModifiers (  )  )  )  { continue; }^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P16_Remove_Block]^^33^34^35^^^27^46^if  ( Modifier.isStatic ( field.getModifiers (  )  )  )  { continue; }^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < fields.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i > fields.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P3_Replace_Literal]^for  ( int i = ; i < fields.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < fields.length.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < fields.lengths.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^for  ( fields.lengthnt i = 0; i < i; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P8_Replace_Mix]^accessibilityChanger .safelyDisableAccess ( field )  ;^38^^^^^27^46^accessibilityChanger.enableAccess ( field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P14_Delete_Statement]^^38^^^^^27^46^accessibilityChanger.enableAccess ( field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P11_Insert_Donor_Statement]^accessibilityChanger.safelyDisableAccess ( field ) ;accessibilityChanger.enableAccess ( field ) ;^38^^^^^27^46^accessibilityChanger.enableAccess ( field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^fieldCopier.copyValue ( mock, mock, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^fieldCopier.copyValue (  mock, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^fieldCopier.copyValue ( from,  field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^fieldCopier.copyValue ( from, mock ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^fieldCopier.copyValue ( mock, from, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P8_Replace_Mix]^fieldCopier .FieldCopier (  )  ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P14_Delete_Statement]^^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P11_Insert_Donor_Statement]^copyValues ( from, mock, clazz ) ;fieldCopier.copyValue ( from, mock, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P13_Insert_Block]^if  ( isStatic ( field.getModifiers (  )  )  )  {     continue; }^33^^^^^27^46^[Delete]^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P14_Delete_Statement]^^38^39^^^^27^46^accessibilityChanger.enableAccess ( field ) ; fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^fieldCopier.copyValue ( from, field, mock ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P14_Delete_Statement]^^43^^^^^27^46^accessibilityChanger.safelyDisableAccess ( field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P11_Insert_Donor_Statement]^accessibilityChanger.enableAccess ( field ) ;accessibilityChanger.safelyDisableAccess ( field ) ;^43^^^^^27^46^accessibilityChanger.safelyDisableAccess ( field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P5_Replace_Variable]^fieldCopier.copyValue ( field, mock, from ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < fields.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[P3_Replace_Literal]^for  ( int i = -1; i < fields.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
