[P8_Replace_Mix]^public static  ClassImposterizer INSTANCE = new ClassImposterizer (  ) ;^30^^^^^25^35^public static final ClassImposterizer INSTANCE = new ClassImposterizer (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [VARIABLES] 
[P8_Replace_Mix]^private ObjenesisStd objenesis  = null ;^37^^^^^32^42^private ObjenesisStd objenesis = new ObjenesisStd (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [VARIABLES] 
[P8_Replace_Mix]^private static  NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES = new MockitoNamingPolicy (  )  {^39^^^^^39^44^private static final NamingPolicy NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES = new MockitoNamingPolicy (  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug   [VARIABLES] 
[P3_Replace_Literal]^return "ode" + super.getClassName ( prefix, source, key, names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] ObjenesisStd  objenesis  boolean  ClassImposterizer  INSTANCE  Object  key  CallbackFilter  IGNORE_BRIDGE_METHODS  String  prefix  source  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  Predicate  names  
[P5_Replace_Variable]^return "codegen." + super.getClassName (  source, key, names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] ObjenesisStd  objenesis  boolean  ClassImposterizer  INSTANCE  Object  key  CallbackFilter  IGNORE_BRIDGE_METHODS  String  prefix  source  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  Predicate  names  
[P5_Replace_Variable]^return "codegen." + super.getClassName ( prefix,  key, names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] ObjenesisStd  objenesis  boolean  ClassImposterizer  INSTANCE  Object  key  CallbackFilter  IGNORE_BRIDGE_METHODS  String  prefix  source  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  Predicate  names  
[P5_Replace_Variable]^return "codegen." + super.getClassName ( prefix, source,  names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] ObjenesisStd  objenesis  boolean  ClassImposterizer  INSTANCE  Object  key  CallbackFilter  IGNORE_BRIDGE_METHODS  String  prefix  source  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  Predicate  names  
[P5_Replace_Variable]^return "codegen." + super.getClassName ( prefix, source, key ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] ObjenesisStd  objenesis  boolean  ClassImposterizer  INSTANCE  Object  key  CallbackFilter  IGNORE_BRIDGE_METHODS  String  prefix  source  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  Predicate  names  
[P7_Replace_Invocation]^return "codegen." + super .MockitoNamingPolicy (  )  ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] ObjenesisStd  objenesis  boolean  ClassImposterizer  INSTANCE  Object  key  CallbackFilter  IGNORE_BRIDGE_METHODS  String  prefix  source  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  Predicate  names  
[P8_Replace_Mix]^returnsource + super.getClassName ( prefix, source, key, names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] ObjenesisStd  objenesis  boolean  ClassImposterizer  INSTANCE  Object  key  CallbackFilter  IGNORE_BRIDGE_METHODS  String  prefix  source  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  Predicate  names  
[P14_Delete_Statement]^^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] ObjenesisStd  objenesis  boolean  ClassImposterizer  INSTANCE  Object  key  CallbackFilter  IGNORE_BRIDGE_METHODS  String  prefix  source  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  Predicate  names  
[P3_Replace_Literal]^return method.isBridge (  )  ? -6 : 0;^48^^^^^47^49^return method.isBridge (  )  ? 1 : 0;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  Method  method  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P3_Replace_Literal]^return method.isBridge (  )  ? 1 : -7;^48^^^^^47^49^return method.isBridge (  )  ? 1 : 0;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  Method  method  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P8_Replace_Mix]^return method.isBridge (  )  ? 3 : 0;^48^^^^^47^49^return method.isBridge (  )  ? 1 : 0;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  Method  method  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P14_Delete_Statement]^^48^^^^^47^49^return method.isBridge (  )  ? 1 : 0;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  Method  method  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P2_Replace_Operator]^return !type.isPrimitive (  )  || !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P7_Replace_Invocation]^return !type.cast (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P7_Replace_Invocation]^return !type.isPrimitive (  )  && !Modifier.isPrivate ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P7_Replace_Invocation]^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.cast (  )  )  && !type.isAnonymousClass (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P7_Replace_Invocation]^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.cast (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P7_Replace_Invocation]^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type .isInterface (  )  ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P8_Replace_Mix]^return type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.cast (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P7_Replace_Invocation]^return !type .isInterface (  )   && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P14_Delete_Statement]^^53^54^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ; }^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P8_Replace_Mix]^return !type.isPrimitive (  )  && !Modifier.isFinal ( 0 .getSigners (  )   )  && !type.isAnonymousClass (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P7_Replace_Invocation]^return !type.isPrimitive (  )  && !Modifier.isFinal ( type .getSigners (  )   )  && !type.isAnonymousClass (  ) ;^53^^^^^52^54^return !type.isPrimitive (  )  && !Modifier.isFinal ( type.getModifiers (  )  )  && !type.isAnonymousClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] canImposterise [RETURN_TYPE] boolean   Class<?> type [VARIABLES] Class  type  ObjenesisStd  objenesis  CallbackFilter  IGNORE_BRIDGE_METHODS  boolean  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  ClassImposterizer  INSTANCE  
[P5_Replace_Variable]^return mockedType.cast ( createProxy (  interceptor )  ) ;^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^return mockedType.cast ( createProxy ( proxyClass )  ) ;^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^return proxyClass.cast ( createProxy ( mockedType, interceptor )  ) ;^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^return interceptor.cast ( createProxy ( proxyClass, mockedType )  ) ;^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^return mockedType.cast ( createProxyClass ( proxyClass, interceptor )  ) ;^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^return mockedType .isAnonymousClass (  )  ;^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^Class<?> proxyClass = createProxyClass (  ancillaryTypes ) ;^59^^^^^56^64^Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^Class<?> proxyClass = createProxyClass ( mockedType ) ;^59^^^^^56^64^Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^Class<?> proxyClass = createProxyClass ( ancillaryTypes, mockedType ) ;^59^^^^^56^64^Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^Class<?> proxyClass = prepend ( mockedType, ancillaryTypes ) ;^59^^^^^56^64^Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^Class<?> proxyClass = createProxyClass ( mockedType, null ) ;^59^^^^^56^64^Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^setConstructorsAccessible ( mockedType, false ) ;^58^^^^^56^64^setConstructorsAccessible ( mockedType, true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^prepend ( mockedType, true ) ;^58^^^^^56^64^setConstructorsAccessible ( mockedType, true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^58^59^^^^56^64^setConstructorsAccessible ( mockedType, true ) ; Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^setConstructorsAccessible ( mockedType, false ) ;setConstructorsAccessible ( mockedType, true ) ;^58^^^^^56^64^setConstructorsAccessible ( mockedType, true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^constructor.setAccessible ( accessible ) ;setConstructorsAccessible ( mockedType, true ) ;^58^^^^^56^64^setConstructorsAccessible ( mockedType, true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^Class<?> proxyClass = prepend ( mockedType, null ) ;^59^^^^^56^64^Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^59^60^^^^56^64^Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ; return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^return mockedType.cast ( createProxy ( interceptor, proxyClass )  ) ;^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^return mockedType.cast ( createProxy ( 4, interceptor )  ) ;^60^^^^^56^64^return mockedType.cast ( createProxy ( proxyClass, interceptor )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^58^^^^^56^64^setConstructorsAccessible ( mockedType, true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^59^^^^^56^64^Class<?> proxyClass = createProxyClass ( mockedType, ancillaryTypes ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^setConstructorsAccessible ( mockedType, true ) ;^62^^^^^56^64^setConstructorsAccessible ( mockedType, false ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^prepend ( mockedType, false ) ;^62^^^^^56^64^setConstructorsAccessible ( mockedType, false ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^62^^^^^56^64^setConstructorsAccessible ( mockedType, false ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^setConstructorsAccessible ( mockedType, true ) ;setConstructorsAccessible ( mockedType, false ) ;^62^^^^^56^64^setConstructorsAccessible ( mockedType, false ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^constructor.setAccessible ( accessible ) ;setConstructorsAccessible ( mockedType, false ) ;^62^^^^^56^64^setConstructorsAccessible ( mockedType, false ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] imposterise [RETURN_TYPE] <T>   MethodInterceptor interceptor Class<T> mockedType  ancillaryTypes [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  Class[]  ancillaryTypes  boolean  ClassImposterizer  INSTANCE  Class  mockedType  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^for  ( Constructor<?> constructor : null.getDeclaredConstructors (  )  )  {^67^^^^^66^70^for  ( Constructor<?> constructor : mockedType.getDeclaredConstructors (  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] setConstructorsAccessible [RETURN_TYPE] void   Class<?> mockedType boolean accessible [VARIABLES] ObjenesisStd  objenesis  boolean  accessible  Constructor  constructor  ClassImposterizer  INSTANCE  Class  mockedType  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^for  ( Constructor<?> constructor : mockedType.cast (  )  )  {^67^^^^^66^70^for  ( Constructor<?> constructor : mockedType.getDeclaredConstructors (  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] setConstructorsAccessible [RETURN_TYPE] void   Class<?> mockedType boolean accessible [VARIABLES] ObjenesisStd  objenesis  boolean  accessible  Constructor  constructor  ClassImposterizer  INSTANCE  Class  mockedType  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^67^68^69^^^66^70^for  ( Constructor<?> constructor : mockedType.getDeclaredConstructors (  )  )  { constructor.setAccessible ( accessible ) ; }^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] setConstructorsAccessible [RETURN_TYPE] void   Class<?> mockedType boolean accessible [VARIABLES] ObjenesisStd  objenesis  boolean  accessible  Constructor  constructor  ClassImposterizer  INSTANCE  Class  mockedType  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^68^^^^^66^70^constructor.setAccessible ( accessible ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] setConstructorsAccessible [RETURN_TYPE] void   Class<?> mockedType boolean accessible [VARIABLES] ObjenesisStd  objenesis  boolean  accessible  Constructor  constructor  ClassImposterizer  INSTANCE  Class  mockedType  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^setConstructorsAccessible ( mockedType, false ) ;constructor.setAccessible ( accessible ) ;^68^^^^^66^70^constructor.setAccessible ( accessible ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] setConstructorsAccessible [RETURN_TYPE] void   Class<?> mockedType boolean accessible [VARIABLES] ObjenesisStd  objenesis  boolean  accessible  Constructor  constructor  ClassImposterizer  INSTANCE  Class  mockedType  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^setConstructorsAccessible ( mockedType, true ) ;constructor.setAccessible ( accessible ) ;^68^^^^^66^70^constructor.setAccessible ( accessible ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] setConstructorsAccessible [RETURN_TYPE] void   Class<?> mockedType boolean accessible [VARIABLES] ObjenesisStd  objenesis  boolean  accessible  Constructor  constructor  ClassImposterizer  INSTANCE  Class  mockedType  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^if  ( mockedType != Object.class )  {^73^^^^^58^88^if  ( mockedType == Object.class )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^if  ( mockedType == Object.sc )  {^73^^^^^58^88^if  ( mockedType == Object.class )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P15_Unwrap_Block]^mockedType = org.mockito.internal.creation.jmock.ClassImposterizer.ClassWithSuperclassToWorkAroundCglibBug.class;^73^74^75^^^58^88^if  ( mockedType == Object.class )  { mockedType = ClassWithSuperclassToWorkAroundCglibBug.class; }^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P16_Remove_Block]^^73^74^75^^^58^88^if  ( mockedType == Object.class )  { mockedType = ClassWithSuperclassToWorkAroundCglibBug.class; }^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^mockedType  =  mockedType ;^74^^^^^59^89^mockedType = ClassWithSuperclassToWorkAroundCglibBug.class;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P13_Insert_Block]^if  ( mockedType ==  ( class )  )  {     mockedType = class; }^74^^^^^59^89^[Delete]^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^mockedType ;^74^^^^^59^89^mockedType = ClassWithSuperclassToWorkAroundCglibBug.class;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^84^85^^^^69^99^enhancer.setClassLoader ( SearchingClassLoader.combineLoadersOf ( mockedType )  ) ; enhancer.setUseFactory ( true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^84^^^^^69^99^enhancer.setClassLoader ( SearchingClassLoader.combineLoadersOf ( mockedType )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^enhancer.setUseFactory ( false ) ;^85^^^^^70^100^enhancer.setUseFactory ( true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^85^^^^^70^100^enhancer.setUseFactory ( true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setInterfaces ( interfaces ) ;enhancer.setUseFactory ( true ) ;^85^^^^^70^100^enhancer.setUseFactory ( true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setSuperclass ( Object.class ) ;enhancer.setUseFactory ( true ) ;^85^^^^^70^100^enhancer.setUseFactory ( true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setSuperclass ( mockedType ) ;enhancer.setUseFactory ( true ) ;^85^^^^^70^100^enhancer.setUseFactory ( true ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^if  ( 3.isInterface (  )  )  {^86^^^^^71^101^if  ( mockedType.isInterface (  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^if  ( mockedType.cast (  )  )  {^86^^^^^71^101^if  ( mockedType.isInterface (  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P9_Replace_Statement]^if  ( mockedType.getSigners (  )  != null )  {^86^^^^^71^101^if  ( mockedType.isInterface (  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^90^^^^^86^92^enhancer.setSuperclass ( mockedType ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setInterfaces ( interfaces ) ;enhancer.setSuperclass ( mockedType ) ;^90^^^^^86^92^enhancer.setSuperclass ( mockedType ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setSuperclass ( Object.class ) ;enhancer.setSuperclass ( mockedType ) ;^90^^^^^86^92^enhancer.setSuperclass ( mockedType ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setUseFactory ( true ) ;enhancer.setSuperclass ( mockedType ) ;^90^^^^^86^92^enhancer.setSuperclass ( mockedType ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^91^^^^^86^92^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;enhancer.setInterfaces ( interfaces ) ;^91^^^^^86^92^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setSuperclass ( Object.class ) ;enhancer.setInterfaces ( interfaces ) ;^91^^^^^86^92^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setUseFactory ( true ) ;enhancer.setInterfaces ( interfaces ) ;^91^^^^^86^92^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setSuperclass ( mockedType ) ;enhancer.setInterfaces ( interfaces ) ;^91^^^^^86^92^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^enhancer.setSupersc ( Object.class ) ;^87^^^^^72^102^enhancer.setSuperclass ( Object.class ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer.setInterfaces ( Object.class ) ;^87^^^^^72^102^enhancer.setSuperclass ( Object.class ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer .setInterfaces ( null )  ;^87^^^^^72^102^enhancer.setSuperclass ( Object.class ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^87^88^^^^72^102^enhancer.setSuperclass ( Object.class ) ; enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^enhancer.setInterfaces ( prepend (  interfaces )  ) ;^88^^^^^73^103^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^enhancer.setInterfaces ( prepend ( mockedType )  ) ;^88^^^^^73^103^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^enhancer.setInterfaces ( prepend ( interfaces, mockedType )  ) ;^88^^^^^73^103^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer.setInterfaces ( createProxyClass ( mockedType, interfaces )  ) ;^88^^^^^73^103^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^88^^^^^73^103^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setInterfaces ( interfaces ) ;enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^88^^^^^73^103^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^if  ( mockedType .isPrimitive (  )   )  {^86^^^^^71^101^if  ( mockedType.isInterface (  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^87^^^^^72^102^enhancer.setSuperclass ( Object.class ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^enhancer.setInterfaces ( prepend ( this, interfaces )  ) ;^88^^^^^73^103^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^90^^^^^75^105^enhancer.setSuperclass ( mockedType ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setInterfaces ( interfaces ) ;enhancer.setSuperclass ( mockedType ) ;^90^^^^^75^105^enhancer.setSuperclass ( mockedType ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setSuperclass ( Object.class ) ;enhancer.setSuperclass ( mockedType ) ;^90^^^^^75^105^enhancer.setSuperclass ( mockedType ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setUseFactory ( true ) ;enhancer.setSuperclass ( mockedType ) ;^90^^^^^75^105^enhancer.setSuperclass ( mockedType ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^91^^^^^76^106^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setInterfaces ( prepend ( mockedType, interfaces )  ) ;enhancer.setInterfaces ( interfaces ) ;^91^^^^^76^106^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setSuperclass ( Object.class ) ;enhancer.setInterfaces ( interfaces ) ;^91^^^^^76^106^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setUseFactory ( true ) ;enhancer.setInterfaces ( interfaces ) ;^91^^^^^76^106^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setSuperclass ( mockedType ) ;enhancer.setInterfaces ( interfaces ) ;^91^^^^^76^106^enhancer.setInterfaces ( interfaces ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^enhancer.setCallbackTypes ( new Class[]{MethodInterceptor. NoOp.class} ) ;^93^^^^^78^108^enhancer.setCallbackTypes ( new Class[]{MethodInterceptor.class, NoOp.class} ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer.setInterfaces ( new Class[]{MethodInterceptor.class, NoOp.class} ) ;^93^^^^^78^108^enhancer.setCallbackTypes ( new Class[]{MethodInterceptor.class, NoOp.class} ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^enhancer .setCallbackFilter ( IGNORE_BRIDGE_METHODS )  ;^93^^^^^78^108^enhancer.setCallbackTypes ( new Class[]{MethodInterceptor.class, NoOp.class} ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^93^94^^^^78^108^enhancer.setCallbackTypes ( new Class[]{MethodInterceptor.class, NoOp.class} ) ; enhancer.setCallbackFilter ( IGNORE_BRIDGE_METHODS ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^proxy.setCallbacks ( new Callback[] {interceptor, NoOp.INSTANCE} ) ;enhancer.setCallbackTypes ( new Class[]{MethodInterceptor.class, NoOp.class} ) ;^93^^^^^78^108^enhancer.setCallbackTypes ( new Class[]{MethodInterceptor.class, NoOp.class} ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer.setNamingPolicy ( IGNORE_BRIDGE_METHODS ) ;^94^^^^^79^109^enhancer.setCallbackFilter ( IGNORE_BRIDGE_METHODS ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^94^^^^^79^109^enhancer.setCallbackFilter ( IGNORE_BRIDGE_METHODS ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^if  ( mockedType.getSigners (  )  == null )  {^95^^^^^80^110^if  ( mockedType.getSigners (  )  != null )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^if  ( mockedType.cast (  )  != null )  {^95^^^^^80^110^if  ( mockedType.getSigners (  )  != null )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^if  ( mockedType.getSigners (  )  != false )  {^95^^^^^80^110^if  ( mockedType.getSigners (  )  != null )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P9_Replace_Statement]^if  ( mockedType.isInterface (  )  )  {^95^^^^^80^110^if  ( mockedType.getSigners (  )  != null )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P15_Unwrap_Block]^enhancer.setNamingPolicy(org.mockito.internal.creation.jmock.ClassImposterizer.NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES);^95^96^97^98^99^80^110^if  ( mockedType.getSigners (  )  != null )  { enhancer.setNamingPolicy ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ; } else { enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ; }^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P16_Remove_Block]^^95^96^97^98^99^80^110^if  ( mockedType.getSigners (  )  != null )  { enhancer.setNamingPolicy ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ; } else { enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ; }^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer.setUseFactory ( MockitoNamingPolicy.INSTANCE ) ;^98^^^^^95^99^enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer .setUseFactory ( 1 )  ;^98^^^^^95^99^enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^98^^^^^95^99^enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer.setCallbackFilter ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ;^96^^^^^81^111^enhancer.setNamingPolicy ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^96^^^^^81^111^enhancer.setNamingPolicy ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P13_Insert_Block]^if  (  ( mockedType.getSigners (  )  )  != null )  {     enhancer.setNamingPolicy ( NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES ) ; }else {     enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ; }^96^^^^^81^111^[Delete]^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^if  ( mockedType .getModifiers (  )   != null )  {^95^^^^^80^110^if  ( mockedType.getSigners (  )  != null )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^enhancer.setUseFactory ( MockitoNamingPolicy.INSTANCE ) ;^98^^^^^83^113^enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^98^^^^^83^113^enhancer.setNamingPolicy ( MockitoNamingPolicy.INSTANCE ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P6_Replace_Expression]^if  (  ( "\n" + "Mockito cannot mock this class: " )  + mockedType + ".\n" )  {^104^^^^^89^119^if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P6_Replace_Expression]^if  ( "\n" + "Mockito cannot mock this class: " + mockedType )  {^104^^^^^89^119^if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P6_Replace_Expression]^if  ( "\n" + "Mockito cannot mock this class: " )  {^104^^^^^89^119^if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^if  ( Modifier.isFinal ( mockedType.getModifiers (  )  )  )  {^104^^^^^89^119^if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^if  ( Modifier.isPrivate ( mockedType.cast (  )  )  )  {^104^^^^^89^119^if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  {^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P15_Unwrap_Block]^throw new org.mockito.exceptions.base.MockitoException((((("\n" + "Mockito cannot mock this class: ") + mockedType) + ".\n") + "Most likely it is a private class that is not visible by Mockito"));^104^105^106^107^108^89^119^if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  { throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ; }^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P16_Remove_Block]^^104^105^106^107^108^89^119^if  ( Modifier.isPrivate ( mockedType.getModifiers (  )  )  )  { throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ; }^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  <<  "Mockito cannot mock this class: "  <<  mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  ||  "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "ckito cannot mock thockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n\" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + " likeost likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P4_Replace_Constructor]^throw throw  new MockitoException (  (  (  (  ( "\n" + "Mockito cannot mock this class: " )  + mockedType )  + ".\n" )  + "Mockito can only mock visible & non-final classes" )  )  ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P13_Insert_Block]^if  ( isPrivate ( mockedType.getModifiers (  )  )  )  {     throw new MockitoException (  (  (  (  ( "\n" + "Mockito cannot mock this class: " )  + mockedType )  + ".\n" )  + "Most likely it is a private class that is not visible by Mockito" )  ) ; }^105^^^^^90^120^[Delete]^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  >=  "Mockito cannot mock this class: "  >=  mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  >  "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n\" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "tockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + "." + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockitohat is no" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^return false;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P7_Replace_Invocation]^return enhancer.setUseFactory (  ) ;^102^^^^^87^117^return enhancer.createClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^102^^^^^87^117^return enhancer.createClass (  ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  <  "Mockito cannot mock this class: "  <  mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  &  "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + " mock this cl" + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + "\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likost likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  ||  "Mockito cannot mock this class: "  ||  mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  >  "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n\" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: o " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n.\" + "Mockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classescan only mock visible" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P4_Replace_Constructor]^throw throw  new MockitoException (  (  (  (  ( "\n" + "Mockito cannot mock this class: " )  + mockedType )  + ".\n" )  + "Most likely it is a private class that is not visible by Mockito" )  )  ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  &  "Mockito cannot mock this class: "  &  mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  ==  "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "t mock this claockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockitoikely it is a private class that is not vis" ) ;^105^106^107^108^^90^120^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Most likely it is a private class that is not visible by Mockito" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  |  "Mockito cannot mock this class: "  |  mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P2_Replace_Operator]^throw new MockitoException ( "\n"  >=  "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "ockito cannot mock thisockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "iblockito can only mock visible & non-final classes" ) ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType ;^110^111^112^113^^95^125^throw new MockitoException ( "\n" + "Mockito cannot mock this class: " + mockedType + ".\n" + "Mockito can only mock visible & non-final classes" ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxyClass [RETURN_TYPE] <T>   Class<?> mockedType  interfaces [VARIABLES] ObjenesisStd  objenesis  Class[]  interfaces  boolean  Enhancer  enhancer  CodeGenerationException  e  ClassImposterizer  INSTANCE  Class  mockedType  sc  List  constructors  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^Factory proxy =  ( Factory )  proxyClass.newInstance ( objenesis ) ;^118^^^^^117^121^Factory proxy =  ( Factory )  objenesis.newInstance ( proxyClass ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxy [RETURN_TYPE] Object   Class<?> proxyClass MethodInterceptor interceptor [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  boolean  ClassImposterizer  INSTANCE  Factory  proxy  Class  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^Factory proxy =  ( Factory )  objenesis .ObjenesisStd (  )  ;^118^^^^^117^121^Factory proxy =  ( Factory )  objenesis.newInstance ( proxyClass ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxy [RETURN_TYPE] Object   Class<?> proxyClass MethodInterceptor interceptor [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  boolean  ClassImposterizer  INSTANCE  Factory  proxy  Class  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^118^119^^^^117^121^Factory proxy =  ( Factory )  objenesis.newInstance ( proxyClass ) ; proxy.setCallbacks ( new Callback[] {interceptor, NoOp.INSTANCE} ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxy [RETURN_TYPE] Object   Class<?> proxyClass MethodInterceptor interceptor [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  boolean  ClassImposterizer  INSTANCE  Factory  proxy  Class  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^proxy.setCallbacks ( new Callback[] { NoOp.INSTANCE} ) ;^119^^^^^117^121^proxy.setCallbacks ( new Callback[] {interceptor, NoOp.INSTANCE} ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxy [RETURN_TYPE] Object   Class<?> proxyClass MethodInterceptor interceptor [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  boolean  ClassImposterizer  INSTANCE  Factory  proxy  Class  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^119^120^^^^117^121^proxy.setCallbacks ( new Callback[] {interceptor, NoOp.INSTANCE} ) ; return proxy;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxy [RETURN_TYPE] Object   Class<?> proxyClass MethodInterceptor interceptor [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  boolean  ClassImposterizer  INSTANCE  Factory  proxy  Class  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P11_Insert_Donor_Statement]^enhancer.setCallbackTypes ( new Class[]{MethodInterceptor.class, NoOp.class} ) ;proxy.setCallbacks ( new Callback[] {interceptor, NoOp.INSTANCE} ) ;^119^^^^^117^121^proxy.setCallbacks ( new Callback[] {interceptor, NoOp.INSTANCE} ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] createProxy [RETURN_TYPE] Object   Class<?> proxyClass MethodInterceptor interceptor [VARIABLES] ObjenesisStd  objenesis  MethodInterceptor  interceptor  boolean  ClassImposterizer  INSTANCE  Factory  proxy  Class  proxyClass  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^Class<?>[] all = new Class<?>[rest.length+-8];^124^^^^^123^128^Class<?>[] all = new Class<?>[rest.length+1];^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^all[8] = first;^125^^^^^123^128^all[0] = first;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^all[3] = first;^125^^^^^123^128^all[0] = first;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^System.arraycopy ( rest, , all, 1, rest.length ) ;^126^^^^^123^128^System.arraycopy ( rest, 0, all, 1, rest.length ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^System.arraycopy (  0, all, 1, rest.length ) ;^126^^^^^123^128^System.arraycopy ( rest, 0, all, 1, rest.length ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^System.arraycopy ( rest, 0,  1, rest.length ) ;^126^^^^^123^128^System.arraycopy ( rest, 0, all, 1, rest.length ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^System.arraycopy ( rest, 0, all, 1 ) ;^126^^^^^123^128^System.arraycopy ( rest, 0, all, 1, rest.length ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^System.arraycopy ( all, 0, rest, 1, rest.length ) ;^126^^^^^123^128^System.arraycopy ( rest, 0, all, 1, rest.length ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^System.arraycopy ( rest, 0, rest.length, 1, all ) ;^126^^^^^123^128^System.arraycopy ( rest, 0, all, 1, rest.length ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P5_Replace_Variable]^System.arraycopy ( rest.length, 0, all, 1, rest ) ;^126^^^^^123^128^System.arraycopy ( rest, 0, all, 1, rest.length ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P14_Delete_Statement]^^126^^^^^123^128^System.arraycopy ( rest, 0, all, 1, rest.length ) ;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P8_Replace_Mix]^return this;^127^^^^^123^128^return all;^[CLASS] ClassImposterizer 1 2 3 ClassWithSuperclassToWorkAroundCglibBug  [METHOD] prepend [RETURN_TYPE] Class[]   Class<?> first  rest [VARIABLES] ObjenesisStd  objenesis  Class[]  all  rest  boolean  ClassImposterizer  INSTANCE  Class  first  CallbackFilter  IGNORE_BRIDGE_METHODS  NamingPolicy  NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES  
[P3_Replace_Literal]^return "od" + super.getClassName ( prefix, source, key, names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] 1  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] boolean  Object  key  String  prefix  source  Predicate  names  
[P5_Replace_Variable]^return "codegen." + super.getClassName (  source, key, names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] 1  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] boolean  Object  key  String  prefix  source  Predicate  names  
[P5_Replace_Variable]^return "codegen." + super.getClassName ( prefix,  key, names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] 1  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] boolean  Object  key  String  prefix  source  Predicate  names  
[P5_Replace_Variable]^return "codegen." + super.getClassName ( prefix, source,  names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] 1  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] boolean  Object  key  String  prefix  source  Predicate  names  
[P5_Replace_Variable]^return "codegen." + super.getClassName ( prefix, source, key ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] 1  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] boolean  Object  key  String  prefix  source  Predicate  names  
[P7_Replace_Invocation]^return "codegen." + super .getClassName ( source , source , key , names )  ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] 1  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] boolean  Object  key  String  prefix  source  Predicate  names  
[P8_Replace_Mix]^returnsource + super.getClassName ( prefix, source, key, names ) ;^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] 1  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] boolean  Object  key  String  prefix  source  Predicate  names  
[P14_Delete_Statement]^^42^^^^^41^43^return "codegen." + super.getClassName ( prefix, source, key, names ) ;^[CLASS] 1  [METHOD] getClassName [RETURN_TYPE] String   String prefix String source Object key Predicate names [VARIABLES] boolean  Object  key  String  prefix  source  Predicate  names  
[P3_Replace_Literal]^return method.isBridge (  )  ? -3 : 0;^48^^^^^47^49^return method.isBridge (  )  ? 1 : 0;^[CLASS] 2  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] boolean  Method  method  
[P3_Replace_Literal]^return method.isBridge (  )  ? 1 : -7;^48^^^^^47^49^return method.isBridge (  )  ? 1 : 0;^[CLASS] 2  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] boolean  Method  method  
[P8_Replace_Mix]^return method.isBridge (  )  ? 4 : 0;^48^^^^^47^49^return method.isBridge (  )  ? 1 : 0;^[CLASS] 2  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] boolean  Method  method  
[P14_Delete_Statement]^^48^^^^^47^49^return method.isBridge (  )  ? 1 : 0;^[CLASS] 2  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] boolean  Method  method  
