[P8_Replace_Mix]^this.fv =  null;^46^^^^^45^47^this.fv = fv;^[CLASS] CheckFieldAdapter  [METHOD] <init> [RETURN_TYPE] FieldVisitor)   FieldVisitor fv [VARIABLES] FieldVisitor  fv  boolean  end  
[P14_Delete_Statement]^^53^54^^^^49^56^checkEnd (  ) ; CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P11_Insert_Donor_Statement]^fv.visitEnd (  ) ;checkEnd (  ) ;^53^^^^^49^56^checkEnd (  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P3_Replace_Literal]^CheckMethodAdapter.checkDesc ( desc, true ) ;^54^^^^^49^56^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P14_Delete_Statement]^^54^^^^^49^56^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P4_Replace_Constructor]^return new CheckAnnotationAdapter ( fv.visitAnnotation (  visible )  ) ;^55^^^^^49^56^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P4_Replace_Constructor]^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc )  ) ;^55^^^^^49^56^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc, end )  ) ;^55^^^^^49^56^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( desc.visitAnnotation ( fv, visible )  ) ;^55^^^^^49^56^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( visible.visitAnnotation ( desc, fv )  ) ;^55^^^^^49^56^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( fv.visitAnnotation ( visible, desc )  ) ;^55^^^^^49^56^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P14_Delete_Statement]^^55^^^^^49^56^return new CheckAnnotationAdapter ( fv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] FieldVisitor  fv  boolean  end  visible  String  desc  
[P14_Delete_Statement]^^59^^^^^58^64^checkEnd (  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P11_Insert_Donor_Statement]^fv.visitEnd (  ) ;checkEnd (  ) ;^59^^^^^58^64^checkEnd (  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P2_Replace_Operator]^if  ( attr != null )  {^60^^^^^58^64^if  ( attr == null )  {^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P8_Replace_Mix]^if  ( attr == false )  {^60^^^^^58^64^if  ( attr == null )  {^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Invalid attribute (must not be null)");^60^61^62^^^58^64^if  ( attr == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P16_Remove_Block]^^60^61^62^^^58^64^if  ( attr == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot call a visit method after visitEnd has been called" ) ; }^60^^^^^58^64^[Delete]^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^61^^^^^58^64^[Delete]^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^61^^^^^58^64^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P14_Delete_Statement]^^63^^^^^58^64^fv.visitAttribute ( attr ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P11_Insert_Donor_Statement]^fv.visitEnd (  ) ;fv.visitAttribute ( attr ) ;^63^^^^^58^64^fv.visitAttribute ( attr ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] FieldVisitor  fv  Attribute  attr  boolean  end  visible  
[P14_Delete_Statement]^^67^^^^^66^70^checkEnd (  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P11_Insert_Donor_Statement]^fv.visitEnd (  ) ;checkEnd (  ) ;^67^^^^^66^70^checkEnd (  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P3_Replace_Literal]^end = false;^68^^^^^66^70^end = true;^[CLASS] CheckFieldAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P14_Delete_Statement]^^69^^^^^66^70^fv.visitEnd (  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P11_Insert_Donor_Statement]^checkEnd (  ) ;fv.visitEnd (  ) ;^69^^^^^66^70^fv.visitEnd (  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P11_Insert_Donor_Statement]^fv.visitAttribute ( attr ) ;fv.visitEnd (  ) ;^69^^^^^66^70^fv.visitEnd (  ) ;^[CLASS] CheckFieldAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P5_Replace_Variable]^if  ( visible )  {^73^^^^^72^76^if  ( end )  {^[CLASS] CheckFieldAdapter  [METHOD] checkEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Cannot call a visit method after visitEnd has been called");^73^74^75^^^72^76^if  ( end )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckFieldAdapter  [METHOD] checkEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P16_Remove_Block]^^73^74^75^^^72^76^if  ( end )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckFieldAdapter  [METHOD] checkEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^73^^^^^72^76^[Delete]^[CLASS] CheckFieldAdapter  [METHOD] checkEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot call a visit method after visitEnd has been called" ) ; }^74^^^^^72^76^[Delete]^[CLASS] CheckFieldAdapter  [METHOD] checkEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^74^^^^^72^76^throw new IllegalStateException  (" ")  ;^[CLASS] CheckFieldAdapter  [METHOD] checkEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^74^^^^^72^76^throw new IllegalStateException  (" ")  ;^[CLASS] CheckFieldAdapter  [METHOD] checkEnd [RETURN_TYPE] void   [VARIABLES] FieldVisitor  fv  boolean  end  visible  
