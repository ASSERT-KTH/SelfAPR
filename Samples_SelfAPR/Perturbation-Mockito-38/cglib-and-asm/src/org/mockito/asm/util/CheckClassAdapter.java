[P14_Delete_Statement]^^254^^^^^253^255^super ( cv ) ;^[CLASS] CheckClassAdapter  [METHOD] <init> [RETURN_TYPE] ClassVisitor)   ClassVisitor cv [VARIABLES] boolean  end  outer  source  start  ClassVisitor  cv  
[P11_Insert_Donor_Statement]^s.append ( ' ' ) ;super ( cv ) ;^254^^^^^253^255^super ( cv ) ;^[CLASS] CheckClassAdapter  [METHOD] <init> [RETURN_TYPE] ClassVisitor)   ClassVisitor cv [VARIABLES] boolean  end  outer  source  start  ClassVisitor  cv  
[P11_Insert_Donor_Statement]^s.append ( '?' ) ;super ( cv ) ;^254^^^^^253^255^super ( cv ) ;^[CLASS] CheckClassAdapter  [METHOD] <init> [RETURN_TYPE] ClassVisitor)   ClassVisitor cv [VARIABLES] boolean  end  outer  source  start  ClassVisitor  cv  
[P2_Replace_Operator]^if  ( args.length == 1 )  {^151^^^^^150^165^if  ( args.length != 1 )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^if  ( args.length != -4 )  {^151^^^^^150^165^if  ( args.length != 1 )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P6_Replace_Expression]^if  ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" )  {^151^^^^^150^165^if  ( args.length != 1 )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P8_Replace_Mix]^if  ( args.length != 0  )  {^151^^^^^150^165^if  ( args.length != 1 )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P15_Unwrap_Block]^java.lang.System.err.println("Verifies the given class."); java.lang.System.err.println(("Usage: CheckClassAdapter " + "<fully qualified class name or class file name>")); return ;^151^152^153^154^155^150^165^if  ( args.length != 1 )  { System.err.println ( "Verifies the given class." ) ; System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ; return; }^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P16_Remove_Block]^^151^152^153^154^155^150^165^if  ( args.length != 1 )  { System.err.println ( "Verifies the given class." ) ; System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ; return; }^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^System.err.println ( "Verifies the given class.i" ) ;^152^^^^^150^165^System.err.println ( "Verifies the given class." ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P14_Delete_Statement]^^152^153^154^155^156^150^165^System.err.println ( "Verifies the given class." ) ; System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ; return; }^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P2_Replace_Operator]^System.err.println ( "Usage: CheckClassAdapter "  !=  "<fully qualified class name or class file name>" ) ;^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^System.err.println ( " Csage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>alified " ) ;^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P14_Delete_Statement]^^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P13_Insert_Block]^if  (  ( args.length )  != 1 )  {     println ( "Verifies the given class." ) ;     println (  ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" )  ) ;     return ; }^153^^^^^150^165^[Delete]^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P2_Replace_Operator]^System.err.println ( "Usage: CheckClassAdapter "  >>  "<fully qualified class name or class file name>" ) ;^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^System.err.println ( "Usage: CheckClassAdapter kClas" + "<fully qualified class name or class file name>" ) ;^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^System.err.println ( "Usage: CheckClassAdapter " + "lass name" ) ;^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^if  ( args[-6].endsWith ( ".class" )  )  {^158^^^^^150^165^if  ( args[0].endsWith ( ".class" )  )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^if  ( args[0].endsWith ( ".class." )  )  {^158^^^^^150^165^if  ( args[0].endsWith ( ".class" )  )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^if  ( args[-3].endsWith ( ".class" )  )  {^158^^^^^150^165^if  ( args[0].endsWith ( ".class" )  )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^if  ( args[6].endsWith ( ".class" )  )  {^158^^^^^150^165^if  ( args[0].endsWith ( ".class" )  )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P8_Replace_Mix]^if  ( args[0 / 0] .length (  )   )  {^158^^^^^150^165^if  ( args[0].endsWith ( ".class" )  )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P15_Unwrap_Block]^cr = new org.mockito.asm.ClassReader(new java.io.FileInputStream(args[0]));^158^159^160^161^162^150^165^if  ( args[0].endsWith ( ".class" )  )  { cr = new ClassReader ( new FileInputStream ( args[0] )  ) ; } else { cr = new ClassReader ( args[0] ) ; }^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P16_Remove_Block]^^158^159^160^161^162^150^165^if  ( args[0].endsWith ( ".class" )  )  { cr = new ClassReader ( new FileInputStream ( args[0] )  ) ; } else { cr = new ClassReader ( args[0] ) ; }^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^cr = new ClassReader ( args[-1] ) ;^161^^^^^150^165^cr = new ClassReader ( args[0] ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P8_Replace_Mix]^cr = new ClassReader ( args[4] ) ;^161^^^^^150^165^cr = new ClassReader ( args[0] ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P11_Insert_Donor_Statement]^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;cr = new ClassReader ( args[0] ) ;^161^^^^^150^165^cr = new ClassReader ( args[0] ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^cr = new ClassReader ( args[-5] ) ;^161^^^^^150^165^cr = new ClassReader ( args[0] ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^cr = new ClassReader ( new FileInputStream ( args[9] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P8_Replace_Mix]^cr = new ClassReader ( new FileInputStream ( args[0 >>> 0] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P11_Insert_Donor_Statement]^cr = new ClassReader ( args[0] ) ;cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^cr = new ClassReader ( new FileInputStream ( args[-1] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^cr = new ClassReader ( new FileInputStream ( args[3] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P8_Replace_Mix]^cr = new ClassReader ( new FileInputStream ( args[4] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^cr = new ClassReader ( args[-3] ) ;^161^^^^^150^165^cr = new ClassReader ( args[0] ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^cr = new ClassReader ( new FileInputStream ( args[null] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^cr = new ClassReader ( args[-8] ) ;^161^^^^^150^165^cr = new ClassReader ( args[0] ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^if  ( args[0].endsWith ( "." )  )  {^158^^^^^150^165^if  ( args[0].endsWith ( ".class" )  )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P7_Replace_Invocation]^if  ( args[0] .length (  )   )  {^158^^^^^150^165^if  ( args[0].endsWith ( ".class" )  )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P3_Replace_Literal]^verify ( cr, true, new PrintWriter ( System.err )  ) ;^164^^^^^150^165^verify ( cr, false, new PrintWriter ( System.err )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P5_Replace_Variable]^verify (  false, new PrintWriter ( System.err )  ) ;^164^^^^^150^165^verify ( cr, false, new PrintWriter ( System.err )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P7_Replace_Invocation]^visitSource ( cr, false, new PrintWriter ( System.err )  ) ;^164^^^^^150^165^verify ( cr, false, new PrintWriter ( System.err )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P14_Delete_Statement]^^164^165^^^^150^165^verify ( cr, false, new PrintWriter ( System.err )  ) ; }^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[P4_Replace_Constructor]^cr.accept ( cr.accept (  new CheckFieldAdapter ( av )  , ClassReader.SKIP_DEBUG ) ;^182^^^^^167^197^cr.accept ( new CheckClassAdapter ( cn ) , ClassReader.SKIP_DEBUG ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^182^^^^^167^197^cr.accept ( new CheckClassAdapter ( cn ) , ClassReader.SKIP_DEBUG ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^Type syperType = cn.superName != null ? null : Type.getObjectType ( cn.superName ) ;^184^185^186^^^169^199^Type syperType = cn.superName == null ? null : Type.getObjectType ( cn.superName ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P6_Replace_Expression]^Type syperType = cn.superName ( Type.getObjectType ( cn.superName ) ;^184^185^186^^^169^199^Type syperType = cn.superName == null ? null : Type.getObjectType ( cn.superName ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^186^^^^^171^201^: Type.getObjectType ( cn.superName ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^LinkedHashSet  methods = cn.methods;^187^^^^^172^202^List methods = cn.methods;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  ( s.length (  )  <= method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  >>  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  ( s.length (  )  < method.maxStack   instanceof   method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length (  )  < method.maxStack + method.maxLocals + j )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length() - 4  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^while  ( s.append (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^while  ( s .StringBuffer (  )   < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^225^^^^^210^240^s.append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( '?' ) ;s.append ( ' ' ) ;^225^^^^^210^240^s.append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^super ( cv ) ;s.append ( ' ' ) ;^225^^^^^210^240^s.append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( " : " ) ;s.append ( ' ' ) ;^225^^^^^210^240^s.append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^if  ( !start )  {^195^^^^^180^210^if  ( !dump )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( outer )  {^195^^^^^180^210^if  ( !dump )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( end )  {^195^^^^^180^210^if  ( !dump )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( start )  {^195^^^^^180^210^if  ( !dump )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( source )  {^195^^^^^180^210^if  ( !dump )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P15_Unwrap_Block]^continue;^195^196^197^^^180^210^if  ( !dump )  { continue; }^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P16_Remove_Block]^^195^196^197^^^180^210^if  ( !dump )  { continue; }^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^if  ( f != null )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P6_Replace_Expression]^if  ( k < f.getLocals() )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P6_Replace_Expression]^if  ( k < f.getStackSize() )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^if  ( f == false )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( attr == null )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( interfaces != null )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( desc != null )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( owner == null )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P9_Replace_Statement]^if  ( value != null )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  long  k = 0; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int k = 0; k <= f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = j; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^for  ( int j = 0; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^for  ( int f = 0; k < k.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f.getLocal (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getLocals (  )   {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^for  ( int j = 0; k < f.getLocal (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^s.append ( getShortName ( f.getLocal ( j ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^s.append ( getShortName ( k.getLocal ( f ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( visitAnnotation ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( getShortName ( f.getLocal ( k )  .toString (  )   )  ) .append ( ' ' ) ;^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( getShortName ( f .getLocals (  )  .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  long  k = 0; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int k = 0; k <= f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = ; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^for  ( int j = 0; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^for  ( int f = 0; k < k.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f.getStack (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( visitAnnotation ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( getShortName ( f.getStack ( k )  .toString (  )   )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^s.append ( visitAnnotation ( f.getStack ( j ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^s.append ( getShortName ( f.getStack ( j ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^s.append ( getShortName ( k.getStack ( f ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( getShortName ( f .getStackSize (  )  .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  short  k = 0; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = i; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 8; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getLocal ( k )  ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^214^215^216^217^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  { s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^s.append ( " :  " ) ;^218^^^^^211^223^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^218^^^^^211^223^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( ' ' ) ;s.append ( " : " ) ;^218^^^^^211^223^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( '?' ) ;s.append ( " : " ) ;^218^^^^^211^223^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getStack ( j )  ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^219^220^221^222^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  { s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^s .append ( 3 )  ;^212^^^^^197^227^s.append ( '?' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^212^^^^^197^227^s.append ( '?' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( ' ' ) ;s.append ( '?' ) ;^212^^^^^197^227^s.append ( '?' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^super ( cv ) ;s.append ( '?' ) ;^212^^^^^197^227^s.append ( '?' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( " : " ) ;s.append ( '?' ) ;^212^^^^^197^227^s.append ( '?' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  short  i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int i = 0; i > methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int i = 0; i == methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int i = 0; i <= methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  !=  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  >  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  <=  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ||  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int i = j; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int i = k; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int i = -8; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int i = 0; i < methods.size() - 5 ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int i = 0; i < methods.get (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  <<  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  ( s.length (  )  < method.maxStack  >>  method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length() - 1  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = -5; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getLocal ( j )  ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^for  ( int j = 0; k < f .getLocals (  )   {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  short  k = 0; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 4; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getStackSize (  )   {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = ; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = -9; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s .append ( 1 )   )  )^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  short  j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int j = 0; j <= method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  >=  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  <<  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  !=  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  >  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  |  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  &  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = k; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.instructions.size() - 2 ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int j = 0; j < method.instructions.get (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  ( s.length (  )  == method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  |  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  ( s.length (  )  < method.maxStack  <  method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length (  )  < method.maxStack + method.maxLocals  )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length() - 5  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^if  ( f == this )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int k = 0; k > f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = i; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getStack ( k )  ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  short  k = 0; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int k = 0; k <= f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 8; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^for  ( int j = 0; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f.getLocal (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^s.append ( getShortName ( f.getLocal ( j ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^s.append ( getShortName ( k.getLocal ( f ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( visitAnnotation ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( getShortName ( f .getLocals (  )  .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( getShortName ( f.getLocal ( k )  .toString (  )   )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^s.append ( visitAnnotation ( f.getLocal ( j ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  long  k = 0; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int k = 0; k <= f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = -5; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^for  ( int j = 0; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^for  ( int f = 0; k < k.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f.getStack (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getStackSize (  )   {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^for  ( int j = 0; k < f .getStack ( i )  ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^s.append ( getShortName ( f.getStack ( j ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( visitAnnotation ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( getShortName ( f .getStackSize (  )  .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^s.append ( getShortName ( k.getStack ( f ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s.append ( getShortName ( f.getStack ( k )  .toString (  )   )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  long  k = 0; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = j; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = j; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^207^^^^^192^222^method.instructions.get ( j ) .accept ( mv ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getLocal ( k )  ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^for  ( int k = 0; k < f .getLocal ( i )  ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^214^215^216^217^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  { s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^s.append ( " :" ) ;^218^^^^^203^233^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^218^^^^^203^233^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( ' ' ) ;s.append ( " : " ) ;^218^^^^^203^233^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^s.append ( '?' ) ;s.append ( " : " ) ;^218^^^^^203^233^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^219^220^221^222^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  { s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ; }^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length() - 0  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^224^225^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  { s.append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( Integer.toString ( j  <=  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j  ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j + j00000 ) .substring ( j )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^pw.print ( Integer.toString ( k + 100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^pw.print ( Integer.toString ( j + 100000 )  .substring ( j )   ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^pw.print ( Integer .toString (  )  .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^227^228^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ; pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( Integer.toString ( j  ^  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j + i00000 ) .substring ( i )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( Integer.toString ( j  <<  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j + i ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  |  s  |  " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  <<  s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( "" + s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.print ( " " + mv.buf ) ;pw.print ( " " + s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int k = 0; k == f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 9; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^for  ( int f = 0; k < k.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  short  k = 0; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  short  j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int j = 0; j == method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ||  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = j; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.tryCatchBlocks.size() - 8 ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int j = 0; j < method.tryCatchBlocks.get (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^231^232^^^^216^246^(  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ; pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^231^^^^^216^246^(  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  ^  mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( "" + mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.println (  ) ;pw.print ( " " + mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.print ( " " + s + " : " + mv.buf ) ;pw.print ( " " + mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^if  ( !source )  {^195^^^^^180^210^if  ( !dump )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^a.analyze ( cn.name ) ;^194^^^^^179^209^a.analyze ( cn.name, method ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^a.analyze (  method ) ;^194^^^^^179^209^a.analyze ( cn.name, method ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^194^^^^^179^209^a.analyze ( cn.name, method ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, true )  ) ;^190^191^192^^^175^205^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, false )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P4_Replace_Constructor]^Analyzer a = new SimpleVerifier ( getObjectType ( cn.name ) , syperType, false )  , syperType, false )  ) ;^190^191^192^^^175^205^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, false )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P4_Replace_Constructor]^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) ,  false )  ) ;^190^191^192^^^175^205^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, false )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P4_Replace_Constructor]^Analyzer a = Analyzer a =  Analyzer (  SimpleVerifier ( Type.getnew Analyzer ( new SimpleVerifier ( getObjectType ( cn.name ) , syperType, false )  )  , syperType, false )  ) ;^190^191^192^^^175^205^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, false )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^MethodNode method =  ( MethodNode )  methods.get ( k ) ;^189^^^^^174^204^MethodNode method =  ( MethodNode )  methods.get ( i ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P5_Replace_Variable]^MethodNode method =  ( MethodNode )  i.get ( methods ) ;^189^^^^^174^204^MethodNode method =  ( MethodNode )  methods.get ( i ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^Frame[] frames = a.analyze (  ) ;^201^^^^^186^216^Frame[] frames = a.getFrames (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = j; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.instructions.size() - 7 ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = k; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = i; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = k; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.tryCatchBlocks.size() + 9 ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^189^^^^^174^204^MethodNode method =  ( MethodNode )  methods.get ( i ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^a .Analyzer ( 4 )  ;^194^^^^^179^209^a.analyze ( cn.name, method ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^199^^^^^184^214^e.printStackTrace ( pw ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^201^^^^^186^216^Frame[] frames = a.getFrames (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.println ( method.name  <  method.desc ) ;^205^^^^^190^220^pw.println ( method.name + method.desc ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^205^^^^^190^220^pw.println ( method.name + method.desc ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.instructions.size() - 9 ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s .append ( 2 )  ;^212^^^^^197^227^s.append ( '?' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s .append ( null )   )  )^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^s.append ( visitAnnotation ( f.getStack ( j ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( Integer.toString ( j  <  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j + j ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j + k00000 ) .substring ( k )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( Integer.toString ( j  >  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j 00000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^pw.print ( Integer.toString ( j + 100000 )  .substring ( i )   ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  &&  s  &&  " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  >  s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( " " + s + " :: " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.tryCatchBlocks.size() + 6 ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^230^231^232^233^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  { (  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ; pw.print ( " " + mv.buf ) ; }^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  <=  mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^234^^^^^219^249^pw.println (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.print ( " " + mv.buf ) ;pw.println (  ) ;^234^^^^^219^249^pw.println (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;pw.println (  ) ;^234^^^^^219^249^pw.println (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.flush (  ) ;pw.println (  ) ;^234^^^^^219^249^pw.println (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  long  j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int j = 0; j > method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int j = 0; j == method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ==  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  &&  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 2; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 4; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.instructions.size() - 0 ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  ^  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^while  ( s.length (  )  < method.maxStack  >=  method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length (  )  < method.maxStack + method.maxLocals +  )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length() + 5  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = j; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getStack ( i )  ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s .append ( 3 )   )  )^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 7; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = -7; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 4; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getLocal ( j )  ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getLocals (  )   {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 3; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = -7; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = k; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getStack ( i )  ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length() - 9  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( Integer.toString ( j  &  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^pw.print ( Integer.toString ( j + 100000 )  .substring ( k )   ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j + k ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  <<  s  <<  " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  ||  s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^for  ( int j = 0; k < f.getLocal (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 7; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^for  (  long  j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  ( int j = 0; j <= method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^for  >  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.tryCatchBlocks.size() + 1 ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "   instanceof   mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int i = -7; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int i = 0; i < methods.size() - 3 ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 3; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.instructions.size() + 3 ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = i; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int k = 6; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = i; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int i = 0; i < methods.size() + 1 ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.println ( method.name  ^  method.desc ) ;^205^^^^^190^220^pw.println ( method.name + method.desc ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.instructions.size() + 2 ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^s .append ( 3 )  ;^218^^^^^203^233^s.append ( " : " ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^for  ( int k = 0; k < f .getStack ( k )  ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^while  ( s.length() + 6  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( Integer.toString ( j  >=  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^pw.print ( Integer.toString ( j +  ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( Integer.toString ( j  ||  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^pw.print ( Integer.toString ( k + 100000 )  .substring ( j )   ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  <  s  <  " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  >>  s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P3_Replace_Literal]^for  ( int j = 0; j < method.tryCatchBlocks.size() - 4 ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^(  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  )  .accept ( this )  ;^231^^^^^216^246^(  ( TryCatchBlockNode )  method.tryCatchBlocks.get ( j )  ) .accept ( mv ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P2_Replace_Operator]^pw.print ( " "  &  mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P8_Replace_Mix]^pw .print ( 1 )  ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P7_Replace_Invocation]^pw.print (  ) ;^236^^^^^221^251^pw.flush (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P14_Delete_Statement]^^236^^^^^221^251^pw.flush (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.println (  ) ;pw.flush (  ) ;^236^^^^^221^251^pw.flush (  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[P1_Replace_Type]^short  n = name.lastIndexOf ( '/' ) ;^240^^^^^239^246^int n = name.lastIndexOf ( '/' ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P11_Insert_Donor_Statement]^int k = name.length (  ) ;int n = name.lastIndexOf ( '/' ) ;^240^^^^^239^246^int n = name.lastIndexOf ( '/' ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P14_Delete_Statement]^^240^^^^^239^246^int n = name.lastIndexOf ( '/' ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P1_Replace_Type]^short  k = name.length (  ) ;^241^^^^^239^246^int k = name.length (  ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P3_Replace_Literal]^int k = name.length() + 9 ;^241^^^^^239^246^int k = name.length (  ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P7_Replace_Invocation]^int k = name.charAt (  ) ;^241^^^^^239^246^int k = name.length (  ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P8_Replace_Mix]^int k = name .StringBuffer (  )  ;^241^^^^^239^246^int k = name.length (  ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P11_Insert_Donor_Statement]^int n = name.lastIndexOf ( '/' ) ;int k = name.length (  ) ;^241^^^^^239^246^int k = name.length (  ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P12_Insert_Condition]^if  ( args.length != 1 )  { int k = name.length (  ) ; }^241^^^^^239^246^int k = name.length (  ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P3_Replace_Literal]^int k = name.length() - 3 ;^241^^^^^239^246^int k = name.length (  ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P14_Delete_Statement]^^241^^^^^239^246^int k = name.length (  ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P2_Replace_Operator]^if  ( name.charAt ( k - 1 )  >= ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P2_Replace_Operator]^if  ( name.charAt ( k  >>  1 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P3_Replace_Literal]^if  ( name.charAt ( k - k )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P5_Replace_Variable]^if  ( name.charAt ( n - 1 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P5_Replace_Variable]^if  ( k.charAt ( name - 1 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P6_Replace_Expression]^if  ( k - 1 )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P7_Replace_Invocation]^if  ( name .endsWith ( name )   == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P8_Replace_Mix]^if  ( name.charAt ( k - 1 - 0 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P15_Unwrap_Block]^k--;^242^243^244^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  { k--; }^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P16_Remove_Block]^^242^243^244^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  { k--; }^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P2_Replace_Operator]^if  ( name.charAt ( k  ==  1 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P3_Replace_Literal]^if  ( name.charAt ( k - n )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P2_Replace_Operator]^return n != -1 ? name : name.substring ( n + 1, k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P3_Replace_Literal]^return n == -1 ? name : name.substring ( n , k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P5_Replace_Variable]^return n == -1 ? name : name.substring ( n + 1 ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P5_Replace_Variable]^return k == -1 ? name : name.substring ( n + 1, n ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P5_Replace_Variable]^return n == -1 ? k : name.substring ( n + 1, name ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P6_Replace_Expression]^return n ( name.substring ( n + 1, k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P8_Replace_Mix]^return   name ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P3_Replace_Literal]^return n == -n ? name : name.substring ( n + n, k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P5_Replace_Variable]^return n == -1 ? name : name.substring ( n + 1, n ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P5_Replace_Variable]^return name == -1 ? n : name.substring ( n + 1, k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P7_Replace_Invocation]^return n == -1 ? name : name .substring ( n )  ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P8_Replace_Mix]^return k == -1 ? name : name .substring ( k )  ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P14_Delete_Statement]^^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[P5_Replace_Variable]^if  ( outer )  {^269^^^^^254^284^if  ( start )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( end )  {^269^^^^^254^284^if  ( start )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( !start )  {^269^^^^^254^284^if  ( start )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( !dump )  {^269^^^^^254^284^if  ( start )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( source )  {^269^^^^^254^284^if  ( start )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("visit must be called only once");^269^270^271^^^254^284^if  ( start )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P16_Remove_Block]^^269^270^271^^^254^284^if  ( start )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "visitOuterClass can be called only once." )   ;^270^^^^^255^285^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^270^^^^^255^285^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^270^^^^^255^285^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^270^^^^^255^285^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^270^^^^^255^285^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^270^^^^^255^285^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( ! ( start )  )  {     throw new IllegalStateException ( "Cannot visit member before visit has been called." ) ; }^270^^^^^255^285^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^270^^^^^255^285^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^start = false;^272^^^^^257^287^start = true;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^source = true;start = true;^272^^^^^257^287^start = true;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^outer = true;start = true;^272^^^^^257^287^start = true;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^end = true;start = true;^272^^^^^257^287^start = true;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P14_Delete_Statement]^^273^^^^^258^288^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^273^^^^^258^288^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^checkAccess ( version, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^274^275^276^277^^259^289^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.3 + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^274^275^276^277^^259^289^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^checkAccess (  Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^274^275^276^277^^259^289^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^main ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^274^275^276^277^^259^289^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^if  ( name == null && !name.endsWith ( "package-info" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^if  ( name != null || !name.endsWith ( "package-info" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^if  ( name == null || !name.endsWith ( "a" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  ( superName == null || !name.endsWith ( "package-info" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P6_Replace_Expression]^if  ( name == null ) {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P6_Replace_Expression]^if  (  !name.endsWith ( "package-info" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^if  ( name == this ) {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P15_Unwrap_Block]^org.mockito.asm.util.CheckMethodAdapter.checkInternalName(name, "class name");^279^280^281^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  { CheckMethodAdapter.checkInternalName ( name, "class name" ) ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P16_Remove_Block]^^279^280^281^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  { CheckMethodAdapter.checkInternalName ( name, "class name" ) ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^279^^^^^264^294^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( exceptions != null )  {     for  ( int i = 0; i <  ( exceptions.length ) ; ++i )  {         checkInternalName ( exceptions[i],  ( "exception name at index " + i )  ) ;     } }^279^^^^^264^294^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^279^^^^^264^294^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( interfaces != null )  {     for  ( int i = 0; i <  ( interfaces.length ) ; ++i )  {         checkInternalName ( interfaces[i],  ( "interface name at index " + i )  ) ;     } }^279^^^^^264^294^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^279^^^^^264^294^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^279^^^^^264^294^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( name, "class nameclas" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( superName, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter.checkIdentifier ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter .checkIdentifier ( signature , superName )  ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P14_Delete_Statement]^^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodDesc ( desc ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^280^^^^^265^295^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^280^^^^^265^295^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  (  ( name == null )  ||  ( ! ( name.endsWith ( "package-info" )  )  )  )  {     checkInternalName ( name, "class name" ) ; }^280^^^^^265^295^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^if  ( name == null || !name.endsWith ( "package-infopackage" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( name, "ass nlass name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter .checkIdentifier ( signature , name )  ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^if  ( "java/lang/Objectjava/lang/Obj".equals ( name )  )  {^282^^^^^267^297^if  ( "java/lang/Object".equals ( name )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  ( "java/lang/Object".equals ( signature )  )  {^282^^^^^267^297^if  ( "java/lang/Object".equals ( name )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( !"java/lang/Object".equals ( superName )  )  {^282^^^^^267^297^if  ( "java/lang/Object".equals ( name )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P15_Unwrap_Block]^if (superName != null) {    throw new java.lang.IllegalArgumentException("The super class name of the Object class must be 'null'");};^282^283^284^285^^267^297^if  ( "java/lang/Object".equals ( name )  )  { if  ( superName != null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P16_Remove_Block]^^282^283^284^285^^267^297^if  ( "java/lang/Object".equals ( name )  )  { if  ( superName != null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( superName, "s nuper class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( signature, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter.checkIdentifier ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter .checkIdentifier ( name , signature )  ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^CheckMethodAdapter.checkIdentifier ( signature, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P14_Delete_Statement]^^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^282^288^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^287^^^^^282^288^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^287^^^^^282^288^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^if  ( superName == null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  ( signature != null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^if  ( superName != false )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( exceptions != null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( attr == null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( interfaces != null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( outerName != null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( desc != null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( owner == null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( value != null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( innerName != null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The super class name of the Object class must be 'null'");^283^284^285^^^268^298^if  ( superName != null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P16_Remove_Block]^^283^284^285^^^268^298^if  ( superName != null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( ! ( start )  )  {     throw new IllegalStateException ( "Cannot visit member before visit has been called." ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  (  (  ( pub + pri )  + pro )  > 1 )  {     throw new IllegalArgumentException (  ( "public private and protected are mutually exclusive: " + access )  ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( ! ( "java/lang/Object".equals ( superName )  )  )  {     throw new IllegalArgumentException ( "The super class name of interfaces must be 'java/lang/Object'" ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( owner == null )  {     throw new IllegalArgumentException ( "Illegal outer class owner" ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^283^^^^^268^298^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The super class name of interfaces must be 'java/lang/Object'" )   ;^284^^^^^269^299^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^284^^^^^269^299^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^return false;^284^^^^^269^299^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^284^^^^^269^299^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;throw new IllegalArgumentException  (" ")  ;^284^^^^^269^299^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^if  ( "a".equals ( name )  )  {^282^^^^^267^297^if  ( "java/lang/Object".equals ( name )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  ( "java/lang/Object".equals ( superName )  )  {^282^^^^^267^297^if  ( "java/lang/Object".equals ( name )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( signature, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter.checkIdentifier ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter .checkIdentifier ( superName , name )  ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P14_Delete_Statement]^^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^287^^^^^272^302^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^287^^^^^272^302^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^if  ( signature == null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  ( superName != null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^if  ( signature != false )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( exceptions != null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( attr == null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( interfaces != null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( outerName != null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( desc != null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( owner == null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( value != null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( innerName != null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P15_Unwrap_Block]^org.mockito.asm.util.CheckMethodAdapter.checkClassSignature(signature);^289^290^291^^^274^304^if  ( signature != null )  { CheckMethodAdapter.checkClassSignature ( signature ) ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P16_Remove_Block]^^289^290^291^^^274^304^if  ( signature != null )  { CheckMethodAdapter.checkClassSignature ( signature ) ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^289^^^^^274^304^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^289^^^^^274^304^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^289^^^^^274^304^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^289^^^^^274^304^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^289^^^^^274^304^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^289^^^^^274^304^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^CheckMethodAdapter.checkClassSignature ( superName ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter.checkFieldSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P14_Delete_Statement]^^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodDesc ( desc ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkClassSignature ( signature ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^290^^^^^275^305^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^290^^^^^275^305^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^290^^^^^275^305^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^if  (  ( access & Opcodes.ACC_INTERFACE )  == 0 )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^if  (  ( access  >  Opcodes.ACC_INTERFACE )  != 0 )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^if  (  ( access & Opcodes.ACC_INTERFACE )  !=  )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  (  ( version & Opcodes.ACC_INTERFACE )  != 0 )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P6_Replace_Expression]^if  ( (access & ACC_INTERFACE) )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^if  (  ( access & Opcodes.ACC_INTERFACE )  != 4 )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  (  ( access & ~possibleAccess )  != 0 )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P15_Unwrap_Block]^if (!("java/lang/Object".equals(superName))) {    throw new java.lang.IllegalArgumentException("The super class name of interfaces must be 'java/lang/Object'");};^292^293^294^295^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  { if  ( !"java/lang/Object".equals ( superName )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P16_Remove_Block]^^292^293^294^295^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  { if  ( !"java/lang/Object".equals ( superName )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( ! ( "java/lang/Object".equals ( superName )  )  )  {     throw new IllegalArgumentException ( "The super class name of interfaces must be 'java/lang/Object'" ) ; }^292^^^^^277^307^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^if  ( !"java/lang/Objectava/lang/".equals ( superName )  )  {^293^^^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  ( !"java/lang/Object".equals ( signature )  )  {^293^^^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( "java/lang/Object".equals ( name )  )  {^293^^^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The super class name of interfaces must be 'java/lang/Object'");^293^294^295^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P16_Remove_Block]^^293^294^295^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  (  ( access &  ( ACC_INTERFACE )  )  != 0 )  {     if  ( ! ( "java/lang/Object".equals ( superName )  )  )  {         throw new IllegalArgumentException ( "The super class name of interfaces must be 'java/lang/Object'" ) ;     } }^293^^^^^278^308^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^293^^^^^278^308^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The super class name of the Object class must be 'null'" )   ;^294^^^^^279^309^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( ! ( "java/lang/Object".equals ( superName )  )  )  {     throw new IllegalArgumentException ( "The super class name of interfaces must be 'java/lang/Object'" ) ; }^294^^^^^279^309^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^294^^^^^279^309^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^294^^^^^279^309^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;throw new IllegalArgumentException  (" ")  ;^294^^^^^279^309^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ; ;^294^^^^^279^309^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^if  ( !"bj".equals ( superName )  )  {^293^^^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^if  ( !"java/lang/Object" .endsWith ( name )   )  {^293^^^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^if  ( !"vaava/lang/Object".equals ( superName )  )  {^293^^^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^if  ( !"java/lang/Object" .endsWith ( signature )   )  {^293^^^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^if  ( interfaces == null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  ( versionnterfaces != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^if  ( i != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P6_Replace_Expression]^if  ( i < interfaces.length )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P6_Replace_Expression]^if  ( "interface name at index " + i )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P8_Replace_Mix]^if  ( versionnterfaces != this )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( exceptions != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( attr == null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( outerName != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( superName != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( desc != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( owner == null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( signature != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( value != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( f == null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P9_Replace_Statement]^if  ( innerName != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P15_Unwrap_Block]^for (int i = 0; i < (interfaces.length); ++i) {    org.mockito.asm.util.CheckMethodAdapter.checkInternalName(interfaces[i], ("interface name at index " + i));};^297^298^299^300^301^282^312^if  ( interfaces != null )  { for  ( int i = 0; i < interfaces.length; ++i )  { CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P16_Remove_Block]^^297^298^299^300^301^282^312^if  ( interfaces != null )  { for  ( int i = 0; i < interfaces.length; ++i )  { CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ; }^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P1_Replace_Type]^for  (  short  i = 0; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^for  ( int i = 0; i <= interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^for  ||  ( int i = 0; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^for  ( int i = 5; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^for  ( int i = 0; i < version; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^for  ( interfaces.lengthnt i = 0; i < i; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^for  ( interfacesnt i = 0; i < i.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^298^^^^^283^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( exceptions != null )  {     for  ( int i = 0; i <  ( exceptions.length ) ; ++i )  {         checkInternalName ( exceptions[i],  ( "exception name at index " + i )  ) ;     } }^298^^^^^283^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^298^^^^^283^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  ( interfaces != null )  {     for  ( int i = 0; i <  ( interfaces.length ) ; ++i )  {         checkInternalName ( interfaces[i],  ( "interface name at index " + i )  ) ;     } }^298^^^^^283^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P13_Insert_Block]^if  (  ( name == null )  ||  ( ! ( name.endsWith ( "package-info" )  )  )  )  {     checkInternalName ( name, "class name" ) ; }^298^^^^^283^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index "  &&  i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( interfaces[i], "terface name at indnterface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( versionnterfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( i[i], "interface name at interfacesndex " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( interfacesnterfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P14_Delete_Statement]^^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^for  ( int i = i; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index "  ||  i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( interfaces[i], "nterface name at indnterface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^for  ( int i = 0; i == interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^for  <=  ( int i = 0; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^for  ( int i = -1; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^for  ( versionnt i = 0; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^for  ( int i = 0; i < interfaces.length.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^for  ( int i = 0; i < interfaces; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index "  <  i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( interfaces[i], "me " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P7_Replace_Invocation]^CheckMethodAdapter .checkIdentifier ( signature , superName )  ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P1_Replace_Type]^for  (  long  i = 0; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^for  ( int i = -2; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P2_Replace_Operator]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index "  <=  i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index a" + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( i, access, name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, version, name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access, signature, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access, name, superName, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access, name, signature, signature, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit (  access, name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version,  name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access,  signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access, name,  superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access, name, signature,  interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access, name, signature, superName ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( access, version, name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, name, access, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access, signature, name, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( version, access, name, superName, signature, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P5_Replace_Variable]^cv.visit ( interfaces, access, name, signature, superName, version ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P14_Delete_Statement]^^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P11_Insert_Donor_Statement]^cv.visitInnerClass ( name, outerName, innerName, access ) ;cv.visit ( version, access, name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[P14_Delete_Statement]^^307^^^^^306^313^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^307^^^^^306^313^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P8_Replace_Mix]^if  ( start )  {^308^^^^^306^313^if  ( source )  {^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P9_Replace_Statement]^if  ( outer )  {^308^^^^^306^313^if  ( source )  {^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P9_Replace_Statement]^if  ( !start )  {^308^^^^^306^313^if  ( source )  {^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P9_Replace_Statement]^if  ( !dump )  {^308^^^^^306^313^if  ( source )  {^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("visitSource can be called only once.");^308^309^310^^^306^313^if  ( source )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P16_Remove_Block]^^308^309^310^^^306^313^if  ( source )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( ! ( start )  )  {     throw new IllegalStateException ( "Cannot visit member before visit has been called." ) ; }^308^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^308^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^308^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^308^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^308^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^308^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( owner == null )  {     throw new IllegalArgumentException ( "Illegal outer class owner" ) ; }^308^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^308^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "visitOuterClass can be called only once." )   ;^309^^^^^306^313^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^309^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^309^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^309^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P8_Replace_Mix]^return true;^309^^^^^306^313^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^309^^^^^306^313^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^309^^^^^306^313^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P3_Replace_Literal]^source = false;^311^^^^^306^313^source = true;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P11_Insert_Donor_Statement]^start = true;source = true;^311^^^^^306^313^source = true;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P11_Insert_Donor_Statement]^outer = true;source = true;^311^^^^^306^313^source = true;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P11_Insert_Donor_Statement]^end = true;source = true;^311^^^^^306^313^source = true;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P5_Replace_Variable]^cv.visitSource (  debug ) ;^312^^^^^306^313^cv.visitSource ( file, debug ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P5_Replace_Variable]^cv.visitSource ( file ) ;^312^^^^^306^313^cv.visitSource ( file, debug ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P5_Replace_Variable]^cv.visitSource ( debug, file ) ;^312^^^^^306^313^cv.visitSource ( file, debug ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P7_Replace_Invocation]^cv.visitAnnotation ( file, debug ) ;^312^^^^^306^313^cv.visitSource ( file, debug ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P8_Replace_Mix]^cv.visitSource ( debug, debug ) ;^312^^^^^306^313^cv.visitSource ( file, debug ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P14_Delete_Statement]^^312^^^^^306^313^cv.visitSource ( file, debug ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P11_Insert_Donor_Statement]^cv.visitOuterClass ( owner, name, desc ) ;cv.visitSource ( file, debug ) ;^312^^^^^306^313^cv.visitSource ( file, debug ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[P14_Delete_Statement]^^320^^^^^315^332^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^320^^^^^315^332^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^if  ( start )  {^321^^^^^315^332^if  ( outer )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( end )  {^321^^^^^315^332^if  ( outer )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( !start )  {^321^^^^^315^332^if  ( outer )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( !dump )  {^321^^^^^315^332^if  ( outer )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( source )  {^321^^^^^315^332^if  ( outer )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("visitOuterClass can be called only once.");^321^322^323^^^315^332^if  ( outer )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P16_Remove_Block]^^321^322^323^^^315^332^if  ( outer )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( ! ( start )  )  {     throw new IllegalStateException ( "Cannot visit member before visit has been called." ) ; }^321^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^321^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^321^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^321^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^321^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( owner == null )  {     throw new IllegalArgumentException ( "Illegal outer class owner" ) ; }^321^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^321^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^321^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "visit must be called only once" )   ;^322^^^^^315^332^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^322^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^322^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^322^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^322^^^^^315^332^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^322^^^^^315^332^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P3_Replace_Literal]^outer = false;^324^^^^^315^332^outer = true;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^source = true;outer = true;^324^^^^^315^332^outer = true;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^start = true;outer = true;^324^^^^^315^332^outer = true;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^end = true;outer = true;^324^^^^^315^332^outer = true;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P2_Replace_Operator]^if  ( owner != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^if  ( name == null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P8_Replace_Mix]^if  ( owner == this )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( exceptions != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( attr == null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( interfaces != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( outerName != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( superName != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( desc != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( signature != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( value != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( f == null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( innerName != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Illegal outer class owner");^325^326^327^^^315^332^if  ( owner == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P16_Remove_Block]^^325^326^327^^^315^332^if  ( owner == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  (  (  ( pub + pri )  + pro )  > 1 )  {     throw new IllegalArgumentException (  ( "public private and protected are mutually exclusive: " + access )  ) ; }^325^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^325^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^325^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  (  ( access &  ( ~possibleAccess )  )  != 0 )  {     throw new IllegalArgumentException (  ( "Invalid access flags: " + access )  ) ; }^325^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^325^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^325^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^325^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^325^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( owner == null )  {     throw new IllegalArgumentException ( "Illegal outer class owner" ) ; }^326^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^326^^^^^315^332^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;throw new IllegalArgumentException  (" ")  ;^326^^^^^315^332^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^326^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P2_Replace_Operator]^if  ( desc == null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^if  ( owner != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P8_Replace_Mix]^if  ( desc != this )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( exceptions != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( attr == null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( interfaces != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( outerName != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( superName != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( owner == null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( signature != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( value != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( f == null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P9_Replace_Statement]^if  ( innerName != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P15_Unwrap_Block]^org.mockito.asm.util.CheckMethodAdapter.checkMethodDesc(desc);^328^329^330^^^315^332^if  ( desc != null )  { CheckMethodAdapter.checkMethodDesc ( desc ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P16_Remove_Block]^^328^329^330^^^315^332^if  ( desc != null )  { CheckMethodAdapter.checkMethodDesc ( desc ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^328^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^328^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^328^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^328^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^328^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^328^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^CheckMethodAdapter.checkMethodDesc ( owner ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P7_Replace_Invocation]^CheckMethodAdapter.checkMethodSignature ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P14_Delete_Statement]^^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^329^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^329^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^329^^^^^315^332^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P7_Replace_Invocation]^CheckMethodAdapter .checkMethodIdentifier ( name , name )  ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^cv.visitOuterClass ( desc, name, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^cv.visitOuterClass ( owner, desc, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^cv.visitOuterClass ( owner, name, owner ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^cv.visitOuterClass (  name, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^cv.visitOuterClass ( owner,  desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^cv.visitOuterClass ( owner, name ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^cv.visitOuterClass ( name, owner, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P5_Replace_Variable]^cv.visitOuterClass ( owner, desc, name ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P8_Replace_Mix]^cv.visitOuterClass ( name, name, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P14_Delete_Statement]^^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^cv.visitSource ( file, debug ) ;cv.visitOuterClass ( owner, name, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P11_Insert_Donor_Statement]^cv.visitInnerClass ( name, outerName, innerName, access ) ;cv.visitOuterClass ( owner, name, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[P14_Delete_Statement]^^340^^^^^334^354^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^340^^^^^334^354^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( name, "class" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( outerName, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P7_Replace_Invocation]^CheckMethodAdapter.checkIdentifier ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P14_Delete_Statement]^^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodDesc ( desc ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P2_Replace_Operator]^if  ( outerName == null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^if  ( name != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P8_Replace_Mix]^if  ( outerName != false )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( exceptions != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( attr == null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( interfaces != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( superName != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( desc != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( owner == null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( signature != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( value != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( innerName != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P15_Unwrap_Block]^org.mockito.asm.util.CheckMethodAdapter.checkInternalName(outerName, "outer class name");^342^343^344^^^334^354^if  ( outerName != null )  { CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P16_Remove_Block]^^342^343^344^^^334^354^if  ( outerName != null )  { CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^342^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( interfaces != null )  {     for  ( int i = 0; i <  ( interfaces.length ) ; ++i )  {         checkInternalName ( interfaces[i],  ( "interface name at index " + i )  ) ;     } }^342^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  (  ( name == null )  ||  ( ! ( name.endsWith ( "package-info" )  )  )  )  {     checkInternalName ( name, "class name" ) ; }^342^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^342^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^342^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^342^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^342^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^342^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( outerName, "ou" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P7_Replace_Invocation]^CheckMethodAdapter.checkIdentifier ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P8_Replace_Mix]^CheckMethodAdapter.checkInternalName ( name, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P14_Delete_Statement]^^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^343^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^343^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( outerName, "las" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P8_Replace_Mix]^CheckMethodAdapter.checkIdentifier ( name, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P2_Replace_Operator]^if  ( innerName == null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^if  ( outerName != null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P8_Replace_Mix]^if  ( innerName != this )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( exceptions != null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( attr == null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( interfaces != null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( superName != null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( desc != null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( owner == null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( signature != null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P9_Replace_Statement]^if  ( value != null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P15_Unwrap_Block]^org.mockito.asm.util.CheckMethodAdapter.checkIdentifier(innerName, "inner class name");^345^346^347^^^334^354^if  ( innerName != null )  { CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P16_Remove_Block]^^345^346^347^^^334^354^if  ( innerName != null )  { CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^345^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  (  ( name == null )  ||  ( ! ( name.endsWith ( "package-info" )  )  )  )  {     checkInternalName ( name, "class name" ) ; }^345^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^345^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^345^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^345^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^345^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^345^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^CheckMethodAdapter.checkIdentifier ( outerName, "inner class name" ) ;^346^^^^^334^354^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P7_Replace_Invocation]^CheckMethodAdapter.checkMethodIdentifier ( innerName, "inner class name" ) ;^346^^^^^334^354^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P8_Replace_Mix]^CheckMethodAdapter .checkMethodIdentifier ( name , name )  ;^346^^^^^334^354^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P14_Delete_Statement]^^346^347^^^^334^354^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^346^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^346^^^^^334^354^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P3_Replace_Literal]^CheckMethodAdapter.checkIdentifier ( innerName, "ner class nner class name" ) ;^346^^^^^334^354^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P7_Replace_Invocation]^CheckMethodAdapter .checkMethodIdentifier ( name , outerName )  ;^346^^^^^334^354^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^checkAccess (  Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^348^349^350^351^^334^354^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P7_Replace_Invocation]^main ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^348^349^350^351^^334^354^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P8_Replace_Mix]^main ( access, Opcodes.ACC_PUBLIC + Opcodes.null + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^348^349^350^351^^334^354^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( outerName, outerName, innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( name, name, innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( name, outerName, outerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass (  outerName, innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( name,  innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( name, outerName,  access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( name, outerName, innerName ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( outerName, name, innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( name, innerName, outerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P5_Replace_Variable]^cv.visitInnerClass ( name, access, innerName, outerName ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P8_Replace_Mix]^cv.visitInnerClass ( name, outerName, name, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P14_Delete_Statement]^^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^cv.visit ( version, access, name, signature, superName, interfaces ) ;cv.visitInnerClass ( name, outerName, innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P11_Insert_Donor_Statement]^cv.visitOuterClass ( owner, name, desc ) ;cv.visitInnerClass ( name, outerName, innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[P14_Delete_Statement]^^363^^^^^356^379^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^363^^^^^356^379^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^checkAccess (  Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_VOLATILE + Opcodes.ACC_TRANSIENT + Opcodes.ACC_SYNTHETIC^364^365^366^367^^356^379^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_VOLATILE + Opcodes.ACC_TRANSIENT + Opcodes.ACC_SYNTHETIC^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P7_Replace_Invocation]^main ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_VOLATILE + Opcodes.ACC_TRANSIENT + Opcodes.ACC_SYNTHETIC^364^365^366^367^^356^379^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_VOLATILE + Opcodes.ACC_TRANSIENT + Opcodes.ACC_SYNTHETIC^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P3_Replace_Literal]^CheckMethodAdapter.checkIdentifier ( name, "d n" ) ;^369^^^^^356^379^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^CheckMethodAdapter.checkIdentifier ( signature, "field name" ) ;^369^^^^^356^379^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P7_Replace_Invocation]^CheckMethodAdapter.checkMethodIdentifier ( name, "field name" ) ;^369^^^^^356^379^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P14_Delete_Statement]^^369^370^371^372^373^356^379^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ; CheckMethodAdapter.checkDesc ( desc, false ) ; if  ( signature != null )  { CheckMethodAdapter.checkFieldSignature ( signature ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^369^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^369^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P3_Replace_Literal]^CheckMethodAdapter.checkDesc ( desc, true ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^CheckMethodAdapter.checkDesc ( signature, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P7_Replace_Invocation]^CheckMethodAdapter.checkIdentifier ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P8_Replace_Mix]^CheckMethodAdapter.checkIdentifier ( signature, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P14_Delete_Statement]^^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodDesc ( desc ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^370^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^370^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P2_Replace_Operator]^if  ( signature == null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^if  ( name != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P8_Replace_Mix]^if  ( signature != true )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( exceptions != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( attr == null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( interfaces != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( outerName != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( superName != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( desc != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( owner == null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( value != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( innerName != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P15_Unwrap_Block]^org.mockito.asm.util.CheckMethodAdapter.checkFieldSignature(signature);^371^372^373^^^356^379^if  ( signature != null )  { CheckMethodAdapter.checkFieldSignature ( signature ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P16_Remove_Block]^^371^372^373^^^356^379^if  ( signature != null )  { CheckMethodAdapter.checkFieldSignature ( signature ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^371^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^371^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  (  ( name == null )  ||  ( ! ( name.endsWith ( "package-info" )  )  )  )  {     checkInternalName ( name, "class name" ) ; }^371^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^371^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^371^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^371^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^371^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^CheckMethodAdapter.checkFieldSignature ( name ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P7_Replace_Invocation]^CheckMethodAdapter.checkMethodSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P14_Delete_Statement]^^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodDesc ( desc ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkFieldSignature ( signature ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^372^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^372^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^372^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P2_Replace_Operator]^if  ( value == null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P8_Replace_Mix]^if  ( value != false )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( exceptions != null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( attr == null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( interfaces != null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( outerName != null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( superName != null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( desc != null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( owner == null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( signature != null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( f == null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P9_Replace_Statement]^if  ( innerName != null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P15_Unwrap_Block]^org.mockito.asm.util.CheckMethodAdapter.checkConstant(value);^374^375^376^^^356^379^if  ( value != null )  { CheckMethodAdapter.checkConstant ( value ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P16_Remove_Block]^^374^375^376^^^356^379^if  ( value != null )  { CheckMethodAdapter.checkConstant ( value ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P7_Replace_Invocation]^CheckMethodAdapter.checkClassSignature ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P7_Replace_Invocation]^CheckMethodAdapter .checkClassSignature ( desc )  ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P14_Delete_Statement]^^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkConstant ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkConstant ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkConstant ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkConstant ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkConstant ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodDesc ( desc ) ;CheckMethodAdapter.checkConstant ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkConstant ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkConstant ( value ) ;^375^^^^^356^379^CheckMethodAdapter.checkConstant ( value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^375^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^375^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^375^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^375^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^375^^^^^356^379^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, signature, desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, name, desc, name, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField (  name, desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access,  desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, name,  signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, name, desc,  value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, name, desc, signature ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = access.visitField ( cv, name, desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, signature, desc, name, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, desc, name, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = signature.visitField ( access, name, desc, cv, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, name, value, signature, desc ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P7_Replace_Invocation]^FieldVisitor av = cv.visitMethod ( access, name, desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P8_Replace_Mix]^FieldVisitor av = cv.visitField ( access, name, signature, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( desc, name, access, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = name.visitField ( access, cv, desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = desc.visitField ( access, name, cv, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, name, signature, desc, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P5_Replace_Variable]^FieldVisitor av = cv.visitField ( access, value, desc, signature, name ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P14_Delete_Statement]^^377^378^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ; return new CheckFieldAdapter ( av ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[P14_Delete_Statement]^^388^^^^^387^411^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^388^^^^^387^411^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^checkAccess ( i, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^389^390^391^392^^387^411^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^checkAccess (  Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^389^390^391^392^^387^411^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P7_Replace_Invocation]^main ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^389^390^391^392^^387^411^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P8_Replace_Mix]^main ( i, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^389^390^391^392^^387^411^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P3_Replace_Literal]^CheckMethodAdapter.checkMethodIdentifier ( name, "method namemeth" ) ;^395^^^^^387^411^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^CheckMethodAdapter.checkMethodIdentifier ( signature, "method name" ) ;^395^^^^^387^411^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P7_Replace_Invocation]^CheckMethodAdapter.checkIdentifier ( name, "method name" ) ;^395^^^^^387^411^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P8_Replace_Mix]^CheckMethodAdapter.checkIdentifier ( signature, "method name" ) ;^395^^^^^387^411^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P14_Delete_Statement]^^395^396^397^398^399^387^411^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ; CheckMethodAdapter.checkMethodDesc ( desc ) ; if  ( signature != null )  { CheckMethodAdapter.checkMethodSignature ( signature ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^395^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^395^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^CheckMethodAdapter.checkMethodDesc ( signature ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P7_Replace_Invocation]^CheckMethodAdapter.checkMethodSignature ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P14_Delete_Statement]^^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkMethodDesc ( desc ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^396^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^396^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^396^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P2_Replace_Operator]^if  ( signature == null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^if  ( name != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P8_Replace_Mix]^if  ( signature != this )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( exceptions != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( attr == null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( interfaces != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( outerName != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( superName != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( desc != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( owner == null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( value != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( innerName != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P15_Unwrap_Block]^org.mockito.asm.util.CheckMethodAdapter.checkMethodSignature(signature);^397^398^399^^^387^411^if  ( signature != null )  { CheckMethodAdapter.checkMethodSignature ( signature ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P16_Remove_Block]^^397^398^399^^^387^411^if  ( signature != null )  { CheckMethodAdapter.checkMethodSignature ( signature ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( innerName != null )  {     checkIdentifier ( innerName, "inner class name" ) ; }^397^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^397^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^397^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( value != null )  {     checkConstant ( value ) ; }^397^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^397^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^397^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^CheckMethodAdapter.checkMethodSignature ( name ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P7_Replace_Invocation]^CheckMethodAdapter.checkFieldSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P8_Replace_Mix]^CheckMethodAdapter.checkFieldSignature ( name ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P14_Delete_Statement]^^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkDesc ( desc, false ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodDesc ( desc ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkMethodSignature ( signature ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( signature != null )  {     checkMethodSignature ( signature ) ; }^398^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( signature != null )  {     checkFieldSignature ( signature ) ; }^398^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( desc != null )  {     checkMethodDesc ( desc ) ; }^398^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( signature != null )  {     checkClassSignature ( signature ) ; }^398^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P7_Replace_Invocation]^CheckMethodAdapter .checkFieldSignature ( desc )  ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P2_Replace_Operator]^if  ( exceptions == null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P6_Replace_Expression]^if  ( i < exceptions.length )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P6_Replace_Expression]^if  ( "exception name at index " + i )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P8_Replace_Mix]^if  ( exceptions != false )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( attr == null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( interfaces != null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( outerName != null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( superName != null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( desc != null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( owner == null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( signature != null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( value != null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P9_Replace_Statement]^if  ( innerName != null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P15_Unwrap_Block]^for (int i = 0; i < (exceptions.length); ++i) {    org.mockito.asm.util.CheckMethodAdapter.checkInternalName(exceptions[i], ("exception name at index " + i));};^400^401^402^403^404^387^411^if  ( exceptions != null )  { for  ( int i = 0; i < exceptions.length; ++i )  { CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P16_Remove_Block]^^400^401^402^403^404^387^411^if  ( exceptions != null )  { for  ( int i = 0; i < exceptions.length; ++i )  { CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ; }^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P1_Replace_Type]^for  (  long  i = 0; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P3_Replace_Literal]^for  ( int i = i; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^for  ( accessnt i = 0; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^for  ( int i = 0; i < access; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^for  ( exceptions.lengthnt i = 0; i < i; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^for  ( exceptionsnt i = 0; i < i.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( exceptions != null )  {     for  ( int i = 0; i <  ( exceptions.length ) ; ++i )  {         checkInternalName ( exceptions[i],  ( "exception name at index " + i )  ) ;     } }^401^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( outerName != null )  {     checkInternalName ( outerName, "outer class name" ) ; }^401^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P13_Insert_Block]^if  ( interfaces != null )  {     for  ( int i = 0; i <  ( interfaces.length ) ; ++i )  {         checkInternalName ( interfaces[i],  ( "interface name at index " + i )  ) ;     } }^401^^^^^387^411^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P2_Replace_Operator]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index "  <=  i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at accessndex " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^CheckMethodAdapter.checkInternalName ( i[i], "exception name at exceptionsndex " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P14_Delete_Statement]^^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P1_Replace_Type]^for  (  short  i = 0; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P3_Replace_Literal]^for  ( int i = access; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P2_Replace_Operator]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index "  |  i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index exc" + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P7_Replace_Invocation]^CheckMethodAdapter .checkIdentifier ( name , desc )  ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P8_Replace_Mix]^CheckMethodAdapter .checkIdentifier ( signature , name )  ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P2_Replace_Operator]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index "  >  i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( exceptions[i], "ame at indexception name at index " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P3_Replace_Literal]^CheckMethodAdapter.checkInternalName ( exceptions[i], "cepxception name at index " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P8_Replace_Mix]^CheckMethodAdapter .checkIdentifier ( desc , signature )  ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P4_Replace_Constructor]^return new CheckMethodAdapter ( cv.visitMethod (  name, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P4_Replace_Constructor]^return new CheckMethodAdapter ( cv.visitMethod ( access,  desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P4_Replace_Constructor]^return new CheckMethodAdapter ( cv.visitMethod ( access, name,  signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P4_Replace_Constructor]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( i, name, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( access, desc, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, signature, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( access.visitMethod ( cv, name, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( access, desc, name, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, signature, desc,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( access, signature, desc, name,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( name.visitMethod ( access, cv, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P7_Replace_Invocation]^return new CheckMethodAdapter ( cv.visitField ( access, name, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( access, signature, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, name, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, name,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( signature, name, desc, access,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( signature.visitMethod ( access, name, desc, cv,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P5_Replace_Variable]^return new CheckMethodAdapter ( cv.visitMethod ( name, access, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[P14_Delete_Statement]^^417^^^^^413^420^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^417^^^^^413^420^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P3_Replace_Literal]^CheckMethodAdapter.checkDesc ( desc, true ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P7_Replace_Invocation]^CheckMethodAdapter.checkIdentifier ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P14_Delete_Statement]^^418^419^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ; return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkFieldSignature ( signature ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkConstant ( value ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodSignature ( signature ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodDesc ( desc ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P11_Insert_Donor_Statement]^CheckMethodAdapter.checkClassSignature ( signature ) ;CheckMethodAdapter.checkDesc ( desc, false ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P4_Replace_Constructor]^return new CheckAnnotationAdapter ( cv.visitAnnotation (  visible )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P4_Replace_Constructor]^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, start )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( cv.visitAnnotation ( visible, desc )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( desc.visitAnnotation ( cv, visible )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P7_Replace_Invocation]^return new CheckAnnotationAdapter ( cv.visitSource ( desc, visible )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P8_Replace_Mix]^return new CheckAnnotationAdapter ( cv .visitInnerClass ( desc , desc , desc , 2 )   ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, source )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P5_Replace_Variable]^return new CheckAnnotationAdapter ( this.visitAnnotation ( desc, visible )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P14_Delete_Statement]^^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[P14_Delete_Statement]^^423^^^^^422^428^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^423^^^^^422^428^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  ( attr != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^if  ( attr == true )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( exceptions != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( interfaces != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( outerName != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( superName != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( desc != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( owner == null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( signature != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( value != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( f == null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( innerName != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Invalid attribute (must not be null)");^424^425^426^^^422^428^if  ( attr == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P16_Remove_Block]^^424^425^426^^^422^428^if  ( attr == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( ! ( start )  )  {     throw new IllegalStateException ( "Cannot visit member before visit has been called." ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  (  ( pub + pri )  + pro )  > 1 )  {     throw new IllegalArgumentException (  ( "public private and protected are mutually exclusive: " + access )  ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( access &  ( ~possibleAccess )  )  != 0 )  {     throw new IllegalArgumentException (  ( "Invalid access flags: " + access )  ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( owner == null )  {     throw new IllegalArgumentException ( "Illegal outer class owner" ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^424^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^425^^^^^422^428^[Delete]^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ; ;^425^^^^^422^428^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^425^^^^^422^428^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;throw new IllegalArgumentException  (" ")  ;^425^^^^^422^428^throw new IllegalArgumentException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P14_Delete_Statement]^^427^^^^^422^428^cv.visitAttribute ( attr ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;cv.visitAttribute ( attr ) ;^427^^^^^422^428^cv.visitAttribute ( attr ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[P14_Delete_Statement]^^431^^^^^430^434^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^cv.visitEnd (  ) ;checkState (  ) ;^431^^^^^430^434^checkState (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^end = false;^432^^^^^430^434^end = true;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^source = true;end = true;^432^^^^^430^434^end = true;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^start = true;end = true;^432^^^^^430^434^end = true;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^outer = true;end = true;^432^^^^^430^434^end = true;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P14_Delete_Statement]^^433^^^^^430^434^cv.visitEnd (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^cv.visitAttribute ( attr ) ;cv.visitEnd (  ) ;^433^^^^^430^434^cv.visitEnd (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^pw.println (  ) ;cv.visitEnd (  ) ;^433^^^^^430^434^cv.visitEnd (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^checkState (  ) ;cv.visitEnd (  ) ;^433^^^^^430^434^cv.visitEnd (  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  ( !source )  {^445^^^^^444^451^if  ( !start )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^if  ( start )  {^445^^^^^444^451^if  ( !start )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( outer )  {^445^^^^^444^451^if  ( !start )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( !dump )  {^445^^^^^444^451^if  ( !start )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( source )  {^445^^^^^444^451^if  ( !start )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Cannot visit member before visit has been called.");^445^446^447^^^444^451^if  ( !start )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P16_Remove_Block]^^445^446^447^^^444^451^if  ( !start )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^445^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^445^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^445^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^445^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^445^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^445^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Cannot visit member after visitEnd has been called." )   ;^446^^^^^444^451^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( ! ( start )  )  {     throw new IllegalStateException ( "Cannot visit member before visit has been called." ) ; }^446^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^446^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^return ;^446^^^^^444^451^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^446^^^^^444^451^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  ( start )  {^448^^^^^444^451^if  ( end )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^if  ( visible )  {^448^^^^^444^451^if  ( end )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( outer )  {^448^^^^^444^451^if  ( end )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  ( !dump )  {^448^^^^^444^451^if  ( end )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Cannot visit member after visitEnd has been called.");^448^449^450^^^444^451^if  ( end )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P16_Remove_Block]^^448^449^450^^^444^451^if  ( end )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Cannot visit member before visit has been called." )   ;^449^^^^^444^451^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( ! ( start )  )  {     throw new IllegalStateException ( "Cannot visit member before visit has been called." ) ; }^449^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( end )  {     throw new IllegalStateException ( "Cannot visit member after visitEnd has been called." ) ; }^449^^^^^444^451^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^return false;^449^^^^^444^451^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^449^^^^^444^451^throw new IllegalStateException  (" ")  ;^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  (  ( access & ~possibleAccess )  == 0 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  (  ( access  <=  ~possibleAccess )  != 0 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^if  (  ( access & ~possibleAccess )  != access )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  (  ( pub & ~possibleAccess )  != 0 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  (  ( access & ~pub )  != 0 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^if  ( (access & ~possibleAccess) )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^if  ( "Invalid access flags: " + access )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^if  (  ( access & ~possibleAccess )  != 0 >> 1 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P9_Replace_Statement]^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Invalid access flags: " + access));^462^463^464^465^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  { throw new IllegalArgumentException ( "Invalid access flags: " + access ) ; }^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P16_Remove_Block]^^462^463^464^465^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  { throw new IllegalArgumentException ( "Invalid access flags: " + access ) ; }^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  (  ( pub + pri )  + pro )  > 1 )  {     throw new IllegalArgumentException (  ( "public private and protected are mutually exclusive: " + access )  ) ; }^462^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^462^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( owner == null )  {     throw new IllegalArgumentException ( "Illegal outer class owner" ) ; }^462^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^462^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid access flags: "  <=  access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Inval" + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Invalid pub flags: " + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( access &  ( ~possibleAccess )  )  != 0 )  {     throw new IllegalArgumentException (  ( "Invalid access flags: " + access )  ) ; }^463^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid access flags: "  >=  access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "id access flag" + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ; ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^463^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^463^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid access flags: "  >>  access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "l" + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "Invalid pri flags: " + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Invalid access flags: "  &  access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "c" + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P1_Replace_Type]^short  pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int pub =  ( access & Opcodes.ACC_PUBLIC )  < 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int pub =  ( access  ==  Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == pub ? pub : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : fin;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^int pub =  ( pri & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^int pub =  ( 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^int pub =  ( pro & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P1_Replace_Type]^short  pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int pri =  ( access & Opcodes.ACC_PRIVATE )  != 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int pri =  ( access  <=  Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == -3 ? -3 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 7 ? 7 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : possibleAccess;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^int pri =  ( pro & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^int pri =  ( 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P12_Insert_Condition]^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  { int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1; }^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P1_Replace_Type]^short  pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int pro =  ( access & Opcodes.ACC_PROTECTED )  > 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int pro =  ( access  ^  Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == fin ? fin : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == pro ? pro : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : pri;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^int pro =  ( pub & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^int pro =  ( 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^int pro =  ( pri & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P12_Insert_Condition]^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  { int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1; }^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  ( pub + pri + pro >= 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  ( pub   instanceof   pri   instanceof   pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  ( pub  !=  pri + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  >>  ( pub + pri + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  ( pri + pri + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  ( pub + pri + pub > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  ( pri + pub + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^if  ( pub + pri + pro )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^if  ( pub + pri )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^if  ( "public private and protected are mutually exclusive: " + access )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^if  ( pub + pri + pro > 3 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("public private and protected are mutually exclusive: " + access));^469^470^471^472^^461^479^if  ( pub + pri + pro > 1 )  { throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ; }^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P16_Remove_Block]^^469^470^471^472^^461^479^if  ( pub + pri + pro > 1 )  { throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ; }^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^469^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( access &  ( ~possibleAccess )  )  != 0 )  {     throw new IllegalArgumentException (  ( "Invalid access flags: " + access )  ) ; }^469^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^469^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( owner == null )  {     throw new IllegalArgumentException ( "Illegal outer class owner" ) ; }^469^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^469^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: "  <  access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "tected are mutually exc" + access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  )  ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + pro ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + pub ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  (  ( pub + pri )  + pro )  > 1 )  {     throw new IllegalArgumentException (  ( "public private and protected are mutually exclusive: " + access )  ) ; }^470^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^470^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: "   instanceof   access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ublic p" + access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: "  >  access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "c private and protected are mutually excublic private and protected are mutually exclusive: " + access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + pri ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ic private and protecteublic private and protected are mutually exclusive: " + access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P1_Replace_Type]^short  fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int fin =  ( access & Opcodes.ACC_FINAL )  != 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int fin =  ( access  >  Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int fin =  ( access & Opcodes.ACC_FINAL )  ==  ?  : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int fin =  ( access & Opcodes.ACC_FINAL )  == pro ? pro : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^int fin =  ( pro & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^int fin =  ( 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P1_Replace_Type]^short  abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  != 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^int abs =  ( access  >>  Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == pri ? pri : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 8 ? 8 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : -8;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^int abs =  ( pub & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^int abs =  ( 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P12_Insert_Condition]^if  (  ( access & ~possibleAccess )  != 0 )  { int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1; }^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P12_Insert_Condition]^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  { int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1; }^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  ( fin + abs == 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  ( fin  &  abs > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^if  &&  ( fin + abs > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^if  ( fin + abs > 6 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  ( pub + abs > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  ( fin + pub > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^if  ( abs + fin > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^if  ( fin + abs )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P6_Replace_Expression]^if  ( "final and abstract are mutually exclusive: " + access )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^if  ( fin + abs > 4 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("final and abstract are mutually exclusive: " + access));^475^476^477^478^^461^479^if  ( fin + abs > 1 )  { throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ; }^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P16_Remove_Block]^^475^476^477^478^^461^479^if  ( fin + abs > 1 )  { throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ; }^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  (  ( pub + pri )  + pro )  > 1 )  {     throw new IllegalArgumentException (  ( "public private and protected are mutually exclusive: " + access )  ) ; }^475^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( outer )  {     throw new IllegalStateException ( "visitOuterClass can be called only once." ) ; }^475^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( access &  ( ~possibleAccess )  )  != 0 )  {     throw new IllegalArgumentException (  ( "Invalid access flags: " + access )  ) ; }^475^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( start )  {     throw new IllegalStateException ( "visit must be called only once" ) ; }^475^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( superName != null )  {     throw new IllegalArgumentException ( "The super class name of the Object class must be 'null'" ) ; }^475^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( owner == null )  {     throw new IllegalArgumentException ( "Illegal outer class owner" ) ; }^475^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( source )  {     throw new IllegalStateException ( "visitSource can be called only once." ) ; }^475^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  ( attr == null )  {     throw new IllegalArgumentException ( "Invalid attribute  ( must not be null ) " ) ; }^475^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: "  ^  access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nal and abstract are inal and abstract are mutually exclusive: " + access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "public private and protected are mutually exclusive: " + access )  )  ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + pub ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  (  ( pub + pri )  + pro )  > 1 )  {     throw new IllegalArgumentException (  ( "public private and protected are mutually exclusive: " + access )  ) ; }^476^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P13_Insert_Block]^if  (  ( fin + abs )  > 1 )  {     throw new IllegalArgumentException (  ( "final and abstract are mutually exclusive: " + access )  ) ; }^476^^^^^461^479^[Delete]^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: al" + access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: "   instanceof   access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "final a" + access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + pro ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: "  ||  access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nd a" + access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[P5_Replace_Variable]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + pri ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
