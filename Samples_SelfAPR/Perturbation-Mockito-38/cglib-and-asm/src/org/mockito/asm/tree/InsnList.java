[P8_Replace_Mix]^private static boolean check;^50^^^^^45^55^public static boolean check;^[CLASS] InsnList InsnListIterator   [VARIABLES] 
[P1_Replace_Type]^private  long  size;^55^^^^^50^60^private int size;^[CLASS] InsnList InsnListIterator   [VARIABLES] 
[P3_Replace_Literal]^if ( index==size() + 5  )  {^570^^^^^569^577^if ( index==size (  )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P7_Replace_Invocation]^if ( index==toArray (  )  )  {^570^^^^^569^577^if ( index==size (  )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = null;     last = null; }else {     prev.next = null;     last = prev; }^570^^^^^569^577^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = next;     next.prev = null; }else {     prev.next = next;     next.prev = prev; }^570^^^^^569^577^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P5_Replace_Variable]^next = get ( size ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P7_Replace_Invocation]^next = iterator ( index ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^next = result.next;next = get ( index ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^prev ;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^prev = prev.prev;prev = next.prev;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^prev = result;prev = next.prev;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^prev = result.prev;prev = next.prev;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^next = iterator ( size ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P14_Delete_Statement]^^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^next = true;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^cache = null;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^next = result.next;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^first = null;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^location.next = null;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^last = null;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^next = result;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P7_Replace_Invocation]^prev = toArray (  ) ;^572^^^^^569^577^prev = getLast (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^prev  =  prev ;^572^^^^^569^577^prev = getLast (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P14_Delete_Statement]^^572^^^^^569^577^prev = getLast (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^prev ;^572^^^^^569^577^prev = getLast (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^next =  get ( null ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^prev  =  prev ;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P3_Replace_Literal]^if ( index==size() - 7  )  {^570^^^^^569^577^if ( index==size (  )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P5_Replace_Variable]^return index;^79^^^^^78^80^return size;^[CLASS] InsnList InsnListIterator  [METHOD] size [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P5_Replace_Variable]^return prev;^89^^^^^88^90^return first;^[CLASS] InsnList InsnListIterator  [METHOD] getFirst [RETURN_TYPE] AbstractInsnNode   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P5_Replace_Variable]^return prev;^99^^^^^98^100^return last;^[CLASS] InsnList InsnListIterator  [METHOD] getLast [RETURN_TYPE] AbstractInsnNode   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P2_Replace_Operator]^if  ( index < 0 && index >= size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P2_Replace_Operator]^if  ( index <= 0 || index >= size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P2_Replace_Operator]^if  ( index < 0 || index == size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P3_Replace_Literal]^if  ( index < index || index >= size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P5_Replace_Variable]^if  ( size < 0 || index >= index )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P6_Replace_Expression]^if  ( index < 0 ) {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P6_Replace_Expression]^if  (  index >= size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^if  ( index < 0  || index >= size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P15_Unwrap_Block]^throw new java.lang.IndexOutOfBoundsException();^113^114^115^^^112^120^if  ( index < 0 || index >= size )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P16_Remove_Block]^^113^114^115^^^112^120^if  ( index < 0 || index >= size )  { throw new IndexOutOfBoundsException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     throw new NoSuchElementException (  ) ; }^113^^^^^112^120^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^113^^^^^112^120^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^113^^^^^112^120^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^114^^^^^112^120^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^114^^^^^112^120^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P2_Replace_Operator]^if  ( cache != null )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^if  ( cache == true )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P15_Unwrap_Block]^cache = toArray();^116^117^118^^^112^120^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P16_Remove_Block]^^116^117^118^^^112^120^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^116^^^^^112^120^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^116^^^^^112^120^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P7_Replace_Invocation]^cache = size (  ) ;^117^^^^^112^120^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^cache  =  cache ;^117^^^^^112^120^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P14_Delete_Statement]^^117^^^^^112^120^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P8_Replace_Mix]^cache  = null ;^117^^^^^112^120^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[P5_Replace_Variable]^AbstractInsnNode i = prev;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode i = first;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P2_Replace_Operator]^while  ( i != null || i != insn )  {^132^^^^^130^136^while  ( i != null && i != insn )  {^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P2_Replace_Operator]^while  ( i == null && i != insn )  {^132^^^^^130^136^while  ( i != null && i != insn )  {^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P2_Replace_Operator]^while  ( i != null && i == insn )  {^132^^^^^130^136^while  ( i != null && i != insn )  {^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P8_Replace_Mix]^i =  next.next;^133^^^^^130^136^i = i.next;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^elem = elem.next;i = i.next;^133^^^^^130^136^i = i.next;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^insn = next;i = i.next;^133^^^^^130^136^i = i.next;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^first = next;i = i.next;^133^^^^^130^136^i = i.next;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;i = i.next;^133^^^^^130^136^i = i.next;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P8_Replace_Mix]^i =  null.next;^133^^^^^130^136^i = i.next;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P2_Replace_Operator]^return i == null;^135^^^^^130^136^return i != null;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P5_Replace_Variable]^return prev != null;^135^^^^^130^136^return i != null;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P8_Replace_Mix]^returninsn ;^135^^^^^130^136^return i != null;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P2_Replace_Operator]^if  ( check || !contains ( insn )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P5_Replace_Variable]^if  ( check && !contains ( prev )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P5_Replace_Variable]^if  ( insn && !contains ( check )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P6_Replace_Expression]^if  ( check ) {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P6_Replace_Expression]^if  (  !contains ( insn )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P7_Replace_Invocation]^if  ( check && !indexOf ( insn )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^154^155^156^^^153^161^if  ( check && !contains ( insn )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P16_Remove_Block]^^154^155^156^^^153^161^if  ( check && !contains ( insn )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^154^^^^^153^161^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^154^^^^^153^161^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  (  ( insn.index )  ==  ( -1 )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^154^^^^^153^161^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^154^^^^^153^161^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^155^^^^^153^161^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^155^^^^^153^161^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^155^^^^^153^161^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P2_Replace_Operator]^if  ( cache != null )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P8_Replace_Mix]^if  ( cache == false )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P15_Unwrap_Block]^cache = toArray();^157^158^159^^^153^161^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P16_Remove_Block]^^157^158^159^^^153^161^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^157^^^^^153^161^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^157^^^^^153^161^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P7_Replace_Invocation]^cache = size (  ) ;^158^^^^^153^161^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P8_Replace_Mix]^cache ;^158^^^^^153^161^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P14_Delete_Statement]^^158^^^^^153^161^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P8_Replace_Mix]^cache  = null ;^158^^^^^153^161^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P5_Replace_Variable]^AbstractInsnNode insn = prev;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode insn = first;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P2_Replace_Operator]^while  ( insn == null )  {^170^^^^^168^174^while  ( insn != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P8_Replace_Mix]^insn =  prev.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^elem = elem.next;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^first = insns.first;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^i = i.next;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^insn = next;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^last = insns.last;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^first = next;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^first = insn;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^next = result.next;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^insn.next = next;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^last = insn;insn = insn.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P14_Delete_Statement]^^171^172^^^^168^174^insn.accept ( mv ) ; insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P8_Replace_Mix]^insn =  next.next;^172^^^^^168^174^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[P3_Replace_Literal]^return iterator ( size ) ;^182^^^^^181^183^return iterator ( 0 ) ;^[CLASS] InsnList InsnListIterator  [METHOD] iterator [RETURN_TYPE] ListIterator   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P7_Replace_Invocation]^return get ( 0 ) ;^182^^^^^181^183^return iterator ( 0 ) ;^[CLASS] InsnList InsnListIterator  [METHOD] iterator [RETURN_TYPE] ListIterator   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P8_Replace_Mix]^return get ( 0 / 0 ) ;^182^^^^^181^183^return iterator ( 0 ) ;^[CLASS] InsnList InsnListIterator  [METHOD] iterator [RETURN_TYPE] ListIterator   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P3_Replace_Literal]^return iterator ( -3 ) ;^182^^^^^181^183^return iterator ( 0 ) ;^[CLASS] InsnList InsnListIterator  [METHOD] iterator [RETURN_TYPE] ListIterator   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P14_Delete_Statement]^^182^^^^^181^183^return iterator ( 0 ) ;^[CLASS] InsnList InsnListIterator  [METHOD] iterator [RETURN_TYPE] ListIterator   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P5_Replace_Variable]^return new InsnListIterator ( size ) ;^191^^^^^190^192^return new InsnListIterator ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] iterator [RETURN_TYPE] ListIterator   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[P1_Replace_Type]^short  i = 0;^200^^^^^199^209^int i = 0;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P3_Replace_Literal]^int i = 5;^200^^^^^199^209^int i = 0;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode elem = prev;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode elem = first;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P2_Replace_Operator]^while  ( elem == null )  {^203^^^^^199^209^while  ( elem != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P5_Replace_Variable]^insns[i] = next;^204^^^^^199^209^insns[i] = elem;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P8_Replace_Mix]^insns[i]  =  insns[i] ;^204^^^^^199^209^insns[i] = elem;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;insns[i] = elem;^204^^^^^199^209^insns[i] = elem;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insns[i] = elem;^204^^^^^199^209^insns[i] = elem;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = elem;insns[i] = elem;^204^^^^^199^209^insns[i] = elem;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P8_Replace_Mix]^elem.index  =  elem.index ;^205^^^^^199^209^elem.index = i++;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;elem.index = i++;^205^^^^^199^209^elem.index = i++;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;elem.index = i++;^205^^^^^199^209^elem.index = i++;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;elem.index = i++;^205^^^^^199^209^elem.index = i++;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;elem.index = i++;^205^^^^^199^209^elem.index = i++;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.prev = last;elem.index = i++;^205^^^^^199^209^elem.index = i++;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P8_Replace_Mix]^elem =  prev.next;^206^^^^^199^209^elem = elem.next;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^i = i.next;elem = elem.next;^206^^^^^199^209^elem = elem.next;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;elem = elem.next;^206^^^^^199^209^elem = elem.next;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = result.next;elem = elem.next;^206^^^^^199^209^elem = elem.next;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P5_Replace_Variable]^insns[i] = prev;^204^^^^^199^209^insns[i] = elem;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P8_Replace_Mix]^elem =  last.next;^206^^^^^199^209^elem = elem.next;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P8_Replace_Mix]^return cache;^208^^^^^199^209^return insns;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check || ! ( contains ( location )  && insn.index == -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check && ! ( contains ( location )  && insn.index >= -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^if  ( check && ! ( contains ( location )  && insn.index == -index )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  (  ! ( contains ( location )  && insn.index == -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( contains(location && insn.index == -1) )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( insn.index == -1 )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P7_Replace_Invocation]^if  ( check && ! ( indexOf ( location )  && insn.index == -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^222^223^224^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^222^223^224^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^222^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^222^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^222^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^222^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^223^^^^^221^249^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^223^^^^^221^249^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( check && ! ( contains ( next )  && insn.index == -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( check && ! ( indexOf ( last )  && insn.index == -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^int index = location.index;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode next = location.next;^225^^^^^221^249^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.next = location;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.next =  prev;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = location ;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = location;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;insn.next = next;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( next == null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( prev != null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( next != this )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^next.prev = insn;^227^228^229^230^231^221^249^if  ( next != null )  { next.prev = insn; } else { last = insn; }^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^227^228^229^230^231^221^249^if  ( next != null )  { next.prev = insn; } else { last = insn; }^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev != null )  {     prev.next = insn; }else {     first = insn; }^227^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = ifirst; }else {     prev.next = ifirst; }^227^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = ilast; }else {     next.prev = ilast; }^227^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = insn; }else {     next.prev = insn; }^227^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^227^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = insn; }else {     prev.next = insn; }^227^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = prev;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = insn;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev =  prev;^228^^^^^221^249^next.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev =  location;^228^^^^^221^249^next.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = next;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  null;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = insn;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode prev = location.prev;^232^^^^^221^249^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.prev = last;^233^^^^^221^249^insn.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.prev =  null;^233^^^^^221^249^insn.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( prev == null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( next != null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( prev != this )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^prev.next = insn;^234^235^236^237^238^221^249^if  ( prev != null )  { prev.next = insn; } else { first = insn; }^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^234^235^236^237^238^221^249^if  ( prev != null )  { prev.next = insn; } else { first = insn; }^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next != null )  {     next.prev = insn; }else {     last = insn; }^234^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = ifirst; }else {     prev.next = ifirst; }^234^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = ilast; }else {     next.prev = ilast; }^234^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = insn; }else {     next.prev = insn; }^234^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^234^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = insn; }else {     prev.next = insn; }^234^^^^^221^249^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first = prev;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;first = insn;^237^^^^^234^238^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^prev.next = location;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next =  next;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache[index] = insn;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;prev.next = insn;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^prev.next = prev;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next =  null;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first = location;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first =  next;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;first = insn;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( cache == null )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( cache != false )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = i;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = 1;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^size = 0;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = 0;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^cache[index] = next;^241^^^^^221^249^cache[index] = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^cache[index]  = null ;^241^^^^^221^249^cache[index] = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;cache[index] = insn;^241^^^^^221^249^cache[index] = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;cache[index] = insn;^241^^^^^221^249^cache[index] = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;cache[index] = insn;^241^^^^^221^249^cache[index] = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.index = size;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = index;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P1_Replace_Type]^short  index = location.index;^240^^^^^221^249^int index = location.index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;int index = location.index;^240^^^^^221^249^int index = location.index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^cache[index] = prev;^241^^^^^221^249^cache[index] = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = size;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = 3;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^size = 0;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = 0;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P1_Replace_Type]^long  index = location.index;^240^^^^^221^249^int index = location.index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^location.index = -9;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^location.index = -3;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;location.index = -1;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;location.index = -1;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;location.index = -1;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = insn;location.index = -1;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;location.index = -1;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;location.index = -1;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location .prev = ilast;location.index = -1;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;location.index = -1;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^location.prev = true;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = insn;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location .prev = ilast;location.prev = null;^247^^^^^221^249^location.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^location.next = false;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = insn;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location .prev = ilast;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;location.next = null;^248^^^^^221^249^location.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check || insn.index != -1 )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check && insn.index <= -1 )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^if  ( check && insn.index != -10 )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  (  insn.index != -1 )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( check && insn.index != -4 )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( check && insns == this )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^260^261^262^^^259^274^if  ( check && insn.index != -1 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^260^261^262^^^259^274^if  ( check && insn.index != -1 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^260^^^^^259^274^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^260^^^^^259^274^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^260^^^^^259^274^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  (  ( insn.index )  ==  ( -1 )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^260^^^^^259^274^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >=  ( size )  )  )  {     throw new IndexOutOfBoundsException (  ) ; }^260^^^^^259^274^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^261^^^^^259^274^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^261^^^^^259^274^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^261^^^^^259^274^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( last != null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( next == null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( prev == true )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last.next = prev;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = insn;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = location ;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = location;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache[index] = insn;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;last.next = insn;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.prev = prev;^269^^^^^259^274^insn.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.prev  =  insn.prev ;^269^^^^^259^274^insn.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first = location;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first =  prev;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;first = insn;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  null;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = insn;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  prev;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last.next =  location;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.prev  = null ;^269^^^^^259^274^insn.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = location;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  prev;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = insn;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^cache = false;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^272^^^^^259^274^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = -2;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = 1;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^size = 0;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = 0;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check || insns == this )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( check && insns >= this )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns && check == this )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  (  insns == this )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( check && insn.index != -1 )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^284^285^286^^^283^302^if  ( check && insns == this )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^284^285^286^^^283^302^if  ( check && insns == this )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^284^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^284^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  (  ( insn.index )  ==  ( -1 )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^284^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^284^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >=  ( size )  )  )  {     throw new IndexOutOfBoundsException (  ) ; }^284^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^285^^^^^283^302^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^285^^^^^283^302^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^285^^^^^283^302^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( insns.size <= 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P3_Replace_Literal]^if  ( insns.size == size )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( size == 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns.size.size == 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns == 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( insns.size == 0  )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^return ;^287^288^289^^^283^302^if  ( insns.size == 0 )  { return; }^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^287^288^289^^^283^302^if  ( insns.size == 0 )  { return; }^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^287^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^287^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += size;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += insns.size.size;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += insns;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^size +=  null.size;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;size += insns.size;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;size += insns.size;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( last != null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( last == false )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^291^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insns.first;     last = insns.last; }else {     AbstractInsnNode elem = insns.last;     first.prev = elem;     elem.next = first;     first = insns.first; }^291^^^^^283^302^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last.next = next;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^last.next =  location;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = elem;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insns[i] = elem;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = location ;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;last.next = elem;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^elem.prev = prev;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^elem.prev ;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = location;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = ilast;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = prev;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location .prev = ilast;elem.prev = last;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = next;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = insns.last.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = insns;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^last =  null.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;last = insns.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insns.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^size += insns.size;last = insns.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insns.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insns.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;last = insns.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode elem = prev;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode elem = insns.first.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode elem = insns;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^AbstractInsnNode elem = location;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode elem = insns.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = location;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = insns.first.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = insns;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^first =  null.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;first = insns.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insns.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insns.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insns.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^size += insns.size;first = insns.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;first = insns.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = insns.last.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = insns;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^last =  null.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;last = insns.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insns.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^size += insns.size;last = insns.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insns.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insns.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;last = insns.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = next;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last.next = prev;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^elem.prev = location;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^elem.prev  =  elem.prev ;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = prev;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^AbstractInsnNode elem = next;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^cache = true;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^300^^^^^283^302^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P3_Replace_Literal]^insns.removeAll ( true ) ;^301^^^^^283^302^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P7_Replace_Invocation]^insns.insert ( false ) ;^301^^^^^283^302^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P14_Delete_Statement]^^301^^^^^283^302^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^removeAll ( check ) ;insns.removeAll ( false ) ;^301^^^^^283^302^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( check || insn.index != -1 )  {^313^^^^^312^327^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check && insn.index >= -1 )  {^313^^^^^312^327^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^if  ( check && insn.index != --1 )  {^313^^^^^312^327^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^313^^^^^312^327^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  (  insn.index != -1 )  {^313^^^^^312^327^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( check && insns == this )  {^313^^^^^312^327^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^313^314^315^^^312^327^if  ( check && insn.index != -1 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^313^314^315^^^312^327^if  ( check && insn.index != -1 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^313^^^^^312^327^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^313^^^^^312^327^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^313^^^^^312^327^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  (  ( insn.index )  ==  ( -1 )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^313^^^^^312^327^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >=  ( size )  )  )  {     throw new IndexOutOfBoundsException (  ) ; }^313^^^^^312^327^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^314^^^^^312^327^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^314^^^^^312^327^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^314^^^^^312^327^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( first != null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( prev == null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( first == false )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first.prev =  location;^321^^^^^312^327^first.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.next = location;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.next ;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = location ;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = location;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;insn.next = first;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first = prev;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;first = insn;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  prev;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = insn;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first = next;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  next;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first.prev = prev;^321^^^^^312^327^first.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first =  prev;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;first = insn;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^cache = this;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^325^^^^^312^327^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = i;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = 0 + 2;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^size = 0;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = 0;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check || insns == this )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( check && insns <= this )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns && check == this )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  (  insns == this )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( check && insn.index != -1 )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^337^338^339^^^336^355^if  ( check && insns == this )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^337^338^339^^^336^355^if  ( check && insns == this )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^337^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^337^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  (  ( insn.index )  ==  ( -1 )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^337^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^337^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >=  ( size )  )  )  {     throw new IndexOutOfBoundsException (  ) ; }^337^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^338^^^^^336^355^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^338^^^^^336^355^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( insns.size <= 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P3_Replace_Literal]^if  ( insns.size == i )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( index == 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns.size.size == 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns == 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( insns.size == 0  )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^return ;^340^341^342^^^336^355^if  ( insns.size == 0 )  { return; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^340^341^342^^^336^355^if  ( insns.size == 0 )  { return; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^340^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^340^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += insns.size.size;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += insns;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^size +=  null.size;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;size += insns.size;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;size += insns.size;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( first != null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( prev == false )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^344^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insns.first;     last = insns.last; }else {     AbstractInsnNode elem = insns.first;     last.next = elem;     elem.prev = last;     last = insns.last; }^344^^^^^336^355^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first.prev = prev;^349^^^^^336^355^first.prev = elem;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^first.prev =  null;^349^^^^^336^355^first.prev = elem;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^elem.next = prev;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^elem.next  =  elem.next ;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.prev = last;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;elem.next = first;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = last;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = insns.first.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = insns;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^first =  null.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;first = insns.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insns.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insns.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insns.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^size += insns.size;first = insns.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;first = insns.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode elem = insns.last.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode elem = insns;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^AbstractInsnNode elem = prev;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode elem = insns.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = last;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = insns.first.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = insns;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^first =  null.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;first = insns.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insns.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insns.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insns.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^size += insns.size;first = insns.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;first = insns.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = prev;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = insns.last.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = insns;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^last =  null.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;last = insns.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insns.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^size += insns.size;last = insns.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insns.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insns.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;last = insns.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = prev;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = location;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^elem.next  = null ;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = next;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode elem = next;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^cache = this;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^353^^^^^336^355^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P3_Replace_Literal]^insns.removeAll ( true ) ;^354^^^^^336^355^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P7_Replace_Invocation]^insns.insert ( false ) ;^354^^^^^336^355^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^insns .remove ( next )  ;^354^^^^^336^355^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P14_Delete_Statement]^^354^^^^^336^355^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^removeAll ( check ) ;insns.removeAll ( false ) ;^354^^^^^336^355^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( check || ! ( contains ( location )  && insn.index == -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check && ! ( contains ( location )  && insn.index != -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^if  ( check && ! ( contains ( location )  && insn.index == -index )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  (  ! ( contains ( location )  && insn.index == -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( contains(location && insn.index == -1) )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( insn.index == -1 )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P7_Replace_Invocation]^if  ( check && ! ( indexOf ( location )  && insn.index == -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( check && ! ( contains ( location )  && insn.index == -4 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^369^370^371^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^369^370^371^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^369^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^369^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^369^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^369^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^370^^^^^368^384^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^370^^^^^368^384^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^370^^^^^368^384^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( check && ! ( contains ( prev )  && insn.index == -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( check && ! ( indexOf ( prev )  && insn.index == -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^int index = location.index;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode next = location.next;^373^^^^^368^384^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( next != null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( prev == null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( next == true )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^last = insn;^374^375^376^377^378^368^384^if  ( next == null )  { last = insn; } else { next.prev = insn; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^374^375^376^377^378^368^384^if  ( next == null )  { last = insn; } else { next.prev = insn; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next != null )  {     next.prev = insn; }else {     last = insn; }^374^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev != null )  {     prev.next = insn; }else {     first = insn; }^374^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = ifirst; }else {     prev.next = ifirst; }^374^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = ilast; }else {     next.prev = ilast; }^374^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^374^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^374^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = insn; }else {     prev.next = insn; }^374^^^^^368^384^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^next.prev = prev;^377^^^^^368^384^next.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = next;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  null;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = insn;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = location;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  prev;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^location.next = prev;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^location.next =  null;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = insn;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location .prev = ilast;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache[index] = insn;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;location.next = insn;^379^^^^^368^384^location.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.next = last;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.next =  prev;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = location ;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = location;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;insn.next = next;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.prev = next;^381^^^^^368^384^insn.prev = location;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.prev =  prev;^381^^^^^368^384^insn.prev = location;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^cache = true;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^382^^^^^368^384^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = 2;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = 0L;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^size = 0;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = 0;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check || ! ( contains ( location )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( check && ! ( contains ( location )  && insns == this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( location && ! ( contains ( check )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns && ! ( contains ( location )  && check != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  (  ! ( contains ( location )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  ( contains(location && insns != this) )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  ( insns != this )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P7_Replace_Invocation]^if  ( check && ! ( indexOf ( location )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( check && ! ( contains ( insn )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^397^398^399^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^397^398^399^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^397^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^397^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  (  ( insn.index )  ==  ( -1 )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^397^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^397^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^398^^^^^396^417^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^398^^^^^396^417^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( check && ! ( contains ( prev )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( insns.size != 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P3_Replace_Literal]^if  ( insns.size == -1 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( index == 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns.size.size == 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns == 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( insns.size == 0  )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^return ;^400^401^402^^^396^417^if  ( insns.size == 0 )  { return; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^400^401^402^^^396^417^if  ( insns.size == 0 )  { return; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^400^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^400^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += size;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += insns.size.size;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += insns;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^size +=  null.size;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;size += insns.size;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;size += insns.size;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ifirst = prev;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ifirst = insns.first.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ifirst = insns;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode ifirst = insns.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ilast = prev;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ilast = insns.last.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ilast = insns;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^AbstractInsnNode ilast = last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode ilast = insns.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^int index = location.index;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode next = location.next;^406^^^^^396^417^AbstractInsnNode next = location.next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( next != null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( prev == null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( next == true )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^last = ilast;^407^408^409^410^411^396^417^if  ( next == null )  { last = ilast; } else { next.prev = ilast; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^407^408^409^410^411^396^417^if  ( next == null )  { last = ilast; } else { next.prev = ilast; }^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( next != null )  {     next.prev = insn; }else {     last = insn; }^407^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( prev != null )  {     prev.next = insn; }else {     first = insn; }^407^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = ifirst; }else {     prev.next = ifirst; }^407^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = insn; }else {     next.prev = insn; }^407^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = null;     last = null; }else {     prev.next = null;     last = prev; }^407^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^407^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^407^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = insn; }else {     prev.next = insn; }^407^^^^^396^417^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^next.prev = location;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^next.prev =  last;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = elem;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = insn;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = prev;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location .prev = ilast;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.prev = last;next.prev = ilast;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = location;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;last = ilast;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = ilast;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;last = ilast;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = ilast;last = ilast;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;last = ilast;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;last = ilast;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = ilast;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;last = ilast;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^last = prev;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^location.next =  null;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = insn;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location .prev = ilast;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;location.next = ifirst;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^ilast.next = prev;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^ilast.next =  location;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = location ;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = location;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;ilast.next = next;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^ifirst.prev = prev;^414^^^^^396^417^ifirst.prev = location;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^ifirst.prev =  null;^414^^^^^396^417^ifirst.prev = location;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^cache = true;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^415^^^^^396^417^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P3_Replace_Literal]^insns.removeAll ( true ) ;^416^^^^^396^417^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P7_Replace_Invocation]^insns.insert ( false ) ;^416^^^^^396^417^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P14_Delete_Statement]^^416^^^^^396^417^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^removeAll ( check ) ;insns.removeAll ( false ) ;^416^^^^^396^417^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( check || ! ( contains ( location )  && insn.index == -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check && ! ( contains ( location )  && insn.index > -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^if  ( check && ! ( contains ( location )  && insn.index == -size )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  (  ! ( contains ( location )  && insn.index == -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( contains(location && insn.index == -1) )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( insn.index == -1 )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P7_Replace_Invocation]^if  ( check && ! ( indexOf ( location )  && insn.index == -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^431^432^433^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^431^432^433^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^431^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^431^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^431^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^431^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^432^^^^^430^446^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^432^^^^^430^446^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( check && ! ( contains ( last )  && insn.index == -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( check && ! ( contains ( insn )  && insn.index == -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode prev = location.prev;^435^^^^^430^446^AbstractInsnNode prev = location.prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( prev != null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( location == null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( prev == false )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^first = insn;^436^437^438^439^440^430^446^if  ( prev == null )  { first = insn; } else { prev.next = insn; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^436^437^438^439^440^430^446^if  ( prev == null )  { first = insn; } else { prev.next = insn; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next != null )  {     next.prev = insn; }else {     last = insn; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev != null )  {     prev.next = insn; }else {     first = insn; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = ifirst; }else {     prev.next = ifirst; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = ilast; }else {     next.prev = ilast; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = insn; }else {     next.prev = insn; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = null;     last = null; }else {     prev.next = null;     last = prev; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = next;     next.prev = null; }else {     prev.next = next;     next.prev = prev; }^436^^^^^430^446^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^prev.next = location;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next =  next;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache[index] = insn;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;prev.next = insn;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first = location;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;first = insn;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first =  next;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^location.prev = last;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = ilast;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location .prev = ilast;location.prev = insn;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.next = next;^442^^^^^430^446^insn.next = location;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.next =  prev;^442^^^^^430^446^insn.next = location;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn.prev = last;^443^^^^^430^446^insn.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^cache = false;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^444^^^^^430^446^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = -1;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = 0 / 4;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^size = 0;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = 0;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( check || ! ( contains ( location  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( check && ! ( contains ( location  )  && insns > this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( check && ! ( contains ( prev  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( location && ! ( contains ( check  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns && ! ( contains ( location  )  && check != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  (  ! ( contains ( location  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  ( contains(location && insns != this) )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P6_Replace_Expression]^if  ( insns != this )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P7_Replace_Invocation]^if  ( check && ! ( indexOf ( location  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( check && ! ( contains ( insn  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^459^460^461^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^459^460^461^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^459^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! ( contains ( insn )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^459^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  (  ( insn.index )  ==  ( -1 )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^459^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^459^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^throw new IndexOutOfBoundsException  (" ")  ; ;^460^^^^^458^479^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^460^^^^^458^479^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^460^^^^^458^479^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( check && ! ( contains ( last  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( insns.size != 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P3_Replace_Literal]^if  ( insns.size == -6 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( size == 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns.size.size == 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( insns == 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^return ;^462^463^464^^^458^479^if  ( insns.size == 0 )  { return; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^462^463^464^^^458^479^if  ( insns.size == 0 )  { return; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^462^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^462^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += index;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += insns.size.size;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^size += insns;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^size +=  null.size;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;size += insns.size;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;size += insns.size;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ifirst = location;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ifirst = insns.first.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ifirst = insns;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^AbstractInsnNode ifirst = last;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode ifirst = insns.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ilast = prev;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ilast = insns.last.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode ilast = insns;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode ilast = insns.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode prev = location .prev;^468^^^^^458^479^AbstractInsnNode prev = location .prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( prev != null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^if  ( location == null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^if  ( prev == true )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P15_Unwrap_Block]^first = ifirst;^469^470^471^472^473^458^479^if  ( prev == null )  { first = ifirst; } else { prev.next = ifirst; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P16_Remove_Block]^^469^470^471^472^473^458^479^if  ( prev == null )  { first = ifirst; } else { prev.next = ifirst; }^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( next != null )  {     next.prev = insn; }else {     last = insn; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( prev != null )  {     prev.next = insn; }else {     first = insn; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = ilast; }else {     next.prev = ilast; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = insn; }else {     next.prev = insn; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = null;     last = null; }else {     prev.next = null;     last = prev; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = next;     next.prev = null; }else {     prev.next = next;     next.prev = prev; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = insn; }else {     prev.next = insn; }^469^^^^^458^479^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^prev.next = prev;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^prev.next =  last;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;prev.next = ifirst;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = prev;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;first = ifirst;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^first = location;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^prev.next = location;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^prev.next =  next;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^location .prev = last;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first.prev = insn;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = ifirst;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = insn;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = ilast;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = insn;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = insn;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.prev = last;location .prev = ilast;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^ilast.next =  prev ;^475^^^^^458^479^ilast.next = location ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P5_Replace_Variable]^ifirst.prev = last;^476^^^^^458^479^ifirst.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^ifirst.prev =  next;^476^^^^^458^479^ifirst.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P8_Replace_Mix]^cache = true;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^477^^^^^458^479^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P3_Replace_Literal]^insns.removeAll ( true ) ;^478^^^^^458^479^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P7_Replace_Invocation]^insns.insert ( false ) ;^478^^^^^458^479^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P14_Delete_Statement]^^478^^^^^458^479^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P11_Insert_Donor_Statement]^removeAll ( check ) ;insns.removeAll ( false ) ;^478^^^^^458^479^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[P2_Replace_Operator]^if  ( check || !contains ( insn )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( check && !contains ( prev )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( insn && !contains ( check )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( check ) {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  (  !contains ( insn )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P7_Replace_Invocation]^if  ( check && !indexOf ( insn )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^491^492^493^^^490^518^if  ( check && !contains ( insn )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^491^492^493^^^490^518^if  ( check && !contains ( insn )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  ( insns !=  ( this )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^491^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( insns ==  ( this )  )  )  {     throw new IllegalArgumentException (  ) ; }^491^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  ( ! (  ( contains ( location )  )  &&  (  ( insn.index )  ==  ( -1 )  )  )  )  )  {     throw new IllegalArgumentException (  ) ; }^491^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( check )  &&  (  ( insn.index )  !=  ( -1 )  )  )  {     throw new IllegalArgumentException (  ) ; }^491^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^492^^^^^490^518^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new NoSuchElementException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^492^^^^^490^518^throw new IllegalArgumentException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( check && !contains ( last )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode next = insn.next;^495^^^^^490^518^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode prev = insn.prev;^496^^^^^490^518^AbstractInsnNode prev = insn.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( next != null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( location == null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P6_Replace_Expression]^if  ( prev == null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( next == true )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( prev != null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( insn == null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( prev == this )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( index ==  ( size (  )  )  )  {     next = null;     prev = getLast (  ) ; }else {     next = get ( index ) ;     prev = next.prev; }^506^^^^^497^513^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = ifirst; }else {     prev.next = ifirst; }^506^^^^^497^513^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = null;     last = null; }else {     prev.next = null;     last = prev; }^506^^^^^497^513^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^506^^^^^497^513^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^506^^^^^497^513^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = insn; }else {     prev.next = insn; }^506^^^^^497^513^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^prev.next = insn;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next =  location;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;prev.next = next;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^next.prev = next;^511^^^^^497^513^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev =  last;^511^^^^^497^513^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first =  prev;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^i = i.next;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;first = next;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev = true;^508^^^^^497^513^next.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev = false;^508^^^^^497^513^next.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next =  last;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^next.prev = insn;^511^^^^^497^513^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( prev != null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( insn == null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( prev == true )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( index ==  ( size (  )  )  )  {     next = null;     prev = getLast (  ) ; }else {     next = get ( index ) ;     prev = next.prev; }^498^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = ifirst; }else {     prev.next = ifirst; }^498^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( next == null )  {     last = ilast; }else {     next.prev = ilast; }^498^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^498^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^498^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = next;     next.prev = null; }else {     prev.next = next;     next.prev = prev; }^498^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = insn; }else {     prev.next = insn; }^498^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next = this;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;prev.next = null;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = last;^503^^^^^498^504^last = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  location;^503^^^^^498^504^last = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first = false;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;first = null;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last = true;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;last = null;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first = true;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last = this;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next = this;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;prev.next = null;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = next;^503^^^^^490^518^last = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next = false;^502^^^^^498^504^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = insn;^503^^^^^498^504^last = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last =  next;^503^^^^^498^504^last = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last = false;^500^^^^^490^518^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( prev != null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( insn == null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( prev == true )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( index ==  ( size (  )  )  )  {     next = null;     prev = getLast (  ) ; }else {     next = get ( index ) ;     prev = next.prev; }^506^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = ifirst; }else {     prev.next = ifirst; }^506^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = null;     last = null; }else {     prev.next = null;     last = prev; }^506^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( first )  == null )  {     first = insn;     last = insn; }else {     first.prev = insn;     insn.next = first; }^506^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  (  ( last )  == null )  {     first = insn;     last = insn; }else {     last.next = insn;     insn.prev = last; }^506^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P13_Insert_Block]^if  ( prev == null )  {     first = insn; }else {     prev.next = insn; }^506^^^^^490^518^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^prev.next = insn;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;prev.next = next;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^next.prev = next;^511^^^^^506^512^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev =  location;^511^^^^^506^512^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first = prev;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^i = i.next;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;first = next;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev = false;^508^^^^^490^518^next.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first = this;^499^^^^^490^518^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next = true;^502^^^^^490^518^prev.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^last = location;^503^^^^^490^518^last = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^first = insn;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first =  location;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev = this;^508^^^^^490^518^next.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^prev.next = prev;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^prev.next =  last;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.next = first;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = ifirst;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;prev.next = next;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^next.prev = next;^511^^^^^490^518^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^next.prev =  null;^511^^^^^490^518^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^cache = this;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^514^^^^^490^518^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = -index;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = -1 - 1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = -1;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.prev = true;^516^^^^^490^518^insn.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( prev != null )  { insn.prev = null; }^516^^^^^490^518^insn.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( prev == null )  { insn.prev = null; }^516^^^^^490^518^insn.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.next = false;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = location;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;insn.next = null;^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( next != null )  { insn.next = null; }^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( next == null )  { insn.next = null; }^517^^^^^490^518^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^while  ( insn == null )  {^529^^^^^526^541^while  ( insn != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = -size;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = -3;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.index = -1;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem.index = i++;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.index = -1;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.prev = true;^532^^^^^526^541^insn.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.next = false;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = insn;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = -1;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = first;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = insn;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last.next = elem;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = prev;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = location;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;insn.next = null;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( next != null )  { insn.next = null; }^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( next == null )  { insn.next = null; }^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn = prev;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn =  last;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = last;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^i = i.next;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = next;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = index;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^ilast.next = next;insn = next;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode next = insn.next;^530^^^^^526^541^AbstractInsnNode next = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = -i;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = -4;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.prev = false;^532^^^^^526^541^insn.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( prev != null )  { insn.prev = null; }^532^^^^^526^541^insn.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( prev == null )  { insn.prev = null; }^532^^^^^526^541^insn.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.next = true;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^insn = insn;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^insn.index = --4;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.prev = this;^532^^^^^526^541^insn.prev = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.next = this;^533^^^^^526^541^insn.next = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode insn = prev;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode insn = first;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn.index = -1L;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode insn = next;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P3_Replace_Literal]^size = index;^537^^^^^526^541^size = 0;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^size = 0 ;^537^^^^^526^541^size = 0;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.index = 0;size = 0;^537^^^^^526^541^size = 0;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^first = this;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = ifirst;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;first = null;^538^^^^^526^541^first = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^last = true;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = ilast;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = prev;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^cache = null;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;last = null;^539^^^^^526^541^last = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^cache = true;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^prev.next = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.prev = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.prev = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^location.next = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next.prev = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = null;cache = null;^540^^^^^526^541^cache = null;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P7_Replace_Invocation]^getLast ( check ) ;^547^^^^^546^548^removeAll ( check ) ;^[CLASS] InsnList InsnListIterator  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^removeAll ( mark ) ;^547^^^^^546^548^removeAll ( check ) ;^[CLASS] InsnList InsnListIterator  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P14_Delete_Statement]^^547^^^^^546^548^removeAll ( check ) ;^[CLASS] InsnList InsnListIterator  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insns.removeAll ( false ) ;removeAll ( check ) ;^547^^^^^546^548^removeAll ( check ) ;^[CLASS] InsnList InsnListIterator  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode insn = prev;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode insn = first;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^while  ( insn == null )  {^557^^^^^555^563^while  ( insn != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( insn  <  LabelNode )  {^558^^^^^555^563^if  ( insn instanceof LabelNode )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^if  ( location instanceof LabelNode )  {^558^^^^^555^563^if  ( insn instanceof LabelNode )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^if  ( last instanceof LabelNode )  {^558^^^^^555^563^if  ( insn instanceof LabelNode )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P15_Unwrap_Block]^((org.mockito.asm.tree.LabelNode) (insn)).resetLabel();^558^559^560^^^555^563^if  ( insn instanceof LabelNode )  { (  ( LabelNode )  insn ) .resetLabel (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P16_Remove_Block]^^558^559^560^^^555^563^if  ( insn instanceof LabelNode )  { (  ( LabelNode )  insn ) .resetLabel (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P14_Delete_Statement]^^559^^^^^555^563^(  ( LabelNode )  insn ) .resetLabel (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn =  next.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^elem = elem.next;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insns.first;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^i = i.next;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = next;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insns.last;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = next;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^first = insn;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^next = result.next;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^insn.next = next;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P11_Insert_Donor_Statement]^last = insn;insn = insn.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( insn  >  LabelNode )  {^558^^^^^555^563^if  ( insn instanceof LabelNode )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^insn =  location.next;^561^^^^^555^563^insn = insn.next;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^return next == null;^580^^^^^579^581^return next != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P5_Replace_Variable]^return last != null;^580^^^^^579^581^return next != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P8_Replace_Mix]^return next ;^580^^^^^579^581^return next != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P12_Insert_Condition]^if  ( next != null )  { return next != null; }^580^^^^^579^581^return next != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[P2_Replace_Operator]^if  ( next != null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^if  ( next == false )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException();^584^585^586^^^583^591^if  ( next == null )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P16_Remove_Block]^^584^585^586^^^583^591^if  ( next == null )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^584^^^^^583^591^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( index < 0 )  ||  ( index >=  ( size )  )  )  {     throw new IndexOutOfBoundsException (  ) ; }^584^^^^^583^591^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     throw new NoSuchElementException (  ) ; }^585^^^^^583^591^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^return 0;^585^^^^^583^591^throw new NoSuchElementException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new NoSuchElementException  (" ")  ;^585^^^^^583^591^throw new NoSuchElementException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new NoSuchElementException  (" ")  ;^585^^^^^583^591^throw new NoSuchElementException  (" ")  ;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode result = insn;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^AbstractInsnNode result = location;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^prev = insn;^588^^^^^583^591^prev = result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^prev =  last;^588^^^^^583^591^prev = result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = prev.prev;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = result.prev;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = next.prev;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = result.next;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = result;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^next =  location.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = result;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^elem = elem.next;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = result.prev;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^insn = insn.next;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = get ( index ) ;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = result;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^return insn;^590^^^^^583^591^return result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^InsnList.this.remove ( last ) ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P7_Replace_Invocation]^InsnList.this.toArray ( prev ) ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^InsnList.this.remove ( result ) ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P14_Delete_Statement]^^594^595^^^^593^596^InsnList.this.remove ( prev ) ; prev = prev.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^prev ;^595^^^^^593^596^prev = prev.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = result;prev = prev.prev;^595^^^^^593^596^prev = prev.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = result.prev;prev = prev.prev;^595^^^^^593^596^prev = prev.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = next.prev;prev = prev.prev;^595^^^^^593^596^prev = prev.prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P2_Replace_Operator]^return prev == null;^599^^^^^598^600^return prev != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^return location != null;^599^^^^^598^600^return prev != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^return prev ;^599^^^^^598^600^return prev != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P12_Insert_Condition]^if  ( prev != null )  { return prev != null; }^599^^^^^598^600^return prev != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^AbstractInsnNode result = last;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^AbstractInsnNode result = next;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = first;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = insn.next;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.first;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ifirst = insns.first;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode next = location.next;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode insn = first;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = location .prev;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode i = first;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode ilast = insns.last;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode prev = insn.prev;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^AbstractInsnNode elem = insns.last;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^next = location;^604^^^^^602^607^next = result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^next =  last;^604^^^^^602^607^next = result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = result;next = result;^604^^^^^602^607^next = result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = result.prev;next = result;^604^^^^^602^607^next = result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = null;next = result;^604^^^^^602^607^next = result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = result.next;next = result;^604^^^^^602^607^next = result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^prev =  insn.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = prev.prev;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = result;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^prev = next.prev;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = result.next;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^next = result;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^return last;^606^^^^^602^607^return result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^return next;^606^^^^^602^607^return result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P2_Replace_Operator]^if  ( next != null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^if  ( last == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^if  ( next == false )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P15_Unwrap_Block]^return size();^610^611^612^^^609^617^if  ( next == null )  { return size (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P16_Remove_Block]^^610^611^612^^^609^617^if  ( next == null )  { return size (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     throw new NoSuchElementException (  ) ; }^610^^^^^609^617^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( cache )  == null )  {     cache = toArray (  ) ; }^610^^^^^609^617^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^610^^^^^609^617^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( insns.size )  == 0 )  {     return ; }^610^^^^^609^617^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P3_Replace_Literal]^return size() + 3 ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P7_Replace_Invocation]^return toArray (  ) ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P3_Replace_Literal]^return size() - 7 ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P14_Delete_Statement]^^611^^^^^609^617^return size (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P3_Replace_Literal]^return size() + 4 ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P3_Replace_Literal]^return size() - 9 ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P2_Replace_Operator]^if  ( cache != null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^if  ( insns == null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^if  ( cache == true )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P15_Unwrap_Block]^cache = toArray();^613^614^615^^^609^617^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P16_Remove_Block]^^613^614^615^^^609^617^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^613^^^^^609^617^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^613^^^^^609^617^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P7_Replace_Invocation]^cache = size (  ) ;^614^^^^^609^617^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^cache  = null ;^614^^^^^609^617^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P14_Delete_Statement]^^614^^^^^609^617^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P2_Replace_Operator]^if  ( prev != null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^if  ( location == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^if  ( prev == this )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( cache == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( cache != null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P15_Unwrap_Block]^return -1;^620^621^622^^^619^627^if  ( prev == null )  { return -1; }^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P16_Remove_Block]^^620^621^622^^^619^627^if  ( prev == null )  { return -1; }^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( cache )  == null )  {     cache = toArray (  ) ; }^620^^^^^619^627^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^620^^^^^619^627^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( insns.size )  == 0 )  {     return ; }^620^^^^^619^627^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P3_Replace_Literal]^return -index;^621^^^^^619^627^return -1;^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^return -2;^621^^^^^619^627^return -1;^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P3_Replace_Literal]^return -;^621^^^^^619^627^return -1;^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P2_Replace_Operator]^if  ( cache != null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^if  ( insns == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^if  ( insns == this )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( next != null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( prev != null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( last == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( first == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( next == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P9_Replace_Statement]^if  ( prev == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P15_Unwrap_Block]^cache = toArray();^623^624^625^^^619^627^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P16_Remove_Block]^^623^624^625^^^619^627^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^623^^^^^619^627^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^623^^^^^619^627^[Delete]^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P7_Replace_Invocation]^cache = size (  ) ;^624^^^^^619^627^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^cache  =  cache ;^624^^^^^619^627^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P14_Delete_Statement]^^624^^^^^619^627^cache = toArray (  ) ;^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^InsnList.this.insertBefore ( prev,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^InsnList.this.insertBefore (   ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P7_Replace_Invocation]^InsnList.this.contains ( next,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^InsnList.this.insertBefore ( result,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P14_Delete_Statement]^^630^631^632^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ; prev =  ( AbstractInsnNode )  o; }^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^prev =   ( AbstractInsnNode )  o;^631^^^^^629^632^prev =  ( AbstractInsnNode )  o;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P5_Replace_Variable]^InsnList.this.set (   ( AbstractInsnNode )  o ) ;^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P7_Replace_Invocation]^InsnList.this.contains ( next.prev,  ( AbstractInsnNode )  o ) ;^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P14_Delete_Statement]^^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P11_Insert_Donor_Statement]^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P8_Replace_Mix]^prev =   ( AbstractInsnNode )  o;^636^^^^^634^637^prev =  ( AbstractInsnNode )  o;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[P3_Replace_Literal]^if ( index==size() + 2  )  {^570^^^^^569^577^if ( index==size (  )  )  {^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P7_Replace_Invocation]^if ( index==getLast (  )  )  {^570^^^^^569^577^if ( index==size (  )  )  {^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P7_Replace_Invocation]^next = remove ( index ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P8_Replace_Mix]^next =  get ( null ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P11_Insert_Donor_Statement]^next = result.next;next = get ( index ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P8_Replace_Mix]^prev ;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P11_Insert_Donor_Statement]^prev = result;prev = next.prev;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P11_Insert_Donor_Statement]^prev = prev.prev;prev = next.prev;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P11_Insert_Donor_Statement]^prev = result.prev;prev = next.prev;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P14_Delete_Statement]^^574^575^^^^569^577^next = get ( index ) ; prev = next.prev;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P8_Replace_Mix]^next = this;^571^^^^^569^577^next = null;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P11_Insert_Donor_Statement]^next = result.next;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P11_Insert_Donor_Statement]^next = result;next = null;^571^^^^^569^577^next = null;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P7_Replace_Invocation]^prev = size (  ) ;^572^^^^^569^577^prev = getLast (  ) ;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P8_Replace_Mix]^prev ;^572^^^^^569^577^prev = getLast (  ) ;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P14_Delete_Statement]^^572^^^^^569^577^prev = getLast (  ) ;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P8_Replace_Mix]^next = true;^571^^^^^569^577^next = null;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P8_Replace_Mix]^prev  =  prev ;^572^^^^^569^577^prev = getLast (  ) ;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P8_Replace_Mix]^prev  =  prev ;^575^^^^^569^577^prev = next.prev;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P3_Replace_Literal]^if ( index==size() + 0  )  {^570^^^^^569^577^if ( index==size (  )  )  {^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P14_Delete_Statement]^^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode  next  prev  int  index  boolean  
[P2_Replace_Operator]^return next == null;^580^^^^^579^581^return next != null;^[CLASS] InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode  next  prev  boolean  
[P5_Replace_Variable]^return prev != null;^580^^^^^579^581^return next != null;^[CLASS] InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode  next  prev  boolean  
[P8_Replace_Mix]^return next ;^580^^^^^579^581^return next != null;^[CLASS] InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode  next  prev  boolean  
[P2_Replace_Operator]^if  ( next != null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^if  ( result == null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^if  ( next == this )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( cache == null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( prev == null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P15_Unwrap_Block]^throw new java.util.NoSuchElementException();^584^585^586^^^583^591^if  ( next == null )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P16_Remove_Block]^^584^585^586^^^583^591^if  ( next == null )  { throw new NoSuchElementException  (" ")  ; }^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^584^^^^^583^591^[Delete]^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( next )  == null )  {     throw new NoSuchElementException (  ) ; }^585^^^^^583^591^[Delete]^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^return ;^585^^^^^583^591^throw new NoSuchElementException  (" ")  ;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^AbstractInsnNode result = prev;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = prev;AbstractInsnNode result = next;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^prev = prev;^588^^^^^583^591^prev = result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^prev =  next;^588^^^^^583^591^prev = result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = prev.prev;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = result.prev;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = next.prev;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = result.next;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = result;prev = result;^588^^^^^583^591^prev = result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^next =  prev.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = result;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = result.prev;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = null;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = get ( index ) ;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = result;next = result.next;^589^^^^^583^591^next = result.next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^return prev;^590^^^^^583^591^return result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^InsnList.this.remove ( result ) ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P7_Replace_Invocation]^InsnList.this.toArray ( prev ) ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P7_Replace_Invocation]^InsnList.this .insertBefore ( result , prev )  ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^InsnList.this.toArray ( result ) ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P14_Delete_Statement]^^594^595^^^^593^596^InsnList.this.remove ( prev ) ; prev = prev.prev;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^prev  =  prev ;^595^^^^^593^596^prev = prev.prev;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = result;prev = prev.prev;^595^^^^^593^596^prev = prev.prev;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = result.prev;prev = prev.prev;^595^^^^^593^596^prev = prev.prev;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = next.prev;prev = prev.prev;^595^^^^^593^596^prev = prev.prev;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P2_Replace_Operator]^return prev == null;^599^^^^^598^600^return prev != null;^[CLASS] InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^return prev ;^599^^^^^598^600^return prev != null;^[CLASS] InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^AbstractInsnNode result = next;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^AbstractInsnNode result = next;AbstractInsnNode result = prev;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^next = prev;^604^^^^^602^607^next = result;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = result;next = result;^604^^^^^602^607^next = result;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = result.prev;next = result;^604^^^^^602^607^next = result;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = null;next = result;^604^^^^^602^607^next = result;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = result.next;next = result;^604^^^^^602^607^next = result;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^prev =  next.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = result;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = prev.prev;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^prev = next.prev;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = result.next;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P11_Insert_Donor_Statement]^next = result;prev = result.prev;^605^^^^^602^607^prev = result.prev;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^return prev;^606^^^^^602^607^return result;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P2_Replace_Operator]^if  ( next != null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^if  ( result == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^if  ( next == false )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( cache == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( prev == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P15_Unwrap_Block]^return size();^610^611^612^^^609^617^if  ( next == null )  { return size (  ) ; }^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P16_Remove_Block]^^610^611^612^^^609^617^if  ( next == null )  { return size (  ) ; }^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( next )  == null )  {     throw new NoSuchElementException (  ) ; }^610^^^^^609^617^[Delete]^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( cache )  == null )  {     cache = toArray (  ) ; }^610^^^^^609^617^[Delete]^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^610^^^^^609^617^[Delete]^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P3_Replace_Literal]^return size() - 7 ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P7_Replace_Invocation]^return getLast (  ) ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P3_Replace_Literal]^return size() - 9 ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P14_Delete_Statement]^^611^^^^^609^617^return size (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P3_Replace_Literal]^return size() - 2 ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P3_Replace_Literal]^return size() + 6 ;^611^^^^^609^617^return size (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P2_Replace_Operator]^if  ( cache != null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^if  ( cache == this )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( next == null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( prev == null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P15_Unwrap_Block]^cache = toArray();^613^614^615^^^609^617^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P16_Remove_Block]^^613^614^615^^^609^617^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^613^^^^^609^617^[Delete]^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^613^^^^^609^617^[Delete]^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P7_Replace_Invocation]^cache = size (  ) ;^614^^^^^609^617^cache = toArray (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^cache ;^614^^^^^609^617^cache = toArray (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P14_Delete_Statement]^^614^^^^^609^617^cache = toArray (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^cache  =  cache ;^614^^^^^609^617^cache = toArray (  ) ;^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P2_Replace_Operator]^if  ( prev != null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^if  ( result == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^if  ( prev == true )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( cache == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( next == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P15_Unwrap_Block]^return -1;^620^621^622^^^619^627^if  ( prev == null )  { return -1; }^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P16_Remove_Block]^^620^621^622^^^619^627^if  ( prev == null )  { return -1; }^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( cache )  == null )  {     cache = toArray (  ) ; }^620^^^^^619^627^[Delete]^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^620^^^^^619^627^[Delete]^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P3_Replace_Literal]^return --8;^621^^^^^619^627^return -1;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^return -1 - 1;^621^^^^^619^627^return -1;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P3_Replace_Literal]^return -3;^621^^^^^619^627^return -1;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^return -2;^621^^^^^619^627^return -1;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P2_Replace_Operator]^if  ( cache != null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^if  ( null == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^if  ( cache == true )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( next == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P9_Replace_Statement]^if  ( prev == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P15_Unwrap_Block]^cache = toArray();^623^624^625^^^619^627^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P16_Remove_Block]^^623^624^625^^^619^627^if  ( cache == null )  { cache = toArray (  ) ; }^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( prev )  == null )  {     return -1; }^623^^^^^619^627^[Delete]^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P13_Insert_Block]^if  (  ( next )  == null )  {     return size (  ) ; }^623^^^^^619^627^[Delete]^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P7_Replace_Invocation]^cache = size (  ) ;^624^^^^^619^627^cache = toArray (  ) ;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^cache  =  cache ;^624^^^^^619^627^cache = toArray (  ) ;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P14_Delete_Statement]^^624^^^^^619^627^cache = toArray (  ) ;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P8_Replace_Mix]^cache ;^624^^^^^619^627^cache = toArray (  ) ;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[P5_Replace_Variable]^InsnList.this.insertBefore ( result,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P5_Replace_Variable]^InsnList.this.insertBefore (   ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P7_Replace_Invocation]^InsnList.this.remove ( next,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P14_Delete_Statement]^^630^631^632^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ; prev =  ( AbstractInsnNode )  o; }^[CLASS] InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P11_Insert_Donor_Statement]^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P8_Replace_Mix]^prev =   ( AbstractInsnNode )  o;^631^^^^^629^632^prev =  ( AbstractInsnNode )  o;^[CLASS] InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P5_Replace_Variable]^InsnList.this.set (   ( AbstractInsnNode )  o ) ;^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P7_Replace_Invocation]^InsnList.this.remove ( next.prev,  ( AbstractInsnNode )  o ) ;^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P7_Replace_Invocation]^InsnList.this .set ( next , prev )  ;^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P14_Delete_Statement]^^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P11_Insert_Donor_Statement]^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^635^^^^^634^637^InsnList.this.set ( next.prev,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
[P8_Replace_Mix]^prev =   ( AbstractInsnNode )  o;^636^^^^^634^637^prev =  ( AbstractInsnNode )  o;^[CLASS] InsnListIterator  [METHOD] set [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
