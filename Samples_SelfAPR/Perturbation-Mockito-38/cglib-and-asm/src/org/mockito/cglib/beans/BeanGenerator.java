[P7_Replace_Invocation]^private static final Source SOURCE = new Source ( BeanGenerator.class.getClassLoader (  )  ) ;^30^^^^^25^35^private static final Source SOURCE = new Source ( BeanGenerator.class.getName (  )  ) ;^[CLASS] BeanGenerator   [VARIABLES] 
[P8_Replace_Mix]^private  final Source SOURCE = new Source ( BeanGenerator.class.getName (  )  ) ;^30^^^^^25^35^private static final Source SOURCE = new Source ( BeanGenerator.class.getName (  )  ) ;^[CLASS] BeanGenerator   [VARIABLES] 
[P8_Replace_Mix]^private static  BeanGeneratorKey KEY_FACTORY = ( BeanGeneratorKey ) KeyFactory.create ( BeanGeneratorKey.class ) ;^31^32^^^^31^32^private static final BeanGeneratorKey KEY_FACTORY = ( BeanGeneratorKey ) KeyFactory.create ( BeanGeneratorKey.class ) ;^[CLASS] BeanGenerator   [VARIABLES] 
[P8_Replace_Mix]^private Map props  = null ;^39^^^^^34^44^private Map props = new HashMap (  ) ;^[CLASS] BeanGenerator   [VARIABLES] 
[P14_Delete_Statement]^^43^^^^^42^44^super ( SOURCE ) ;^[CLASS] BeanGenerator  [METHOD] <init> [RETURN_TYPE] BeanGenerator()   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P2_Replace_Operator]^if  ( superclass != null || superclass.equals ( Object.class )  )  {^53^^^^^52^57^if  ( superclass != null && superclass.equals ( Object.class )  )  {^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P2_Replace_Operator]^if  ( superclass == null && superclass.equals ( Object.class )  )  {^53^^^^^52^57^if  ( superclass != null && superclass.equals ( Object.class )  )  {^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P6_Replace_Expression]^if  ( superclass != null ) {^53^^^^^52^57^if  ( superclass != null && superclass.equals ( Object.class )  )  {^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P6_Replace_Expression]^if  (  superclass.equals ( Object.class )  )  {^53^^^^^52^57^if  ( superclass != null && superclass.equals ( Object.class )  )  {^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^if  ( superclass != true ) {^53^^^^^52^57^if  ( superclass != null && superclass.equals ( Object.class )  )  {^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P15_Unwrap_Block]^superclass = null;^53^54^55^^^52^57^if  ( superclass != null && superclass.equals ( Object.class )  )  { superclass = null; }^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P16_Remove_Block]^^53^54^55^^^52^57^if  ( superclass != null && superclass.equals ( Object.class )  )  { superclass = null; }^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^superclass = this;^54^^^^^52^57^superclass = null;^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P11_Insert_Donor_Statement]^this.superclass = superclass;superclass = null;^54^^^^^52^57^superclass = null;^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P12_Insert_Condition]^if  ( superclass != null )  { superclass = null; }^54^^^^^52^57^superclass = null;^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^superclass = true;^54^^^^^52^57^superclass = null;^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^if  ( superclass != null && superclass .getClass (  )   )  {^53^^^^^52^57^if  ( superclass != null && superclass.equals ( Object.class )  )  {^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^this.superclass =  null;^56^^^^^52^57^this.superclass = superclass;^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P11_Insert_Donor_Statement]^superclass = null;this.superclass = superclass;^56^^^^^52^57^this.superclass = superclass;^[CLASS] BeanGenerator  [METHOD] setSuperclass [RETURN_TYPE] void   Class superclass [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  boolean  classOnly  Map  props  Source  SOURCE  
[P5_Replace_Variable]^if  ( name.containsKey ( props )  )  {^60^^^^^59^64^if  ( props.containsKey ( name )  )  {^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P6_Replace_Expression]^if  ( "Duplicate property name \"" + name )  {^60^^^^^59^64^if  ( props.containsKey ( name )  )  {^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^if  ( props.get ( name )  )  {^60^^^^^59^64^if  ( props.containsKey ( name )  )  {^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("Duplicate property name \"" + name) + "\""));^60^61^62^^^59^64^if  ( props.containsKey ( name )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P16_Remove_Block]^^60^61^62^^^59^64^if  ( props.containsKey ( name )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P13_Insert_Block]^if  ( props.containsKey ( name )  )  {     throw new IllegalArgumentException (  (  ( "Duplicate property name \"" + name )  + "\"" )  ) ; }^61^^^^^59^64^[Delete]^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P8_Replace_Mix]^return ;^61^^^^^59^64^throw new IllegalArgumentException  (" ")  ;^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^if  ( props .size (  )   )  {^60^^^^^59^64^if  ( props.containsKey ( name )  )  {^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P5_Replace_Variable]^props.put (  Type.getType ( type )  ) ;^63^^^^^59^64^props.put ( name, Type.getType ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P5_Replace_Variable]^props.put ( type, Type.getType ( name )  ) ;^63^^^^^59^64^props.put ( name, Type.getType ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P8_Replace_Mix]^props.put ( name, Type.getType ( superclass )  ) ;^63^^^^^59^64^props.put ( name, Type.getType ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^63^^^^^59^64^props.put ( name, Type.getType ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperty [RETURN_TYPE] void   String name Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  String  name  Map  props  Source  SOURCE  
[P2_Replace_Operator]^if  ( superclass == null )  {^67^^^^^66^72^if  ( superclass != null )  {^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P5_Replace_Variable]^if  ( type != null )  {^67^^^^^66^72^if  ( superclass != null )  {^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^if  ( superclass != false )  {^67^^^^^66^72^if  ( superclass != null )  {^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P15_Unwrap_Block]^return superclass.getClassLoader();^67^68^69^70^71^66^72^if  ( superclass != null )  { return superclass.getClassLoader (  ) ; } else { return null; }^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P16_Remove_Block]^^67^68^69^70^71^66^72^if  ( superclass != null )  { return superclass.getClassLoader (  ) ; } else { return null; }^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P13_Insert_Block]^if  (  ( superclass )  != null )  {     setNamePrefix ( superclass.getName (  )  ) ; }^67^^^^^66^72^[Delete]^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^return true;^70^^^^^66^72^return null;^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^return superclass.getName (  ) ;^68^^^^^66^72^return superclass.getClassLoader (  ) ;^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P5_Replace_Variable]^return type.getClassLoader (  ) ;^68^^^^^66^72^return superclass.getClassLoader (  ) ;^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^68^^^^^66^72^return superclass.getClassLoader (  ) ;^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^return this;^70^^^^^66^72^return null;^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^return type.getName (  ) ;^68^^^^^66^72^return superclass.getClassLoader (  ) ;^[CLASS] BeanGenerator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P3_Replace_Literal]^classOnly = true;^75^^^^^74^77^classOnly = false;^[CLASS] BeanGenerator  [METHOD] create [RETURN_TYPE] Object   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P11_Insert_Donor_Statement]^classOnly = true;classOnly = false;^75^^^^^74^77^classOnly = false;^[CLASS] BeanGenerator  [METHOD] create [RETURN_TYPE] Object   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^76^^^^^74^77^return createHelper (  ) ;^[CLASS] BeanGenerator  [METHOD] create [RETURN_TYPE] Object   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P3_Replace_Literal]^classOnly = false;^80^^^^^79^82^classOnly = true;^[CLASS] BeanGenerator  [METHOD] createClass [RETURN_TYPE] Object   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P11_Insert_Donor_Statement]^classOnly = false;classOnly = true;^80^^^^^79^82^classOnly = true;^[CLASS] BeanGenerator  [METHOD] createClass [RETURN_TYPE] Object   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^81^^^^^79^82^return createHelper (  ) ;^[CLASS] BeanGenerator  [METHOD] createClass [RETURN_TYPE] Object   [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P2_Replace_Operator]^if  ( superclass == null )  {^85^^^^^84^91^if  ( superclass != null )  {^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P5_Replace_Variable]^if  ( type != null )  {^85^^^^^84^91^if  ( superclass != null )  {^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P8_Replace_Mix]^if  ( superclass != this )  {^85^^^^^84^91^if  ( superclass != null )  {^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P15_Unwrap_Block]^setNamePrefix(superclass.getName());^85^86^87^^^84^91^if  ( superclass != null )  { setNamePrefix ( superclass.getName (  )  ) ; }^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P16_Remove_Block]^^85^86^87^^^84^91^if  ( superclass != null )  { setNamePrefix ( superclass.getName (  )  ) ; }^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P13_Insert_Block]^if  (  ( superclass )  != null )  {     return superclass.getClassLoader (  ) ; }else {     return null; }^85^^^^^84^91^[Delete]^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P5_Replace_Variable]^setNamePrefix ( type.getName (  )  ) ;^86^^^^^84^91^setNamePrefix ( superclass.getName (  )  ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^getClassName ( superclass.getName (  )  ) ;^86^^^^^84^91^setNamePrefix ( superclass.getName (  )  ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^setNamePrefix ( superclass.getClassLoader (  )  ) ;^86^^^^^84^91^setNamePrefix ( superclass.getName (  )  ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^86^^^^^84^91^setNamePrefix ( superclass.getName (  )  ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P8_Replace_Mix]^setNamePrefix ( type.getClassLoader (  )  ) ;^86^^^^^84^91^setNamePrefix ( superclass.getName (  )  ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P1_Replace_Type]^char superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object";^88^^^^^84^91^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object";^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P2_Replace_Operator]^String superName =  ( superclass == null )  ? superclass.getName (  )  : "java.lang.Object";^88^^^^^84^91^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object";^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P3_Replace_Literal]^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Objectja";^88^^^^^84^91^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object";^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P6_Replace_Expression]^String superName  =  "java.lang.Object";^88^^^^^84^91^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object";^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P6_Replace_Expression]^String superName  =  superclass.getName (  )  ;^88^^^^^84^91^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object";^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^String superName =  ( superclass != null )  ? superclass.getClassLoader (  )  : "java.lang.Object";^88^^^^^84^91^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object";^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P5_Replace_Variable]^String superName =  ( type != null )  ? superclass.getName (  )  : "java.lang.Object";^88^^^^^84^91^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object";^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^88^89^^^^84^91^String superName =  ( superclass != null )  ? superclass.getName (  )  : "java.lang.Object"; Object key = KEY_FACTORY.newInstance ( superName, props ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P5_Replace_Variable]^Object key = KEY_FACTORY.newInstance (  props ) ;^89^^^^^84^91^Object key = KEY_FACTORY.newInstance ( superName, props ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P5_Replace_Variable]^Object key = KEY_FACTORY.newInstance ( superName ) ;^89^^^^^84^91^Object key = KEY_FACTORY.newInstance ( superName, props ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P5_Replace_Variable]^Object key = KEY_FACTORY.newInstance ( props, superName ) ;^89^^^^^84^91^Object key = KEY_FACTORY.newInstance ( superName, props ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P5_Replace_Variable]^Object key = props.newInstance ( superName, KEY_FACTORY ) ;^89^^^^^84^91^Object key = KEY_FACTORY.newInstance ( superName, props ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P8_Replace_Mix]^Object key = KEY_FACTORY .newInstance ( superName , props )  ;^89^^^^^84^91^Object key = KEY_FACTORY.newInstance ( superName, props ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^89^^^^^84^91^Object key = KEY_FACTORY.newInstance ( superName, props ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^90^^^^^84^91^return super.create ( key ) ;^[CLASS] BeanGenerator  [METHOD] createHelper [RETURN_TYPE] Object   [VARIABLES] boolean  classOnly  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  Object  key  String  superName  Map  props  Source  SOURCE  
[P1_Replace_Type]^short  size = props.size (  ) ;^94^^^^^93^110^int size = props.size (  ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P3_Replace_Literal]^int size = props.size() + 6 ;^94^^^^^93^110^int size = props.size (  ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P7_Replace_Invocation]^int size = props.keySet (  ) ;^94^^^^^93^110^int size = props.size (  ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P3_Replace_Literal]^int size = props.size() - 1 ;^94^^^^^93^110^int size = props.size (  ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P14_Delete_Statement]^^94^95^^^^93^110^int size = props.size (  ) ; String[] names =  ( String[] ) props.keySet (  ) .toArray ( new String[size] ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P7_Replace_Invocation]^String[] names =  ( String[] ) props.size (  ) .toArray ( new String[size] ) ;^95^^^^^93^110^String[] names =  ( String[] ) props.keySet (  ) .toArray ( new String[size] ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P14_Delete_Statement]^^95^96^^^^93^110^String[] names =  ( String[] ) props.keySet (  ) .toArray ( new String[size] ) ; Type[] types = new Type[size];^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P14_Delete_Statement]^^95^^^^^93^110^String[] names =  ( String[] ) props.keySet (  ) .toArray ( new String[size] ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P1_Replace_Type]^for  (  short  i = 0; i < size; i++ )  {^97^^^^^93^110^for  ( int i = 0; i < size; i++ )  {^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P2_Replace_Operator]^for  ( int i = 0; i <= size; i++ )  {^97^^^^^93^110^for  ( int i = 0; i < size; i++ )  {^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P3_Replace_Literal]^for  ( int i = i; i < size; i++ )  {^97^^^^^93^110^for  ( int i = 0; i < size; i++ )  {^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^for  ( sizent i = 0; i < size; i++ )  {^97^^^^^93^110^for  ( int i = 0; i < size; i++ )  {^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^for  ( sizent i = 0; i < i; i++ )  {^97^^^^^93^110^for  ( int i = 0; i < size; i++ )  {^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P7_Replace_Invocation]^types[i] =  ( Type ) props.put ( names[i] ) ;^98^^^^^93^110^types[i] =  ( Type ) props.get ( names[i] ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P8_Replace_Mix]^types[i] ;^98^^^^^93^110^types[i] =  ( Type ) props.get ( names[i] ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^types[i] =  ( Type ) names.get ( props[i] ) ;^98^^^^^93^110^types[i] =  ( Type ) props.get ( names[i] ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P14_Delete_Statement]^^98^^^^^93^110^types[i] =  ( Type ) props.get ( names[i] ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P3_Replace_Literal]^for  ( int i = size; i < size; i++ )  {^97^^^^^93^110^for  ( int i = 0; i < size; i++ )  {^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P2_Replace_Operator]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass == null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^101^102^103^104^^93^110^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , type != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^101^102^103^104^^93^110^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  )  != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^101^102^103^104^^93^110^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  :^101^102^103^104^^93^110^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P6_Replace_Expression]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass ! =  Constants.TYPE_OBJECT,^101^102^103^104^^93^110^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P6_Replace_Expression]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass ! =  Type.getType ( superclass )  ;^101^102^103^104^^93^110^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P7_Replace_Invocation]^ce .end_class (  )   : Constants.TYPE_OBJECT,^101^102^103^104^^93^110^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT,^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P6_Replace_Expression]^getClassName (  ) , superclass ! =  Constants.TYPE_OBJECT, null, null ) ;^103^104^105^106^^93^110^getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT, null, null ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P6_Replace_Expression]^getClassName (  ) , superclass ! =  Type.getType ( superclass )  ;^103^104^105^106^^93^110^getClassName (  ) , superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT, null, null ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^superclass != null ? Type.getType ( type )  : Constants.TYPE_OBJECT, null, null ) ;^104^105^106^^^93^110^superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT, null, null ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P6_Replace_Expression]^superclass ! =  Constants.TYPE_OBJECT, null, null ) ;^104^105^106^^^93^110^superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT, null, null ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P6_Replace_Expression]^superclass ! =  Type.getType ( superclass )  ;^104^105^106^^^93^110^superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT, null, null ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P14_Delete_Statement]^^104^105^106^^^93^110^superclass != null ? Type.getType ( superclass )  : Constants.TYPE_OBJECT, null, null ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P14_Delete_Statement]^^107^108^^^^93^110^EmitUtils.null_constructor ( ce ) ; EmitUtils.add_properties ( ce, names, types ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^EmitUtils.add_properties (  names, types ) ;^108^^^^^93^110^EmitUtils.add_properties ( ce, names, types ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^EmitUtils.add_properties ( ce,  types ) ;^108^^^^^93^110^EmitUtils.add_properties ( ce, names, types ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^EmitUtils.add_properties ( ce, names ) ;^108^^^^^93^110^EmitUtils.add_properties ( ce, names, types ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^EmitUtils.add_properties ( types, names, ce ) ;^108^^^^^93^110^EmitUtils.add_properties ( ce, names, types ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P5_Replace_Variable]^EmitUtils.add_properties ( names, ce, types ) ;^108^^^^^93^110^EmitUtils.add_properties ( ce, names, types ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P8_Replace_Mix]^EmitUtils .null_constructor ( ce )  ;^108^^^^^93^110^EmitUtils.add_properties ( ce, names, types ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P14_Delete_Statement]^^108^^^^^93^110^EmitUtils.add_properties ( ce, names, types ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P14_Delete_Statement]^^109^^^^^93^110^ce.end_class (  ) ;^[CLASS] BeanGenerator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  classOnly  Type[]  types  ClassEmitter  ce  BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  ClassVisitor  v  String[]  names  Map  props  Source  SOURCE  int  i  size  
[P15_Unwrap_Block]^return type;^113^114^115^116^117^112^118^if  ( classOnly )  { return type; } else { return ReflectUtils.newInstance ( type ) ; }^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P16_Remove_Block]^^113^114^115^116^117^112^118^if  ( classOnly )  { return type; } else { return ReflectUtils.newInstance ( type ) ; }^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P13_Insert_Block]^if  ( classOnly )  {     return protoclass; }else {     return newInstance ( protoclass ) ; }^113^^^^^112^118^[Delete]^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P5_Replace_Variable]^return ReflectUtils.newInstance ( superclass ) ;^116^^^^^112^118^return ReflectUtils.newInstance ( type ) ;^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^return ReflectUtils.getBeanProperties ( type ) ;^116^^^^^112^118^return ReflectUtils.newInstance ( type ) ;^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^return ReflectUtils.getBeanProperties ( superclass ) ;^116^^^^^112^118^return ReflectUtils.newInstance ( type ) ;^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P13_Insert_Block]^if  ( classOnly )  {     return type; }else {     return newInstance ( type ) ; }^116^^^^^112^118^[Delete]^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^116^^^^^112^118^return ReflectUtils.newInstance ( type ) ;^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P5_Replace_Variable]^return superclass;^114^^^^^112^118^return type;^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^return ReflectUtils .newInstance ( 2 , props )  ;^116^^^^^112^118^return ReflectUtils.newInstance ( type ) ;^[CLASS] BeanGenerator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  superclass  type  boolean  classOnly  Map  props  Source  SOURCE  
[P2_Replace_Operator]^Class protoclass =  ( instance  <  Class )  ?  ( Class ) instance : instance.getClass (  ) ;^121^^^^^120^127^Class protoclass =  ( instance instanceof Class )  ?  ( Class ) instance : instance.getClass (  ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P6_Replace_Expression]^Class protoclass  =  instance.getClass (  ) ;^121^^^^^120^127^Class protoclass =  ( instance instanceof Class )  ?  ( Class ) instance : instance.getClass (  ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P6_Replace_Expression]^Class protoclass  =   ( Class ) instance ;^121^^^^^120^127^Class protoclass =  ( instance instanceof Class )  ?  ( Class ) instance : instance.getClass (  ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^Class protoclass =  ( instance instanceof Class )  ?  ( Class ) instance : instance.equals (  ) ;^121^^^^^120^127^Class protoclass =  ( instance instanceof Class )  ?  ( Class ) instance : instance.getClass (  ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^121^^^^^120^127^Class protoclass =  ( instance instanceof Class )  ?  ( Class ) instance : instance.getClass (  ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P15_Unwrap_Block]^return protoclass;^122^123^124^125^126^120^127^if  ( classOnly )  { return protoclass; } else { return ReflectUtils.newInstance ( protoclass ) ; }^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P16_Remove_Block]^^122^123^124^125^126^120^127^if  ( classOnly )  { return protoclass; } else { return ReflectUtils.newInstance ( protoclass ) ; }^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P13_Insert_Block]^if  ( classOnly )  {     return type; }else {     return newInstance ( type ) ; }^122^^^^^120^127^[Delete]^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P5_Replace_Variable]^return ReflectUtils.newInstance ( type ) ;^125^^^^^120^127^return ReflectUtils.newInstance ( protoclass ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^return ReflectUtils.getBeanProperties ( protoclass ) ;^125^^^^^120^127^return ReflectUtils.newInstance ( protoclass ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^return ReflectUtils .newInstance ( 1 , props )  ;^125^^^^^120^127^return ReflectUtils.newInstance ( protoclass ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P13_Insert_Block]^if  ( classOnly )  {     return protoclass; }else {     return newInstance ( protoclass ) ; }^125^^^^^120^127^[Delete]^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^return ReflectUtils.getBeanProperties ( type ) ;^125^^^^^120^127^return ReflectUtils.newInstance ( protoclass ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^125^^^^^120^127^return ReflectUtils.newInstance ( protoclass ) ;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P8_Replace_Mix]^return type;^123^^^^^120^127^return protoclass;^[CLASS] BeanGenerator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  Object  instance  boolean  classOnly  Map  props  Source  SOURCE  
[P5_Replace_Variable]^for  ( Iterator props = it.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^130^^^^^129^134^for  ( Iterator it = props.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^for  ( Iterator it = props.keySet (  ) .toArray (  ) ; it.hasNext (  ) ; )  {^130^^^^^129^134^for  ( Iterator it = props.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^for  ( Iterator it = props.get (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^130^^^^^129^134^for  ( Iterator it = props.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P1_Replace_Type]^char name =  ( char ) it.next (  ) ;^131^^^^^129^134^String name =  ( String ) it.next (  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^String name =  ( String ) it .hasNext (  )  ;^131^^^^^129^134^String name =  ( String ) it.next (  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^131^132^^^^129^134^String name =  ( String ) it.next (  ) ; gen.addProperty ( name,  ( Class ) props.get ( name )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P5_Replace_Variable]^gen.addProperty (   ( Class ) props.get ( name )  ) ;^132^^^^^129^134^gen.addProperty ( name,  ( Class ) props.get ( name )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^gen.addProperty ( name,  ( Class ) props.put ( name )  ) ;^132^^^^^129^134^gen.addProperty ( name,  ( Class ) props.get ( name )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^132^^^^^129^134^gen.addProperty ( name,  ( Class ) props.get ( name )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P5_Replace_Variable]^gen.addProperty ( props,  ( Class ) name.get ( name )  ) ;^132^^^^^129^134^gen.addProperty ( name,  ( Class ) props.get ( name )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^130^131^132^133^^129^134^for  ( Iterator it = props.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  { String name =  ( String ) it.next (  ) ; gen.addProperty ( name,  ( Class ) props.get ( name )  ) ; }^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^for  ( Iterator it = props.keySet (  ) .iterator (  ) ; it .next (  )  ; )  {^130^^^^^129^134^for  ( Iterator it = props.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Map props [VARIABLES] boolean  classOnly  BeanGenerator  gen  Iterator  it  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  String  name  Map  props  Source  SOURCE  
[P5_Replace_Variable]^addProperties ( gen, ReflectUtils.getBeanProperties ( superclass )  ) ;^137^^^^^136^138^addProperties ( gen, ReflectUtils.getBeanProperties ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  boolean  classOnly  BeanGenerator  gen  Map  props  Source  SOURCE  
[P5_Replace_Variable]^addProperties (  ReflectUtils.getBeanProperties ( type )  ) ;^137^^^^^136^138^addProperties ( gen, ReflectUtils.getBeanProperties ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  boolean  classOnly  BeanGenerator  gen  Map  props  Source  SOURCE  
[P5_Replace_Variable]^addProperties ( type, ReflectUtils.getBeanProperties ( gen )  ) ;^137^^^^^136^138^addProperties ( gen, ReflectUtils.getBeanProperties ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  boolean  classOnly  BeanGenerator  gen  Map  props  Source  SOURCE  
[P7_Replace_Invocation]^addProperties ( gen, ReflectUtils.newInstance ( type )  ) ;^137^^^^^136^138^addProperties ( gen, ReflectUtils.getBeanProperties ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  boolean  classOnly  BeanGenerator  gen  Map  props  Source  SOURCE  
[P14_Delete_Statement]^^137^^^^^136^138^addProperties ( gen, ReflectUtils.getBeanProperties ( type )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen Class type [VARIABLES] BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  boolean  classOnly  BeanGenerator  gen  Map  props  Source  SOURCE  
[P1_Replace_Type]^for  (  long  i = 0; i < descriptors.length; i++ )  {^141^^^^^140^144^for  ( int i = 0; i < descriptors.length; i++ )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i == descriptors.length; i++ )  {^141^^^^^140^144^for  ( int i = 0; i < descriptors.length; i++ )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < descriptors.length; i++ )  {^141^^^^^140^144^for  ( int i = 0; i < descriptors.length; i++ )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P5_Replace_Variable]^for  ( descriptors.lengthnt i = 0; i < i; i++ )  {^141^^^^^140^144^for  ( int i = 0; i < descriptors.length; i++ )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < descriptors.length.length; i++ )  {^141^^^^^140^144^for  ( int i = 0; i < descriptors.length; i++ )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P5_Replace_Variable]^gen.addProperty ( descriptors[i].getName (  ) [i].getPropertyType (  )  ) ;^142^^^^^140^144^gen.addProperty ( descriptors[i].getName (  ) , descriptors[i].getPropertyType (  )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P7_Replace_Invocation]^gen .addProperties ( gen , props )   ) ;^142^^^^^140^144^gen.addProperty ( descriptors[i].getName (  ) , descriptors[i].getPropertyType (  )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P7_Replace_Invocation]^gen.addProperty ( descriptors[i] .getClassLoader (  )  , descriptors[i].getPropertyType (  )  ) ;^142^^^^^140^144^gen.addProperty ( descriptors[i].getName (  ) , descriptors[i].getPropertyType (  )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P14_Delete_Statement]^^142^^^^^140^144^gen.addProperty ( descriptors[i].getName (  ) , descriptors[i].getPropertyType (  )  ) ;^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < descriptors.length; i++ )  {^141^^^^^140^144^for  ( int i = 0; i < descriptors.length; i++ )  {^[CLASS] BeanGenerator  [METHOD] addProperties [RETURN_TYPE] void   BeanGenerator gen PropertyDescriptor[] descriptors [VARIABLES] boolean  classOnly  BeanGenerator  gen  BeanGeneratorKey  KEY_FACTORY  Class  protoclass  superclass  type  PropertyDescriptor[]  descriptors  Map  props  Source  SOURCE  int  i  
