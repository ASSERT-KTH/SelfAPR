[P7_Replace_Invocation]^private static final MixinKey KEY_FACTORY = ( MixinKey ) KeyFactory .create ( null )  ;^36^37^^^^36^37^private static final MixinKey KEY_FACTORY = ( MixinKey ) KeyFactory.create ( MixinKey.class, KeyFactory.CLASS_BY_NAME ) ;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P8_Replace_Mix]^private static final MixinKey KEY_FACTORY ;^36^37^^^^36^37^private static final MixinKey KEY_FACTORY = ( MixinKey ) KeyFactory.create ( MixinKey.class, KeyFactory.CLASS_BY_NAME ) ;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P8_Replace_Mix]^private static final Map ROUTE_CACHE ;^38^^^^^33^43^private static final Map ROUTE_CACHE = Collections.synchronizedMap ( new HashMap (  )  ) ;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P1_Replace_Type]^public static final  short  STYLE_INTERFACES = 0;^40^^^^^35^45^public static final int STYLE_INTERFACES = 0;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P8_Replace_Mix]^public static final int STYLE_INTERFACES ;^40^^^^^35^45^public static final int STYLE_INTERFACES = 0;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P1_Replace_Type]^public static final  short  STYLE_BEANS = 1;^41^^^^^36^46^public static final int STYLE_BEANS = 1;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P3_Replace_Literal]^public static final int STYLE_BEANS = 7;^41^^^^^36^46^public static final int STYLE_BEANS = 1;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P8_Replace_Mix]^public static final int STYLE_BEANS = 1 % 1;^41^^^^^36^46^public static final int STYLE_BEANS = 1;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P1_Replace_Type]^public static final  long  STYLE_EVERYTHING = 2;^42^^^^^37^47^public static final int STYLE_EVERYTHING = 2;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P3_Replace_Literal]^public static final int STYLE_EVERYTHING = -6;^42^^^^^37^47^public static final int STYLE_EVERYTHING = 2;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P8_Replace_Mix]^public static final int STYLE_EVERYTHING  = null ;^42^^^^^37^47^public static final int STYLE_EVERYTHING = 2;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P7_Replace_Invocation]^private static final Source SOURCE = new Source ( Mixin.class.getClassLoader (  )  ) ;^96^^^^^91^101^private static final Source SOURCE = new Source ( Mixin.class.getName (  )  ) ;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P8_Replace_Mix]^private  final Source SOURCE = new Source ( Mixin.class.getName (  )  ) ;^96^^^^^91^101^private static final Source SOURCE = new Source ( Mixin.class.getName (  )  ) ;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P1_Replace_Type]^private  long  style = STYLE_INTERFACES;^100^^^^^95^105^private int style = STYLE_INTERFACES;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P8_Replace_Mix]^private int style  = null ;^100^^^^^95^105^private int style = STYLE_INTERFACES;^[CLASS] Mixin Generator Route   [VARIABLES] 
[P14_Delete_Statement]^^105^^^^^104^106^super ( SOURCE ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Mixin$Generator()   [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  style  Source  SOURCE  Object[]  delegates  
[P1_Replace_Type]^Set  collect = new  Set  (  ) ;^215^^^^^213^236^ArrayList collect = new ArrayList (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P1_Replace_Type]^LinkedList  collect = new  LinkedList  (  ) ;^215^^^^^213^236^ArrayList collect = new ArrayList (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^if  ( !map.containsKey ( key )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^if  ( !map.containsKey ( styleface )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^if  ( !map.put ( iface )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^if  ( !map .size (  )   )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P15_Unwrap_Block]^map.put(iface, new java.lang.Integer(i));^222^223^224^^^213^236^if  ( !map.containsKey ( iface )  )  { map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P16_Remove_Block]^^222^223^224^^^213^236^if  ( !map.containsKey ( iface )  )  { map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^map.put ( indexface, new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P4_Replace_Constructor]^map.put (  new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^map.put ( key, new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^map.put ( i, new Integer ( iface )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^223^224^^^^213^236^map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P1_Replace_Type]^for  (  long  i = 0; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P2_Replace_Operator]^for  ( int i = 0; i <= delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P3_Replace_Literal]^for  ( int i = STYLE_EVERYTHING; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( indexnt i = 0; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( int i = 0; i < keys.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( int i = 0; i < index; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( delegates.lengthnt i = 0; i < i; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^map.put ( styleface, new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( Iterator indext = collect.iterator (  ) ; it.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( Iterator collect = it.iterator (  ) ; it.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( Iterator collectt = i.iterator (  ) ; it.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^for  ( Iterator it = collect .clear (  )  ; it.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^for  ( Iterator stylet = collect.iterator (  ) ; it.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^Class iface =  ( Class ) it .hasNext (  )  ;^221^^^^^213^236^Class iface =  ( Class ) it.next (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P11_Insert_Donor_Statement]^Class key =  ( Class ) it.next (  ) ;Class iface =  ( Class ) it.next (  ) ;^221^^^^^213^236^Class iface =  ( Class ) it.next (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^221^222^223^224^^213^236^Class iface =  ( Class ) it.next (  ) ; if  ( !map.containsKey ( iface )  )  { map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^if  ( !map.put ( key )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^map.put ( ifaceface, new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^Class delegate = delegates[i] .clone (  )  ;^217^^^^^213^236^Class delegate = delegates[i].getClass (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^217^^^^^213^236^Class delegate = delegates[i].getClass (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^collect .iterator (  )  ;^218^^^^^213^236^collect.clear (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^218^219^^^^213^236^collect.clear (  ) ; ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^ReflectUtils.addAllInterfaces ( key, collect ) ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^ReflectUtils.addAllInterfaces (  collect ) ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^ReflectUtils.addAllInterfaces ( delegate ) ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^ReflectUtils.addAllInterfaces ( collect, delegate ) ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^220^221^222^223^224^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  { Class iface =  ( Class ) it.next (  ) ; if  ( !map.containsKey ( iface )  )  { map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^for  ( Iterator it = collect.iterator (  ) ; it .next (  )  ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( Iterator i = collect.iterator (  ) ; itt.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^for  ( Iterator stylet = collect.iterator (  ) ; it .next (  )  ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^if  ( !map.containsKey ( indexface )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^if  ( !map.containsKey ( ifaceface )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P3_Replace_Literal]^for  ( int i = 5; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^217^218^^^^213^236^Class delegate = delegates[i].getClass (  ) ; collect.clear (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^ReflectUtils .findPackageProtected ( classes )  ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P3_Replace_Literal]^classes = new Class[map.size() - 9 ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^classes = new Class[map.get (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^classes =  new Class[ROUTE_CACHE.size (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P11_Insert_Donor_Statement]^route = new int[map.size (  ) ];classes = new Class[map.size (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^227^228^^^^213^236^classes = new Class[map.size (  ) ]; route = new int[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P11_Insert_Donor_Statement]^Class iface =  ( Class ) it.next (  ) ;classes = new Class[map.size (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P11_Insert_Donor_Statement]^Class key =  ( Class ) it.next (  ) ;classes = new Class[map.size (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P3_Replace_Literal]^route = new int[map.size() - 2 ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^route = new int[map.get (  ) ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^route =  new int[ROUTE_CACHE.size (  ) ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P11_Insert_Donor_Statement]^classes = new Class[map.size (  ) ];route = new int[map.size (  ) ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P3_Replace_Literal]^route = new int[map.size() + 8 ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^route = new int[map .containsKey ( 1 )  ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^228^229^^^^213^236^route = new int[map.size (  ) ]; int index = 0;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P1_Replace_Type]^short  index = 0;^229^^^^^213^236^int index = 0;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P3_Replace_Literal]^int index = i;^229^^^^^213^236^int index = 0;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^for  ( Iterator it = ROUTE_CACHE.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^230^^^^^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^for  ( Iterator it = map.get (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^230^^^^^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it .next (  )  ; )  {^230^^^^^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^classes[index]  = null ;^232^^^^^213^236^classes[index] = key;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^route[index] =  (  ( Integer ) ROUTE_CACHE.get ( key )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^route[index] =  (  ( Integer ) map.get ( iface )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^route[index] =  (  ( Integer ) key.get ( map )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^route[index] =  (  ( Integer ) map.get ( key )  )  .Integer ( i )  ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^route[index] =  (  ( Integer ) map.put ( key )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P11_Insert_Donor_Statement]^Class iface =  ( Class ) it.next (  ) ;Class key =  ( Class ) it.next (  ) ;^231^^^^^213^236^Class key =  ( Class ) it.next (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^Class key =  ( Class ) it .hasNext (  )  ;^231^^^^^213^236^Class key =  ( Class ) it.next (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^231^^^^^213^236^Class key =  ( Class ) it.next (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P11_Insert_Donor_Statement]^classes = new Class[map.size (  ) ];Class key =  ( Class ) it.next (  ) ;^231^^^^^213^236^Class key =  ( Class ) it.next (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^route[index] =  (  ( Integer ) map.get ( key )  )  .Integer ( STYLE_EVERYTHING )  ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^233^234^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ; index++;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^route[index] =  (  ( Integer ) ROUTE_CACHE.put ( key )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P5_Replace_Variable]^classes[index] = iface;^232^^^^^213^236^classes[index] = key;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^classes[index]  =  classes[index] ;^232^^^^^213^236^classes[index] = key;^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P7_Replace_Invocation]^for  ( Iterator it = map.keySet (  )  .clear (  )  ; it.hasNext (  ) ; )  {^230^^^^^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P8_Replace_Mix]^for  ( Iterator it = ROUTE_CACHE.get (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^230^^^^^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P14_Delete_Statement]^^230^231^232^233^234^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  { Class key =  ( Class ) it.next (  ) ; classes[index] = key; route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ; index++; }^[CLASS] Mixin Generator Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  
[P4_Replace_Constructor]^Generator gen = new Route ( delegates )  ;^57^^^^^56^60^Generator gen = new Generator (  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P14_Delete_Statement]^^58^59^^^^56^60^gen.setDelegates ( delegates ) ; return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClasses ( interfaces ) ;gen.setDelegates ( delegates ) ;^58^^^^^56^60^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setDelegates ( beans ) ;gen.setDelegates ( delegates ) ;^58^^^^^56^60^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClassLoader ( loader ) ;gen.setDelegates ( delegates ) ;^58^^^^^56^60^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^Route r = route ( delegates ) ;gen.setDelegates ( delegates ) ;^58^^^^^56^60^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^classes = ReflectUtils.getClasses ( delegates ) ;gen.setDelegates ( delegates ) ;^58^^^^^56^60^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P7_Replace_Invocation]^return gen.setStyle (  ) ;^59^^^^^56^60^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P8_Replace_Mix]^return gen .create ( classes , delegates )  ;^59^^^^^56^60^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P14_Delete_Statement]^^59^^^^^56^60^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Object[] delegates [VARIABLES] Class[]  classes  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P4_Replace_Constructor]^Generator gen = new Route ( delegates )  ;^69^^^^^68^73^Generator gen = new Generator (  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P5_Replace_Variable]^gen.setClasses ( classes ) ;^70^^^^^68^73^gen.setClasses ( interfaces ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P7_Replace_Invocation]^gen .setDelegates ( delegates )  ;^70^^^^^68^73^gen.setClasses ( interfaces ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P14_Delete_Statement]^^70^^^^^68^73^gen.setClasses ( interfaces ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setStyle ( STYLE_BEANS ) ;gen.setClasses ( interfaces ) ;^70^^^^^68^73^gen.setClasses ( interfaces ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setDelegates ( beans ) ;gen.setClasses ( interfaces ) ;^70^^^^^68^73^gen.setClasses ( interfaces ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClassLoader ( loader ) ;gen.setClasses ( interfaces ) ;^70^^^^^68^73^gen.setClasses ( interfaces ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setDelegates ( delegates ) ;gen.setClasses ( interfaces ) ;^70^^^^^68^73^gen.setClasses ( interfaces ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P14_Delete_Statement]^^71^^^^^68^73^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClasses ( interfaces ) ;gen.setDelegates ( delegates ) ;^71^^^^^68^73^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setDelegates ( beans ) ;gen.setDelegates ( delegates ) ;^71^^^^^68^73^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClassLoader ( loader ) ;gen.setDelegates ( delegates ) ;^71^^^^^68^73^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^Route r = route ( delegates ) ;gen.setDelegates ( delegates ) ;^71^^^^^68^73^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^classes = ReflectUtils.getClasses ( delegates ) ;gen.setDelegates ( delegates ) ;^71^^^^^68^73^gen.setDelegates ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P7_Replace_Invocation]^return gen.setStyle (  ) ;^72^^^^^68^73^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P14_Delete_Statement]^^72^^^^^68^73^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   Class[] interfaces Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  delegates  Generator  gen  
[P5_Replace_Variable]^return createBean ( null, delegates ) ;^78^^^^^76^80^return createBean ( null, beans ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P7_Replace_Invocation]^return create ( null, beans ) ;^78^^^^^76^80^return createBean ( null, beans ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P14_Delete_Statement]^^78^^^^^76^80^return createBean ( null, beans ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P4_Replace_Constructor]^Generator gen = new Route ( delegates )  ;^88^^^^^87^93^Generator gen = new Generator (  ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P5_Replace_Variable]^gen.setStyle ( style ) ;^89^^^^^87^93^gen.setStyle ( STYLE_BEANS ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P7_Replace_Invocation]^gen.nextInstance ( STYLE_BEANS ) ;^89^^^^^87^93^gen.setStyle ( STYLE_BEANS ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P14_Delete_Statement]^^89^^^^^87^93^gen.setStyle ( STYLE_BEANS ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClasses ( interfaces ) ;gen.setStyle ( STYLE_BEANS ) ;^89^^^^^87^93^gen.setStyle ( STYLE_BEANS ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setDelegates ( beans ) ;gen.setStyle ( STYLE_BEANS ) ;^89^^^^^87^93^gen.setStyle ( STYLE_BEANS ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P5_Replace_Variable]^gen.setDelegates ( delegates ) ;^90^^^^^87^93^gen.setDelegates ( beans ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P14_Delete_Statement]^^90^91^^^^87^93^gen.setDelegates ( beans ) ; gen.setClassLoader ( loader ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClasses ( interfaces ) ;gen.setDelegates ( beans ) ;^90^^^^^87^93^gen.setDelegates ( beans ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setStyle ( STYLE_BEANS ) ;gen.setDelegates ( beans ) ;^90^^^^^87^93^gen.setDelegates ( beans ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClassLoader ( loader ) ;gen.setDelegates ( beans ) ;^90^^^^^87^93^gen.setDelegates ( beans ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setDelegates ( delegates ) ;gen.setDelegates ( beans ) ;^90^^^^^87^93^gen.setDelegates ( beans ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P14_Delete_Statement]^^91^92^^^^87^93^gen.setClassLoader ( loader ) ; return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setClasses ( interfaces ) ;gen.setClassLoader ( loader ) ;^91^^^^^87^93^gen.setClassLoader ( loader ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setDelegates ( beans ) ;gen.setClassLoader ( loader ) ;^91^^^^^87^93^gen.setClassLoader ( loader ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P11_Insert_Donor_Statement]^gen.setDelegates ( delegates ) ;gen.setClassLoader ( loader ) ;^91^^^^^87^93^gen.setClassLoader ( loader ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P7_Replace_Invocation]^return gen.setStyle (  ) ;^92^^^^^87^93^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P8_Replace_Mix]^return gen .create ( interfaces , beans )  ;^92^^^^^87^93^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P7_Replace_Invocation]^return gen .create ( classes , delegates )  ;^92^^^^^87^93^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P14_Delete_Statement]^^92^^^^^87^93^return gen.create (  ) ;^[CLASS] Mixin Generator Route  [METHOD] createBean [RETURN_TYPE] Mixin   ClassLoader loader Object[] beans [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  ClassLoader  loader  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Generator  gen  
[P3_Replace_Literal]^return classes[STYLE_EVERYTHING].getClassLoader (  ) ;^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^return interfaces[0].getClassLoader (  ) ;^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P7_Replace_Invocation]^return classes[0].isAssignableFrom (  ) ;^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P8_Replace_Mix]^return classes[0] .getName (  )  ;^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P3_Replace_Literal]^return classes[-8].getClassLoader (  ) ;^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P14_Delete_Statement]^^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^this.style = i;^117^^^^^112^122^this.style = style;^[CLASS] Mixin Generator Route  [METHOD] setStyle [RETURN_TYPE] void   int style [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P8_Replace_Mix]^this.style =  index;^117^^^^^112^122^this.style = style;^[CLASS] Mixin Generator Route  [METHOD] setStyle [RETURN_TYPE] void   int style [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^120^^^^^112^122^throw new IllegalArgumentException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] setStyle [RETURN_TYPE] void   int style [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^this.classes = interfaces;^125^^^^^124^126^this.classes = classes;^[CLASS] Mixin Generator Route  [METHOD] setClasses [RETURN_TYPE] void   Class[] classes [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^this.delegates = delegates;this.classes = classes;^125^^^^^124^126^this.classes = classes;^[CLASS] Mixin Generator Route  [METHOD] setClasses [RETURN_TYPE] void   Class[] classes [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^classes = r.classes;this.classes = classes;^125^^^^^124^126^this.classes = classes;^[CLASS] Mixin Generator Route  [METHOD] setClasses [RETURN_TYPE] void   Class[] classes [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^this.delegates = beans;^129^^^^^128^130^this.delegates = delegates;^[CLASS] Mixin Generator Route  [METHOD] setDelegates [RETURN_TYPE] void   Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^this.classes = classes;this.delegates = delegates;^129^^^^^128^130^this.delegates = delegates;^[CLASS] Mixin Generator Route  [METHOD] setDelegates [RETURN_TYPE] void   Object[] delegates [VARIABLES] Class[]  classes  interfaces  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P2_Replace_Operator]^if  ( classes == null || delegates == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( classes != null && delegates == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( classes == null && delegates != null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( temp == null && delegates == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( classes == null && beans == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( delegates == null && classes == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( classes == null ) {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  delegates == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^if  ( classes == true ) {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Either classes or delegates must be set");^133^134^135^^^118^148^if  ( classes == null && delegates == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P16_Remove_Block]^^133^134^135^^^118^148^if  ( classes == null && delegates == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^133^^^^^118^148^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  (  ( classes )  == null )  &&  (  ( delegates )  == null )  )  {     throw new IllegalStateException ( "Either classes or delegates must be set" ) ; }^134^^^^^119^149^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^134^^^^^119^149^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( classes != null )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( temp == null )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^if  ( classes == false )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P9_Replace_Statement]^if  ( delegates != null )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P9_Replace_Statement]^if  ( route == null )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P15_Unwrap_Block]^org.mockito.cglib.proxy.Mixin.Route r = org.mockito.cglib.proxy.Mixin.route(delegates); classes = r.classes; route = r.route;^138^139^140^141^142^123^153^if  ( classes == null )  { Route r = route ( delegates ) ; classes = r.classes; route = r.route; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P16_Remove_Block]^^138^139^140^141^142^123^153^if  ( classes == null )  { Route r = route ( delegates ) ; classes = r.classes; route = r.route; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  ( route == null )  {     put ( key,  ( route = new Route ( delegates )  )  ) ; }^138^^^^^123^153^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^classes = temp;^140^^^^^125^155^classes = r.classes;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^classes = r.classes.classes;^140^^^^^125^155^classes = r.classes;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^classes = r;^140^^^^^125^155^classes = r.classes;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^classes =  null.classes;^140^^^^^125^155^classes = r.classes;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^this.classes = classes;classes = r.classes;^140^^^^^125^155^classes = r.classes;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^route = route;^141^^^^^126^156^route = r.route;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^route = r.route.route;^141^^^^^126^156^route = r.route;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^route = r;^141^^^^^126^156^route = r.route;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^route =  null.nulloute;^141^^^^^126^156^route = r.route;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^Route r = route ( beans ) ;^139^^^^^124^154^Route r = route ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^Route route =  ( Route ) ROUTE_CACHE.get ( key ) ;Route r = route ( delegates ) ;^139^^^^^124^154^Route r = route ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^Object key = ClassesKey.create ( delegates ) ;Route r = route ( delegates ) ;^139^^^^^124^154^Route r = route ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  ( route == null )  {     put ( key,  ( route = new Route ( delegates )  )  ) ; }^139^^^^^124^154^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  ( classes )  == null )  {     Route r = route ( delegates ) ;     classes = r.classes;     route = r.route; }^139^^^^^124^154^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P14_Delete_Statement]^^139^140^^^^124^154^Route r = route ( delegates ) ; classes = r.classes;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^gen.setDelegates ( delegates ) ;Route r = route ( delegates ) ;^139^^^^^124^154^Route r = route ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( classes != null )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( interfaces == null )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( delegates != null )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( classes.length != temp.length )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( i < classes.length )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i + " ) " )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^if  ( classes == false )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P9_Replace_Statement]^if  ( route == null )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( delegates == null )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( beans != null )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( classes.length != temp.length )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( i < classes.length )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i + " ) " )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^if  ( beans != true )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P9_Replace_Statement]^if  ( route == null )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P9_Replace_Statement]^if  ( classes == null )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P15_Unwrap_Block]^java.lang.Class[] temp = org.mockito.cglib.proxy.ReflectUtils.getClasses(delegates); if ((classes.length) != (temp.length)) {    throw new java.lang.IllegalStateException("Specified classes are incompatible with delegates");}; for (int i = 0; i < (classes.length); i++) {    if (!(classes[i].isAssignableFrom(temp[i]))) {        throw new java.lang.IllegalStateException((((((("Specified class " + (classes[i])) + " is incompatible with delegate class ") + (temp[i])) + " (index ") + i) + ")"));    }};^150^151^152^153^154^147^161^if  ( delegates != null )  { Class[] temp = ReflectUtils.getClasses ( delegates ) ; if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P16_Remove_Block]^^150^151^152^153^154^147^161^if  ( delegates != null )  { Class[] temp = ReflectUtils.getClasses ( delegates ) ; if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( classes.length == temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( classes.length != interfaces.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( style != temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( interfaces.length != temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( temp.length != classes.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( classes != temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Specified classes are incompatible with delegates");^152^153^154^^^147^161^if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P16_Remove_Block]^^152^153^154^^^147^161^if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  (  ( classes )  == null )  &&  (  ( delegates )  == null )  )  {     throw new IllegalStateException ( "Either classes or delegates must be set" ) ; }^152^^^^^147^161^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  ( ! ( classes[i].isAssignableFrom ( temp[i] )  )  )  {     throw new IllegalStateException (  (  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i )  + " ) " )  ) ; }^152^^^^^147^161^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^153^^^^^147^161^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^153^^^^^147^161^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( !classes[i].isAssignableFrom ( interfaces[i] )  )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException((((((("Specified class " + (classes[i])) + " is incompatible with delegate class ") + (temp[i])) + " (index ") + i) + ")"));^156^157^158^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P16_Remove_Block]^^156^157^158^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^156^^^^^147^161^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  ( ! ( classes[i].isAssignableFrom ( temp[i] )  )  )  {     throw new IllegalStateException (  (  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i )  + " ) " )  ) ; }^157^^^^^147^161^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^return ;^157^^^^^147^161^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^157^^^^^147^161^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P1_Replace_Type]^for  (  short  i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  ( int i = 0; i <= classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  ==  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  ||  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  >>  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  !=  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P3_Replace_Literal]^for  ( int i = -8; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( stylent i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < style; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < temp.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( classesnt i = 0; i < i.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( classes.lengthnt i = 0; i < i; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P7_Replace_Invocation]^if  ( !classes[i] .getName (  )   )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^157^^^^^147^161^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^Class[] temp = ReflectUtils.getClasses ( beans ) ;^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P7_Replace_Invocation]^Class[] temp = ReflectUtils .getNames ( temp )  ;^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P3_Replace_Literal]^for  ( int i = 9; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P14_Delete_Statement]^^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^classes = ReflectUtils.getClasses ( delegates ) ;Class[] temp = ReflectUtils.getClasses ( delegates ) ;^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( classes.length >= temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( i != temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( classes.length != style )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^if  ( index != temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P1_Replace_Type]^for  (  long  i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  ( int i = 0; i > classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  |  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  <=  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  &  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P3_Replace_Literal]^for  ( int i = 6; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < classes; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P3_Replace_Literal]^for  ( int i = STYLE_EVERYTHING; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P7_Replace_Invocation]^Class[] temp = ReflectUtils .getNames ( classes )  ;^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^classes = ReflectUtils.getClasses ( beans ) ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^classes  =  classes ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P14_Delete_Statement]^^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^Class[] temp = ReflectUtils.getClasses ( delegates ) ;classes = ReflectUtils.getClasses ( delegates ) ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^gen.setDelegates ( delegates ) ;classes = ReflectUtils.getClasses ( delegates ) ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( delegates == null )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( classes.length != temp.length )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( i < classes.length )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i + " ) " )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^if  ( delegates != this )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P9_Replace_Statement]^if  ( route == null )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P9_Replace_Statement]^if  ( classes == null )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P15_Unwrap_Block]^java.lang.Class[] temp = org.mockito.cglib.proxy.ReflectUtils.getClasses(delegates); if ((classes.length) != (temp.length)) {    throw new java.lang.IllegalStateException("Specified classes are incompatible with delegates");}; for (int i = 0; i < (classes.length); i++) {    if (!(classes[i].isAssignableFrom(temp[i]))) {        throw new java.lang.IllegalStateException((((((("Specified class " + (classes[i])) + " is incompatible with delegate class ") + (temp[i])) + " (index ") + i) + ")"));    }};^150^151^152^153^154^135^165^if  ( delegates != null )  { Class[] temp = ReflectUtils.getClasses ( delegates ) ; if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P16_Remove_Block]^^150^151^152^153^154^135^165^if  ( delegates != null )  { Class[] temp = ReflectUtils.getClasses ( delegates ) ; if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( classes.length == temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( classes.length != interfaces.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( i != temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( interfaces.length != temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( temp != classes.length.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( temp.length != classes.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( temp.length.length != classes )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( classes.length != temp )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^if  ( classes.length != style )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Specified classes are incompatible with delegates");^152^153^154^^^137^167^if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P16_Remove_Block]^^152^153^154^^^137^167^if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  (  ( classes )  == null )  &&  (  ( delegates )  == null )  )  {     throw new IllegalStateException ( "Either classes or delegates must be set" ) ; }^152^^^^^137^167^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  ( ! ( classes[i].isAssignableFrom ( temp[i] )  )  )  {     throw new IllegalStateException (  (  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i )  + " ) " )  ) ; }^152^^^^^137^167^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^153^^^^^138^168^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^153^^^^^138^168^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( !classes[i].isAssignableFrom ( interfaces[i] )  )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P7_Replace_Invocation]^if  ( !classes[i] .getName (  )   )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException((((((("Specified class " + (classes[i])) + " is incompatible with delegate class ") + (temp[i])) + " (index ") + i) + ")"));^156^157^158^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P16_Remove_Block]^^156^157^158^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^156^^^^^141^171^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P13_Insert_Block]^if  ( ! ( classes[i].isAssignableFrom ( temp[i] )  )  )  {     throw new IllegalStateException (  (  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i )  + " ) " )  ) ; }^157^^^^^142^172^[Delete]^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^157^^^^^142^172^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^157^^^^^142^172^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P1_Replace_Type]^for  (  short  i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  ( int i = 0; i <= classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  &  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for   instanceof   ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  >  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  <=  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P3_Replace_Literal]^for  ( int i = index; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( indexnt i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < style; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < temp.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( classes.lengthnt i = 0; i < i; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^for  ( stylent i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^Class[] temp = ReflectUtils.getClasses ( beans ) ;^151^^^^^136^166^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P3_Replace_Literal]^for  ( int i = ; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P14_Delete_Statement]^^151^^^^^136^166^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P11_Insert_Donor_Statement]^classes = ReflectUtils.getClasses ( delegates ) ;Class[] temp = ReflectUtils.getClasses ( delegates ) ;^151^^^^^136^166^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^if  ( classes.length <= temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^if  ( classes.length != index )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^return ;^157^^^^^142^172^throw new IllegalStateException  (" ")  ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  &&  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  |  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P2_Replace_Operator]^for  !=  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < index; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^for  ( classesnt i = 0; i < i.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P1_Replace_Type]^for  (  long  i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P3_Replace_Literal]^for  ( int i = 8; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P14_Delete_Statement]^^139^^^^^124^154^Route r = route ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P7_Replace_Invocation]^classes = ReflectUtils .getNames ( temp )  ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P7_Replace_Invocation]^Class[] temp = ReflectUtils .getNames ( temp )  ;^151^^^^^136^166^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^setNamePrefix ( temp[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P7_Replace_Invocation]^getClassName ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P7_Replace_Invocation]^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getClassLoader (  )  ) ;^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^getClassName ( temp[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P14_Delete_Statement]^^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance (  ReflectUtils.getNames (  classes  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  )  )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P8_Replace_Mix]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils .getClasses ( beans )  , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P14_Delete_Statement]^^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( i, ReflectUtils.getNames (  classes  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  temp  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( route.newInstance ( style, ReflectUtils.getNames (  classes  ) , KEY_FACTORY )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( classes, ReflectUtils.getNames (  style  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  route  ) , classes )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( route, ReflectUtils.getNames (  classes  ) , style )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Mixin Generator Route  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  r  
[P5_Replace_Variable]^new MixinEmitter ( v, getClassName (  ) , temp, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEmitter (  getClassName (  ) , classes, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEmitter ( v, getClassName (  ) ,  route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEmitter ( v, getClassName (  ) , classes ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEmitter ( classes, getClassName (  ) , v, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEmitter ( v, getClassName (  ) , route, classes ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEmitter ( route, getClassName (  ) , classes, v ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinBeanEmitter ( v, getClassName (  ) , temp ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinBeanEmitter (  getClassName (  ) , classes ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinBeanEmitter ( v, getClassName (  )  ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinBeanEmitter ( classes, getClassName (  ) , v ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEverythingEmitter ( v, getClassName (  ) , temp ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEverythingEmitter (  getClassName (  ) , classes ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEverythingEmitter ( v, getClassName (  )  ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^new MixinEverythingEmitter ( classes, getClassName (  ) , v ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P14_Delete_Statement]^^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P14_Delete_Statement]^^174^175^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ; break;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P14_Delete_Statement]^^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P11_Insert_Donor_Statement]^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Mixin Generator Route  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  ClassVisitor  v  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( beans ) ;^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Class  type  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^return  (  ( Mixin ) ReflectUtils.newInstance ( delegates )  ) .newInstance ( type ) ;^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Class  type  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P7_Replace_Invocation]^return  (  ( Mixin ) ReflectUtils.create ( type )  ) .newInstance ( delegates ) ;^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Class  type  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P7_Replace_Invocation]^return  (  ( Mixin ) ReflectUtils.getNames ( type )  ) .newInstance ( delegates ) ;^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Class  type  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P8_Replace_Mix]^return  (  ( Mixin ) ReflectUtils.getNames ( type )  ) .newInstance ( beans ) ;^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Class  type  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P14_Delete_Statement]^^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Class  type  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^return  (  ( Mixin ) instance ) .newInstance ( beans ) ;^187^^^^^186^188^return  (  ( Mixin ) instance ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  instance  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P7_Replace_Invocation]^return  (  ( Mixin ) instance ) .create ( delegates ) ;^187^^^^^186^188^return  (  ( Mixin ) instance ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  instance  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P14_Delete_Statement]^^187^^^^^186^188^return  (  ( Mixin ) instance ) .newInstance ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  instance  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^return  ( Class[] ) route ( beans ) .classes.clone (  ) ;^192^^^^^191^193^return  ( Class[] ) route ( delegates ) .classes.clone (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getClasses [RETURN_TYPE] Class[]   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P7_Replace_Invocation]^return  ( Class[] ) create ( delegates ) .classes.clone (  ) ;^192^^^^^191^193^return  ( Class[] ) route ( delegates ) .classes.clone (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getClasses [RETURN_TYPE] Class[]   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P7_Replace_Invocation]^return  ( Class[] ) route ( delegates ) .classes .getClass (  )  ;^192^^^^^191^193^return  ( Class[] ) route ( delegates ) .classes.clone (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getClasses [RETURN_TYPE] Class[]   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P14_Delete_Statement]^^192^^^^^191^193^return  ( Class[] ) route ( delegates ) .classes.clone (  ) ;^[CLASS] Mixin Generator Route  [METHOD] getClasses [RETURN_TYPE] Class[]   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  
[P5_Replace_Variable]^Object key = ClassesKey.create ( beans ) ;^200^^^^^199^206^Object key = ClassesKey.create ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P11_Insert_Donor_Statement]^Route r = route ( delegates ) ;Object key = ClassesKey.create ( delegates ) ;^200^^^^^199^206^Object key = ClassesKey.create ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P14_Delete_Statement]^^200^^^^^199^206^Object key = ClassesKey.create ( delegates ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P5_Replace_Variable]^Route route =  ( Route ) map.get ( key ) ;^201^^^^^199^206^Route route =  ( Route ) ROUTE_CACHE.get ( key ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P5_Replace_Variable]^Route route =  ( Route ) key.get ( ROUTE_CACHE ) ;^201^^^^^199^206^Route route =  ( Route ) ROUTE_CACHE.get ( key ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P7_Replace_Invocation]^Route route =  ( Route ) ROUTE_CACHE.containsKey ( key ) ;^201^^^^^199^206^Route route =  ( Route ) ROUTE_CACHE.get ( key ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P8_Replace_Mix]^Route route =  ( Route ) map.containsKey ( key ) ;^201^^^^^199^206^Route route =  ( Route ) ROUTE_CACHE.get ( key ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P11_Insert_Donor_Statement]^Route r = route ( delegates ) ;Route route =  ( Route ) ROUTE_CACHE.get ( key ) ;^201^^^^^199^206^Route route =  ( Route ) ROUTE_CACHE.get ( key ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P14_Delete_Statement]^^201^^^^^199^206^Route route =  ( Route ) ROUTE_CACHE.get ( key ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P2_Replace_Operator]^if  ( route != null )  {^202^^^^^199^206^if  ( route == null )  {^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P8_Replace_Mix]^if  ( route == true )  {^202^^^^^199^206^if  ( route == null )  {^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P9_Replace_Statement]^if  ( delegates != null )  {^202^^^^^199^206^if  ( route == null )  {^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P9_Replace_Statement]^if  ( classes == null )  {^202^^^^^199^206^if  ( route == null )  {^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P15_Unwrap_Block]^org.mockito.cglib.proxy.Mixin.ROUTE_CACHE.put(key, (route = new org.mockito.cglib.proxy.Mixin.Route(delegates)));^202^203^204^^^199^206^if  ( route == null )  { ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ; }^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P16_Remove_Block]^^202^203^204^^^199^206^if  ( route == null )  { ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ; }^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P13_Insert_Block]^if  (  ( classes )  == null )  {     Route r = route ( delegates ) ;     classes = r.classes;     route = r.route; }^202^^^^^199^206^[Delete]^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P4_Replace_Constructor]^ROUTE_CACHE.put ( key, route = ROUTE_CACHE.put ( key, route =  new Generator (  )   ) ;^203^^^^^199^206^ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P5_Replace_Variable]^ROUTE_CACHE.put ( key, route = new Route ( beans )  ) ;^203^^^^^199^206^ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P4_Replace_Constructor]^ROUTE_CACHE.put (  route = new Route ( delegates )  ) ;^203^^^^^199^206^ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P7_Replace_Invocation]^ROUTE_CACHE .get ( key )  ;^203^^^^^199^206^ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P14_Delete_Statement]^^203^^^^^199^206^ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P11_Insert_Donor_Statement]^Route r = route ( delegates ) ;ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ;^203^^^^^199^206^ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P13_Insert_Block]^if  ( route == null )  {     put ( key,  ( route = new Route ( delegates )  )  ) ; }^203^^^^^199^206^[Delete]^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P5_Replace_Variable]^ROUTE_CACHE.put ( delegates, route = new Route ( key )  ) ;^203^^^^^199^206^ROUTE_CACHE.put ( key, route = new Route ( delegates )  ) ;^[CLASS] Mixin Generator Route  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P7_Replace_Invocation]^private static final Source SOURCE = new Source ( Mixin.class.getClassLoader (  )  ) ;^96^^^^^91^101^private static final Source SOURCE = new Source ( Mixin.class.getName (  )  ) ;^[CLASS] Generator  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P8_Replace_Mix]^private static  Source SOURCE = new Source ( Mixin.class.getName (  )  ) ;^96^^^^^91^101^private static final Source SOURCE = new Source ( Mixin.class.getName (  )  ) ;^[CLASS] Generator  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P1_Replace_Type]^private  long  style = STYLE_INTERFACES;^100^^^^^95^105^private int style = STYLE_INTERFACES;^[CLASS] Generator  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P5_Replace_Variable]^private int style = index;^100^^^^^95^105^private int style = STYLE_INTERFACES;^[CLASS] Generator  [METHOD] route [RETURN_TYPE] Mixin$Route   Object[] delegates [VARIABLES] Class[]  classes  interfaces  temp  boolean  MixinKey  KEY_FACTORY  int[]  route  Object  key  Map  ROUTE_CACHE  map  int  STYLE_BEANS  STYLE_EVERYTHING  STYLE_INTERFACES  i  index  style  Source  SOURCE  Object[]  beans  delegates  Route  route  
[P14_Delete_Statement]^^105^^^^^104^106^super ( SOURCE ) ;^[CLASS] Generator  [METHOD] <init> [RETURN_TYPE] Mixin$Generator()   [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P7_Replace_Invocation]^return classes[0].isAssignableFrom (  ) ;^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Generator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P8_Replace_Mix]^return classes[0 << 3] .getName (  )  ;^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Generator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P14_Delete_Statement]^^109^^^^^108^110^return classes[0].getClassLoader (  ) ;^[CLASS] Generator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P8_Replace_Mix]^this.style =  null;^117^^^^^112^122^this.style = style;^[CLASS] Generator  [METHOD] setStyle [RETURN_TYPE] void   int style [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^120^^^^^112^122^throw new IllegalArgumentException  (" ")  ;^[CLASS] Generator  [METHOD] setStyle [RETURN_TYPE] void   int style [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P8_Replace_Mix]^this.classes =  null;^125^^^^^124^126^this.classes = classes;^[CLASS] Generator  [METHOD] setClasses [RETURN_TYPE] void   Class[] classes [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P11_Insert_Donor_Statement]^this.delegates = delegates;this.classes = classes;^125^^^^^124^126^this.classes = classes;^[CLASS] Generator  [METHOD] setClasses [RETURN_TYPE] void   Class[] classes [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P11_Insert_Donor_Statement]^classes = r.classes;this.classes = classes;^125^^^^^124^126^this.classes = classes;^[CLASS] Generator  [METHOD] setClasses [RETURN_TYPE] void   Class[] classes [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P8_Replace_Mix]^this.delegates =  null;^129^^^^^128^130^this.delegates = delegates;^[CLASS] Generator  [METHOD] setDelegates [RETURN_TYPE] void   Object[] delegates [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P11_Insert_Donor_Statement]^this.classes = classes;this.delegates = delegates;^129^^^^^128^130^this.delegates = delegates;^[CLASS] Generator  [METHOD] setDelegates [RETURN_TYPE] void   Object[] delegates [VARIABLES] int[]  route  Class[]  classes  boolean  Source  SOURCE  Object[]  delegates  int  style  
[P2_Replace_Operator]^if  ( classes == null || delegates == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( classes != null && delegates == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( classes == null && delegates != null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( temp == null && delegates == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( delegates == null && classes == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( classes == null ) {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  delegates == null )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^if  ( classes == true && delegates == true )  {^133^^^^^118^148^if  ( classes == null && delegates == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Either classes or delegates must be set");^133^134^135^^^118^148^if  ( classes == null && delegates == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P16_Remove_Block]^^133^134^135^^^118^148^if  ( classes == null && delegates == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^133^^^^^118^148^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  (  ( classes )  == null )  &&  (  ( delegates )  == null )  )  {     throw new IllegalStateException ( "Either classes or delegates must be set" ) ; }^134^^^^^119^149^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^134^^^^^119^149^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^134^^^^^119^149^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( classes != null )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( temp == null )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^if  ( classes == false )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P9_Replace_Statement]^if  ( delegates != null )  {^138^^^^^123^153^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P15_Unwrap_Block]^org.mockito.cglib.proxy.Mixin.Route r = org.mockito.cglib.proxy.Mixin.route(delegates); classes = r.classes; route = r.route;^138^139^140^141^142^123^153^if  ( classes == null )  { Route r = route ( delegates ) ; classes = r.classes; route = r.route; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P16_Remove_Block]^^138^139^140^141^142^123^153^if  ( classes == null )  { Route r = route ( delegates ) ; classes = r.classes; route = r.route; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^classes = temp;^140^^^^^125^155^classes = r.classes;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^classes = r.classes.classes;^140^^^^^125^155^classes = r.classes;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^classes = r;^140^^^^^125^155^classes = r.classes;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^classes =  null.classes;^140^^^^^125^155^classes = r.classes;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^this.classes = classes;classes = r.classes;^140^^^^^125^155^classes = r.classes;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^route = route;^141^^^^^126^156^route = r.route;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^route = r.route.route;^141^^^^^126^156^route = r.route;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^route = r;^141^^^^^126^156^route = r.route;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^route =  null.nulloute;^141^^^^^126^156^route = r.route;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  ( classes )  == null )  {     Route r = route ( delegates ) ;     classes = r.classes;     route = r.route; }^139^^^^^124^154^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P14_Delete_Statement]^^139^140^^^^124^154^Route r = route ( delegates ) ; classes = r.classes;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( classes != null )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( delegates != null )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( classes.length != temp.length )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( i < classes.length )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i + " ) " )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^if  ( classes == false )  {^147^^^^^132^162^if  ( classes == null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( delegates == null )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( classes.length != temp.length )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( i < classes.length )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i + " ) " )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^if  ( delegates != true )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P9_Replace_Statement]^if  ( classes == null )  {^150^^^^^147^161^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P15_Unwrap_Block]^java.lang.Class[] temp = org.mockito.cglib.proxy.ReflectUtils.getClasses(delegates); if ((classes.length) != (temp.length)) {    throw new java.lang.IllegalStateException("Specified classes are incompatible with delegates");}; for (int i = 0; i < (classes.length); i++) {    if (!(classes[i].isAssignableFrom(temp[i]))) {        throw new java.lang.IllegalStateException((((((("Specified class " + (classes[i])) + " is incompatible with delegate class ") + (temp[i])) + " (index ") + i) + ")"));    }};^150^151^152^153^154^147^161^if  ( delegates != null )  { Class[] temp = ReflectUtils.getClasses ( delegates ) ; if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P16_Remove_Block]^^150^151^152^153^154^147^161^if  ( delegates != null )  { Class[] temp = ReflectUtils.getClasses ( delegates ) ; if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( classes.length >= temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( style != temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( classes.length != style )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( temp.length != classes.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( classes != temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( classes.length.length != temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Specified classes are incompatible with delegates");^152^153^154^^^147^161^if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P16_Remove_Block]^^152^153^154^^^147^161^if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  (  ( classes )  == null )  &&  (  ( delegates )  == null )  )  {     throw new IllegalStateException ( "Either classes or delegates must be set" ) ; }^152^^^^^147^161^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  ( ! ( classes[i].isAssignableFrom ( temp[i] )  )  )  {     throw new IllegalStateException (  (  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i )  + " ) " )  ) ; }^152^^^^^147^161^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^153^^^^^147^161^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^153^^^^^147^161^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^if  ( !classes[i] .getName (  )   )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException((((((("Specified class " + (classes[i])) + " is incompatible with delegate class ") + (temp[i])) + " (index ") + i) + ")"));^156^157^158^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P16_Remove_Block]^^156^157^158^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^156^^^^^147^161^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  ( ! ( classes[i].isAssignableFrom ( temp[i] )  )  )  {     throw new IllegalStateException (  (  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i )  + " ) " )  ) ; }^157^^^^^147^161^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^157^^^^^147^161^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P1_Replace_Type]^for  (  short  i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  ( int i = 0; i > classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  <  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  !=  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  ==  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  >>  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  &&  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P3_Replace_Literal]^for  ( int i = -1; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( stylent i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < style; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < temp.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( !classes[i].isAssignableFrom ( classes[i] )  )  {^156^^^^^147^161^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P3_Replace_Literal]^for  ( int i = 7; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^Class[] temp = ReflectUtils .getNames ( classes )  ;^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P14_Delete_Statement]^^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^classes = ReflectUtils.getClasses ( delegates ) ;Class[] temp = ReflectUtils.getClasses ( delegates ) ;^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( classes.length == temp.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( classes.length != temp.length.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( temp != classes.length.length )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( temp.length.length != classes )  {^152^^^^^147^161^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  |  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P3_Replace_Literal]^for  ( int i = i; i < classes.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( classes.lengthnt i = 0; i < i; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < classes.length.length; i++ )  {^155^^^^^147^161^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^Class[] temp = ReflectUtils .getNames ( temp )  ;^151^^^^^147^161^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^classes = ReflectUtils .getNames ( temp )  ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^classes  = null ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P14_Delete_Statement]^^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^Class[] temp = ReflectUtils.getClasses ( delegates ) ;classes = ReflectUtils.getClasses ( delegates ) ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( delegates == null )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( classes.length != temp.length )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( i < classes.length )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i + " ) " )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^if  ( delegates != true )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P9_Replace_Statement]^if  ( classes == null )  {^150^^^^^135^165^if  ( delegates != null )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P15_Unwrap_Block]^java.lang.Class[] temp = org.mockito.cglib.proxy.ReflectUtils.getClasses(delegates); if ((classes.length) != (temp.length)) {    throw new java.lang.IllegalStateException("Specified classes are incompatible with delegates");}; for (int i = 0; i < (classes.length); i++) {    if (!(classes[i].isAssignableFrom(temp[i]))) {        throw new java.lang.IllegalStateException((((((("Specified class " + (classes[i])) + " is incompatible with delegate class ") + (temp[i])) + " (index ") + i) + ")"));    }};^150^151^152^153^154^135^165^if  ( delegates != null )  { Class[] temp = ReflectUtils.getClasses ( delegates ) ; if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P16_Remove_Block]^^150^151^152^153^154^135^165^if  ( delegates != null )  { Class[] temp = ReflectUtils.getClasses ( delegates ) ; if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( classes.length == temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( style != temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( temp.length != classes.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( classes != temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( temp.length.length != classes )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Specified classes are incompatible with delegates");^152^153^154^^^137^167^if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P16_Remove_Block]^^152^153^154^^^137^167^if  ( classes.length != temp.length )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  (  ( classes )  == null )  &&  (  ( delegates )  == null )  )  {     throw new IllegalStateException ( "Either classes or delegates must be set" ) ; }^152^^^^^137^167^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  ( ! ( classes[i].isAssignableFrom ( temp[i] )  )  )  {     throw new IllegalStateException (  (  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i )  + " ) " )  ) ; }^152^^^^^137^167^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^153^^^^^138^168^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^153^^^^^138^168^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^153^^^^^138^168^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " + i )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  + "  ( index " )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " + temp[i] )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " +  ( classes[i] )  + " is incompatible with delegate class " )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P6_Replace_Expression]^if  ( "Specified class " + classes[i] )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^if  ( !classes[i] .getName (  )   )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException((((((("Specified class " + (classes[i])) + " is incompatible with delegate class ") + (temp[i])) + " (index ") + i) + ")"));^156^157^158^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P16_Remove_Block]^^156^157^158^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  { throw new IllegalStateException  (" ")  ; }^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  (  ( classes.length )  !=  ( temp.length )  )  {     throw new IllegalStateException ( "Specified classes are incompatible with delegates" ) ; }^156^^^^^141^171^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P13_Insert_Block]^if  ( ! ( classes[i].isAssignableFrom ( temp[i] )  )  )  {     throw new IllegalStateException (  (  (  (  (  (  ( "Specified class " +  ( classes[i] )  )  + " is incompatible with delegate class " )  +  ( temp[i] )  )  + "  ( index " )  + i )  + " ) " )  ) ; }^157^^^^^142^172^[Delete]^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^157^^^^^142^172^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P1_Replace_Type]^for  (  short  i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  ( int i = 0; i <= classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  &  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  >>  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for   instanceof   ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  |  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  <  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P3_Replace_Literal]^for  ( int i = 3; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( stylent i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < style; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( int i = 0; i < temp.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^for  ( classes.lengthnt i = 0; i < i; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^return 0;^157^^^^^142^172^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P14_Delete_Statement]^^151^^^^^136^166^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P11_Insert_Donor_Statement]^classes = ReflectUtils.getClasses ( delegates ) ;Class[] temp = ReflectUtils.getClasses ( delegates ) ;^151^^^^^136^166^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^if  ( classes.length <= temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( temp.length != temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( classes.length != style )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( classes.length.length != temp.length )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( classes.length != temp )  {^152^^^^^137^167^if  ( classes.length != temp.length )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^157^^^^^142^172^throw new IllegalStateException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  ==  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  !=  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P3_Replace_Literal]^for  ( int i = style; i < classes.length; i++ )  {^155^^^^^140^170^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P8_Replace_Mix]^classes  =  classes ;^148^^^^^133^163^classes = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^Class[] temp = ReflectUtils .getNames ( temp )  ;^151^^^^^136^166^Class[] temp = ReflectUtils.getClasses ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P14_Delete_Statement]^^139^^^^^124^154^Route r = route ( delegates ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^if  ( !classes[i].isAssignableFrom ( classes[i] )  )  {^156^^^^^141^171^if  ( !classes[i].isAssignableFrom ( temp[i] )  )  {^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^setNamePrefix ( temp[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^getClassName ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getClassLoader (  )  ) ;^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^setNamePrefix ( classes[ReflectUtils .getNames ( classes )  ].getName (  )  ) ;^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P14_Delete_Statement]^^163^^^^^148^178^setNamePrefix ( classes[ReflectUtils.findPackageProtected ( classes ) ].getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance (  ReflectUtils.getNames (  classes  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  )  )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils .getClasses ( delegates )  , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P7_Replace_Invocation]^return  ( Mixin ) super .create (  )   ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P14_Delete_Statement]^^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( 3.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( i, ReflectUtils.getNames (  classes  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  temp  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( route.newInstance ( style, ReflectUtils.getNames (  classes  ) , KEY_FACTORY )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( style.newInstance ( KEY_FACTORY, ReflectUtils.getNames (  classes  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( classes, ReflectUtils.getNames (  style  ) , route )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( route, ReflectUtils.getNames (  classes  ) , style )  ) ;^165^^^^^150^180^return  ( Mixin ) super.create ( KEY_FACTORY.newInstance ( style, ReflectUtils.getNames (  classes  ) , route )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] Mixin   [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Source  SOURCE  Object[]  delegates  int  i  style  Route  r  
[P5_Replace_Variable]^new MixinEmitter ( v, getClassName (  ) , temp, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEmitter (  getClassName (  ) , classes, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEmitter ( v, getClassName (  ) ,  route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEmitter ( v, getClassName (  ) , classes ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEmitter ( classes, getClassName (  ) , v, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEmitter ( v, getClassName (  ) , route, classes ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinBeanEmitter ( v, getClassName (  ) , temp ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinBeanEmitter (  getClassName (  ) , classes ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinBeanEmitter ( v, getClassName (  )  ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinBeanEmitter ( classes, getClassName (  ) , v ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEverythingEmitter ( v, getClassName (  ) , temp ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEverythingEmitter (  getClassName (  ) , classes ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEverythingEmitter ( v, getClassName (  )  ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^new MixinEverythingEmitter ( classes, getClassName (  ) , v ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P14_Delete_Statement]^^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P11_Insert_Donor_Statement]^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P11_Insert_Donor_Statement]^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^171^^^^^168^180^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P14_Delete_Statement]^^174^175^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ; break;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P11_Insert_Donor_Statement]^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P11_Insert_Donor_Statement]^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^174^^^^^168^180^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P14_Delete_Statement]^^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P11_Insert_Donor_Statement]^new MixinBeanEmitter ( v, getClassName (  ) , classes ) ;new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P11_Insert_Donor_Statement]^new MixinEmitter ( v, getClassName (  ) , classes, route ) ;new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^177^^^^^168^180^new MixinEverythingEmitter ( v, getClassName (  ) , classes ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class[]  classes  temp  boolean  int[]  route  ClassVisitor  v  Source  SOURCE  Object[]  delegates  int  i  style  
[P5_Replace_Variable]^return  (  ( Mixin ) ReflectUtils.newInstance ( delegates )  ) .newInstance ( type ) ;^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Class  type  Source  SOURCE  Object[]  delegates  int  i  style  
[P7_Replace_Invocation]^return  (  ( Mixin ) ReflectUtils.route ( type )  ) .newInstance ( delegates ) ;^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Class  type  Source  SOURCE  Object[]  delegates  int  i  style  
[P7_Replace_Invocation]^return  (  ( Mixin ) ReflectUtils.getNames ( type )  ) .newInstance ( delegates ) ;^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Class  type  Source  SOURCE  Object[]  delegates  int  i  style  
[P8_Replace_Mix]^return  (  ( Mixin ) ReflectUtils .newInstance ( i , 1 , route )   )^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Class  type  Source  SOURCE  Object[]  delegates  int  i  style  
[P14_Delete_Statement]^^183^^^^^182^184^return  (  ( Mixin ) ReflectUtils.newInstance ( type )  ) .newInstance ( delegates ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Class  type  Source  SOURCE  Object[]  delegates  int  i  style  
[P7_Replace_Invocation]^return  (  ( Mixin ) instance ) .route ( delegates ) ;^187^^^^^186^188^return  (  ( Mixin ) instance ) .newInstance ( delegates ) ;^[CLASS] Generator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Object  instance  Source  SOURCE  Object[]  delegates  int  i  style  
[P14_Delete_Statement]^^187^^^^^186^188^return  (  ( Mixin ) instance ) .newInstance ( delegates ) ;^[CLASS] Generator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] Class[]  classes  temp  boolean  int[]  route  Object  instance  Source  SOURCE  Object[]  delegates  int  i  style  
[P1_Replace_Type]^LinkedList  collect = new  LinkedList  (  ) ;^215^^^^^213^236^ArrayList collect = new ArrayList (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P1_Replace_Type]^LinkedHashSet  collect = new  LinkedHashSet  (  ) ;^215^^^^^213^236^ArrayList collect = new ArrayList (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^if  ( !map.containsKey ( key )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^if  ( !map.containsKey ( indexface )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^if  ( !map.containsKey ( ifaceface )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P7_Replace_Invocation]^if  ( !map.put ( iface )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P15_Unwrap_Block]^map.put(iface, new java.lang.Integer(i));^222^223^224^^^213^236^if  ( !map.containsKey ( iface )  )  { map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P16_Remove_Block]^^222^223^224^^^213^236^if  ( !map.containsKey ( iface )  )  { map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^map.put ( indexface, new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P4_Replace_Constructor]^map.put (  new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^map.put ( key, new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^map.put ( i, new Integer ( iface )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^223^224^^^^213^236^map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P1_Replace_Type]^for  (  short  i = 0; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P2_Replace_Operator]^for  ( int i = 0; i > delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P3_Replace_Literal]^for  ( int i = 9; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( indexnt i = 0; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( int i = 0; i < keys.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( int i = 0; i < index; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( int i = 0; i < delegates.length.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( delegates.lengthnt i = 0; i < i; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( Iterator indext = collect.iterator (  ) ; it.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( Iterator collect = it.iterator (  ) ; it.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( Iterator itt = collect.iterator (  ) ; i.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^if  ( !map.containsKey ( i )  )  {^222^^^^^213^236^if  ( !map.containsKey ( iface )  )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^map.put ( ifaceface, new Integer ( i )  ) ;^223^^^^^213^236^map.put ( iface, new Integer ( i )  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P11_Insert_Donor_Statement]^Class key =  ( Class ) it.next (  ) ;Class iface =  ( Class ) it.next (  ) ;^221^^^^^213^236^Class iface =  ( Class ) it.next (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^221^222^223^224^^213^236^Class iface =  ( Class ) it.next (  ) ; if  ( !map.containsKey ( iface )  )  { map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^217^218^^^^213^236^Class delegate = delegates[i].getClass (  ) ; collect.clear (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^218^^^^^213^236^collect.clear (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^ReflectUtils.addAllInterfaces ( key, collect ) ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^ReflectUtils.addAllInterfaces (  collect ) ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^ReflectUtils.addAllInterfaces ( delegate ) ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^ReflectUtils.addAllInterfaces ( collect, delegate ) ;^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^219^^^^^213^236^ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^220^221^222^223^224^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  { Class iface =  ( Class ) it.next (  ) ; if  ( !map.containsKey ( iface )  )  { map.put ( iface, new Integer ( i )  ) ; }^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( Iterator i = collect.iterator (  ) ; itt.hasNext (  ) ; )  {^220^^^^^213^236^for  ( Iterator it = collect.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P1_Replace_Type]^for  (  long  i = 0; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P3_Replace_Literal]^for  ( int i = index; i < delegates.length; i++ )  {^216^^^^^213^236^for  ( int i = 0; i < delegates.length; i++ )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^218^219^^^^213^236^collect.clear (  ) ; ReflectUtils.addAllInterfaces ( delegate, collect ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P3_Replace_Literal]^classes = new Class[map.size() - 0 ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P7_Replace_Invocation]^classes = new Class[map.get (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P8_Replace_Mix]^classes =  new Class[null.size (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P11_Insert_Donor_Statement]^route = new int[map.size (  ) ];classes = new Class[map.size (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P3_Replace_Literal]^classes = new Class[map.size() - 4 ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^227^228^^^^213^236^classes = new Class[map.size (  ) ]; route = new int[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P11_Insert_Donor_Statement]^Class iface =  ( Class ) it.next (  ) ;classes = new Class[map.size (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P11_Insert_Donor_Statement]^Class key =  ( Class ) it.next (  ) ;classes = new Class[map.size (  ) ];^227^^^^^213^236^classes = new Class[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P3_Replace_Literal]^route = new int[map.size() + 7 ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P7_Replace_Invocation]^route = new int[map.get (  ) ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P8_Replace_Mix]^route =  new int[null.size (  ) ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P11_Insert_Donor_Statement]^classes = new Class[map.size (  ) ];route = new int[map.size (  ) ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P3_Replace_Literal]^route = new int[map.size() + 5 ];^228^^^^^213^236^route = new int[map.size (  ) ];^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^228^229^^^^213^236^route = new int[map.size (  ) ]; int index = 0;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P1_Replace_Type]^long  index = 0;^229^^^^^213^236^int index = 0;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P3_Replace_Literal]^int index = i;^229^^^^^213^236^int index = 0;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^for  ( Iterator map = it.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^230^^^^^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P7_Replace_Invocation]^for  ( Iterator it = map.get (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^230^^^^^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^classes[index] = iface;^232^^^^^213^236^classes[index] = key;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P8_Replace_Mix]^classes[index]  = null ;^232^^^^^213^236^classes[index] = key;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^route[index] =  (  ( Integer ) map.get ( iface )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P7_Replace_Invocation]^route[index] =  (  ( Integer ) map.put ( key )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P11_Insert_Donor_Statement]^Class iface =  ( Class ) it.next (  ) ;Class key =  ( Class ) it.next (  ) ;^231^^^^^213^236^Class key =  ( Class ) it.next (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^231^232^^^^213^236^Class key =  ( Class ) it.next (  ) ; classes[index] = key;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P11_Insert_Donor_Statement]^classes = new Class[map.size (  ) ];Class key =  ( Class ) it.next (  ) ;^231^^^^^213^236^Class key =  ( Class ) it.next (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P5_Replace_Variable]^route[index] =  (  ( Integer ) key.get ( map )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^233^234^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ; index++;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P8_Replace_Mix]^route[index] =  (  ( Integer ) map.put ( iface )  ) .intValue (  ) ;^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P8_Replace_Mix]^classes[index]  =  classes[index] ;^232^^^^^213^236^classes[index] = key;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^230^231^232^233^234^213^236^for  ( Iterator it = map.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  { Class key =  ( Class ) it.next (  ) ; classes[index] = key; route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ; index++; }^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^231^^^^^213^236^Class key =  ( Class ) it.next (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
[P14_Delete_Statement]^^233^^^^^213^236^route[index] =  (  ( Integer ) map.get ( key )  ) .intValue (  ) ;^[CLASS] Route  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] delegates [VARIABLES] Class[]  classes  boolean  ArrayList  collect  Iterator  it  int[]  route  Class  delegate  iface  key  Map  map  Object[]  delegates  int  i  index  
