[P8_Replace_Mix]^private Map methodMap ;^29^^^^^24^34^private Map methodMap = new HashMap (  ) ;^[CLASS] CallbackHelper   [VARIABLES] 
[P1_Replace_Type]^private  Set  callbacks = new Array Set  (  ) ;^30^^^^^25^35^private List callbacks = new ArrayList (  ) ;^[CLASS] CallbackHelper   [VARIABLES] 
[P8_Replace_Mix]^private List callbacks ;^30^^^^^25^35^private List callbacks = new ArrayList (  ) ;^[CLASS] CallbackHelper   [VARIABLES] 
[P1_Replace_Type]^List methods = new  Set  (  ) ;^34^^^^^32^55^List methods = new ArrayList (  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P1_Replace_Type]^Set  methods = new Array Set  (  ) ;^34^^^^^32^55^List methods = new ArrayList (  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Enhancer.getMethods ( superclass, interfaces, callbacks ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Enhancer.getMethods (  interfaces, methods ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Enhancer.getMethods ( superclass,  methods ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Enhancer.getMethods ( superclass, interfaces ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Enhancer.getMethods ( interfaces, superclass, methods ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Enhancer.getMethods ( superclass, methods, interfaces ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^35^36^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ; Map indexes = new HashMap (  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( callback != null ) throw new IllegalStateException  (" ")  ;^40^41^^^^32^55^if  ( callback == null ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P4_Replace_Constructor]^if  ( callback == null ) throw if  ( callback == null ) throw  new IllegalStateException ( "getCallback must return a Callback or a Class" )   ;^40^41^^^^32^55^if  ( callback == null ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^if  ( callback == false ) throw new IllegalStateException  (" ")  ;^40^41^^^^32^55^if  ( callback == null ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "getCallback must return a Callback or a Class" )   ;^41^^^^^32^55^throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^return ;^41^^^^^32^55^throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( ! ( isCallback &&  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^43^44^^^^32^55^if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( ! ( isCallback ||  ( callback  >>  Class )  )  ) throw new IllegalStateException  (" ")  ;^43^44^^^^32^55^if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P4_Replace_Constructor]^if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw  new IllegalStateException ( "getCallback must return a Callback or a Class consistently for every Method" )   ;^43^44^^^^32^55^if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^if  ( ! ( callback ||  ( isCallback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^43^44^^^^32^55^if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P6_Replace_Expression]^if  ( callback instanceof Class )  ;^43^44^^^^32^55^if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "getCallback must return a Callback or a Class consistently for every Method" )   ;^44^^^^^32^55^throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( i > 0 ||  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( i >= 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )   ||  Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( i > 0 &&  (  ( callbacks.get ( i  >  1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^if  ( i > i &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^if  ( i > 0 &&  (  ( callbacks.get ( i - size )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P4_Replace_Constructor]^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw  new IllegalStateException ( "getCallback must return a Callback or a Class" )   ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^if  ( size > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^if  ( i > 0 &&  (  ( methods.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^if  ( callbacks > 0 &&  (  ( i.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^if  ( i > 0 &&  (  ( isCallback.get ( i - 1 )  instanceof Callback )  ^ callbacks )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P6_Replace_Expression]^if  ( i > 0 )  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P6_Replace_Expression]^if  (  ( callbacks.get (  ( i - 1 )  )  )  instanceof Callback ^ isCallback )  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P6_Replace_Expression]^if  ( callbacks.get (  ( i - 1 )  )  instanceof Callback )  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P6_Replace_Expression]^if  ( i - 1 )  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P7_Replace_Invocation]^if  ( i > 0 &&  (  ( callbacks .get ( i )   instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^if  ( i > 2 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "getCallback must return a Callback or a Class" )   ;^46^^^^^32^55^throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( index != null )  {^48^^^^^32^55^if  ( index == null )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^if  ( index == true )  {^48^^^^^32^55^if  ( index == null )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P15_Unwrap_Block]^index = new java.lang.Integer(callbacks.size()); indexes.put(callback, index);^48^49^50^51^^32^55^if  ( index == null )  { index = new Integer ( callbacks.size (  )  ) ; indexes.put ( callback, index ) ; }^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P16_Remove_Block]^^48^49^50^51^^32^55^if  ( index == null )  { index = new Integer ( callbacks.size (  )  ) ; indexes.put ( callback, index ) ; }^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() + 4  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^index = new Integer ( methods.size (  )  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^index  = null ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() - 1  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() + 0  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^49^50^^^^32^55^index = new Integer ( callbacks.size (  )  ) ; indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^indexes.put (  index ) ;^50^^^^^32^55^indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^indexes.put ( callback ) ;^50^^^^^32^55^indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^indexes.put ( index, callback ) ;^50^^^^^32^55^indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P7_Replace_Invocation]^indexes .get ( size )  ;^50^^^^^32^55^indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^50^^^^^32^55^indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P1_Replace_Type]^for  (  long  i = 0, size = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^for  ( int i = 0, size = methods.size (  ) ; i <= size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^for  ( int i = i, size = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^for  ( int i = size, size = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^for  ( int i = 0, size = methods.size() - 2 ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P4_Replace_Constructor]^for  ( int i = 0 = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^for  ( int i = 0, size = callbacks.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^for  ( sizent i = 0, size = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^for  ( sizent i = 0, i = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P7_Replace_Invocation]^for  ( int i = 0, size = methods.add (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^for  ( int i = 0, size = callbacks.add (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^if  ( callback == true ) throw new IllegalStateException  (" ")  ;^40^41^^^^32^55^if  ( callback == null ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^if  (  ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^43^44^^^^32^55^if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( i == 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )   &&  Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( i > 0 &&  (  ( callbacks.get ( i  >>  1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^if  ( i > -5 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^if  ( i > 0 &&  (  ( callbacks.get ( i -  )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^if  ( isCallback > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ i )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^if  ( i > 0L &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^return ;^46^^^^^32^55^throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() + 6  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^index ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() - 9  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() - 6  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() - 4  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^index  =  index ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() + 5  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Method method =  ( Method ) callbacks.get ( i ) ;^38^^^^^32^55^Method method =  ( Method ) methods.get ( i ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Method method =  ( Method ) methods.get ( size ) ;^38^^^^^32^55^Method method =  ( Method ) methods.get ( i ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Method method =  ( Method ) i.get ( methods ) ;^38^^^^^32^55^Method method =  ( Method ) methods.get ( i ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P7_Replace_Invocation]^Object callback = accept ( method ) ;^39^^^^^32^55^Object callback = getCallback ( method ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^boolean isCallback = callback  >=  Callback;^42^^^^^32^55^boolean isCallback = callback instanceof Callback;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Integer index =  ( Integer ) methodMap.get ( callback ) ;^47^^^^^32^55^Integer index =  ( Integer ) indexes.get ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^Integer index =  ( Integer ) callback.get ( indexes ) ;^47^^^^^32^55^Integer index =  ( Integer ) indexes.get ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P7_Replace_Invocation]^Integer index =  ( Integer ) indexes.put ( callback ) ;^47^^^^^32^55^Integer index =  ( Integer ) indexes.get ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^Integer index =  ( Integer ) methodMap .get ( i )  ;^47^^^^^32^55^Integer index =  ( Integer ) indexes.get ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P7_Replace_Invocation]^Method method =  ( Method ) methods .get ( i )  ;^38^^^^^32^55^Method method =  ( Method ) methods.get ( i ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^38^39^^^^32^55^Method method =  ( Method ) methods.get ( i ) ; Object callback = getCallback ( method ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^39^^^^^32^55^Object callback = getCallback ( method ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^if  ( i > 0 &&  (  ( callbacks.get ( i - i )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^47^^^^^32^55^Integer index =  ( Integer ) indexes.get ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^index = new Integer ( callbacks.size() + 9  ) ;^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^methodMap.put (  index ) ;^52^^^^^32^55^methodMap.put ( method, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^methodMap.put ( method ) ;^52^^^^^32^55^methodMap.put ( method, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P5_Replace_Variable]^methodMap.put ( index, method ) ;^52^^^^^32^55^methodMap.put ( method, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P7_Replace_Invocation]^methodMap .get ( i )  ;^52^^^^^32^55^methodMap.put ( method, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^52^^^^^32^55^methodMap.put ( method, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P7_Replace_Invocation]^callbacks.get ( callback ) ;^53^^^^^32^55^callbacks.add ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^53^^^^^32^55^callbacks.add ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P1_Replace_Type]^for  (  short  i = 0, size = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^for  ( int i = -3, size = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^for  ( int i = 0, size = methods.size() + 4 ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^for  ( int i = 0, size = methods.size() - 6 ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^boolean isCallback = callback  ||  Callback;^42^^^^^32^55^boolean isCallback = callback instanceof Callback;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P8_Replace_Mix]^return true;^46^^^^^32^55^throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P3_Replace_Literal]^for  ( int i = 0, size = methods.size() + 1 ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^38^^^^^32^55^Method method =  ( Method ) methods.get ( i ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( i > 0 &&  (  ( callbacks.get ( i  <=  1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^49^^^^^32^55^index = new Integer ( callbacks.size (  )  ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P14_Delete_Statement]^^52^53^^^^32^55^methodMap.put ( method, index ) ; callbacks.add ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[P2_Replace_Operator]^if  ( callbacks.size (  )  != 0 ) return new Callback[0];^61^62^^^^59^68^if  ( callbacks.size (  )  == 0 ) return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.size (  )  == -6 ) return new Callback[-6];^61^62^^^^59^68^if  ( callbacks.size (  )  == 0 ) return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.size (  )  == -3 ) return new Callback[-3];^61^62^^^^59^68^if  ( callbacks.size (  )  == 0 ) return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.size() + 6  == 0 ) return new Callback[0];^61^62^^^^59^68^if  ( callbacks.size (  )  == 0 ) return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P5_Replace_Variable]^if  ( methods.size (  )  == 0 ) return new Callback[0];^61^62^^^^59^68^if  ( callbacks.size (  )  == 0 ) return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return new Callback[-5];^62^^^^^59^68^return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P8_Replace_Mix]^return new Callback[3];^62^^^^^59^68^return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return new Callback[2];^62^^^^^59^68^return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P8_Replace_Mix]^return new Callback[0 % 1];^62^^^^^59^68^return new Callback[0];^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P2_Replace_Operator]^if  ( callbacks.get ( 0 )   >=  Callback )  {^63^^^^^59^68^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.get ( 4 )  instanceof Callback )  {^63^^^^^59^68^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P5_Replace_Variable]^if  ( methods.get ( 0 )  instanceof Callback )  {^63^^^^^59^68^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P7_Replace_Invocation]^if  ( callbacks.add ( 0 )  instanceof Callback )  {^63^^^^^59^68^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P8_Replace_Mix]^if  ( callbacks.get ( 0L )  instanceof Callback )  {^63^^^^^59^68^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P15_Unwrap_Block]^return ((org.mockito.cglib.proxy.Callback[]) (callbacks.toArray(new org.mockito.cglib.proxy.Callback[callbacks.size()])));^63^64^65^66^67^59^68^if  ( callbacks.get ( 0 )  instanceof Callback )  { return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ; } else { throw new IllegalStateException  (" ")  ; }^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P16_Remove_Block]^^63^64^65^66^67^59^68^if  ( callbacks.get ( 0 )  instanceof Callback )  { return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ; } else { throw new IllegalStateException  (" ")  ; }^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P13_Insert_Block]^if  (  ( callbacks.get ( 0 )  )  instanceof Callback )  {     return getClasses ( getCallbacks (  )  ) ; }else {     return  (  ( Class[] )   ( callbacks.toArray ( new size (  ) ] )  )  ) ; }^63^^^^^59^68^[Delete]^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size() + 3 ] ) ;^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P5_Replace_Variable]^return  ( Callback[] ) methods.toArray ( new Callback[callbacks.size (  ) ] ) ;^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P7_Replace_Invocation]^return  ( Callback[] ) callbacks.size ( new Callback[callbacks.size (  ) ] ) ;^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P8_Replace_Mix]^return  ( Callback[] ) methods.size ( new Callback[callbacks.size (  ) ] ) ;^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P14_Delete_Statement]^^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size() - 4 ] ) ;^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size() - 0 ] ) ;^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.get ( -6 )  instanceof Callback )  {^63^^^^^59^68^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size() + 5 ] ) ;^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size() + 2 ] ) ;^64^^^^^59^68^return  ( Callback[] ) callbacks.toArray ( new Callback[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbacks [RETURN_TYPE] Callback[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P2_Replace_Operator]^if  ( callbacks.size (  )  != 0 ) return new Class[0];^72^73^^^^70^79^if  ( callbacks.size (  )  == 0 ) return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.size (  )  == 3 ) return new Class[3];^72^73^^^^70^79^if  ( callbacks.size (  )  == 0 ) return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.size (  )  == 4 ) return new Class[4];^72^73^^^^70^79^if  ( callbacks.size (  )  == 0 ) return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.size() - 4  == 0 ) return new Class[0];^72^73^^^^70^79^if  ( callbacks.size (  )  == 0 ) return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P5_Replace_Variable]^if  ( methods.size (  )  == 0 ) return new Class[0];^72^73^^^^70^79^if  ( callbacks.size (  )  == 0 ) return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P8_Replace_Mix]^if  ( callbacks.size (  )  == 0  ) return new Class[0 ];^72^73^^^^70^79^if  ( callbacks.size (  )  == 0 ) return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return new Class[9];^73^^^^^70^79^return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P8_Replace_Mix]^return new Class[3];^73^^^^^70^79^return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return new Class[8];^73^^^^^70^79^return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P8_Replace_Mix]^return new Class[2];^73^^^^^70^79^return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.size() + 3  == 0 ) return new Class[0];^72^73^^^^70^79^if  ( callbacks.size (  )  == 0 ) return new Class[0];^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P2_Replace_Operator]^if  ( callbacks.get ( 0 )   !=  Callback )  {^74^^^^^70^79^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.get ( 7 )  instanceof Callback )  {^74^^^^^70^79^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P5_Replace_Variable]^if  ( methods.get ( 0 )  instanceof Callback )  {^74^^^^^70^79^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P7_Replace_Invocation]^if  ( callbacks.add ( 0 )  instanceof Callback )  {^74^^^^^70^79^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P8_Replace_Mix]^if  ( callbacks.get ( 3 )  instanceof Callback )  {^74^^^^^70^79^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P15_Unwrap_Block]^return org.mockito.cglib.core.ReflectUtils.getClasses(getCallbacks());^74^75^76^77^78^70^79^if  ( callbacks.get ( 0 )  instanceof Callback )  { return ReflectUtils.getClasses ( getCallbacks (  )  ) ; } else { return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ; }^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P16_Remove_Block]^^74^75^76^77^78^70^79^if  ( callbacks.get ( 0 )  instanceof Callback )  { return ReflectUtils.getClasses ( getCallbacks (  )  ) ; } else { return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ; }^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P13_Insert_Block]^if  (  ( callbacks.get ( 0 )  )  instanceof Callback )  {     return  (  ( Callback[] )   ( callbacks.toArray ( new size (  ) ] )  )  ) ; }else {     throw new IllegalStateException ( "getCallback returned classes, not callbacks; call getCallbackTypes instead" ) ; }^74^^^^^70^79^[Delete]^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size() + 7 ] ) ;^77^^^^^70^79^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P5_Replace_Variable]^return  ( Class[] ) methods.toArray ( new Class[callbacks.size (  ) ] ) ;^77^^^^^70^79^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P7_Replace_Invocation]^return  ( Class[] ) callbacks.size ( new Class[callbacks.size (  ) ] ) ;^77^^^^^70^79^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size() - 6 ] ) ;^77^^^^^70^79^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P14_Delete_Statement]^^77^^^^^70^79^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size() + 4 ] ) ;^77^^^^^70^79^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P14_Delete_Statement]^^75^^^^^70^79^return ReflectUtils.getClasses ( getCallbacks (  )  ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^if  ( callbacks.get ( -4 )  instanceof Callback )  {^74^^^^^70^79^if  ( callbacks.get ( 0 )  instanceof Callback )  {^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size() - 8 ] ) ;^77^^^^^70^79^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P3_Replace_Literal]^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size() - 4 ] ) ;^77^^^^^70^79^return  ( Class[] ) callbacks.toArray ( new Class[callbacks.size (  ) ] ) ;^[CLASS] CallbackHelper  [METHOD] getCallbackTypes [RETURN_TYPE] Class[]   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P5_Replace_Variable]^return  (  ( Integer ) indexes.get ( method )  ) .intValue (  ) ;^83^^^^^81^84^return  (  ( Integer ) methodMap.get ( method )  ) .intValue (  ) ;^[CLASS] CallbackHelper  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] List  callbacks  methods  Method  method  boolean  Map  indexes  methodMap  
[P5_Replace_Variable]^return  (  ( Integer ) methodMapMap.get ( method )  ) .intValue (  ) ;^83^^^^^81^84^return  (  ( Integer ) methodMap.get ( method )  ) .intValue (  ) ;^[CLASS] CallbackHelper  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] List  callbacks  methods  Method  method  boolean  Map  indexes  methodMap  
[P5_Replace_Variable]^return  (  ( Integer ) method.get ( methodMap )  ) .intValue (  ) ;^83^^^^^81^84^return  (  ( Integer ) methodMap.get ( method )  ) .intValue (  ) ;^[CLASS] CallbackHelper  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] List  callbacks  methods  Method  method  boolean  Map  indexes  methodMap  
[P7_Replace_Invocation]^return  (  ( Integer ) methodMap.get ( method )  ) .Integer (  ) ;^83^^^^^81^84^return  (  ( Integer ) methodMap.get ( method )  ) .intValue (  ) ;^[CLASS] CallbackHelper  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] List  callbacks  methods  Method  method  boolean  Map  indexes  methodMap  
[P7_Replace_Invocation]^return  (  ( Integer ) methodMap.equals ( method )  ) .intValue (  ) ;^83^^^^^81^84^return  (  ( Integer ) methodMap.get ( method )  ) .intValue (  ) ;^[CLASS] CallbackHelper  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] List  callbacks  methods  Method  method  boolean  Map  indexes  methodMap  
[P14_Delete_Statement]^^83^^^^^81^84^return  (  ( Integer ) methodMap.get ( method )  ) .intValue (  ) ;^[CLASS] CallbackHelper  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] List  callbacks  methods  Method  method  boolean  Map  indexes  methodMap  
[P5_Replace_Variable]^return indexes.hashCode (  ) ;^88^^^^^86^89^return methodMap.hashCode (  ) ;^[CLASS] CallbackHelper  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P14_Delete_Statement]^^88^^^^^86^89^return methodMap.hashCode (  ) ;^[CLASS] CallbackHelper  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Map  indexes  methodMap  List  callbacks  methods  boolean  
[P2_Replace_Operator]^if  ( o != null ) return false;^93^94^^^^91^98^if  ( o == null ) return false;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P3_Replace_Literal]^if  ( o == null ) return true;^93^94^^^^91^98^if  ( o == null ) return false;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P8_Replace_Mix]^if  ( o == this ) return false;^93^94^^^^91^98^if  ( o == null ) return false;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P15_Unwrap_Block]^return false;^93^94^95^96^97^91^98^if  ( o == null ) return false; if  ( ! ( o instanceof CallbackHelper )  ) return false; return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ; }^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P16_Remove_Block]^^93^94^95^96^97^91^98^if  ( o == null ) return false; if  ( ! ( o instanceof CallbackHelper )  ) return false; return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ; }^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P3_Replace_Literal]^return true;^94^^^^^91^98^return false;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P2_Replace_Operator]^if  ( ! ( o  ==  CallbackHelper )  ) return false;^95^96^^^^91^98^if  ( ! ( o instanceof CallbackHelper )  ) return false;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P3_Replace_Literal]^if  ( ! ( o instanceof CallbackHelper )  ) return true;^95^96^^^^91^98^if  ( ! ( o instanceof CallbackHelper )  ) return false;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P15_Unwrap_Block]^return false;^95^96^97^98^^91^98^if  ( ! ( o instanceof CallbackHelper )  ) return false; return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ; }^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P16_Remove_Block]^^95^96^97^98^^91^98^if  ( ! ( o instanceof CallbackHelper )  ) return false; return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ; }^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P3_Replace_Literal]^return true;^96^^^^^91^98^return false;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P5_Replace_Variable]^return indexes.equals (  (  ( CallbackHelper ) o ) .methodMap ) ;^97^^^^^91^98^return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P7_Replace_Invocation]^return methodMap.get (  (  ( CallbackHelper ) o ) .methodMap ) ;^97^^^^^91^98^return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P7_Replace_Invocation]^return methodMap .getCallbacks (  )  .methodMap ) ;^97^^^^^91^98^return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P8_Replace_Mix]^return indexes.get (  (  ( CallbackHelper ) o ) .methodMap ) ;^97^^^^^91^98^return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
[P14_Delete_Statement]^^97^^^^^91^98^return methodMap.equals (  (  ( CallbackHelper ) o ) .methodMap ) ;^[CLASS] CallbackHelper  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] List  callbacks  methods  Object  o  boolean  Map  indexes  methodMap  
