[P11_Insert_Donor_Statement]^Map indexes = new HashMap (  ) ;Map buckets = new HashMap (  ) ;^29^^^^^28^40^Map buckets = new HashMap (  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P2_Replace_Operator]^if  ( bucket != null )  {^34^^^^^28^40^if  ( bucket == null )  {^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P8_Replace_Mix]^if  ( bucket == this )  {^34^^^^^28^40^if  ( bucket == null )  {^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P15_Unwrap_Block]^buckets.put(key, (bucket = new java.util.LinkedList()));^34^35^36^^^28^40^if  ( bucket == null )  { buckets.put ( key, bucket = new LinkedList (  )  ) ; }^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P16_Remove_Block]^^34^35^36^^^28^40^if  ( bucket == null )  { buckets.put ( key, bucket = new LinkedList (  )  ) ; }^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P1_Replace_Type]^buckets.put ( key, bucket = new Linked ArrayList  (  )  ) ;^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P1_Replace_Type]^buckets.put ( key, bucket = new  ArrayList  (  )  ) ;^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P4_Replace_Constructor]^buckets.put (  bucket = new LinkedList (  )  ) ;^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P5_Replace_Variable]^buckets.put ( value, bucket = new LinkedList (  )  ) ;^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P7_Replace_Invocation]^buckets .get ( value )  ;^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P14_Delete_Statement]^^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P13_Insert_Block]^if  ( bucket == null )  {     buckets.put ( key,  ( bucket = new LinkedList (  )  )  ) ; }^35^^^^^28^40^[Delete]^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P1_Replace_Type]^buckets.put ( key, bucket = new Linked Set  (  )  ) ;^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P1_Replace_Type]^buckets.put ( key, bucket = new  Set  (  )  ) ;^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P7_Replace_Invocation]^Object value =  ( Object ) it .hasNext (  )  ;^31^^^^^28^40^Object value =  ( Object ) it.next (  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P11_Insert_Donor_Statement]^Object key = it.next (  ) ;Object value =  ( Object ) it.next (  ) ;^31^^^^^28^40^Object value =  ( Object ) it.next (  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P5_Replace_Variable]^Object key = value.transform ( t ) ;^32^^^^^28^40^Object key = t.transform ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P7_Replace_Invocation]^Object key = t .transform ( key )  ;^32^^^^^28^40^Object key = t.transform ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P11_Insert_Donor_Statement]^Object key = it.next (  ) ;Object key = t.transform ( value ) ;^32^^^^^28^40^Object key = t.transform ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P1_Replace_Type]^ArrayList  bucket =  (  ArrayList  ) buckets.get ( key ) ;^33^^^^^28^40^List bucket =  ( List ) buckets.get ( key ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P5_Replace_Variable]^List bucket =  ( List ) buckets.get ( value ) ;^33^^^^^28^40^List bucket =  ( List ) buckets.get ( key ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P5_Replace_Variable]^List bucket =  ( List ) key.get ( buckets ) ;^33^^^^^28^40^List bucket =  ( List ) buckets.get ( key ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P7_Replace_Invocation]^List bucket =  ( List ) buckets.put ( key ) ;^33^^^^^28^40^List bucket =  ( List ) buckets.get ( key ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P14_Delete_Statement]^^31^^^^^28^40^Object value =  ( Object ) it.next (  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P14_Delete_Statement]^^32^33^34^35^36^28^40^Object key = t.transform ( value ) ; List bucket =  ( List ) buckets.get ( key ) ; if  ( bucket == null )  { buckets.put ( key, bucket = new LinkedList (  )  ) ; }^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P11_Insert_Donor_Statement]^bucket.add ( value ) ;Object key = t.transform ( value ) ;^32^^^^^28^40^Object key = t.transform ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P1_Replace_Type]^Set  bucket =  (  Set  ) buckets.get ( key ) ;^33^^^^^28^40^List bucket =  ( List ) buckets.get ( key ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P14_Delete_Statement]^^33^^^^^28^40^List bucket =  ( List ) buckets.get ( key ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P7_Replace_Invocation]^bucket .iterator (  )  ;^37^^^^^28^40^bucket.add ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P8_Replace_Mix]^bucket.add ( key ) ;^37^^^^^28^40^bucket.add ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P14_Delete_Statement]^^37^^^^^28^40^bucket.add ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P11_Insert_Donor_Statement]^Object key = t.transform ( value ) ;bucket.add ( value ) ;^37^^^^^28^40^bucket.add ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P1_Replace_Type]^buckets.put ( key, bucket = new  LinkedHashSet  (  )  ) ;^35^^^^^28^40^buckets.put ( key, bucket = new LinkedList (  )  ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P7_Replace_Invocation]^for  ( Iterator it = c .size (  )  ; it.hasNext (  ) ; )  {^30^^^^^28^40^for  ( Iterator it = c.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P7_Replace_Invocation]^Object key = t .transform ( value )  ;^32^^^^^28^40^Object key = t.transform ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P7_Replace_Invocation]^for  ( Iterator it = c.iterator (  ) ; it .next (  )  ; )  {^30^^^^^28^40^for  ( Iterator it = c.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P14_Delete_Statement]^^31^32^^^^28^40^Object value =  ( Object ) it.next (  ) ; Object key = t.transform ( value ) ;^[CLASS] CollectionUtils  [METHOD] bucket [RETURN_TYPE] Map   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  Object  key  value  List  bucket  Map  buckets  
[P5_Replace_Variable]^for  ( Iterator it = target.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^43^^^^^42^47^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P7_Replace_Invocation]^for  ( Iterator it = source.keySet (  )  .size (  )  ; it.hasNext (  ) ; )  {^43^^^^^42^47^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P7_Replace_Invocation]^for  ( Iterator it = source.get (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^43^^^^^42^47^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P7_Replace_Invocation]^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it .next (  )  ; )  {^43^^^^^42^47^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P8_Replace_Mix]^for  ( Iterator it = target.keySet (  ) .iterator (  ) ; it .next (  )  ; )  {^43^^^^^42^47^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P11_Insert_Donor_Statement]^Object key = t.transform ( value ) ;Object key = it.next (  ) ;^44^^^^^42^47^Object key = it.next (  ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P11_Insert_Donor_Statement]^Object value =  ( Object ) it.next (  ) ;Object key = it.next (  ) ;^44^^^^^42^47^Object key = it.next (  ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P7_Replace_Invocation]^Object key = it .hasNext (  )  ;^44^^^^^42^47^Object key = it.next (  ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P14_Delete_Statement]^^44^^^^^42^47^Object key = it.next (  ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P5_Replace_Variable]^target.put ( source.get ( key )  ) ;^45^^^^^42^47^target.put ( source.get ( key ) , key ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P5_Replace_Variable]^target.put ( key.get ( source ) , key ) ;^45^^^^^42^47^target.put ( source.get ( key ) , key ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P7_Replace_Invocation]^target .get ( key )  ;^45^^^^^42^47^target.put ( source.get ( key ) , key ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P7_Replace_Invocation]^target.put ( source.put ( key ) , key ) ;^45^^^^^42^47^target.put ( source.get ( key ) , key ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P8_Replace_Mix]^target.put ( target.get ( key ) , key ) ;^45^^^^^42^47^target.put ( source.get ( key ) , key ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P14_Delete_Statement]^^45^^^^^42^47^target.put ( source.get ( key ) , key ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P8_Replace_Mix]^for  ( Iterator it = target.get (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^43^^^^^42^47^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P14_Delete_Statement]^^43^44^45^46^^42^47^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  { Object key = it.next (  ) ; target.put ( source.get ( key ) , key ) ; }^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P7_Replace_Invocation]^for  ( Iterator it = source .get ( key )  .iterator (  ) ; it.hasNext (  ) ; )  {^43^^^^^42^47^for  ( Iterator it = source.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P14_Delete_Statement]^^44^45^^^^42^47^Object key = it.next (  ) ; target.put ( source.get ( key ) , key ) ;^[CLASS] CollectionUtils  [METHOD] reverse [RETURN_TYPE] void   Map source Map target [VARIABLES] boolean  Iterator  it  Object  key  Map  source  target  
[P7_Replace_Invocation]^Iterator it = c .size (  )  ;^50^^^^^49^57^Iterator it = c.iterator (  ) ;^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P14_Delete_Statement]^^50^^^^^49^57^Iterator it = c.iterator (  ) ;^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P7_Replace_Invocation]^while  ( it .next (  )   )  {^51^^^^^49^57^while  ( it.hasNext (  )  )  {^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P15_Unwrap_Block]^it.remove();^52^53^54^^^49^57^if  ( !p.evaluate ( it.next (  )  )  )  { it.remove (  ) ; }^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P16_Remove_Block]^^52^53^54^^^49^57^if  ( !p.evaluate ( it.next (  )  )  )  { it.remove (  ) ; }^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P7_Replace_Invocation]^it .next (  )  ;^53^^^^^49^57^it.remove (  ) ;^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P14_Delete_Statement]^^53^^^^^49^57^it.remove (  ) ;^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P8_Replace_Mix]^if  ( !p.evaluate ( it .hasNext (  )   )  )  {^52^^^^^49^57^if  ( !p.evaluate ( it.next (  )  )  )  {^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P14_Delete_Statement]^^51^52^53^^^49^57^while  ( it.hasNext (  )  )  { if  ( !p.evaluate ( it.next (  )  )  )  { it.remove (  ) ;^[CLASS] CollectionUtils  [METHOD] filter [RETURN_TYPE] Collection   Collection c Predicate p [VARIABLES] boolean  Iterator  it  Collection  c  Predicate  p  
[P1_Replace_Type]^List result = new  List  ( c.size (  )  ) ;^60^^^^^59^65^List result = new ArrayList ( c.size (  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P3_Replace_Literal]^List result = new ArrayList ( c.size() - 6  ) ;^60^^^^^59^65^List result = new ArrayList ( c.size (  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P7_Replace_Invocation]^List result = new ArrayList ( c .iterator (  )   ) ;^60^^^^^59^65^List result = new ArrayList ( c.size (  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P1_Replace_Type]^Set  result = new Array Set  ( c.size (  )  ) ;^60^^^^^59^65^List result = new ArrayList ( c.size (  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P3_Replace_Literal]^List result = new ArrayList ( c.size() + 1  ) ;^60^^^^^59^65^List result = new ArrayList ( c.size (  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P14_Delete_Statement]^^60^^^^^59^65^List result = new ArrayList ( c.size (  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P5_Replace_Variable]^for  ( Iterator c = it.iterator (  ) ; it.hasNext (  ) ; )  {^61^^^^^59^65^for  ( Iterator it = c.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P7_Replace_Invocation]^for  ( Iterator it = c.iterator (  ) ; it .next (  )  ; )  {^61^^^^^59^65^for  ( Iterator it = c.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P8_Replace_Mix]^for  ( Iterator it = c .size (  )  ; it.hasNext (  ) ; )  {^61^^^^^59^65^for  ( Iterator it = c.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P5_Replace_Variable]^result.add ( it.transform ( t.next (  )  )  ) ;^62^^^^^59^65^result.add ( t.transform ( it.next (  )  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P8_Replace_Mix]^result.add ( t.transform ( it .hasNext (  )   )  ) ;^62^^^^^59^65^result.add ( t.transform ( it.next (  )  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P14_Delete_Statement]^^62^63^^^^59^65^result.add ( t.transform ( it.next (  )  )  ) ; }^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P12_Insert_Condition]^if  ( !p.evaluate ( it.next (  )  )  )  { result.add ( t.transform ( it.next (  )  )  ) ; }^62^^^^^59^65^result.add ( t.transform ( it.next (  )  )  ) ;^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P14_Delete_Statement]^^61^62^63^^^59^65^for  ( Iterator it = c.iterator (  ) ; it.hasNext (  ) ; )  { result.add ( t.transform ( it.next (  )  )  ) ; }^[CLASS] CollectionUtils  [METHOD] transform [RETURN_TYPE] List   Collection c Transformer t [VARIABLES] Transformer  t  boolean  Iterator  it  Collection  c  List  result  
[P11_Insert_Donor_Statement]^Map buckets = new HashMap (  ) ;Map indexes = new HashMap (  ) ;^68^^^^^67^74^Map indexes = new HashMap (  ) ;^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P1_Replace_Type]^long  index = 0;^69^^^^^67^74^int index = 0;^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P3_Replace_Literal]^int index = -3;^69^^^^^67^74^int index = 0;^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P5_Replace_Variable]^for  ( Iterator list = it.iterator (  ) ; it.hasNext (  ) ; )  {^70^^^^^67^74^for  ( Iterator it = list.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P7_Replace_Invocation]^for  ( Iterator it = list.add (  ) ; it.hasNext (  ) ; )  {^70^^^^^67^74^for  ( Iterator it = list.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P14_Delete_Statement]^^71^^^^^67^74^indexes.put ( it.next (  ) , new Integer ( index++ )  ) ;^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P8_Replace_Mix]^for  ( Iterator it = list .size (  )  ; it.hasNext (  ) ; )  {^70^^^^^67^74^for  ( Iterator it = list.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P14_Delete_Statement]^^70^71^72^^^67^74^for  ( Iterator it = list.iterator (  ) ; it.hasNext (  ) ; )  { indexes.put ( it.next (  ) , new Integer ( index++ )  ) ; }^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P8_Replace_Mix]^for  ( Iterator it = list.iterator (  ) ; it .next (  )  ; )  {^70^^^^^67^74^for  ( Iterator it = list.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
[P8_Replace_Mix]^indexes.put ( it .hasNext (  )  , new Integer ( index++ )  ) ;^71^^^^^67^74^indexes.put ( it.next (  ) , new Integer ( index++ )  ) ;^[CLASS] CollectionUtils  [METHOD] getIndexMap [RETURN_TYPE] Map   List list [VARIABLES] boolean  Iterator  it  List  list  Map  indexes  int  index  
