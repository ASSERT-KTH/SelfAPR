[P8_Replace_Mix]^this.pass =  null;^30^^^^^29^31^this.pass = pass;^[CLASS] AbstractClassFilterTransformer  [METHOD] <init> [RETURN_TYPE] ClassTransformer)   ClassTransformer pass [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P7_Replace_Invocation]^super .AbstractClassTransformer (  )  ;^25^^^^^24^27^super.setTarget ( target ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] setTarget [RETURN_TYPE] void   ClassVisitor target [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P14_Delete_Statement]^^25^26^^^^24^27^super.setTarget ( target ) ; pass.setTarget ( target ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] setTarget [RETURN_TYPE] void   ClassVisitor target [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P11_Insert_Donor_Statement]^pass.setTarget ( target ) ;super.setTarget ( target ) ;^25^^^^^24^27^super.setTarget ( target ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] setTarget [RETURN_TYPE] void   ClassVisitor target [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P7_Replace_Invocation]^pass .AbstractClassTransformer (  )  ;^26^^^^^24^27^pass.setTarget ( target ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] setTarget [RETURN_TYPE] void   ClassVisitor target [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P14_Delete_Statement]^^26^^^^^24^27^pass.setTarget ( target ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] setTarget [RETURN_TYPE] void   ClassVisitor target [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P11_Insert_Donor_Statement]^super.setTarget ( target ) ;pass.setTarget ( target ) ;^26^^^^^24^27^pass.setTarget ( target ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] setTarget [RETURN_TYPE] void   ClassVisitor target [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P5_Replace_Variable]^target = accept ( version, access, signature, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, name, superName, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept (  access, name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version,  name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access,  signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, name,  superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, name, signature,  interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, name, signature, superName )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( pass, access, name, signature, superName, interfaces )  ? version : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( access, version, name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, cv, signature, superName, interfaces )  ? pass : name;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, signature, name, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, name, superName, signature, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, name, interfaces, superName, signature )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, name, signature, pass, interfaces )  ? superName : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P6_Replace_Expression]^target  =  cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P6_Replace_Expression]^target  =  pass ;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P7_Replace_Invocation]^target = visit ( version, access, name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P8_Replace_Mix]^target =  accept ( access, access, name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, version, name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, superName, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( superName, access, name, signature, version, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, interfaces, name, signature, superName, access )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( version, access, superName, signature, name, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target = accept ( interfaces, access, name, signature, superName, version )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P8_Replace_Mix]^target = accept ( version, access, name, name, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P14_Delete_Statement]^^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P11_Insert_Donor_Statement]^target.visit ( version, access, name, signature, superName, interfaces ) ;target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( access, access, name, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access, superName, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access, name, superName, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access, name, signature, signature, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit (  access, name, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version,  name, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access,  signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access, name,  superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access, name, signature,  interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access, name, signature, superName ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( access, version, name, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access, superName, signature, name, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, access, name, superName, signature, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visit ( version, interfaces, name, signature, superName, access ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P14_Delete_Statement]^^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P11_Insert_Donor_Statement]^target.visitInnerClass ( name, outerName, innerName, access ) ;target.visit ( version, access, name, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P11_Insert_Donor_Statement]^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;target.visit ( version, access, name, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[P5_Replace_Variable]^target.visitSource ( source, source ) ;^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[P5_Replace_Variable]^target.visitSource (  debug ) ;^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[P5_Replace_Variable]^target.visitSource ( source ) ;^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[P5_Replace_Variable]^target.visitSource ( debug, source ) ;^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[P7_Replace_Invocation]^target.visitAnnotation ( source, debug ) ;^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[P8_Replace_Mix]^target.visitAnnotation ( source, source ) ;^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[P14_Delete_Statement]^^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[P11_Insert_Donor_Statement]^target.visitOuterClass ( owner, name, desc ) ;target.visitSource ( source, debug ) ;^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[P5_Replace_Variable]^target.visitOuterClass ( desc, name, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^target.visitOuterClass ( owner, owner, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^target.visitOuterClass ( owner, name, owner ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^target.visitOuterClass (  name, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^target.visitOuterClass ( owner,  desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^target.visitOuterClass ( owner, name ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^target.visitOuterClass ( name, owner, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^target.visitOuterClass ( owner, desc, name ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^target.visitOuterClass ( desc, name, owner ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P8_Replace_Mix]^target.visitOuterClass ( owner, name, name ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P14_Delete_Statement]^^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P11_Insert_Donor_Statement]^target.visitSource ( source, debug ) ;target.visitOuterClass ( owner, name, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P11_Insert_Donor_Statement]^target.visitInnerClass ( name, outerName, innerName, access ) ;target.visitOuterClass ( owner, name, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[P5_Replace_Variable]^return target.visitAnnotation (  visible ) ;^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[P5_Replace_Variable]^return target.visitAnnotation ( desc ) ;^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[P5_Replace_Variable]^return desc.visitAnnotation ( target, visible ) ;^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[P5_Replace_Variable]^return visible.visitAnnotation ( desc, target ) ;^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[P5_Replace_Variable]^return target.visitAnnotation ( visible, desc ) ;^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[P14_Delete_Statement]^^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[P14_Delete_Statement]^^58^^^^^57^59^target.visitAttribute ( attr ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  Attribute  attr  
[P11_Insert_Donor_Statement]^target.visitEnd (  ) ;target.visitAttribute ( attr ) ;^58^^^^^57^59^target.visitAttribute ( attr ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  Attribute  attr  
[P5_Replace_Variable]^target.visitInnerClass ( innerName, outerName, innerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass ( name, name, innerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass ( name, outerName, outerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass (  outerName, innerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass ( name,  innerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass ( name, outerName,  access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass ( name, outerName, innerName ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass ( innerName, outerName, name, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass ( name, innerName, outerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^target.visitInnerClass ( access, outerName, innerName, name ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P8_Replace_Mix]^target.visitInnerClass ( name, outerName, name, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P14_Delete_Statement]^^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P11_Insert_Donor_Statement]^target.visit ( version, access, name, signature, superName, interfaces ) ;target.visitInnerClass ( name, outerName, innerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P11_Insert_Donor_Statement]^target.visitOuterClass ( owner, name, desc ) ;target.visitInnerClass ( name, outerName, innerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, desc, desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, name, signature, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, name, desc, name, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField (  name, desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access,  desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, name,  signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, name, desc,  value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, name, desc, signature ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( value, name, desc, signature, access ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, desc, name, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, name, signature, desc, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, signature, desc, name, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return value.visitField ( access, name, desc, signature, target ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P7_Replace_Invocation]^return target.visitMethod ( access, name, desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P7_Replace_Invocation]^return target .visitEnd (  )  ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P8_Replace_Mix]^return target.visitMethod ( access, desc, desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( signature, name, desc, access, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, name, value, signature, desc ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitField ( access, name, desc, value, signature ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return access.visitField ( target, name, desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P14_Delete_Statement]^^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, signature, desc, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, name, signature, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, name, desc, desc, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod (  name, desc, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access,  desc, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, name,  signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, name, desc,  exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, name, desc, signature ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( desc, name, access, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, signature, desc, name, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, name, signature, desc, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, name, desc, exceptions, signature ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return desc.visitMethod ( access, name, target, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P7_Replace_Invocation]^return target .visitEnd (  )  ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P8_Replace_Mix]^return target.visitMethod ( access, name, name, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, desc, desc, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( exceptions, name, desc, signature, access ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P5_Replace_Variable]^return target.visitMethod ( access, desc, name, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P14_Delete_Statement]^^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[P14_Delete_Statement]^^82^^^^^81^84^target.visitEnd (  ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P11_Insert_Donor_Statement]^target.visitAttribute ( attr ) ;target.visitEnd (  ) ;^82^^^^^81^84^target.visitEnd (  ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
[P8_Replace_Mix]^target = true;^83^^^^^81^84^target = null;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] ClassTransformer  pass  ClassVisitor  target  boolean  
