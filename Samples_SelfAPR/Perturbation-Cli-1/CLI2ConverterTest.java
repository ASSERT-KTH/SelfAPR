[P3_Replace_Literal]^a = OptionBuilder.withDescription ( " desc description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^a = OptionBuilder.withLongOpt ( "A description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^a = OptionBuilder .withLongOpt ( this )  .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^a  =  a ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^a = OptionBuilder.withDescription ( "A descriptionA " ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^a = OptionBuilder.withDescription ( "  description" ) .create ( 'a' ) ;^42^^^^^27^57^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^bbb = OptionBuilder.withArgName ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^bbb ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^bbb = OptionBuilder.create ( "bbbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^43^44^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ; c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;bbb = OptionBuilder.create ( "bbb" ) ;^43^^^^^28^58^bbb = OptionBuilder.create ( "bbb" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^c = OptionBuilder.withLongOpt ( "cccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^c = OptionBuilder.withArgName ( "ccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^c  =  c ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^c = OptionBuilder.withLongOpt ( "cc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^c = OptionBuilder.withLongOpt ( "ccccc" ) .create ( 'c' ) ;^44^^^^^29^59^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^ddd = OptionBuilder.withLongOpt ( "dd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^ddd = OptionBuilder.withArgName ( "ddd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^ddd  =  ddd ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^45^^^^^30^60^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^e = OptionBuilder.isRequired ( false ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^e = OptionBuilder.create ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^e = OptionBuilder.isRequired ( true ) .create ( "" ) ;^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^46^^^^^31^61^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^f = OptionBuilder.hasArg (  ) .withArgName ( "urgument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^f = OptionBuilder.hasArg (  ) .withLongOpt ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^f = OptionBuilder.create (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^f = OptionBuilder .hasArgs ( null )  .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^f  = null ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^47^48^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ; g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^f = OptionBuilder.hasArg (  ) .withArgName ( "argumentm" ) .create ( 'f' ) ;^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^47^^^^^32^62^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^g = OptionBuilder.hasArgs ( 12 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^g = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^g = OptionBuilder.hasArgs ( 7 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^g = OptionBuilder.hasArgs ( 8 ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^g = OptionBuilder.hasArgs (  ) .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^g = OptionBuilder .hasArg (  )  .create ( 'g' ) ;^48^^^^^33^63^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^h = OptionBuilder.hasOptionalArg (  ) .hasArgs ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^h = OptionBuilder.hasArg (  ) .create ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^h  = null ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^49^50^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ; i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^49^^^^^34^64^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^i = OptionBuilder.hasOptionalArgs ( 3 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^i = OptionBuilder.hasArgs ( 5 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^i = OptionBuilder.hasOptionalArgs ( 5L ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^c = OptionBuilder.withLongOpt ( "ccc" ) .create ( 'c' ) ;i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^f = OptionBuilder.hasArg (  ) .withArgName ( "argument" ) .create ( 'f' ) ;i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^e = OptionBuilder.isRequired ( true ) .create ( "e" ) ;i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^ddd = OptionBuilder.withLongOpt ( "ddd" ) .create (  ) ;i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^g = OptionBuilder.hasArgs ( 5 ) .create ( 'g' ) ;i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^h = OptionBuilder.hasOptionalArg (  ) .create ( 'h' ) ;i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^a = OptionBuilder.withDescription ( "A description" ) .create ( 'a' ) ;i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^i = OptionBuilder.hasOptionalArgs ( -3 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^i = OptionBuilder.hasOptionalArgs ( 7 ) .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^i = OptionBuilder .hasOptionalArg (  )  .create ( 'i' ) ;^50^^^^^35^65^i = OptionBuilder.hasOptionalArgs ( 5 ) .create ( 'i' ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P4_Replace_Constructor]^aceOptions = acenew OptionGroup (  )  ;^52^^^^^37^67^aceOptions = new Options (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^acenew OptionGroup (  )  ;^52^^^^^37^67^aceOptions = new Options (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions = new Options (  ) ;aceOptions = new Options (  ) ;^52^^^^^37^67^aceOptions = new Options (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup = new OptionGroup (  ) ;aceOptions = new Options (  ) ;^52^^^^^37^67^aceOptions = new Options (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptions.addOptionGroup ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptions.addOption ( OptionBuilder.hasArgs ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^53^54^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ; aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^53^^^^^38^68^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptions.addOptionGroup ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptions .addOptionGroup ( aceOptionGroup )  ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptions.addOption ( OptionBuilder.hasArgs ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^54^^^^^39^69^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptions.addOptionGroup ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptions.addOption ( OptionBuilder.hasArgs ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^55^^^^^40^70^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P4_Replace_Constructor]^aceOptionGroup = acenew Options (  )  ;^57^^^^^42^72^aceOptionGroup = new OptionGroup (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^acenew Options (  )  ;^57^^^^^42^72^aceOptionGroup = new OptionGroup (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions = new Options (  ) ;aceOptionGroup = new OptionGroup (  ) ;^57^^^^^42^72^aceOptionGroup = new OptionGroup (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions = new Options (  ) ;aceOptionGroup = new OptionGroup (  ) ;^57^^^^^42^72^aceOptionGroup = new OptionGroup (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup.setRequired ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup .addOptionGroup ( aceOptionGroup )  ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup.addOption ( OptionBuilder.hasArgs ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup.addOption ( OptionBuilder .isRequired ( 1 )   ) ;^58^^^^^43^73^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup.setRequired ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup .addOptionGroup ( aceOptionGroup )  ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup.addOption ( OptionBuilder.hasArgs ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^59^60^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ; aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^59^^^^^44^74^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup.setRequired ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup .addOptionGroup ( aceOptionGroup )  ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^aceOptionGroup.addOption ( OptionBuilder.hasArgs ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^60^^^^^45^75^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P4_Replace_Constructor]^abcdeOptions = abcdenew OptionGroup (  )  ;^62^^^^^47^77^abcdeOptions = new Options (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^abcdenew OptionGroup (  )  ;^62^^^^^47^77^abcdeOptions = new Options (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup = new OptionGroup (  ) ;abcdeOptions = new Options (  ) ;^62^^^^^47^77^abcdeOptions = new Options (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions = new Options (  ) ;abcdeOptions = new Options (  ) ;^62^^^^^47^77^abcdeOptions = new Options (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^abcdeOptions.addOptionGroup ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^abcdeOptions.addOption ( OptionBuilder.hasArgs ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOptionGroup ( og ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^63^^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^63^64^^^^48^78^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ; OptionGroup og = new OptionGroup (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P4_Replace_Constructor]^OptionGroup og = new Options (  )  ;^64^^^^^49^79^OptionGroup og = new OptionGroup (  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^og.addOption ( OptionBuilder.hasArgs ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;og.addOption ( OptionBuilder.create ( 'a' )  ) ;^65^^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^65^66^^^^50^80^og.addOption ( OptionBuilder.create ( 'a' )  ) ; og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^og .addOptionGroup ( og )  ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^og.addOption ( OptionBuilder.hasArgs ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^66^67^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ; og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;og.addOption ( OptionBuilder.create ( 'c' )  ) ;^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^66^^^^^51^81^og.addOption ( OptionBuilder.create ( 'c' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^og.addOption ( OptionBuilder.hasArgs ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^67^68^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ; abcdeOptions.addOptionGroup ( og ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;og.addOption ( OptionBuilder.create ( 'e' )  ) ;^67^^^^^52^82^og.addOption ( OptionBuilder.create ( 'e' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^abcdeOptions.addOptionGroup ( aceOptionGroup ) ;^68^^^^^53^83^abcdeOptions.addOptionGroup ( og ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^abcdeOptions.addOption ( og ) ;^68^^^^^53^83^abcdeOptions.addOptionGroup ( og ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^68^69^^^^53^83^abcdeOptions.addOptionGroup ( og ) ; abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;abcdeOptions.addOptionGroup ( og ) ;^68^^^^^53^83^abcdeOptions.addOptionGroup ( og ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;abcdeOptions.addOptionGroup ( og ) ;^68^^^^^53^83^abcdeOptions.addOptionGroup ( og ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^abcdeOptions.addOptionGroup ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^abcdeOptions .addOptionGroup ( aceOptionGroup )  ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^abcdeOptions.addOption ( OptionBuilder.hasArgs ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'e' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'c' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'e' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOptionGroup ( og ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'c' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'a' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'a' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^og.addOption ( OptionBuilder.create ( 'c' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptions.addOption ( OptionBuilder.create ( 'a' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^aceOptionGroup.addOption ( OptionBuilder.create ( 'e' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^abcdeOptions.addOption ( OptionBuilder.create ( 'd' )  ) ;abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^69^^^^^54^84^abcdeOptions.addOption ( OptionBuilder.create ( 'b' )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^pattern = PatternOptionBuilder.parsePattern ( "a%ce:a%c" ) ;^71^^^^^56^86^pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^pattern ;^71^^^^^56^86^pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^bbb = OptionBuilder.create ( "bbb" ) ;pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^71^^^^^56^86^pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^pattern = PatternOptionBuilder.parsePattern ( "%%ce:" ) ;^71^^^^^56^86^pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^71^^^^^56^86^pattern = PatternOptionBuilder.parsePattern ( "a%ce:" ) ;^[CLASS] CLI2ConverterTest  [METHOD] setUp [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertTrue ( i.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^toString ( e.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( e.getId (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertTrue ( e.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertTrue ( e.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertTrue ( e.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertTrue ( e.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertTrue ( f.isRequired (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertTrue ( g.getId (  )  ) ;^78^^^^^77^91^assertTrue ( e.isRequired (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^assertEquals ( " descri description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertEquals ( "A description",a.getId (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^80^81^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ; assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( "A description",a.getDescription (  )  ) ;^80^^^^^77^91^assertEquals ( "A description",a.getDescription (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertEquals ( 'a',a.isRequired (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( e.isRequired (  )  ) ;assertEquals ( 'a',a.getId (  )  ) ;^81^^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^81^82^^^^77^91^assertEquals ( 'a',a.getId (  )  ) ; assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-a]",CLI2Converter.option ( i ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertTrue ( "[-a]",CLI2Converter.option ( f ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[-a]",CLI2Converter.option ( g ) .toString (  )  ) ;^82^^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^82^83^^^^77^91^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ; assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^assertEquals ( "b-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-bbb]",CLI2Converter.option ( g ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[-bbb]",CLI2Converter.option ( i ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-bbb]",CLI2Converter.option ( f ) .toString (  )  ) ;^83^^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^83^84^^^^77^91^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ; assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( f ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( g ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( h ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^84^85^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ; assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( i ) .toString (  )  ) ;^84^^^^^77^91^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^assertEquals ( "-ddd",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[--ddd]",CLI2Converter.option ( g ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[--ddd]",CLI2Converter.option ( i ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^85^86^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ; assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[--ddd]",CLI2Converter.option ( h ) .toString (  )  ) ;^85^^^^^77^91^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "-e",CLI2Converter.option ( i ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertTrue ( "-e",CLI2Converter.option ( i ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "-e",CLI2Converter.option ( f ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^86^87^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ; assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "-e",CLI2Converter.option ( g ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "-e",CLI2Converter.option ( h ) .toString (  )  ) ;^86^^^^^77^91^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^assertEquals ( "[-f <argument>][-",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( e ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( i ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^87^88^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ; assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( g ) .toString (  )  ) ;^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^87^^^^^77^91^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^assertEquals ( "1> ",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( i ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( e ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g )  .assertTrue ( null )   ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( f ) .toString (  )  ) ;^88^^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^88^89^^^^77^91^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ; assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^assertEquals ( "[-h [<arg>]][",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( g ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( e ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^89^90^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ; assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( i ) .toString (  )  ) ;^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^89^^^^^77^91^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P3_Replace_Literal]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]<ar",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( e ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P7_Replace_Invocation]^assertTrue ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P14_Delete_Statement]^^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( h ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( f ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P8_Replace_Mix]^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( g ) .toString (  )  ) ;^90^^^^^77^91^assertEquals ( "[-i [<arg1> [<arg2> [<arg3> [<arg4> [<arg5>]]]]]]",CLI2Converter.option ( i ) .toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testOption [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  
[P5_Replace_Variable]^group =  ( GroupImpl ) CLI2Converter.group ( og ) ;^98^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P8_Replace_Mix]^group  = null ;^98^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^98^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^98^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^98^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^98^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( "-c|-e-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^99^^^^^95^108^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( 8,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^100^101^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ; assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertTrue ( e.isRequired (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P8_Replace_Mix]^assertEquals ( 0,group .getMaximum (  )   ) ;^100^^^^^95^108^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( 9,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^assertEquals ( 1,group .getMinimum (  )   ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertTrue ( e.isRequired (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^101^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^aceOptionGroup.setRequired ( false ) ;^103^^^^^95^108^aceOptionGroup.setRequired ( true ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^aceOptionGroup.addOption ( true ) ;^103^^^^^95^108^aceOptionGroup.setRequired ( true ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^103^^^^^95^108^aceOptionGroup.setRequired ( true ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P5_Replace_Variable]^group =  ( GroupImpl ) CLI2Converter.group ( og ) ;^104^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P8_Replace_Mix]^group  =  group ;^104^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^104^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^104^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^104^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^104^^^^^95^108^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( "-a|-c|-e|-",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^105^^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^105^106^^^^95^108^assertEquals ( "-a|-c|-e",group.toString (  )  ) ; assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( -6,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^106^107^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ; assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertTrue ( e.isRequired (  )  ) ;assertEquals ( 1,group.getMinimum (  )  ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^assertEquals ( 1,group .getMaximum (  )   ) ;^106^^^^^95^108^assertEquals ( 1,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( 3,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertTrue ( e.isRequired (  )  ) ;assertEquals ( 1,group.getMaximum (  )  ) ;^107^^^^^95^108^assertEquals ( 1,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptionGroup [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P5_Replace_Variable]^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^116^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P8_Replace_Mix]^group  =  group ;^116^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^116^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^116^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^116^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^116^117^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ; assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( "[-a|-c|-e][-a|-",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^117^118^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ; assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^117^^^^^112^131^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( 7,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^assertEquals ( 0,group .getMaximum (  )   ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^118^119^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ; assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertTrue ( e.isRequired (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^118^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P5_Replace_Variable]^assertEquals ( Integer.group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^assertTrue ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P8_Replace_Mix]^assertEquals ( Integer.MAX_VALUE,group .getMinimum (  )   ) ;^119^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P5_Replace_Variable]^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^121^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^group =  ( GroupImpl ) CLI2Converter .group ( aceOptionGroup )  ;^121^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P8_Replace_Mix]^group ;^121^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^121^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^121^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^121^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^121^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( "[-a|-c|-e|-d|-b]|-e|-",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^123^^^^^112^131^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( 2,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^124^125^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ; assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertTrue ( e.isRequired (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^assertEquals ( 0,group .getMaximum (  )   ) ;^124^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P5_Replace_Variable]^assertEquals ( Integer.group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^assertTrue ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^assertEquals ( Integer.MAX_VALUE,group .getMinimum (  )   ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^125^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P5_Replace_Variable]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;^127^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P8_Replace_Mix]^group  = null ;^127^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( abcdeOptions ) ;group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^127^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptionGroup ) ;group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^127^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^group =  ( GroupImpl ) CLI2Converter.group ( aceOptions ) ;group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^127^^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^127^128^^^^112^131^group =  ( GroupImpl ) CLI2Converter.group ( pattern ) ; assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( "[-a <arg>|-c|-e <arg>]-a <arg>",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^128^129^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ; assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-f <argument>]",CLI2Converter.option ( f ) .toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-bbb]",CLI2Converter.option ( bbb ) .toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-e",CLI2Converter.option ( e ) .toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-h [<arg>]]",CLI2Converter.option ( h ) .toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[--ddd]",CLI2Converter.option ( ddd ) .toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a]",CLI2Converter.option ( a ) .toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-c  ( --ccc ) ]",CLI2Converter.option ( c ) .toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-g <arg1> <arg2> <arg3> <arg4> <arg5>]",CLI2Converter.option ( g ) .toString (  )  ) ;assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^128^^^^^112^131^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P3_Replace_Literal]^assertEquals ( -3,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^129^130^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ; assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "A description",a.getDescription (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertTrue ( e.isRequired (  )  ) ;assertEquals ( 0,group.getMinimum (  )  ) ;^129^^^^^112^131^assertEquals ( 0,group.getMinimum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P5_Replace_Variable]^assertEquals ( Integer.group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P7_Replace_Invocation]^assertTrue ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P14_Delete_Statement]^^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a <arg>|-c|-e <arg>]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "-a|-c|-e",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( "[-a|-c|-e|-d|-b]",group.toString (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 0,group.getMinimum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 'a',a.getId (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMinimum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
[P11_Insert_Donor_Statement]^assertEquals ( 1,group.getMaximum (  )  ) ;assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^130^^^^^112^131^assertEquals ( Integer.MAX_VALUE,group.getMaximum (  )  ) ;^[CLASS] CLI2ConverterTest  [METHOD] testGroupOptions [RETURN_TYPE] void   [VARIABLES] Options  abcdeOptions  aceOptions  pattern  Option  a  bbb  c  ddd  e  f  g  h  i  OptionGroup  aceOptionGroup  og  boolean  GroupImpl  group  
