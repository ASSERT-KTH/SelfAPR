[P1_Replace_Type]^private static final  short  serialVersionUID = -4333175719424385526L;^76^^^^^71^81^private static final long serialVersionUID = -4333175719424385526L;^[CLASS] TextBlock   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -4333175719424385526;^76^^^^^71^81^private static final long serialVersionUID = -4333175719424385526L;^[CLASS] TextBlock   [VARIABLES] 
[P1_Replace_Type]^private  Set  lines;^79^^^^^74^84^private List lines;^[CLASS] TextBlock   [VARIABLES] 
[P8_Replace_Mix]^private  LinkedHashSet  lines;^79^^^^^74^84^private List lines;^[CLASS] TextBlock   [VARIABLES] 
[P1_Replace_Type]^this.lines = new java.util.Array LinkedHashSet  (  ) ;^88^^^^^87^90^this.lines = new java.util.ArrayList (  ) ;^[CLASS] TextBlock  [METHOD] <init> [RETURN_TYPE] TextBlock()   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  lineAlignment  
[P8_Replace_Mix]^this.lines = new java.util.Array Set  (  ) ;^88^^^^^87^90^this.lines = new java.util.ArrayList (  ) ;^[CLASS] TextBlock  [METHOD] <init> [RETURN_TYPE] TextBlock()   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  lineAlignment  
[P12_Insert_Condition]^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  { this.lines = new java.util.ArrayList (  ) ; this.lineAlignment = HorizontalAlignment.CENTER; }^88^89^^^^87^90^this.lines = new java.util.ArrayList (  ) ; this.lineAlignment = HorizontalAlignment.CENTER;^[CLASS] TextBlock  [METHOD] <init> [RETURN_TYPE] TextBlock()   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  lineAlignment  
[P1_Replace_Type]^this.lines = new java.util. Set  (  ) ;^88^^^^^87^90^this.lines = new java.util.ArrayList (  ) ;^[CLASS] TextBlock  [METHOD] <init> [RETURN_TYPE] TextBlock()   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  lineAlignment  
[P8_Replace_Mix]^this.lineAlignment ;^89^^^^^87^90^this.lineAlignment = HorizontalAlignment.CENTER;^[CLASS] TextBlock  [METHOD] <init> [RETURN_TYPE] TextBlock()   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  lineAlignment  
[P11_Insert_Donor_Statement]^this.lineAlignment = alignment;this.lineAlignment = HorizontalAlignment.CENTER;^89^^^^^87^90^this.lineAlignment = HorizontalAlignment.CENTER;^[CLASS] TextBlock  [METHOD] <init> [RETURN_TYPE] TextBlock()   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  lineAlignment  
[P5_Replace_Variable]^return lineAlignment;^98^^^^^97^99^return this.lineAlignment;^[CLASS] TextBlock  [METHOD] getLineAlignment [RETURN_TYPE] HorizontalAlignment   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  lineAlignment  
[P2_Replace_Operator]^if  ( alignment != null )  {^107^^^^^106^111^if  ( alignment == null )  {^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P8_Replace_Mix]^if  ( alignment == false )  {^107^^^^^106^111^if  ( alignment == null )  {^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'alignment' argument.");^107^108^109^^^106^111^if  ( alignment == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P16_Remove_Block]^^107^108^109^^^106^111^if  ( alignment == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P13_Insert_Block]^if  ( alignment == null )  {     throw new IllegalArgumentException ( "Null 'alignment' argument." ) ; }^108^^^^^106^111^[Delete]^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P5_Replace_Variable]^this.lineAlignment = lineAlignment;^110^^^^^106^111^this.lineAlignment = alignment;^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P11_Insert_Donor_Statement]^this.lineAlignment = HorizontalAlignment.CENTER;this.lineAlignment = alignment;^110^^^^^106^111^this.lineAlignment = alignment;^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P12_Insert_Condition]^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  { this.lineAlignment = alignment; }^110^^^^^106^111^this.lineAlignment = alignment;^[CLASS] TextBlock  [METHOD] setLineAlignment [RETURN_TYPE] void   HorizontalAlignment alignment [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P4_Replace_Constructor]^addLine ( new TextLine (  font, paint )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[P4_Replace_Constructor]^addLine ( new TextLine ( text,  paint )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[P4_Replace_Constructor]^addLine ( new TextLine ( text, font )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[P5_Replace_Variable]^addLine ( new TextLine ( paint, font, text )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[P5_Replace_Variable]^addLine ( new TextLine ( text, paint, font )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[P5_Replace_Variable]^addLine ( new TextLine ( font, text, paint )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[P7_Replace_Invocation]^calculateOffsets ( new TextLine ( text, font, paint )  ) ;^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[P14_Delete_Statement]^^121^^^^^120^122^addLine ( new TextLine ( text, font, paint )  ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   String text Font font Paint paint [VARIABLES] boolean  List  lines  String  text  Paint  paint  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Font  font  
[P7_Replace_Invocation]^this.lines.get ( line ) ;^130^^^^^129^131^this.lines.add ( line ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   TextLine line [VARIABLES] List  lines  boolean  TextLine  line  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P7_Replace_Invocation]^this.lines .hashCode (  )  ;^130^^^^^129^131^this.lines.add ( line ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   TextLine line [VARIABLES] List  lines  boolean  TextLine  line  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P14_Delete_Statement]^^130^^^^^129^131^this.lines.add ( line ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   TextLine line [VARIABLES] List  lines  boolean  TextLine  line  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P11_Insert_Donor_Statement]^return this.lines.equals ( block.lines ) ;this.lines.add ( line ) ;^130^^^^^129^131^this.lines.add ( line ) ;^[CLASS] TextBlock  [METHOD] addLine [RETURN_TYPE] void   TextLine line [VARIABLES] List  lines  boolean  TextLine  line  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P1_Replace_Type]^final  short  index = this.lines.size (  )  - 1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P2_Replace_Operator]^final int index = this.lines.size (  )   <<  1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P3_Replace_Literal]^final int index = this.lines.size (  )  ;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P3_Replace_Literal]^final int index = this.lines.size() + 2  - 1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P5_Replace_Variable]^final int index = lines.size (  )  - 1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P7_Replace_Invocation]^final int index = this.lines.hashCode (  )  - 1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P8_Replace_Mix]^final int index = lines.hashCode (  )  - 1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P3_Replace_Literal]^final int index = this.lines.size() - 5  - 1;^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P14_Delete_Statement]^^140^^^^^138^145^final int index = this.lines.size (  )  - 1;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P2_Replace_Operator]^if  ( index > 0 )  {^141^^^^^138^145^if  ( index >= 0 )  {^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P3_Replace_Literal]^if  ( index >= -7 )  {^141^^^^^138^145^if  ( index >= 0 )  {^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P8_Replace_Mix]^if  ( index >= 0 / 3 )  {^141^^^^^138^145^if  ( index >= 0 )  {^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P15_Unwrap_Block]^last = ((org.jfree.chart.text.TextLine) (this.lines.get(index)));^141^142^143^^^138^145^if  ( index >= 0 )  { last =  ( TextLine )  this.lines.get ( index ) ; }^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P16_Remove_Block]^^141^142^143^^^138^145^if  ( index >= 0 )  { last =  ( TextLine )  this.lines.get ( index ) ; }^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P5_Replace_Variable]^last =  ( TextLine )  lines.get ( index ) ;^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P5_Replace_Variable]^last =  ( TextLine )  index.get ( this.lines ) ;^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P7_Replace_Invocation]^last =  ( TextLine )  this.lines.add ( index ) ;^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P7_Replace_Invocation]^last =  ( TextLine )  this.lines .iterator (  )  ;^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P8_Replace_Mix]^last =   ( TextLine )  this.lines.get ( null ) ;^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P13_Insert_Block]^if  ( index >= 0 )  {     last =  (  ( TextLine )   ( get ( index )  )  ) ; }^142^^^^^138^145^[Delete]^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P14_Delete_Statement]^^142^^^^^138^145^last =  ( TextLine )  this.lines.get ( index ) ;^[CLASS] TextBlock  [METHOD] getLastLine [RETURN_TYPE] TextLine   [VARIABLES] List  lines  boolean  TextLine  last  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  int  index  
[P5_Replace_Variable]^return Collections.unmodifiableList ( lines ) ;^153^^^^^152^154^return Collections.unmodifiableList ( this.lines ) ;^[CLASS] TextBlock  [METHOD] getLines [RETURN_TYPE] List   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P14_Delete_Statement]^^153^154^^^^152^154^return Collections.unmodifiableList ( this.lines ) ; }^[CLASS] TextBlock  [METHOD] getLines [RETURN_TYPE] List   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P1_Replace_Type]^float width = 0.0;^164^^^^^163^174^double width = 0.0;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P11_Insert_Donor_Statement]^double height = 0.0;double width = 0.0;^164^^^^^163^174^double width = 0.0;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P1_Replace_Type]^float height = 0.0;^165^^^^^163^174^double height = 0.0;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P11_Insert_Donor_Statement]^double width = 0.0;double height = 0.0;^165^^^^^163^174^double height = 0.0;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^Iterator iterator = lines.iterator (  ) ;^166^^^^^163^174^Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P7_Replace_Invocation]^Iterator iterator = this.lines.size (  ) ;^166^^^^^163^174^Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P14_Delete_Statement]^^166^^^^^163^174^Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P7_Replace_Invocation]^while  ( iterator .next (  )   )  {^167^^^^^163^174^while  ( iterator.hasNext (  )  )  {^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^width = Math.max ( height, dimension.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^width = Math.max (  dimension.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^width = Math.max ( width.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^width = Math.max ( dimension, width.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P11_Insert_Donor_Statement]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;width = Math.max ( width, dimension.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P11_Insert_Donor_Statement]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;width = Math.max ( width, dimension.getWidth (  )  ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P2_Replace_Operator]^height = height + dimension.getHeight (  >=  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^height = width + dimension.getHeight (  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^height = dimension + height.getHeight (  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P11_Insert_Donor_Statement]^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;height = height + dimension.getHeight (  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P7_Replace_Invocation]^TextLine line =  ( TextLine )  iterator .hasNext (  )  ;^168^^^^^163^174^TextLine line =  ( TextLine )  iterator.next (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^Size2D dimension = g2.calculateDimensions ( line ) ;^169^^^^^163^174^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P11_Insert_Donor_Statement]^Size2D d = calculateDimensions ( g2 ) ;Size2D dimension = line.calculateDimensions ( g2 ) ;^169^^^^^163^174^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P14_Delete_Statement]^^168^^^^^163^174^TextLine line =  ( TextLine )  iterator.next (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P11_Insert_Donor_Statement]^while  ( iterator.hasNext (  )  )  { TextLine line =  ( TextLine )  iterator.next (  ) ;TextLine line =  ( TextLine )  iterator.next (  ) ;^168^^^^^163^174^TextLine line =  ( TextLine )  iterator.next (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P14_Delete_Statement]^^169^170^^^^163^174^Size2D dimension = line.calculateDimensions ( g2 ) ; width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P7_Replace_Invocation]^width = Math.max ( width, dimension .getHeight (  )   ) ;^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P14_Delete_Statement]^^170^171^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ; height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P8_Replace_Mix]^height = height + dimension .getWidth (  )  ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P14_Delete_Statement]^^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P2_Replace_Operator]^height = height + dimension.getHeight (  ==  ) ;^171^^^^^163^174^height = height + dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P14_Delete_Statement]^^167^168^^^^163^174^while  ( iterator.hasNext (  )  )  { TextLine line =  ( TextLine )  iterator.next (  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P14_Delete_Statement]^^170^^^^^163^174^width = Math.max ( width, dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P4_Replace_Constructor]^return new Size2D (  height ) ;^173^^^^^163^174^return new Size2D ( width, height ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P4_Replace_Constructor]^return new Size2D ( width ) ;^173^^^^^163^174^return new Size2D ( width, height ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^return new Size2D ( height, width ) ;^173^^^^^163^174^return new Size2D ( width, height ) ;^[CLASS] TextBlock  [METHOD] calculateDimensions [RETURN_TYPE] Size2D   Graphics2D g2 [VARIABLES] Size2D  dimension  boolean  TextLine  line  double  height  width  Iterator  iterator  List  lines  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P7_Replace_Invocation]^Size2D d = equals ( g2 ) ;^193^^^^^189^201^Size2D d = calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^Size2D dimension = line.calculateDimensions ( g2 ) ;Size2D d = calculateDimensions ( g2 ) ;^193^^^^^189^201^Size2D d = calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^193^194^^^^189^201^Size2D d = calculateDimensions ( g2 ) ; float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^float[] offsets = calculateOffsets (  d.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^float[] offsets = calculateOffsets ( anchor.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^float[] offsets = calculateOffsets ( d, anchor.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^float[] offsets = addLine ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^float[] offsets = calculateOffsets ( anchor, d .getHeight (  )  , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d .getWidth (  )   ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^194^^^^^189^201^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ^  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  &  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[-2], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[4], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P4_Replace_Constructor]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0] + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P4_Replace_Constructor]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1].getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Rectangle2D bounds = new Rectangle2D.Double ( rotateY + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], rotateY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Rectangle2D bounds = new Rectangle2D.Double ( anchorY + offsets[0], anchorX + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + d[0], anchorY + offsets[1], offsets.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Rectangle2D bounds = new Rectangle2D.Double ( d + offsets[0], anchorY + offsets[1], anchorX.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d .getWidth (  )   ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  &&  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  <  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[-6], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[5], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Rectangle2D bounds = new Rectangle2D.Double ( offsets + anchorX[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^195^196^^^^189^201^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^196^^^^^189^201^anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^196^^^^^189^201^anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^196^^^^^189^201^anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateY, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateX ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape (  angle, rotateX, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds,  rotateX, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle,  rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( rotateX, angle, bounds, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( angle, bounds, rotateX, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateY, rotateX ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, rotateY, rotateX, angle ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, anchorY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, rotateX, angle, rotateY ) ;^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^197^198^^^^189^201^Shape rotatedBounds = ShapeUtilities.rotateShape ( bounds, angle, rotateX, rotateY ) ;^[CLASS] TextBlock  [METHOD] calculateBounds [RETURN_TYPE] Shape   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  Shape  rotatedBounds  boolean  double  angle  Rectangle2D  bounds  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  rotateX  rotateY  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^draw ( g2, x, x, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^draw (  x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^draw ( g2,  y, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^draw ( g2, x,  anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^draw ( g2, x, y,  0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^draw ( x, g2, y, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^draw ( g2, y, x, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P5_Replace_Variable]^draw ( g2, anchor, y, x, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P7_Replace_Invocation]^calculateBounds ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P14_Delete_Statement]^^212^^^^^211^213^draw ( g2, x, y, anchor, 0.0f, 0.0f, 0.0 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float x float y TextBlockAnchor anchor [VARIABLES] boolean  List  lines  TextBlockAnchor  anchor  float  x  y  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  
[P7_Replace_Invocation]^Size2D d = equals ( g2 ) ;^232^^^^^228^253^Size2D d = calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^Size2D dimension = line.calculateDimensions ( g2 ) ;Size2D d = calculateDimensions ( g2 ) ;^232^^^^^228^253^Size2D d = calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^232^233^^^^228^253^Size2D d = calculateDimensions ( g2 ) ; float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^float[] offsets = calculateOffsets ( anchor, dimension.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^float[] offsets = calculateOffsets (  d.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^float[] offsets = calculateOffsets ( anchor.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^float[] offsets = calculateOffsets ( d, anchor.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^float[] offsets = addLine ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^Rectangle2D bounds = new Rectangle2D.Double ( anchorX + offsets[0], anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d .getWidth (  )   ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^233^234^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ; Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^float[] offsets = calculateOffsets ( anchor, d .getHeight (  )  , d.getHeight (  )  ) ;^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^233^^^^^228^253^float[] offsets = calculateOffsets ( anchor, d.getWidth (  ) , d.getHeight (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Iterator iterator = lines.iterator (  ) ;^234^^^^^228^253^Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^Iterator iterator = this.lines.size (  ) ;^234^^^^^228^253^Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^234^^^^^228^253^Iterator iterator = this.lines.iterator (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P1_Replace_Type]^int yCursor = 0.0f;^235^^^^^228^253^float yCursor = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^float yAdj = 0.0f;float yCursor = 0.0f;^235^^^^^228^253^float yCursor = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^float xAdj = 0.0f;float yCursor = 0.0f;^235^^^^^228^253^float yCursor = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^float lineOffset = 0.0f;float yCursor = 0.0f;^235^^^^^228^253^float yCursor = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P8_Replace_Mix]^while  ( iterator .next (  )   )  {^236^^^^^228^253^while  ( iterator.hasNext (  )  )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^if  ( this.lineAlignment > HorizontalAlignment.CENTER )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^if  ( lineAlignment == HorizontalAlignment.CENTER )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P6_Replace_Expression]^if  ( float (d.getWidth() - dimension.getWidth()) / 2.0F )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P6_Replace_Expression]^if  (  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P6_Replace_Expression]^if  ( this.lineAlignment == RIGHT )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P15_Unwrap_Block]^lineOffset = ((float) ((d.getWidth()) - (dimension.getWidth()))) / 2.0F;^240^241^242^243^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  { lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f; }^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P16_Remove_Block]^^240^241^242^243^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  { lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f; }^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^else if  ( this.lineAlignment != HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^else if  ( lineAlignment == HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P6_Replace_Expression]^else if  (  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P8_Replace_Mix]^if  ( lineAlignment == HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P15_Unwrap_Block]^lineOffset = ((float) ((d.getWidth()) - (dimension.getWidth())));^244^245^246^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  { lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ; }^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P16_Remove_Block]^^244^245^246^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  { lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ; }^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P1_Replace_Type]^lineOffset =  ( int )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   &&  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^lineOffset =  ( float )   ( dimension.getWidth (  )  - d.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P8_Replace_Mix]^lineOffset =   ( float )   ( dimension.getWidimensionth (  )  - dimensionimension.getWidimensionth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^width = Math.max ( width, dimension.getWidth (  )  ) ;lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^lineOffset =  ( float )   ( dimension.getWidth (  )  - dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P8_Replace_Mix]^lineOffset =  ( float )   ( dimension .getHeight (  )   - dimension^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^anchorY + offsets[1], d.getWidth (  ) , d.getHeight (  )  ) ;lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^lineOffset =  ( float )   ( d.getWidth (  )  - d.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^lineOffset =  ( float )   ( d .getHeight (  )   - dimension^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   >=  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P8_Replace_Mix]^lineOffset =  ( float )   ( d .getHeight (  )   - d^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P1_Replace_Type]^lineOffset =  ( int )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) - 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   !=  dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^lineOffset =  ( float )   ( dimension.getWidth (  )  - d.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P8_Replace_Mix]^lineOffset =   ( float )   ( dimension.getWidimensionth (  )  - dimensionimension.getWidimensionth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^width = Math.max ( width, dimension.getWidth (  )  ) ;lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^lineOffset =  ( float )   ( dimension.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^lineOffset =  ( float )   ( d.getWidth (  )  - d.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^else if  ( this.lineAlignment <= HorizontalAlignment.RIGHT )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^else if  ( this.lineAlignment == HorizontalAlignment.null )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P8_Replace_Mix]^else {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   !=  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) * 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   <=  dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   &  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P1_Replace_Type]^yCursor = yCursor +  ( int )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^yCursor = yCursor +  <  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^yCursor = rotateY +  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^yCursor = yCursor +  ( float )  d.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^yCursor = dimension +  ( float )  yCursor.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^yCursor = yCursor +  ( float )  dimension .getWidth (  )  ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^height = height + dimension.getHeight (  ) ;yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^Size2D dimension = g2.calculateDimensions ( line ) ;^238^^^^^228^253^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^Size2D d = calculateDimensions ( g2 ) ;Size2D dimension = line.calculateDimensions ( g2 ) ;^238^^^^^228^253^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P1_Replace_Type]^int lineOffset = 0.0f;^239^^^^^228^253^float lineOffset = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^float yAdj = 0.0f;float lineOffset = 0.0f;^239^^^^^228^253^float lineOffset = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^float xAdj = 0.0f;float lineOffset = 0.0f;^239^^^^^228^253^float lineOffset = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^float yCursor = 0.0f;float lineOffset = 0.0f;^239^^^^^228^253^float lineOffset = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^TextLine line =  ( TextLine )  iterator .hasNext (  )  ;^237^^^^^228^253^TextLine line =  ( TextLine )  iterator.next (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^237^238^^^^228^253^TextLine line =  ( TextLine )  iterator.next (  ) ; Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P11_Insert_Donor_Statement]^while  ( iterator.hasNext (  )  )  { TextLine line =  ( TextLine )  iterator.next (  ) ;TextLine line =  ( TextLine )  iterator.next (  ) ;^237^^^^^228^253^TextLine line =  ( TextLine )  iterator.next (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^238^^^^^228^253^Size2D dimension = line.calculateDimensions ( g2 ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^line.draw ( g2, anchorX   instanceof   offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY  &  offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^line.draw ( g2, anchorX + offsets[1] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[9] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, yCursor + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + yCursor, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, yCursor + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + rotateX, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateY, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw (  anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2 + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] +  anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] +  TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT,  rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX,  angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + rotateXOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, line, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( anchorY, anchorX + offsets[0] + lineOffset, g2 + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, yCursor + offsets[0] + lineOffset, anchorY + offsets[1] + anchorX, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + lineOffset[0] + offsets, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + rotateY, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, lineOffset, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorY + offsets[0] + lineOffset, anchorX + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + rotateX[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, offsets, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + rotateY, TextAnchor.TOP_LEFT, rotateX, yCursor, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, angle, rotateY, rotateX ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^if  ( this.lineAlignment != HorizontalAlignment.CENTER )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^if  ( this.lineAlignment < HorizontalAlignment.CENTER )  {^240^^^^^228^253^if  ( this.lineAlignment == HorizontalAlignment.CENTER )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   ==  dimension.getWidth (  )  ) ;^245^^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   <<  dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^lineOffset =  ( float )   ( d .getHeight (  )   - dimension^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^else if  ( this.lineAlignment == HorizontalAlignment.0 )  {^244^^^^^228^253^else if  ( this.lineAlignment == HorizontalAlignment.RIGHT )  {^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) + 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^lineOffset =  ( float )   ( d.getWidth (  )   ||  dimension.getWidth (  )  ) / 2.0f;^241^242^^^^228^253^lineOffset =  ( float )   ( d.getWidth (  )  - dimension.getWidth (  )  ) / 2.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^yCursor = rotateX +  ( float )  dimension.getHeight (  ) ;^250^^^^^228^253^yCursor = yCursor +  ( float )  dimension.getHeight (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^236^237^^^^228^253^while  ( iterator.hasNext (  )  )  { TextLine line =  ( TextLine )  iterator.next (  ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P14_Delete_Statement]^^238^239^^^^228^253^Size2D dimension = line.calculateDimensions ( g2 ) ; float lineOffset = 0.0f;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^line.draw ( g2, anchorX  !=  offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P2_Replace_Operator]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY  ||  offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^line.draw ( g2, anchorX + offsets[-4] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[2] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, rotateY + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + rotateY, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, yCursor, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateX, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + yCursorOffset, anchorY + offsets[1] + line, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, rotateX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, anchorX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, offsets + anchorX[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + rotateX, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, lineOffset, rotateY, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateY, rotateX, angle ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P5_Replace_Variable]^line.draw ( g2, anchorX + angle[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, offsets ) ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P7_Replace_Invocation]^line .draw ( g2 , rotateX , rotateY , anchor , anchorX , rotateX , angle )  ;^247^248^249^^^228^253^line.draw ( g2, anchorX + offsets[0] + lineOffset, anchorY + offsets[1] + yCursor, TextAnchor.TOP_LEFT, rotateX, rotateY, angle ) ;^[CLASS] TextBlock  [METHOD] draw [RETURN_TYPE] void   Graphics2D g2 float anchorX float anchorY TextBlockAnchor anchor float rotateX float rotateY double angle [VARIABLES] Size2D  d  dimension  boolean  TextLine  line  double  angle  Iterator  iterator  List  lines  TextBlockAnchor  anchor  float  anchorX  anchorY  lineOffset  rotateX  rotateY  yCursor  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  Graphics2D  g2  float[]  offsets  
[P3_Replace_Literal]^float[] result = new float[-2];^268^^^^^253^283^float[] result = new float[2];^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^int xAdj = 0.0f;^269^^^^^254^284^float xAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^float yAdj = 0.0f;float xAdj = 0.0f;^269^^^^^254^284^float xAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^float yCursor = 0.0f;float xAdj = 0.0f;^269^^^^^254^284^float xAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^float lineOffset = 0.0f;float xAdj = 0.0f;^269^^^^^254^284^float xAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^int yAdj = 0.0f;^270^^^^^255^285^float yAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^float xAdj = 0.0f;float yAdj = 0.0f;^270^^^^^255^285^float yAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^float yCursor = 0.0f;float yAdj = 0.0f;^270^^^^^255^285^float yAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^float lineOffset = 0.0f;float yAdj = 0.0f;^270^^^^^255^285^float yAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor == TextBlockAnchor.TOP_CENTER && anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor != TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor != TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor != TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor >= TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.TOP_CENTER ) {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  (  anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( (anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER) )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.BOTTOM_CENTER )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( float -width / 2.0F )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( (anchor == TextBlockAnchor.TOP_RIGHT) || (anchor == TextBlockAnchor.CENTER_RIGHT) || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( (anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT) )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.TOP_RIGHT )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.CENTER_RIGHT )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^272^273^274^^^257^287^if  ( anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT && anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor != TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor != TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor != TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( TextBlockAnchor.TOP_RIGHT == anchor || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT ) {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  (  anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( (anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT) )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.CENTER_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P13_Insert_Block]^if  (  (  ( anchor ==  ( TextBlockAnchor.BOTTOM_LEFT )  )  ||  ( anchor ==  ( TextBlockAnchor.BOTTOM_CENTER )  )  )  ||  ( anchor ==  ( TextBlockAnchor.BOTTOM_RIGHT )  )  )  {     yAdj =  (  ( float )   ( -height )  ) ; }^279^^^^^264^294^[Delete]^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^xAdj =  ( int )  -width;^283^^^^^279^285^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^xAdj =   ( float )  -height;^283^^^^^279^285^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height / 2.0f;xAdj =  ( float )  -width;^283^^^^^279^285^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height;xAdj =  ( float )  -width;^283^^^^^279^285^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width / 2.0f;xAdj =  ( float )  -width;^283^^^^^279^285^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^xAdj =  ( int )  -width;^283^^^^^268^298^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^xAdj =   ( float )  -height;^283^^^^^268^298^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height / 2.0f;xAdj =  ( float )  -width;^283^^^^^268^298^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height;xAdj =  ( float )  -width;^283^^^^^268^298^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width / 2.0f;xAdj =  ( float )  -width;^283^^^^^268^298^xAdj =  ( float )  -width;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^xAdj =  ( int )  -width / 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^xAdj =  ( float )  -width * 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^xAdj =  ( float )  -height / 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^xAdj =   ( float )  -null / 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height / 2.0f;xAdj =  ( float )  -width / 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height;xAdj =  ( float )  -width / 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width;xAdj =  ( float )  -width / 2.0f;^276^^^^^272^285^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor < TextBlockAnchor.BOTTOM_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.TOP_RIGHT )  {^279^280^281^^^264^294^else if  ( anchor == TextBlockAnchor.TOP_RIGHT || anchor == TextBlockAnchor.CENTER_RIGHT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^xAdj =  ( int )  -width / 2.0f;^276^^^^^261^291^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^xAdj =  ( float )  -width + 2.0f;^276^^^^^261^291^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^xAdj =  ( float )  -height / 2.0f;^276^^^^^261^291^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height / 2.0f;xAdj =  ( float )  -width / 2.0f;^276^^^^^261^291^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height;xAdj =  ( float )  -width / 2.0f;^276^^^^^261^291^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width;xAdj =  ( float )  -width / 2.0f;^276^^^^^261^291^xAdj =  ( float )  -width / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor == TextBlockAnchor.TOP_LEFT && anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor != TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor >= TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor > TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor < TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor <= TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( anchor >= TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P3_Replace_Literal]^if  ( anchor == TextBlockAnchor.TOP_LET || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^if  ( TextBlockAnchor.TOP_CENTER == TextBlockAnchor.TOP_LEFT || anchor == anchor || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.TOP_LEFT ) {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  (  anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( (anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER) )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.TOP_CENTER )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.TOP_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( (anchor == TextBlockAnchor.CENTER_LEFT) || (anchor == TextBlockAnchor.CENTER) || anchor == TextBlockAnchor.CENTER_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( (anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER) )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.CENTER_LEFT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.CENTER )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.CENTER_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( float -height / 2.0F )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( (anchor == TextBlockAnchor.BOTTOM_LEFT) || (anchor == TextBlockAnchor.BOTTOM_CENTER) || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( (anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER) )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.BOTTOM_LEFT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.BOTTOM_CENTER )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^if  (  anchor == TextBlockAnchor.TOP_CENTER || anchor == 4 )  {^287^288^289^^^272^302^if  ( anchor == TextBlockAnchor.TOP_LEFT || anchor == TextBlockAnchor.TOP_CENTER || anchor == TextBlockAnchor.TOP_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT && anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor >= TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor <= TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor != TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor != TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P3_Replace_Literal]^else if  ( anchor == TextBlockAnchor.CENTER_LET || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == this )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( TextBlockAnchor.CENTER == anchor_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.CENTER_RIGHT_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT ) {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  (  anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( (anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER) )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.CENTER )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( float -height / 2.0F )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( (anchor == TextBlockAnchor.BOTTOM_LEFT) || (anchor == TextBlockAnchor.BOTTOM_CENTER) || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( (anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER) )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.BOTTOM_CENTER )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^if  (  anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT && anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor <= TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor > TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor != TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( TextBlockAnchor.BOTTOM_RIGHT == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == anchor )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.BOTTOM_CENTER )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_LEFT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT ) {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  (  anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( (anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER) )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.BOTTOM_CENTER )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P6_Replace_Expression]^else if  ( anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P13_Insert_Block]^if  (  (  ( anchor ==  ( TextBlockAnchor.TOP_RIGHT )  )  ||  ( anchor ==  ( TextBlockAnchor.CENTER_RIGHT )  )  )  ||  ( anchor ==  ( TextBlockAnchor.BOTTOM_RIGHT )  )  )  {     xAdj =  (  ( float )   ( -width )  ) ; }^301^^^^^286^316^[Delete]^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^yAdj =  ( int )  -height;^305^^^^^301^307^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^yAdj =   ( float )  -null;^305^^^^^301^307^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height / 2.0f;yAdj =  ( float )  -height;^305^^^^^301^307^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width / 2.0f;yAdj =  ( float )  -height;^305^^^^^301^307^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width;yAdj =  ( float )  -height;^305^^^^^301^307^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^yAdj =  ( int )  -height;^305^^^^^290^320^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^yAdj =   ( float )  -width;^305^^^^^290^320^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height / 2.0f;yAdj =  ( float )  -height;^305^^^^^290^320^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width / 2.0f;yAdj =  ( float )  -height;^305^^^^^290^320^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width;yAdj =  ( float )  -height;^305^^^^^290^320^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^yAdj =  ( int )  -height / 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^yAdj =  ( float )  -height - 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^yAdj =  ( float )  -width / 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height;yAdj =  ( float )  -height / 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width / 2.0f;yAdj =  ( float )  -height / 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width;yAdj =  ( float )  -height / 2.0f;^298^^^^^294^307^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor > TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor >= TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( TextBlockAnchor.BOTTOM_CENTER == TextBlockAnchor.BOTTOM_LEFT || anchor == anchor || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^if  ( anchor == TextBlockAnchor.BOTTOM_LEFT ) {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^yAdj =   ( float )  -width;^305^^^^^301^307^yAdj =  ( float )  -height;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P1_Replace_Type]^yAdj =  ( int )  -height / 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^yAdj =  ( float )  -height - 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^yAdj =  ( float )  -width / 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^yAdj =  ( float )  -height;yAdj =  ( float )  -height / 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width / 2.0f;yAdj =  ( float )  -height / 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^xAdj =  ( float )  -width;yAdj =  ( float )  -height / 2.0f;^298^^^^^283^313^yAdj =  ( float )  -height / 2.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^yAdj  =  yAdj ;^291^^^^^287^307^yAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor >= TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor > TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor < TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( TextBlockAnchor.CENTER_LEFT == anchor || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^if  ( anchor == TextBlockAnchor.CENTER_LEFT ) {^294^295^296^^^279^309^else if  ( anchor == TextBlockAnchor.CENTER_LEFT || anchor == TextBlockAnchor.CENTER || anchor == TextBlockAnchor.CENTER_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor >= TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor <= TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^if  (  anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor <= TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == null || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^301^302^303^^^286^316^else if  ( anchor == TextBlockAnchor.BOTTOM_LEFT || anchor == TextBlockAnchor.BOTTOM_CENTER || anchor == TextBlockAnchor.BOTTOM_RIGHT )  {^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^yAdj  = null ;^291^^^^^276^306^yAdj = 0.0f;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P3_Replace_Literal]^result[2] = xAdj;^308^^^^^293^323^result[0] = xAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^result[0] = yAdj;^308^^^^^293^323^result[0] = xAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^result[1] = xAdj;^308^^^^^293^323^result[0] = xAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^result[1] = yAdj;result[0] = xAdj;^308^^^^^293^323^result[0] = xAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P3_Replace_Literal]^result[-6] = yAdj;^309^^^^^294^324^result[1] = yAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P5_Replace_Variable]^result[1] = xAdj;^309^^^^^294^324^result[1] = yAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P8_Replace_Mix]^result[0] = yAdj;^309^^^^^294^324^result[1] = yAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P11_Insert_Donor_Statement]^result[0] = xAdj;result[1] = yAdj;^309^^^^^294^324^result[1] = yAdj;^[CLASS] TextBlock  [METHOD] calculateOffsets [RETURN_TYPE] float[]   TextBlockAnchor anchor double width double height [VARIABLES] boolean  double  height  width  List  lines  TextBlockAnchor  anchor  float  xAdj  yAdj  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  float[]  result  
[P2_Replace_Operator]^if  ( obj < this )  {^321^^^^^320^329^if  ( obj == this )  {^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P15_Unwrap_Block]^return true;^321^322^323^^^320^329^if  ( obj == this )  { return true; }^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P16_Remove_Block]^^321^322^323^^^320^329^if  ( obj == this )  { return true; }^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P3_Replace_Literal]^return false;^322^^^^^320^329^return true;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P2_Replace_Operator]^if  ( obj  ||  TextBlock )  {^324^^^^^320^329^if  ( obj instanceof TextBlock )  {^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P15_Unwrap_Block]^final org.jfree.chart.text.TextBlock block = ((org.jfree.chart.text.TextBlock) (obj)); return this.lines.equals(block.lines);^324^325^326^327^^320^329^if  ( obj instanceof TextBlock )  { final TextBlock block =  ( TextBlock )  obj; return this.lines.equals ( block.lines ) ; }^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P16_Remove_Block]^^324^325^326^327^^320^329^if  ( obj instanceof TextBlock )  { final TextBlock block =  ( TextBlock )  obj; return this.lines.equals ( block.lines ) ; }^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P5_Replace_Variable]^return this.lines.equals ( lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P5_Replace_Variable]^return block.equals ( this.lines.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P5_Replace_Variable]^return block.lines.equals ( this.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P7_Replace_Invocation]^return this.lines.add ( block.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P5_Replace_Variable]^return lines.equals ( block.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P14_Delete_Statement]^^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P5_Replace_Variable]^return this.lines.equals ( block.lines.lines ) ;^326^^^^^320^329^return this.lines.equals ( block.lines ) ;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P3_Replace_Literal]^return true;^328^^^^^320^329^return false;^[CLASS] TextBlock  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] List  lines  Object  obj  boolean  TextBlock  block  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P2_Replace_Operator]^return  ( this.lines == null ? this.lines.hashCode (  )  : 0 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P3_Replace_Literal]^return  ( this.lines != null ? this.lines.hashCode (  )  : 3 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P5_Replace_Variable]^return  ( lines != null ? this.lines.hashCode (  )  : 0 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P6_Replace_Expression]^return  ( this.lines ! =  0 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P6_Replace_Expression]^return  ( this.lines ! =  this.lines.hashCode (  )  ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P7_Replace_Invocation]^return  ( this.lines != null ? this.lines.size (  )  : 0 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P8_Replace_Mix]^return  ( this.lines != null ? this.lines.size (  )  %  0.5  : 0 ) ;^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
[P14_Delete_Statement]^^337^^^^^336^338^return  ( this.lines != null ? this.lines.hashCode (  )  : 0 ) ;^[CLASS] TextBlock  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] List  lines  boolean  long  serialVersionUID  HorizontalAlignment  alignment  lineAlignment  
