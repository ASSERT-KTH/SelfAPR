[P1_Replace_Type]^private  Set  axesAtTop;^57^^^^^52^62^private List axesAtTop;^[CLASS] AxisCollection   [VARIABLES] 
[P1_Replace_Type]^private  Set  axesAtBottom;^60^^^^^55^65^private List axesAtBottom;^[CLASS] AxisCollection   [VARIABLES] 
[P1_Replace_Type]^private  ArrayList  axesAtLeft;^63^^^^^58^68^private List axesAtLeft;^[CLASS] AxisCollection   [VARIABLES] 
[P1_Replace_Type]^private  ArrayList  axesAtRight;^66^^^^^61^71^private List axesAtRight;^[CLASS] AxisCollection   [VARIABLES] 
[P1_Replace_Type]^this.axesAtTop = new java.util.Array ArrayList  (  ) ;^72^^^^^71^76^this.axesAtTop = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P8_Replace_Mix]^this.axesAtTop = new java.util.Array LinkedHashSet  (  ) ;^72^^^^^71^76^this.axesAtTop = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtLeft = new java.util.ArrayList (  ) ;this.axesAtTop = new java.util.ArrayList (  ) ;^72^^^^^71^76^this.axesAtTop = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtRight = new java.util.ArrayList (  ) ;this.axesAtTop = new java.util.ArrayList (  ) ;^72^^^^^71^76^this.axesAtTop = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtBottom = new java.util.ArrayList (  ) ;this.axesAtTop = new java.util.ArrayList (  ) ;^72^^^^^71^76^this.axesAtTop = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P1_Replace_Type]^this.axesAtTop = new java.util. LinkedList  (  ) ;^72^^^^^71^76^this.axesAtTop = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P1_Replace_Type]^this.axesAtBottom = new java.util.Array ArrayList  (  ) ;^73^^^^^71^76^this.axesAtBottom = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtTop = new java.util.ArrayList (  ) ;this.axesAtBottom = new java.util.ArrayList (  ) ;^73^^^^^71^76^this.axesAtBottom = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtLeft = new java.util.ArrayList (  ) ;this.axesAtBottom = new java.util.ArrayList (  ) ;^73^^^^^71^76^this.axesAtBottom = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtRight = new java.util.ArrayList (  ) ;this.axesAtBottom = new java.util.ArrayList (  ) ;^73^^^^^71^76^this.axesAtBottom = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P1_Replace_Type]^this.axesAtBottom = new java.util. Set  (  ) ;^73^^^^^71^76^this.axesAtBottom = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P1_Replace_Type]^this.axesAtLeft = new java.util.Array LinkedHashSet  (  ) ;^74^^^^^71^76^this.axesAtLeft = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P8_Replace_Mix]^this.axesAtLeft = new java.util.Array Set  (  ) ;^74^^^^^71^76^this.axesAtLeft = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtTop = new java.util.ArrayList (  ) ;this.axesAtLeft = new java.util.ArrayList (  ) ;^74^^^^^71^76^this.axesAtLeft = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtRight = new java.util.ArrayList (  ) ;this.axesAtLeft = new java.util.ArrayList (  ) ;^74^^^^^71^76^this.axesAtLeft = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtBottom = new java.util.ArrayList (  ) ;this.axesAtLeft = new java.util.ArrayList (  ) ;^74^^^^^71^76^this.axesAtLeft = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P1_Replace_Type]^this.axesAtLeft = new java.util. Set  (  ) ;^74^^^^^71^76^this.axesAtLeft = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P1_Replace_Type]^this.axesAtRight = new java.util.Array Set  (  ) ;^75^^^^^71^76^this.axesAtRight = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P8_Replace_Mix]^this.axesAtRight = new java.util.Array ArrayList  (  ) ;^75^^^^^71^76^this.axesAtRight = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtTop = new java.util.ArrayList (  ) ;this.axesAtRight = new java.util.ArrayList (  ) ;^75^^^^^71^76^this.axesAtRight = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtLeft = new java.util.ArrayList (  ) ;this.axesAtRight = new java.util.ArrayList (  ) ;^75^^^^^71^76^this.axesAtRight = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P11_Insert_Donor_Statement]^this.axesAtBottom = new java.util.ArrayList (  ) ;this.axesAtRight = new java.util.ArrayList (  ) ;^75^^^^^71^76^this.axesAtRight = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P1_Replace_Type]^this.axesAtRight = new java.util. Set  (  ) ;^75^^^^^71^76^this.axesAtRight = new java.util.ArrayList (  ) ;^[CLASS] AxisCollection  [METHOD] <init> [RETURN_TYPE] AxisCollection()   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P5_Replace_Variable]^return axesAtTop;^85^^^^^84^86^return this.axesAtTop;^[CLASS] AxisCollection  [METHOD] getAxesAtTop [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P8_Replace_Mix]^return axesAtRight;^85^^^^^84^86^return this.axesAtTop;^[CLASS] AxisCollection  [METHOD] getAxesAtTop [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P5_Replace_Variable]^return axesAtTop;^95^^^^^94^96^return this.axesAtBottom;^[CLASS] AxisCollection  [METHOD] getAxesAtBottom [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P5_Replace_Variable]^return axesAtTop;^105^^^^^104^106^return this.axesAtLeft;^[CLASS] AxisCollection  [METHOD] getAxesAtLeft [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P5_Replace_Variable]^return axesAtTop;^115^^^^^114^116^return this.axesAtRight;^[CLASS] AxisCollection  [METHOD] getAxesAtRight [RETURN_TYPE] List   [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  
[P2_Replace_Operator]^if  ( axis != null )  {^126^^^^^125^144^if  ( axis == null )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P8_Replace_Mix]^if  ( axis == true )  {^126^^^^^125^144^if  ( axis == null )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P9_Replace_Statement]^if  ( edge == null )  {^126^^^^^125^144^if  ( axis == null )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'axis' argument.");^126^127^128^^^125^144^if  ( axis == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P16_Remove_Block]^^126^127^128^^^125^144^if  ( axis == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P13_Insert_Block]^if  ( edge == null )  {     throw new IllegalArgumentException ( "Null 'edge' argument." ) ; }^126^^^^^125^144^[Delete]^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'edge' argument." )   ;^127^^^^^125^144^throw new IllegalArgumentException  (" ")  ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P13_Insert_Block]^if  ( edge == null )  {     throw new IllegalArgumentException ( "Null 'edge' argument." ) ; }^127^^^^^125^144^[Delete]^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P13_Insert_Block]^if  ( axis == null )  {     throw new IllegalArgumentException ( "Null 'axis' argument." ) ; }^127^^^^^125^144^[Delete]^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^if  ( edge != null )  {^129^^^^^125^144^if  ( edge == null )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P8_Replace_Mix]^if  ( edge == this )  {^129^^^^^125^144^if  ( edge == null )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P9_Replace_Statement]^if  ( axis == null )  {^129^^^^^125^144^if  ( edge == null )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'edge' argument.");^129^130^131^^^125^144^if  ( edge == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P16_Remove_Block]^^129^130^131^^^125^144^if  ( edge == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P13_Insert_Block]^if  ( axis == null )  {     throw new IllegalArgumentException ( "Null 'axis' argument." ) ; }^129^^^^^125^144^[Delete]^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'axis' argument." )   ;^130^^^^^125^144^throw new IllegalArgumentException  (" ")  ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P13_Insert_Block]^if  ( edge == null )  {     throw new IllegalArgumentException ( "Null 'edge' argument." ) ; }^130^^^^^125^144^[Delete]^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P13_Insert_Block]^if  ( axis == null )  {     throw new IllegalArgumentException ( "Null 'axis' argument." ) ; }^130^^^^^125^144^[Delete]^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^if  ( edge != RectangleEdge.TOP )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^if  ( edge > RectangleEdge.TOP )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^if  ( edge >= RectangleEdge.TOP )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P6_Replace_Expression]^if  ( edge == BOTTOM )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P6_Replace_Expression]^if  ( edge == LEFT )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P6_Replace_Expression]^if  ( edge == RIGHT )  {^132^^^^^125^144^if  ( edge == RectangleEdge.TOP )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P15_Unwrap_Block]^this.axesAtTop.add(axis);^132^133^134^^^125^144^if  ( edge == RectangleEdge.TOP )  { this.axesAtTop.add ( axis ) ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P16_Remove_Block]^^132^133^134^^^125^144^if  ( edge == RectangleEdge.TOP )  { this.axesAtTop.add ( axis ) ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge != RectangleEdge.BOTTOM )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge > RectangleEdge.BOTTOM )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge <= RectangleEdge.BOTTOM )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P5_Replace_Variable]^else if  ( edge == RectangleEdge.null )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P6_Replace_Expression]^else if  ( edge == LEFT )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P6_Replace_Expression]^else if  ( edge == RIGHT )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P9_Replace_Statement]^else if  ( edge == RectangleEdge.LEFT )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P15_Unwrap_Block]^this.axesAtBottom.add(axis);^135^136^137^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  { this.axesAtBottom.add ( axis ) ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P16_Remove_Block]^^135^136^137^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  { this.axesAtBottom.add ( axis ) ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge >= RectangleEdge.LEFT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge > RectangleEdge.LEFT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P6_Replace_Expression]^else if  ( edge == RIGHT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P8_Replace_Mix]^else {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P9_Replace_Statement]^else if  ( edge == RectangleEdge.BOTTOM )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P15_Unwrap_Block]^this.axesAtLeft.add(axis);^138^139^140^^^125^144^else if  ( edge == RectangleEdge.LEFT )  { this.axesAtLeft.add ( axis ) ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P16_Remove_Block]^^138^139^140^^^125^144^else if  ( edge == RectangleEdge.LEFT )  { this.axesAtLeft.add ( axis ) ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P13_Insert_Block]^if  ( edge ==  ( BOTTOM )  )  {     add ( axis ) ; }else     if  ( edge ==  ( LEFT )  )  {         add ( axis ) ;     }else         if  ( edge ==  ( RIGHT )  )  {             add ( axis ) ;         }^138^^^^^125^144^[Delete]^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge >= RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P8_Replace_Mix]^else {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P9_Replace_Statement]^else if  ( edge == RectangleEdge.LEFT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P9_Replace_Statement]^else if  ( edge == RectangleEdge.BOTTOM )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P15_Unwrap_Block]^this.axesAtRight.add(axis);^141^142^143^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  { this.axesAtRight.add ( axis ) ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P16_Remove_Block]^^141^142^143^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  { this.axesAtRight.add ( axis ) ; }^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P14_Delete_Statement]^^142^^^^^125^144^this.axesAtRight.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtLeft.add ( axis ) ;this.axesAtRight.add ( axis ) ;^142^^^^^125^144^this.axesAtRight.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtBottom.add ( axis ) ;this.axesAtRight.add ( axis ) ;^142^^^^^125^144^this.axesAtRight.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtTop.add ( axis ) ;this.axesAtRight.add ( axis ) ;^142^^^^^125^144^this.axesAtRight.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P8_Replace_Mix]^this.axesAtLeft .add ( axis , edge )  ;^139^^^^^125^144^this.axesAtLeft.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P14_Delete_Statement]^^139^^^^^125^144^this.axesAtLeft.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtBottom.add ( axis ) ;this.axesAtLeft.add ( axis ) ;^139^^^^^125^144^this.axesAtLeft.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtTop.add ( axis ) ;this.axesAtLeft.add ( axis ) ;^139^^^^^125^144^this.axesAtLeft.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtRight.add ( axis ) ;this.axesAtLeft.add ( axis ) ;^139^^^^^125^144^this.axesAtLeft.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge > RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P8_Replace_Mix]^if  ( edge == RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P8_Replace_Mix]^this.axesAtRight .add ( axis , edge )  ;^142^^^^^125^144^this.axesAtRight.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P8_Replace_Mix]^this.axesAtBottom .add ( axis , edge )  ;^136^^^^^125^144^this.axesAtBottom.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P14_Delete_Statement]^^136^^^^^125^144^this.axesAtBottom.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtLeft.add ( axis ) ;this.axesAtBottom.add ( axis ) ;^136^^^^^125^144^this.axesAtBottom.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtTop.add ( axis ) ;this.axesAtBottom.add ( axis ) ;^136^^^^^125^144^this.axesAtBottom.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtRight.add ( axis ) ;this.axesAtBottom.add ( axis ) ;^136^^^^^125^144^this.axesAtBottom.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge < RectangleEdge.LEFT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge <= RectangleEdge.LEFT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge != RectangleEdge.RIGHT )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P14_Delete_Statement]^^133^^^^^125^144^this.axesAtTop.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtLeft.add ( axis ) ;this.axesAtTop.add ( axis ) ;^133^^^^^125^144^this.axesAtTop.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtBottom.add ( axis ) ;this.axesAtTop.add ( axis ) ;^133^^^^^125^144^this.axesAtTop.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P11_Insert_Donor_Statement]^this.axesAtRight.add ( axis ) ;this.axesAtTop.add ( axis ) ;^133^^^^^125^144^this.axesAtTop.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge >= RectangleEdge.BOTTOM )  {^135^^^^^125^144^else if  ( edge == RectangleEdge.BOTTOM )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P2_Replace_Operator]^else if  ( edge != RectangleEdge.LEFT )  {^138^^^^^125^144^else if  ( edge == RectangleEdge.LEFT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P5_Replace_Variable]^else if  ( edge == RectangleEdge.null )  {^141^^^^^125^144^else if  ( edge == RectangleEdge.RIGHT )  {^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
[P7_Replace_Invocation]^this.axesAtTop .add ( axis , edge )  ;^133^^^^^125^144^this.axesAtTop.add ( axis ) ;^[CLASS] AxisCollection  [METHOD] add [RETURN_TYPE] void   Axis axis RectangleEdge edge [VARIABLES] List  axesAtBottom  axesAtLeft  axesAtRight  axesAtTop  boolean  Axis  axis  RectangleEdge  edge  
