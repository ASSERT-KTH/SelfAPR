[P1_Replace_Type]^private static final  short  serialVersionUID = -7289292157229621901L;^73^^^^^68^78^private static final long serialVersionUID = -7289292157229621901L;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -7289292157229621901;^73^^^^^68^78^private static final long serialVersionUID = -7289292157229621901L;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^public static final  long  YEAR = 0;^76^^^^^71^81^public static final int YEAR = 0;^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^public static final int YEAR = 2;^76^^^^^71^81^public static final int YEAR = 0;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^public static final int YEAR = 1;^76^^^^^71^81^public static final int YEAR = 0;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^public static final  short  MONTH = 1;^79^^^^^74^84^public static final int MONTH = 1;^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^public static final int MONTH = 9;^79^^^^^74^84^public static final int MONTH = 1;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^public static final int MONTH = 2;^79^^^^^74^84^public static final int MONTH = 1;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^public static final  long  DAY = 2;^82^^^^^77^87^public static final int DAY = 2;^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^public static final int DAY = 11;^82^^^^^77^87^public static final int DAY = 2;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^public static final int DAY  = null ;^82^^^^^77^87^public static final int DAY = 2;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^public static final  long  HOUR = 3;^85^^^^^80^90^public static final int HOUR = 3;^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^public static final int HOUR = 2;^85^^^^^80^90^public static final int HOUR = 3;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^public static final int HOUR ;^85^^^^^80^90^public static final int HOUR = 3;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^public static final  short  MINUTE = 4;^88^^^^^83^93^public static final int MINUTE = 4;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^public static  int MINUTE = 4 + 0;^88^^^^^83^93^public static final int MINUTE = 4;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^public static final  short  SECOND = 5;^91^^^^^86^96^public static final int SECOND = 5;^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^public static final int SECOND = 2;^91^^^^^86^96^public static final int SECOND = 5;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^public static final int SECOND = 5 / 0;^91^^^^^86^96^public static final int SECOND = 5;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^public static final  long  MILLISECOND = 6;^94^^^^^89^99^public static final int MILLISECOND = 6;^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^public static final int MILLISECOND = 0;^94^^^^^89^99^public static final int MILLISECOND = 6;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^public static final int MILLISECOND = 1;^94^^^^^89^99^public static final int MILLISECOND = 6;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^private  short  unit;^97^^^^^92^102^private int unit;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^private  short  count;^100^^^^^95^105^private int count;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^private  long  rollUnit;^103^^^^^98^108^private int rollUnit;^[CLASS] DateTickUnit   [VARIABLES] 
[P1_Replace_Type]^private  long  rollCount;^106^^^^^101^111^private int rollCount;^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^private  short  rollCount;^106^^^^^101^111^private int rollCount;^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^private static final String[] units = {"YEARY", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^425^426^^^^425^426^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^private static final String[] units = {"YEAR", "MONTH", "AY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^425^426^^^^425^426^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOOUR", "MINUTE", "SECOND", "MILLISECOND"};^425^426^^^^425^426^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTEMIN", "SECOND", "MILLISECOND"};^425^426^^^^425^426^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "CECOND", "MILLISECOND"};^425^426^^^^425^426^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^[CLASS] DateTickUnit   [VARIABLES] 
[P3_Replace_Literal]^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECONDISEC"};^425^426^^^^425^426^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^[CLASS] DateTickUnit   [VARIABLES] 
[P8_Replace_Mix]^private static  String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^425^426^^^^425^426^private static final String[] units = {"YEAR", "MONTH", "DAY", "HOUR", "MINUTE", "SECOND", "MILLISECOND"};^[CLASS] DateTickUnit   [VARIABLES] 
[P5_Replace_Variable]^this ( rollUnit, count, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( unit, rollUnit, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this (  count, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( unit,  null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( count, unit, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this ( SECOND, count, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P14_Delete_Statement]^^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this ( unit, count, unit, count, formatter ) ;this ( unit, count, null ) ;^119^^^^^118^120^this ( unit, count, null ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateTickUnit(int,int)   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( rollCount, count, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( unit, SECOND, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this (  count, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( unit,  unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( unit, count, unit, count ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( formatter, count, unit, count, unit ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( count, unit, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this ( unit, formatter, unit, count, count ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this ( YEAR, count, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P14_Delete_Statement]^^133^134^135^^^131^135^this ( unit, count, unit, count, formatter ) ;  }^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this ( unit, count, null ) ;this ( unit, count, unit, count, formatter ) ;^133^^^^^131^135^this ( unit, count, unit, count, formatter ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^super ( DateTickUnit.getMillisecondCount ( YEAR, count )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^super ( DateTickUnit.getMillisecondCount ( unit, rollUnit )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^super ( DateTickUnit.getMillisecondCount (  count )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^super ( DateTickUnit.getMillisecondCount ( unit )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^super ( DateTickUnit.getMillisecondCount ( count, unit )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P7_Replace_Invocation]^super ( DateTickUnit.DateTickUnit ( unit, count )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^super ( DateTickUnit.getMillisecondCount ( unit, rollCount )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P14_Delete_Statement]^^148^149^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ; this.unit = unit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^super ( DateTickUnit.getMillisecondCount ( rollUnit, count )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P7_Replace_Invocation]^super ( DateTickUnit .DateTickUnit ( rollCount , YEAR , formatter )   ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^super ( DateTickUnit.getMillisecondCount ( SECOND, count )  ) ;^148^^^^^146^157^super ( DateTickUnit.getMillisecondCount ( unit, count )  ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this.unit = rollUnit;^149^^^^^146^157^this.unit = unit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this.unit =  count;^149^^^^^146^157^this.unit = unit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.rollUnit = rollUnit;this.unit = unit;^149^^^^^146^157^this.unit = unit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.count = count;this.unit = unit;^149^^^^^146^157^this.unit = unit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this.count = unit;^150^^^^^146^157^this.count = count;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.rollUnit = rollUnit;this.count = count;^150^^^^^146^157^this.count = count;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.unit = unit;this.count = count;^150^^^^^146^157^this.count = count;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.rollCount = rollCount;this.count = count;^150^^^^^146^157^this.count = count;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P12_Insert_Condition]^if  ( this.count != that.count )  { this.count = count; }^150^^^^^146^157^this.count = count;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this.rollUnit = rollCount;^151^^^^^146^157^this.rollUnit = rollUnit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this.rollUnit =  SECOND;^151^^^^^146^157^this.rollUnit = rollUnit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.unit = unit;this.rollUnit = rollUnit;^151^^^^^146^157^this.rollUnit = rollUnit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.count = count;this.rollUnit = rollUnit;^151^^^^^146^157^this.rollUnit = rollUnit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.rollCount = rollCount;this.rollUnit = rollUnit;^151^^^^^146^157^this.rollUnit = rollUnit;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this.rollCount = SECOND;^152^^^^^146^157^this.rollCount = rollCount;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this.rollCount =  YEAR;^152^^^^^146^157^this.rollCount = rollCount;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.rollUnit = rollUnit;this.rollCount = rollCount;^152^^^^^146^157^this.rollCount = rollCount;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^this.count = count;this.rollCount = rollCount;^152^^^^^146^157^this.rollCount = rollCount;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this.formatter =  null;^153^^^^^146^157^this.formatter = formatter;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^if  ( formatter != null )  {^154^^^^^146^157^if  ( formatter == null )  {^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^if  ( formatter == true )  {^154^^^^^146^157^if  ( formatter == null )  {^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P15_Unwrap_Block]^this.formatter = java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT);^154^155^156^^^146^157^if  ( formatter == null )  { this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ; }^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P16_Remove_Block]^^154^155^156^^^146^157^if  ( formatter == null )  { this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ; }^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this.formatter = DateFormat.getDateInstance ( DateFormat.unit ) ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P7_Replace_Invocation]^this.formatter = DateFormat.hashCode ( DateFormat.SHORT ) ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P7_Replace_Invocation]^this.formatter = DateFormat .hashCode (  )  ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this.formatter ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P13_Insert_Block]^if  ( formatter == null )  {     this.formatter = getDateInstance ( SHORT ) ; }^155^^^^^146^157^[Delete]^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this.formatter = DateFormat.getDateInstance ( DateFormat.SECOND ) ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this.formatter = DateFormat.hashCode ( DateFormat.SECOND ) ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P14_Delete_Statement]^^155^156^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ; }^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this.formatter  = null ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^this.formatter = DateFormat.getDateInstance ( DateFormat.count ) ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^this.formatter = DateFormat.hashCode ( DateFormat.count ) ;^155^^^^^146^157^this.formatter = DateFormat.getDateInstance ( DateFormat.SHORT ) ;^[CLASS] DateTickUnit  [METHOD] <init> [RETURN_TYPE] DateFormat)   int unit int count int rollUnit int rollCount DateFormat formatter [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return SECOND;^170^^^^^169^171^return this.unit;^[CLASS] DateTickUnit  [METHOD] getUnit [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^return rollUnit;^170^^^^^169^171^return this.unit;^[CLASS] DateTickUnit  [METHOD] getUnit [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return rollCount;^179^^^^^178^180^return this.count;^[CLASS] DateTickUnit  [METHOD] getCount [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return SECOND;^191^^^^^190^192^return this.rollUnit;^[CLASS] DateTickUnit  [METHOD] getRollUnit [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return unit;^200^^^^^199^201^return this.rollCount;^[CLASS] DateTickUnit  [METHOD] getRollCount [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return formatter.format ( new Date (  ( long )  milliseconds )  ) ;^211^^^^^210^212^return this.formatter.format ( new Date (  ( long )  milliseconds )  ) ;^[CLASS] DateTickUnit  [METHOD] valueToString [RETURN_TYPE] String   double milliseconds [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  double  milliseconds  DateFormat  formatter  
[P7_Replace_Invocation]^return this.getDateInstanceter.format ( new Date (  ( long )  milliseconds )  ) ;^211^^^^^210^212^return this.formatter.format ( new Date (  ( long )  milliseconds )  ) ;^[CLASS] DateTickUnit  [METHOD] valueToString [RETURN_TYPE] String   double milliseconds [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  double  milliseconds  DateFormat  formatter  
[P14_Delete_Statement]^^211^212^^^^210^212^return this.formatter.format ( new Date (  ( long )  milliseconds )  ) ; }^[CLASS] DateTickUnit  [METHOD] valueToString [RETURN_TYPE] String   double milliseconds [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  double  milliseconds  DateFormat  formatter  
[P5_Replace_Variable]^return formatter.format ( date ) ;^222^^^^^221^223^return this.formatter.format ( date ) ;^[CLASS] DateTickUnit  [METHOD] dateToString [RETURN_TYPE] String   Date date [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  date  DateFormat  formatter  
[P5_Replace_Variable]^return date.format ( this.formatter ) ;^222^^^^^221^223^return this.formatter.format ( date ) ;^[CLASS] DateTickUnit  [METHOD] dateToString [RETURN_TYPE] String   Date date [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  date  DateFormat  formatter  
[P7_Replace_Invocation]^return this.getDateInstanceter.format ( date ) ;^222^^^^^221^223^return this.formatter.format ( date ) ;^[CLASS] DateTickUnit  [METHOD] dateToString [RETURN_TYPE] String   Date date [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  date  DateFormat  formatter  
[P8_Replace_Mix]^return this .getDateInstance ( YEAR ) ter^222^^^^^221^223^return this.formatter.format ( date ) ;^[CLASS] DateTickUnit  [METHOD] dateToString [RETURN_TYPE] String   Date date [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  date  DateFormat  formatter  
[P14_Delete_Statement]^^222^223^^^^221^223^return this.formatter.format ( date ) ; }^[CLASS] DateTickUnit  [METHOD] dateToString [RETURN_TYPE] String   Date date [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  date  DateFormat  formatter  
[P7_Replace_Invocation]^Calendar calendar = Calendar.getTime (  ) ;^235^^^^^234^239^Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^Calendar calendar = Calendar.getInstance ( zone ) ;Calendar calendar = Calendar.getInstance (  ) ;^235^^^^^234^239^Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^235^^^^^234^239^Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^return calendar.getTime (  ) ;Calendar calendar = Calendar.getInstance (  ) ;^235^^^^^234^239^Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar.add ( base ) ;^236^^^^^234^239^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar .getTime (  )  ;^236^^^^^234^239^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^236^^^^^234^239^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^return calendar.getTime (  ) ;calendar.setTime ( base ) ;^236^^^^^234^239^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( count ) , this.count ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.unit ) , unit ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.unit )  ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.count ) , this.unit ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar.setTime ( getCalendarField ( this.unit ) , this.count ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P8_Replace_Mix]^calendar.add ( getCalendarField ( this.unit ) , SECOND ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^237^238^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ; return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^return getCalendarField ( this.unit ) ;calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( SECOND ) , this.count ) ;^237^^^^^234^239^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^return calendar.setTime (  ) ;^238^^^^^234^239^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^return calendar .setTime ( base )  ;^238^^^^^234^239^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^238^^^^^234^239^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^Calendar calendar = Calendar.setTime ( zone ) ;^253^^^^^252^257^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^Calendar calendar = Calendar .getTime (  )  ;^253^^^^^252^257^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^Calendar calendar = Calendar.getInstance (  ) ;Calendar calendar = Calendar.getInstance ( zone ) ;^253^^^^^252^257^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^253^254^^^^252^257^Calendar calendar = Calendar.getInstance ( zone ) ; calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar.add ( base ) ;^254^^^^^252^257^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^254^^^^^252^257^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^return calendar.getTime (  ) ;calendar.setTime ( base ) ;^254^^^^^252^257^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( YEAR ) , this.count ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.unit ) , rollCount ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.unit )  ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.count ) , this.unit ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar.setTime ( getCalendarField ( this.unit ) , this.count ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^return getCalendarField ( this.unit ) ;calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P8_Replace_Mix]^calendar.add ( getCalendarField ( rollCount ) , this.count ) ;^255^^^^^252^257^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^return calendar.setTime (  ) ;^256^^^^^252^257^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^256^^^^^252^257^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] addToDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^Calendar calendar = Calendar.getTime (  ) ;^270^^^^^269^274^Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^Calendar calendar = Calendar .getInstance (  )  ;^270^^^^^269^274^Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^Calendar calendar = Calendar.getInstance ( zone ) ;Calendar calendar = Calendar.getInstance (  ) ;^270^^^^^269^274^Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^270^271^^^^269^274^Calendar calendar = Calendar.getInstance (  ) ; calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^return calendar.getTime (  ) ;Calendar calendar = Calendar.getInstance (  ) ;^270^^^^^269^274^Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar.add ( base ) ;^271^^^^^269^274^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar .getTime (  )  ;^271^^^^^269^274^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^271^^^^^269^274^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^return calendar.getTime (  ) ;calendar.setTime ( base ) ;^271^^^^^269^274^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( SECOND ) , this.rollCount ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.rollUnit )  ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.rollCount ) , this.rollUnit ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar.setTime ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar .getInstance (  )  ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P8_Replace_Mix]^calendar.add ( getCalendarField ( this.rollUnit ) , YEAR ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^272^273^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ; return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( YEAR ) , this.rollCount ) ;^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^272^^^^^269^274^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^return calendar.setTime (  ) ;^273^^^^^269^274^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^return calendar .setTime ( base )  ;^273^^^^^269^274^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^273^^^^^269^274^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base [VARIABLES] boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^Calendar calendar = Calendar.setTime ( zone ) ;^289^^^^^288^293^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^Calendar calendar = Calendar.getInstance (  ) ;Calendar calendar = Calendar.getInstance ( zone ) ;^289^^^^^288^293^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^289^^^^^288^293^Calendar calendar = Calendar.getInstance ( zone ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar.add ( base ) ;^290^^^^^288^293^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^290^^^^^288^293^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^return calendar.getTime (  ) ;calendar.setTime ( base ) ;^290^^^^^288^293^calendar.setTime ( base ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( unit ) , this.rollCount ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.rollUnit ) , SECOND ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.rollUnit )  ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( this.rollCount ) , this.rollUnit ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar.setTime ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^calendar .getInstance (  )  ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^291^292^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ; return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P11_Insert_Donor_Statement]^calendar.add ( getCalendarField ( this.unit ) , this.count ) ;calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^calendar.add ( getCalendarField ( SECOND ) , this.rollCount ) ;^291^^^^^288^293^calendar.add ( getCalendarField ( this.rollUnit ) , this.rollCount ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^return calendar.setTime (  ) ;^292^^^^^288^293^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P7_Replace_Invocation]^return calendar .setTime ( base )  ;^292^^^^^288^293^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P14_Delete_Statement]^^292^^^^^288^293^return calendar.getTime (  ) ;^[CLASS] DateTickUnit  [METHOD] rollDate [RETURN_TYPE] Date   Date base TimeZone zone [VARIABLES] TimeZone  zone  boolean  DateFormat  formatter  Calendar  calendar  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  Date  base  
[P5_Replace_Variable]^return getCalendarField ( rollCount ) ;^302^^^^^301^303^return getCalendarField ( this.unit ) ;^[CLASS] DateTickUnit  [METHOD] getCalendarField [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^return getCalendarField ( SECOND ) ;^302^^^^^301^303^return getCalendarField ( this.unit ) ;^[CLASS] DateTickUnit  [METHOD] getCalendarField [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P14_Delete_Statement]^^302^^^^^301^303^return getCalendarField ( this.unit ) ;^[CLASS] DateTickUnit  [METHOD] getCalendarField [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return + ( 365L * 24L * 60L * 60L * 1000L )  * count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return / ( 365L * 24L * 60L * 60L * 1000L )  * count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 365L + 24L + 60L * 60L * 1000L )  * count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 365L - 24L * 60L * 60L * 1000L )  * count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return  ( 365L * 24L * 60L * 60L * 1000L )  * tickUnit;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^return  ( 365 + 24L + 60L + 60L + 1000L )  + count;^354^^^^^350^377^return  ( 365L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return / ( 31L * 24L * 60L * 60L * 1000L )  * count;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 31L / 24L / 60L * 60L * 1000L )  * count;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 31L / 24L * 60L * 60L * 1000L )  * count;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return  ( 31L * 24L * 60L * 60L * 1000L )  * rollUnit;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^return  ( 31 * 24L * 60L * 60L * 1000L )  *serialVersionUID;^356^^^^^350^377^return  ( 31L * 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return / ( 24L * 60L * 60L * 1000L )  * count;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 24L / 60L / 60L * 1000L )  * count;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 24L + 60L * 60L * 1000L )  * count;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return  ( 24L * 60L * 60L * 1000L )  * YEAR;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^return  ( 24L * 60L * 60L * 1000L )  *serialVersionUID;^358^^^^^350^377^return  ( 24L * 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return - ( 60L * 60L * 1000L )  * count;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 60L - 60L - 1000L )  * count;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 60L + 60L * 1000L )  * count;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return  ( 60L * 60L * 1000L )  * rollCount;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^return  ( 60L + 60L + 1000L )  + count;^360^^^^^350^377^return  ( 60L * 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return - ( 60L * 1000L )  * count;^362^^^^^350^377^return  ( 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return  ( 60L + 1000L )  * count;^362^^^^^350^377^return  ( 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return  ( 60L * 1000L )  * tickUnit;^362^^^^^350^377^return  ( 60L * 1000L )  * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^return / 1000L * count;^364^^^^^350^377^return 1000L * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return 1000L * rollUnit;^364^^^^^350^377^return 1000L * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^return 1000L  ;^364^^^^^350^377^return 1000L * count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return unit;^366^^^^^350^377^return count;^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  ||  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  ^  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  >  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "e one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "CECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  >=  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  &  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  !=  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, EAR, MONTH, D" + "SECOND or MILLISECOND defined in the DateTickUnit "^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or"^368^369^370^371^^350^377^throw new IllegalArgumentException ( "DateTickUnit.getMillisecondCount (  )  : unit must " + "be one of the constants YEAR, MONTH, DAY, HOUR, MINUTE, " + "SECOND or MILLISECOND defined in the DateTickUnit "^[CLASS] DateTickUnit  [METHOD] getMillisecondCount [RETURN_TYPE] long   int unit int count [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^if  ( obj != this )  {^387^^^^^386^407^if  ( obj == this )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P15_Unwrap_Block]^return true;^387^388^389^^^386^407^if  ( obj == this )  { return true; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P16_Remove_Block]^^387^388^389^^^386^407^if  ( obj == this )  { return true; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  (  ( this.unit )  !=  ( that.unit )  )  {     return false; }^387^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( ! ( super.equals ( obj )  )  )  {     return false; }^387^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  (  ( this.count )  !=  ( that.count )  )  {     return false; }^387^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P3_Replace_Literal]^return false;^388^^^^^386^407^return true;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P2_Replace_Operator]^if  ( ! ( obj  >>  DateTickUnit )  )  {^390^^^^^386^407^if  ( ! ( obj instanceof DateTickUnit )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P8_Replace_Mix]^if  (  ( obj instanceof DateTickUnit )  )  {^390^^^^^386^407^if  ( ! ( obj instanceof DateTickUnit )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P15_Unwrap_Block]^return false;^390^391^392^^^386^407^if  ( ! ( obj instanceof DateTickUnit )  )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P16_Remove_Block]^^390^391^392^^^386^407^if  ( ! ( obj instanceof DateTickUnit )  )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  (  ( this.unit )  !=  ( that.unit )  )  {     return false; }^390^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  (  ( this.count )  !=  ( that.count )  )  {     return false; }^390^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P3_Replace_Literal]^return true;^391^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P8_Replace_Mix]^if  ( super.equals ( obj )  )  {^393^^^^^386^407^if  ( !super.equals ( obj )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P15_Unwrap_Block]^return false;^393^394^395^^^386^407^if  ( !super.equals ( obj )  )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P16_Remove_Block]^^393^394^395^^^386^407^if  ( !super.equals ( obj )  )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  (  ( this.unit )  !=  ( that.unit )  )  {     return false; }^393^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^393^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  (  ( this.count )  !=  ( that.count )  )  {     return false; }^393^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P3_Replace_Literal]^return true;^394^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P8_Replace_Mix]^if  ( !super .getCalendarField ( unit )   )  {^393^^^^^386^407^if  ( !super.equals ( obj )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P2_Replace_Operator]^if  ( this.unit <= that.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( YEAR != that.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( this.unit != YEAR )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( that != this.unit.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( that.unit != this.unit )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P8_Replace_Mix]^if  ( this.unit != count )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P9_Replace_Statement]^if  ( this.count != that.count )  {^397^^^^^386^407^if  ( this.unit != that.unit )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P15_Unwrap_Block]^return false;^397^398^399^^^386^407^if  ( this.unit != that.unit )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P16_Remove_Block]^^397^398^399^^^386^407^if  ( this.unit != that.unit )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( ! ( obj instanceof DateTickUnit )  )  {     return false; }^397^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^397^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( ! ( super.equals ( obj )  )  )  {     return false; }^397^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  (  ( this.count )  !=  ( that.count )  )  {     return false; }^397^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P3_Replace_Literal]^return true;^398^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P2_Replace_Operator]^if  ( this.count >= that.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( count != that.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( this.count != count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( that != this.count.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( this.count != that )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P8_Replace_Mix]^if  ( YEAR != that.count )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P9_Replace_Statement]^if  ( this.unit != that.unit )  {^400^^^^^386^407^if  ( this.count != that.count )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P15_Unwrap_Block]^return false;^400^401^402^^^386^407^if  ( this.count != that.count )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P16_Remove_Block]^^400^401^402^^^386^407^if  ( this.count != that.count )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  (  ( this.unit )  !=  ( that.unit )  )  {     return false; }^400^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( ! ( obj instanceof DateTickUnit )  )  {     return false; }^400^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^400^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( ! ( super.equals ( obj )  )  )  {     return false; }^400^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P3_Replace_Literal]^return true;^401^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( !ObjectUtilities.equal ( formatter, that.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( !ObjectUtilities.equal ( this.formatter, formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( !ObjectUtilities.equal ( this.formatter.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( !ObjectUtilities.equal (  that.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( !ObjectUtilities.equal ( this.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( !ObjectUtilities.equal ( that, this.formatter.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( !ObjectUtilities.equal ( that.formatter, this.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P15_Unwrap_Block]^return false;^403^404^405^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P16_Remove_Block]^^403^404^405^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  { return false; }^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P3_Replace_Literal]^return true;^404^^^^^386^407^return false;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P5_Replace_Variable]^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter.formatter )  )  {^403^^^^^386^407^if  ( !ObjectUtilities.equal ( this.formatter, that.formatter )  )  {^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P13_Insert_Block]^if  ( ! ( equal ( this.formatter, that.formatter )  )  )  {     return false; }^403^^^^^386^407^[Delete]^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P3_Replace_Literal]^return false;^406^^^^^386^407^return true;^[CLASS] DateTickUnit  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] boolean  DateTickUnit  that  DateFormat  formatter  Object  obj  String[]  units  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  rollCount  rollUnit  tickUnit  unit  
[P1_Replace_Type]^long  result = 19;^415^^^^^414^420^int result = 19;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^int result = tickUnit;^415^^^^^414^420^int result = 19;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^result = 37 / result + this.unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^result = 32 * result + this.unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^result = 37 * result + unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^result = 37 * this.unit + result;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^result = 37L * result + this.unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^result = 37 * result + this.formatter.hashCode (  ) ;result = 37 * result + this.unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^result = 37 * result + this.count;result = 37 * result + this.unit;^416^^^^^414^420^result = 37 * result + this.unit;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^result = 37 / result + this.count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^result = rollUnit * result + this.count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^result = 37 * YEAR + this.count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^result = 37 * result + count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^result = 37 * this.count + result;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^result = 5 * result + this.count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^result = 37 * result + this.formatter.hashCode (  ) ;result = 37 * result + this.count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^result = 37 * result + this.unit;result = 37 * result + this.count;^417^^^^^414^420^result = 37 * result + this.count;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^result = 37 * result + this.formatter.hashCode (  <<  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P2_Replace_Operator]^result = 37 / result + this.formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^result = 46 * result + this.formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^result = 37 * result + formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^result = 37 * this.formatter + result.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P7_Replace_Invocation]^result = 37 * result + this.formatter .getDateInstance ( MONTH )  ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^result = 37 - 2 * result + this.formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^result = 37 * result + this.unit;result = 37 * result + this.formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P11_Insert_Donor_Statement]^result = 37 * result + this.count;result = 37 * result + this.formatter.hashCode (  ) ;^418^^^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P14_Delete_Statement]^^418^419^420^^^414^420^result = 37 * result + this.formatter.hashCode (  ) ; return result; }^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return YEAR;^419^^^^^414^420^return result;^[CLASS] DateTickUnit  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^return "ateTateTickUnit[" + DateTickUnit.units[this.unit] + ", " + this.count + "]";^435^436^^^^434^437^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + this.count + "]";^[CLASS] DateTickUnit  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", ," + this.count + "]";^435^436^^^^434^437^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + this.count + "]";^[CLASS] DateTickUnit  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P3_Replace_Literal]^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + this.count + "";^435^436^^^^434^437^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + this.count + "]";^[CLASS] DateTickUnit  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P5_Replace_Variable]^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + rollUnit + "]";^435^436^^^^434^437^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + this.count + "]";^[CLASS] DateTickUnit  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
[P8_Replace_Mix]^return true ;^435^436^^^^434^437^return "DateTickUnit[" + DateTickUnit.units[this.unit] + ", " + this.count + "]";^[CLASS] DateTickUnit  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] String[]  units  boolean  long  serialVersionUID  int  DAY  HOUR  MILLISECOND  MINUTE  MONTH  SECOND  YEAR  count  result  rollCount  rollUnit  tickUnit  unit  DateFormat  formatter  
