[P2_Replace_Operator]^if  ( s1 != null )  {^73^^^^^58^88^if  ( s1 == null )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P6_Replace_Expression]^if  ( s2 == null )  {^73^^^^^58^88^if  ( s1 == null )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^if  ( s1 == true )  {^73^^^^^58^88^if  ( s1 == null )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P9_Replace_Statement]^if  ( c1 != c2 )  {^73^^^^^58^88^if  ( s1 == null )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P15_Unwrap_Block]^return s2 == null;^73^74^75^^^58^88^if  ( s1 == null )  { return  ( s2 == null ) ; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P16_Remove_Block]^^73^74^75^^^58^88^if  ( s1 == null )  { return  ( s2 == null ) ; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( c1 != c2 )  {     return false; }^73^^^^^58^88^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( s2 == null )  {     return false; }^73^^^^^58^88^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^return  ( s2 != null ) ;^74^^^^^59^89^return  ( s2 == null ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^return  ( s1 == null ) ;^74^^^^^59^89^return  ( s2 == null ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^return  (s1 != null ) ;;^74^^^^^59^89^return  ( s2 == null ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P12_Insert_Condition]^if  ( s1 == null )  { return  ( s2 == null ) ; }^74^^^^^59^89^return  ( s2 == null ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P12_Insert_Condition]^if  ( s2 == null )  { return  ( s2 == null ) ; }^74^^^^^59^89^return  ( s2 == null ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^return  ( s2 != false ) ;;^74^^^^^59^89^return  ( s2 == null ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^if  ( s2 != null )  {^76^^^^^61^91^if  ( s2 == null )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^if  ( s1 == null )  {^76^^^^^61^91^if  ( s2 == null )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^if  ( s2 == true )  {^76^^^^^61^91^if  ( s2 == null )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P9_Replace_Statement]^if  ( c1 != c2 )  {^76^^^^^61^91^if  ( s2 == null )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P15_Unwrap_Block]^return false;^76^77^78^^^61^91^if  ( s2 == null )  { return false; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P16_Remove_Block]^^76^77^78^^^61^91^if  ( s2 == null )  { return false; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( c1 != c2 )  {     return false; }^76^^^^^61^91^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( s1 == null )  {     return s2 == null; }^76^^^^^61^91^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( ! ( m1.equals ( m2 )  )  )  {     return false; }^76^^^^^61^91^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( limit1 != limit2 )  {     return false; }^76^^^^^61^91^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P3_Replace_Literal]^return true;^77^^^^^62^92^return false;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^AttributedCharacterIterator it1 = s2.getIterator (  ) ;^79^^^^^64^94^AttributedCharacterIterator it1 = s1.getIterator (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^AttributedCharacterIterator it2 = s2.getIterator (  ) ;AttributedCharacterIterator it1 = s1.getIterator (  ) ;^79^^^^^64^94^AttributedCharacterIterator it1 = s1.getIterator (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^79^^^^^64^94^AttributedCharacterIterator it1 = s1.getIterator (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^AttributedCharacterIterator it2 = s1.getIterator (  ) ;^80^^^^^65^95^AttributedCharacterIterator it2 = s2.getIterator (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^AttributedCharacterIterator it1 = s1.getIterator (  ) ;AttributedCharacterIterator it2 = s2.getIterator (  ) ;^80^^^^^65^95^AttributedCharacterIterator it2 = s2.getIterator (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^80^^^^^65^95^AttributedCharacterIterator it2 = s2.getIterator (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P1_Replace_Type]^int c1 = it1.first (  ) ;^81^^^^^66^96^char c1 = it1.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^char c1 = it2.first (  ) ;^81^^^^^66^96^char c1 = it1.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P7_Replace_Invocation]^char c1 = it1 .next (  )  ;^81^^^^^66^96^char c1 = it1.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^char c2 = it2.first (  ) ;char c1 = it1.first (  ) ;^81^^^^^66^96^char c1 = it1.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m1 = it1.getAttributes (  ) ;char c1 = it1.first (  ) ;^81^^^^^66^96^char c1 = it1.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^81^82^^^^66^96^char c1 = it1.first (  ) ; char c2 = it2.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^c1 = it1.next (  ) ;char c1 = it1.first (  ) ;^81^^^^^66^96^char c1 = it1.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^c2 = it2.next (  ) ;char c1 = it1.first (  ) ;^81^^^^^66^96^char c1 = it1.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P1_Replace_Type]^int c2 = it2.first (  ) ;^82^^^^^67^97^char c2 = it2.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^char c2 = it1.first (  ) ;^82^^^^^67^97^char c2 = it2.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P7_Replace_Invocation]^char c2 = it2 .next (  )  ;^82^^^^^67^97^char c2 = it2.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m2 = it2.getAttributes (  ) ;char c2 = it2.first (  ) ;^82^^^^^67^97^char c2 = it2.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^char c1 = it1.first (  ) ;char c2 = it2.first (  ) ;^82^^^^^67^97^char c2 = it2.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^82^83^^^^67^97^char c2 = it2.first (  ) ; int start = 0;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^c1 = it1.next (  ) ;char c2 = it2.first (  ) ;^82^^^^^67^97^char c2 = it2.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^c2 = it2.next (  ) ;char c2 = it2.first (  ) ;^82^^^^^67^97^char c2 = it2.first (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P1_Replace_Type]^short  start = 0;^83^^^^^68^98^int start = 0;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P3_Replace_Literal]^int start = limit2;^83^^^^^68^98^int start = 0;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^while  ( c1 <= CharacterIterator.DONE )  {^84^^^^^69^99^while  ( c1 != CharacterIterator.DONE )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^while  ( c1 == CharacterIterator.DONE )  {^84^^^^^69^99^while  ( c1 != CharacterIterator.DONE )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^while  ( c2 != CharacterIterator.DONE )  {^84^^^^^69^99^while  ( c1 != CharacterIterator.DONE )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^while  ( c1 != CharacterIterator.c2 )  {^84^^^^^69^99^while  ( c1 != CharacterIterator.DONE )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^if  ( limit1 > limit2 )  {^87^^^^^72^102^if  ( limit1 != limit2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^if  ( start != limit2 )  {^87^^^^^72^102^if  ( limit1 != limit2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^if  ( limit1 != start )  {^87^^^^^72^102^if  ( limit1 != limit2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^if  ( limit2 != limit1 )  {^87^^^^^72^102^if  ( limit1 != limit2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P15_Unwrap_Block]^return false;^87^88^89^^^72^102^if  ( limit1 != limit2 )  { return false; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P16_Remove_Block]^^87^88^89^^^72^102^if  ( limit1 != limit2 )  { return false; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( c1 != c2 )  {     return false; }^87^^^^^72^102^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( s2 == null )  {     return false; }^87^^^^^72^102^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( ! ( m1.equals ( m2 )  )  )  {     return false; }^87^^^^^72^102^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P3_Replace_Literal]^return true;^88^^^^^73^103^return false;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P15_Unwrap_Block]^return false;^93^94^95^^^78^108^if  ( !m1.equals ( m2 )  )  { return false; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P16_Remove_Block]^^93^94^95^^^78^108^if  ( !m1.equals ( m2 )  )  { return false; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( c1 != c2 )  {     return false; }^93^^^^^78^108^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( s2 == null )  {     return false; }^93^^^^^78^108^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( limit1 != limit2 )  {     return false; }^93^^^^^78^108^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P3_Replace_Literal]^return true;^94^^^^^79^109^return false;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^if  ( c1 >= c2 )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^if  ( c2 != c1 )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^if  ( c1 = c2 )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P9_Replace_Statement]^if  ( s1 == null )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P9_Replace_Statement]^if  ( s2 == null )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P15_Unwrap_Block]^return false;^98^99^100^^^83^113^if  ( c1 != c2 )  { return false; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P16_Remove_Block]^^98^99^100^^^83^113^if  ( c1 != c2 )  { return false; }^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( s2 == null )  {     return false; }^98^^^^^83^113^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( s1 == null )  {     return s2 == null; }^98^^^^^83^113^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( ! ( m1.equals ( m2 )  )  )  {     return false; }^98^^^^^83^113^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P13_Insert_Block]^if  ( limit1 != limit2 )  {     return false; }^98^^^^^83^113^[Delete]^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P3_Replace_Literal]^return true;^99^^^^^84^114^return false;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P1_Replace_Type]^for  (  short  i = start; i < limit1; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^for  ( int i = start; i <= limit1; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^for  ( int i = limit2; i < limit1; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^for  ( startnt i = start; i < limit1; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^for  ( int i = start; i < start; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^for  ( int i = limit1; i < start; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^for  ( limit1nt i = start; i < i; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^if  ( c1 <= c2 )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^c1 = it2.next (  ) ;^101^^^^^86^116^c1 = it1.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^c2 = it2.next (  ) ;c1 = it1.next (  ) ;^101^^^^^86^116^c1 = it1.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^c2 = it1.next (  ) ;^102^^^^^87^117^c2 = it2.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P7_Replace_Invocation]^c2 = it2 .first (  )  ;^102^^^^^87^117^c2 = it2.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^c1 = it1.next (  ) ;c2 = it2.next (  ) ;^102^^^^^87^117^c2 = it2.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^101^^^^^86^116^c1 = it1.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^char c2 = it2.first (  ) ;c1 = it1.next (  ) ;^101^^^^^86^116^c1 = it1.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^char c1 = it1.first (  ) ;c1 = it1.next (  ) ;^101^^^^^86^116^c1 = it1.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m1 = it1.getAttributes (  ) ;c1 = it1.next (  ) ;^101^^^^^86^116^c1 = it1.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^102^^^^^87^117^c2 = it2.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m2 = it2.getAttributes (  ) ;c2 = it2.next (  ) ;^102^^^^^87^117^c2 = it2.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^char c2 = it2.first (  ) ;c2 = it2.next (  ) ;^102^^^^^87^117^c2 = it2.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^char c1 = it1.first (  ) ;c2 = it2.next (  ) ;^102^^^^^87^117^c2 = it2.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P7_Replace_Invocation]^c1 = it1 .first (  )  ;^101^^^^^86^116^c1 = it1.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^start = start;^104^^^^^89^119^start = limit1;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^start =  limit2;^104^^^^^89^119^start = limit1;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P1_Replace_Type]^long  limit1 = it1.getRunLimit (  ) ;^85^^^^^70^100^int limit1 = it1.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^int limit1 = it2.getRunLimit (  ) ;^85^^^^^70^100^int limit1 = it1.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m2 = it2.getAttributes (  ) ;int limit1 = it1.getRunLimit (  ) ;^85^^^^^70^100^int limit1 = it1.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^int limit2 = it2.getRunLimit (  ) ;int limit1 = it1.getRunLimit (  ) ;^85^^^^^70^100^int limit1 = it1.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m1 = it1.getAttributes (  ) ;int limit1 = it1.getRunLimit (  ) ;^85^^^^^70^100^int limit1 = it1.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P1_Replace_Type]^short  limit2 = it2.getRunLimit (  ) ;^86^^^^^71^101^int limit2 = it2.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^int limit2 = it1.getRunLimit (  ) ;^86^^^^^71^101^int limit2 = it2.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m2 = it2.getAttributes (  ) ;int limit2 = it2.getRunLimit (  ) ;^86^^^^^71^101^int limit2 = it2.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^int limit1 = it1.getRunLimit (  ) ;int limit2 = it2.getRunLimit (  ) ;^86^^^^^71^101^int limit2 = it2.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m1 = it1.getAttributes (  ) ;int limit2 = it2.getRunLimit (  ) ;^86^^^^^71^101^int limit2 = it2.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^Map m1 = it2.getAttributes (  ) ;^91^^^^^76^106^Map m1 = it1.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m2 = it2.getAttributes (  ) ;Map m1 = it1.getAttributes (  ) ;^91^^^^^76^106^Map m1 = it1.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^int limit2 = it2.getRunLimit (  ) ;Map m1 = it1.getAttributes (  ) ;^91^^^^^76^106^Map m1 = it1.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^int limit1 = it1.getRunLimit (  ) ;Map m1 = it1.getAttributes (  ) ;^91^^^^^76^106^Map m1 = it1.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^char c1 = it1.first (  ) ;Map m1 = it1.getAttributes (  ) ;^91^^^^^76^106^Map m1 = it1.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^Map m2 = it1.getAttributes (  ) ;^92^^^^^77^107^Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P7_Replace_Invocation]^Map m2 = it2 .getRunLimit (  )  ;^92^^^^^77^107^Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^int limit2 = it2.getRunLimit (  ) ;Map m2 = it2.getAttributes (  ) ;^92^^^^^77^107^Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^char c2 = it2.first (  ) ;Map m2 = it2.getAttributes (  ) ;^92^^^^^77^107^Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^int limit1 = it1.getRunLimit (  ) ;Map m2 = it2.getAttributes (  ) ;^92^^^^^77^107^Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^Map m1 = it1.getAttributes (  ) ;Map m2 = it2.getAttributes (  ) ;^92^^^^^77^107^Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P1_Replace_Type]^for  (  long  i = start; i < limit1; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^85^86^^^^70^100^int limit1 = it1.getRunLimit (  ) ; int limit2 = it2.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P7_Replace_Invocation]^int limit2 = it2 .getAttributes (  )  ;^86^^^^^71^101^int limit2 = it2.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^86^^^^^71^101^int limit2 = it2.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^91^92^^^^76^106^Map m1 = it1.getAttributes (  ) ; Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^c1 = it1.next (  ) ;Map m1 = it1.getAttributes (  ) ;^91^^^^^76^106^Map m1 = it1.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^92^^^^^77^107^Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P11_Insert_Donor_Statement]^c2 = it2.next (  ) ;Map m2 = it2.getAttributes (  ) ;^92^^^^^77^107^Map m2 = it2.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^if  ( limit1 < limit2 )  {^87^^^^^72^102^if  ( limit1 != limit2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^if  ( m1.equals ( m2 )  )  {^93^^^^^78^108^if  ( !m1.equals ( m2 )  )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^if  ( c1 > c2 )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P5_Replace_Variable]^for  ( startnt i = i; i < limit1; i++ )  {^97^^^^^82^112^for  ( int i = start; i < limit1; i++ )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^if  ( c1 == c2 )  {^98^^^^^83^113^if  ( c1 != c2 )  {^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^c2 =  null.next (  ) ;^102^^^^^87^117^c2 = it2.next (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P1_Replace_Type]^short  limit1 = it1.getRunLimit (  ) ;^85^^^^^70^100^int limit1 = it1.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P7_Replace_Invocation]^int limit1 = it1 .getAttributes (  )  ;^85^^^^^70^100^int limit1 = it1.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^85^^^^^70^100^int limit1 = it1.getRunLimit (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P14_Delete_Statement]^^91^^^^^76^106^Map m1 = it1.getAttributes (  ) ;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P2_Replace_Operator]^return c2 != CharacterIterator.DONE;^106^^^^^91^121^return c2 == CharacterIterator.DONE;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
[P8_Replace_Mix]^return true ;^106^^^^^91^121^return c2 == CharacterIterator.DONE;^[CLASS] AttributedStringUtilities  [METHOD] equal [RETURN_TYPE] boolean   AttributedString s1 AttributedString s2 [VARIABLES] AttributedString  s1  s2  boolean  char  c1  c2  Map  m1  m2  int  i  limit1  limit2  start  AttributedCharacterIterator  it1  it2  
