[P3_Replace_Literal]^private boolean calculateDistanceInDataSpace = true;^69^^^^^64^74^private boolean calculateDistanceInDataSpace = false;^[CLASS] CrosshairState   [VARIABLES] 
[P8_Replace_Mix]^private boolean calculateDistanceInDataSpace  = null ;^69^^^^^64^74^private boolean calculateDistanceInDataSpace = false;^[CLASS] CrosshairState   [VARIABLES] 
[P12_Insert_Condition]^if  ( this.calculateDistanceInDataSpace )  { private boolean calculateDistanceInDataSpace = false; }^69^^^^^64^74^private boolean calculateDistanceInDataSpace = false;^[CLASS] CrosshairState   [VARIABLES] 
[P1_Replace_Type]^private float anchorX;^72^^^^^67^77^private double anchorX;^[CLASS] CrosshairState   [VARIABLES] 
[P8_Replace_Mix]^private int anchorX;^72^^^^^67^77^private double anchorX;^[CLASS] CrosshairState   [VARIABLES] 
[P1_Replace_Type]^private int anchorY;^75^^^^^70^80^private double anchorY;^[CLASS] CrosshairState   [VARIABLES] 
[P1_Replace_Type]^private int crosshairX;^81^^^^^76^86^private double crosshairX;^[CLASS] CrosshairState   [VARIABLES] 
[P1_Replace_Type]^private float crosshairY;^84^^^^^79^89^private double crosshairY;^[CLASS] CrosshairState   [VARIABLES] 
[P8_Replace_Mix]^private int crosshairY;^84^^^^^79^89^private double crosshairY;^[CLASS] CrosshairState   [VARIABLES] 
[P1_Replace_Type]^private  short  domainAxisIndex;^92^^^^^87^97^private int domainAxisIndex;^[CLASS] CrosshairState   [VARIABLES] 
[P8_Replace_Mix]^private  long  domainAxisIndex;^92^^^^^87^97^private int domainAxisIndex;^[CLASS] CrosshairState   [VARIABLES] 
[P1_Replace_Type]^private  short  rangeAxisIndex;^100^^^^^95^105^private int rangeAxisIndex;^[CLASS] CrosshairState   [VARIABLES] 
[P1_Replace_Type]^private int distance;^105^^^^^100^110^private double distance;^[CLASS] CrosshairState   [VARIABLES] 
[P3_Replace_Literal]^this ( true ) ;^112^^^^^111^113^this ( false ) ;^[CLASS] CrosshairState  [METHOD] <init> [RETURN_TYPE] CrosshairState()   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  distance  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^112^^^^^111^113^this ( false ) ;^[CLASS] CrosshairState  [METHOD] <init> [RETURN_TYPE] CrosshairState()   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  distance  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.calculateDistanceInDataSpace =  null;^123^^^^^122^124^this.calculateDistanceInDataSpace = calculateDistanceInDataSpace;^[CLASS] CrosshairState  [METHOD] <init> [RETURN_TYPE] CrosshairState(boolean)   boolean calculateDistanceInDataSpace [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  distance  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^return distance;^136^^^^^135^137^return this.distance;^[CLASS] CrosshairState  [METHOD] getCrosshairDistance [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  distance  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^return crosshairX;^136^^^^^135^137^return this.distance;^[CLASS] CrosshairState  [METHOD] getCrosshairDistance [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  distance  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.distance = crosshairY;^150^^^^^149^151^this.distance = distance;^[CLASS] CrosshairState  [METHOD] setCrosshairDistance [RETURN_TYPE] void   double distance [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  distance  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.distance = d;this.distance = distance;^150^^^^^149^151^this.distance = distance;^[CLASS] CrosshairState  [METHOD] setCrosshairDistance [RETURN_TYPE] void   double distance [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  distance  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^if  ( this.anchor == null )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( anchor != null )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( x -  ( this.anchorX )  )  *  ( x -  ( this.anchorX )  )  +  ( y -  ( this.anchorY )  )  *  ( y -  ( this.anchorY ) )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( x -  ( this.anchorX )  * x -  ( this.anchorX ) )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( x - this.anchorX )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( y -  ( this.anchorY )  * y -  ( this.anchorY ) )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( y - this.anchorY )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( orientation == PlotOrientation.HORIZONTAL )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transX - xx )  *  ( transX - xx )  +  ( transY - yy )  *  ( transY - yy )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transX - xx * transX - xx )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transX - xx )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transY - yy * transY - yy )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transY - yy )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( d < this.distance )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^if  ( this.anchor != true )  {^177^^^^^175^204^if  ( this.anchor != null )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P15_Unwrap_Block]^double d = 0.0; if (this.calculateDistanceInDataSpace) {    d = ((x - (this.anchorX)) * (x - (this.anchorX))) + ((y - (this.anchorY)) * (y - (this.anchorY)));}else {    double xx = this.anchor.getX();    double yy = this.anchor.getY();    if (orientation == (PlotOrientation.HORIZONTAL)) {        double temp = yy;        yy = xx;        xx = temp;    }    d = ((transX - xx) * (transX - xx)) + ((transY - yy) * (transY - yy));}; if (d < (this.distance)) {    this.crosshairX = x;    this.crosshairY = y;    this.domainAxisIndex = domainAxisIndex;    this.rangeAxisIndex = rangeAxisIndex;    this.distance = d;};^177^178^179^180^181^175^204^if  ( this.anchor != null )  { double d = 0.0; if  ( this.calculateDistanceInDataSpace )  { d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ; }^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P16_Remove_Block]^^177^178^179^180^181^175^204^if  ( this.anchor != null )  { double d = 0.0; if  ( this.calculateDistanceInDataSpace )  { d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ; }^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( calculateDistanceInDataSpace )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( x -  ( this.anchorX )  * x -  ( this.anchorX ) )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( x - this.anchorX )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( y -  ( this.anchorY )  * y -  ( this.anchorY ) )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( y - this.anchorY )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( orientation == PlotOrientation.HORIZONTAL )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transX - xx )  *  ( transX - xx )  +  ( transY - yy )  *  ( transY - yy )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transX - xx * transX - xx )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transX - xx )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transY - yy * transY - yy )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P6_Replace_Expression]^if  ( transY - yy )  {^179^^^^^175^204^if  ( this.calculateDistanceInDataSpace )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P15_Unwrap_Block]^d = ((x - (this.anchorX)) * (x - (this.anchorX))) + ((y - (this.anchorY)) * (y - (this.anchorY)));^179^180^181^182^^175^204^if  ( this.calculateDistanceInDataSpace )  { d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ; }^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P16_Remove_Block]^^179^180^181^182^^175^204^if  ( this.calculateDistanceInDataSpace )  { d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ; }^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^if  ( orientation < PlotOrientation.HORIZONTAL )  {^186^^^^^179^193^if  ( orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P15_Unwrap_Block]^double temp = yy; yy = xx; xx = temp;^186^187^188^189^190^179^193^if  ( orientation == PlotOrientation.HORIZONTAL )  { double temp = yy; yy = xx; xx = temp; }^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P16_Remove_Block]^^186^187^188^189^190^179^193^if  ( orientation == PlotOrientation.HORIZONTAL )  { double temp = yy; yy = xx; xx = temp; }^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^yy = yy;^188^^^^^179^193^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^yy =  temp;^188^^^^^179^193^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^xx =  x;^189^^^^^179^193^xx = temp;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int temp = yy;^187^^^^^179^193^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double temp = transX;^187^^^^^179^193^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double temp = y;^187^^^^^179^193^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double d = 0.0;double temp = yy;^187^^^^^179^193^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^yy = y;^188^^^^^179^193^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^xx = transX;^189^^^^^179^193^xx = temp;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^xx =  transY;^189^^^^^179^193^xx = temp;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  |  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d + =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX   instanceof   xx )  *  ( transX   instanceof   xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX  &  xx )  *  ( transX  &  xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d - =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY  <=  yy )  *  ( transY  <=  yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY  ==  yy )  *  ( transY  ==  yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( yy - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transX - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - transX )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( xx - transX )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - transY )  *  ( transX - xx ) +  ( xx - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - yy )  *  ( transX - xx ) +  ( transY - xx )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^d =   ( yy - xx )  *  ( yy - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int xx = this.anchor.getX (  ) ;^184^^^^^179^193^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double xx = anchor.getX (  ) ;^184^^^^^179^193^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P7_Replace_Invocation]^double xx = this.anchor.getY (  ) ;^184^^^^^179^193^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double yy = this.anchor.getY (  ) ;double xx = this.anchor.getX (  ) ;^184^^^^^179^193^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int yy = this.anchor.getY (  ) ;^185^^^^^179^193^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double yy = anchor.getY (  ) ;^185^^^^^179^193^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P7_Replace_Invocation]^double yy = this.anchor.getX (  ) ;^185^^^^^179^193^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double xx = this.anchor.getX (  ) ;double yy = this.anchor.getY (  ) ;^185^^^^^179^193^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^184^^^^^179^193^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^185^^^^^179^193^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  <=  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d - =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x  >>  this.anchorX )  *  ( x  >>  this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x   instanceof   this.anchorX )  *  ( x   instanceof   this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y  <  this.anchorY )  *  ( y  <  this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y  <=  this.anchorY )  *  ( y  <=  this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( yy - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( transY - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - temp )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - temp )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( y - this.anchorX )  *  ( x - this.anchorX ) +  ( x - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( this.anchorY - y )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - this.anchorY )  *  ( x - this.anchorX ) +  ( y - this.anchorX )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^d =   ( transY - this.anchorX )  *  ( transY - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^if  ( orientation <= PlotOrientation.HORIZONTAL )  {^186^^^^^175^204^if  ( orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P15_Unwrap_Block]^double temp = yy; yy = xx; xx = temp;^186^187^188^189^190^175^204^if  ( orientation == PlotOrientation.HORIZONTAL )  { double temp = yy; yy = xx; xx = temp; }^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P16_Remove_Block]^^186^187^188^189^190^175^204^if  ( orientation == PlotOrientation.HORIZONTAL )  { double temp = yy; yy = xx; xx = temp; }^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^yy = transX;^188^^^^^175^204^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^yy =  y;^188^^^^^175^204^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^xx =  yy;^189^^^^^175^204^xx = temp;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int temp = yy;^187^^^^^175^204^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double temp = y;^187^^^^^175^204^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double d = 0.0;double temp = yy;^187^^^^^175^204^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^if  ( d == this.distance )  {^195^^^^^175^204^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( yy < this.distance )  {^195^^^^^175^204^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( d < x )  {^195^^^^^175^204^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^if  ( d < temp )  {^195^^^^^175^204^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P13_Insert_Block]^if  ( d <  ( this.distance )  )  {     this.crosshairX = candidateX;     this.domainAxisIndex = domainAxisIndex;     this.distance = d; }^195^^^^^175^204^[Delete]^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P13_Insert_Block]^if  ( d <  ( this.distance )  )  {     this.crosshairY = candidateY;     this.rangeAxisIndex = rangeAxisIndex;     this.distance = d; }^195^^^^^175^204^[Delete]^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairX = yy;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairX =  temp;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorX = x;this.crosshairX = x;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorY = y;this.crosshairX = x;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = candidateY;this.crosshairX = x;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.crosshairX = x;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.distance = d;this.crosshairX = x;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = candidateX;this.crosshairX = x;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairY = transY;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairY =  null;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorX = x;this.crosshairY = y;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorY = y;this.crosshairY = y;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = candidateY;this.crosshairY = y;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.crosshairY = y;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.distance = d;this.crosshairY = y;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = candidateX;this.crosshairY = y;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.domainAxisIndex = rangeAxisIndex;^198^^^^^175^204^this.domainAxisIndex = domainAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.rangeAxisIndex = rangeAxisIndex;this.domainAxisIndex = domainAxisIndex;^198^^^^^175^204^this.domainAxisIndex = domainAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.rangeAxisIndex = domainAxisIndex;^199^^^^^175^204^this.rangeAxisIndex = rangeAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.domainAxisIndex = domainAxisIndex;this.rangeAxisIndex = rangeAxisIndex;^199^^^^^175^204^this.rangeAxisIndex = rangeAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.distance =  yy;^200^^^^^175^204^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.distance = distance;this.distance = d;^200^^^^^175^204^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.distance = d;^200^^^^^175^204^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.distance = d;^200^^^^^175^204^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P12_Insert_Condition]^if  ( d < this.distance )  { this.distance = d; }^200^^^^^175^204^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  |  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x  <<  this.anchorX )  *  ( x  <<  this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x  &&  this.anchorX )  *  ( x  &&  this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d + =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y  ^  this.anchorY )  *  ( y  ^  this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y  &&  this.anchorY )  *  ( y  &&  this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( temp - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - transY )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - yy )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( this.anchorX - x )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - y )  *  ( x - this.anchorX ) +  ( this.anchorX - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( this.anchorY - this.anchorX )  *  ( x - this.anchorX ) +  ( y - x )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^d =   ( yy - this.anchorX )  *  ( yy - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^yy = transY;^188^^^^^175^204^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^yy =  null;^188^^^^^175^204^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ^  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d - =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX  ==  xx )  *  ( transX  ==  xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX  >  xx )  *  ( transX  >  xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY  ^  yy )  *  ( transY  ^  yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY  <  yy )  *  ( transY  <  yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( xx - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - x )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transX - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transY - xx )  *  ( transX - xx ) +  ( transX - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - yy )  *  ( transX - xx ) +  ( transY - xx )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - xx )  *  ( transX - xx ) +  ( yy - transY )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( yy - xx )  *  ( transX - xx ) +  ( transY - transX )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^d =   ( yy - xx )  *  ( yy - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairX = transX;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairY = yy;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairY =  x;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.distance =  transX;^200^^^^^175^204^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int d = 0.0;^178^^^^^175^204^double d = 0.0;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double temp = yy;double d = 0.0;^178^^^^^175^204^double d = 0.0;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^float xx = this.anchor.getX (  ) ;^184^^^^^175^204^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double xx = anchor.getX (  ) ;^184^^^^^175^204^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P7_Replace_Invocation]^double xx = this.anchor.getY (  ) ;^184^^^^^175^204^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double xx = anchor.getY (  ) ;^184^^^^^175^204^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double yy = this.anchor.getY (  ) ;double xx = this.anchor.getX (  ) ;^184^^^^^175^204^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^float yy = this.anchor.getY (  ) ;^185^^^^^175^204^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double yy = anchor.getY (  ) ;^185^^^^^175^204^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P7_Replace_Invocation]^double yy = this.anchor.getX (  ) ;^185^^^^^175^204^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double xx = this.anchor.getX (  ) ;double yy = this.anchor.getY (  ) ;^185^^^^^175^204^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double temp = transX;^187^^^^^175^204^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^184^185^^^^175^204^double xx = this.anchor.getX (  ) ; double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^185^^^^^175^204^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^if  ( orientation >= PlotOrientation.HORIZONTAL )  {^186^^^^^179^193^if  ( orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^yy =  transX;^188^^^^^179^193^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^xx =  yy;^189^^^^^179^193^xx = temp;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double temp = transY;^187^^^^^179^193^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  &  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX  !=  xx )  *  ( transX  !=  xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d / =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY  >=  yy )  *  ( transY  >=  yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY  &&  yy )  *  ( transY  &&  yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( temp - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - temp )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - xx )  *  ( transX - xx ) +  ( yy - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - xx )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transY - xx )  *  ( transX - xx ) +  ( transX - yy )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - xx )  *  ( transX - xx ) +  ( yy - transY )  *  ( transY - yy ) ;^191^192^^^^179^193^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double temp = x;^187^^^^^179^193^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^184^185^^^^179^193^double xx = this.anchor.getX (  ) ; double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double yy = anchor.getX (  ) ;^185^^^^^179^193^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ==  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x  >=  this.anchorX )  *  ( x  >=  this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y  |  this.anchorY )  *  ( y  |  this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( xx - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - transX )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^d =   ( transX - this.anchorX )  *  ( transX - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^if  ( orientation != PlotOrientation.HORIZONTAL )  {^186^^^^^175^204^if  ( orientation == PlotOrientation.HORIZONTAL )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^yy = temp;^188^^^^^175^204^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^xx = transX;^189^^^^^175^204^xx = temp;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double temp = xx;^187^^^^^175^204^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( transX < this.distance )  {^195^^^^^175^204^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( d < xx )  {^195^^^^^175^204^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^if  ( xx < this.distance )  {^195^^^^^175^204^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairX = transY;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairY =  temp;^197^^^^^175^204^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =   instanceof   ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x  >  this.anchorX )  *  ( x  >  this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d / =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y  >  this.anchorY )  *  ( y  >  this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transY - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( transX - this.anchorY )  *  ( y - this.anchorY ) ;^180^181^^^^175^204^d =  ( x - this.anchorX )  *  ( x - this.anchorX ) +  ( y - this.anchorY )  *  ( y - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^yy = yy;^188^^^^^175^204^yy = xx;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  >  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX  |  xx )  *  ( transX  |  xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX  >=  xx )  *  ( transX  >=  xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d / =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY  >  yy )  *  ( transY  >  yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - temp )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( transX - xx )  *  ( transX - xx ) +  ( temp - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^d =  ( xx - transX )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^d =   ( xx - xx )  *  ( xx - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^191^192^^^^175^204^d =  ( transX - xx )  *  ( transX - xx ) +  ( transY - yy )  *  ( transY - yy ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairX =  y;^196^^^^^175^204^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.distance = transY;^200^^^^^175^204^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.distance =  null;^200^^^^^175^204^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int xx = this.anchor.getX (  ) ;^184^^^^^175^204^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int yy = this.anchor.getY (  ) ;^185^^^^^175^204^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^float temp = yy;^187^^^^^175^204^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double temp = x;^187^^^^^175^204^double temp = yy;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^184^^^^^175^204^double xx = this.anchor.getX (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double yy = anchor .getX (  )  ;^185^^^^^175^204^double yy = this.anchor.getY (  ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairPoint [RETURN_TYPE] void   double x double y int domainAxisIndex int rangeAxisIndex double transX double transY PlotOrientation orientation [VARIABLES] PlotOrientation  orientation  boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int d = Math.abs ( candidateX - this.anchorX ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^double d = Math.abs ( candidateX  >  this.anchorX ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( x - this.anchorX ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( candidateX - yy ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( this.anchorX - candidateX ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double d = Math.abs ( candidateY - this.anchorY ) ;double d = Math.abs ( candidateX - this.anchorX ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^double d = Math.abs ( candidateX  >=  this.anchorX ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( transY - this.anchorX ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( candidateX - y ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double d = Math.abs ( transX - this.anchorX ) ;^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^220^^^^^218^227^double d = Math.abs ( candidateX - this.anchorX ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^if  ( d == this.distance )  {^221^^^^^218^227^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( yy < this.distance )  {^221^^^^^218^227^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( d < transX )  {^221^^^^^218^227^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( this.distance < d )  {^221^^^^^218^227^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P15_Unwrap_Block]^this.crosshairX = candidateX; this.domainAxisIndex = domainAxisIndex; this.distance = d;^221^222^223^224^225^218^227^if  ( d < this.distance )  { this.crosshairX = candidateX; this.domainAxisIndex = domainAxisIndex; this.distance = d; }^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P16_Remove_Block]^^221^222^223^224^225^218^227^if  ( d < this.distance )  { this.crosshairX = candidateX; this.domainAxisIndex = domainAxisIndex; this.distance = d; }^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P13_Insert_Block]^if  ( d <  ( this.distance )  )  {     this.crosshairX = x;     this.crosshairY = y;     this.domainAxisIndex = domainAxisIndex;     this.rangeAxisIndex = rangeAxisIndex;     this.distance = d; }^221^^^^^218^227^[Delete]^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P13_Insert_Block]^if  ( d <  ( this.distance )  )  {     this.crosshairY = candidateY;     this.rangeAxisIndex = rangeAxisIndex;     this.distance = d; }^221^^^^^218^227^[Delete]^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairX = x;^222^^^^^218^227^this.crosshairX = candidateX;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairX =  xx;^222^^^^^218^227^this.crosshairX = candidateX;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = candidateY;this.crosshairX = candidateX;^222^^^^^218^227^this.crosshairX = candidateX;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.crosshairX = candidateX;^222^^^^^218^227^this.crosshairX = candidateX;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.crosshairX = candidateX;^222^^^^^218^227^this.crosshairX = candidateX;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.domainAxisIndex = rangeAxisIndex;^223^^^^^218^227^this.domainAxisIndex = domainAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.domainAxisIndex =  null;^223^^^^^218^227^this.domainAxisIndex = domainAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.rangeAxisIndex = rangeAxisIndex;this.domainAxisIndex = domainAxisIndex;^223^^^^^218^227^this.domainAxisIndex = domainAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.distance = transY;^224^^^^^218^227^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.distance =  x;^224^^^^^218^227^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.distance = distance;this.distance = d;^224^^^^^218^227^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.distance = d;^224^^^^^218^227^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.distance = d;^224^^^^^218^227^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P12_Insert_Condition]^if  ( d < this.distance )  { this.distance = d; }^224^^^^^218^227^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairX = transX;^222^^^^^218^227^this.crosshairX = candidateX;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairX =  transY;^222^^^^^218^227^this.crosshairX = candidateX;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.distance = transX;^224^^^^^218^227^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairX [RETURN_TYPE] void   double candidateX int domainAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P1_Replace_Type]^int d = Math.abs ( candidateY - this.anchorY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^double d = Math.abs ( candidateY   instanceof   this.anchorY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( transY - this.anchorY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( candidateY - temp ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( this.anchorY - candidateY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double d = Math.abs ( x - this.anchorY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^double d = Math.abs ( candidateX - this.anchorX ) ;double d = Math.abs ( candidateY - this.anchorY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^double d = Math.abs ( candidateY  ==  this.anchorY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( yy - this.anchorY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^double d = Math.abs ( candidateY - yy ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^double d = Math.abs ( candidateY - transY ) ;^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P14_Delete_Statement]^^242^^^^^241^249^double d = Math.abs ( candidateY - this.anchorY ) ;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P2_Replace_Operator]^if  ( d > this.distance )  {^243^^^^^241^249^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( y < this.distance )  {^243^^^^^241^249^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( d < yy )  {^243^^^^^241^249^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^if  ( this.distance < d )  {^243^^^^^241^249^if  ( d < this.distance )  {^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P15_Unwrap_Block]^this.crosshairY = candidateY; this.rangeAxisIndex = rangeAxisIndex; this.distance = d;^243^244^245^246^247^241^249^if  ( d < this.distance )  { this.crosshairY = candidateY; this.rangeAxisIndex = rangeAxisIndex; this.distance = d; }^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P16_Remove_Block]^^243^244^245^246^247^241^249^if  ( d < this.distance )  { this.crosshairY = candidateY; this.rangeAxisIndex = rangeAxisIndex; this.distance = d; }^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P13_Insert_Block]^if  ( d <  ( this.distance )  )  {     this.crosshairX = candidateX;     this.domainAxisIndex = domainAxisIndex;     this.distance = d; }^243^^^^^241^249^[Delete]^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P13_Insert_Block]^if  ( d <  ( this.distance )  )  {     this.crosshairX = x;     this.crosshairY = y;     this.domainAxisIndex = domainAxisIndex;     this.rangeAxisIndex = rangeAxisIndex;     this.distance = d; }^243^^^^^241^249^[Delete]^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairY = temp;^244^^^^^241^249^this.crosshairY = candidateY;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairY =  x;^244^^^^^241^249^this.crosshairY = candidateY;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.crosshairY = candidateY;^244^^^^^241^249^this.crosshairY = candidateY;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.crosshairY = candidateY;^244^^^^^241^249^this.crosshairY = candidateY;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = candidateX;this.crosshairY = candidateY;^244^^^^^241^249^this.crosshairY = candidateY;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.rangeAxisIndex = domainAxisIndex;^245^^^^^241^249^this.rangeAxisIndex = rangeAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.domainAxisIndex = domainAxisIndex;this.rangeAxisIndex = rangeAxisIndex;^245^^^^^241^249^this.rangeAxisIndex = rangeAxisIndex;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.distance = transX;^246^^^^^241^249^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.distance =  temp;^246^^^^^241^249^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.distance = distance;this.distance = d;^246^^^^^241^249^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.distance = d;^246^^^^^241^249^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.distance = d;^246^^^^^241^249^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P12_Insert_Condition]^if  ( d < this.distance )  { this.distance = d; }^246^^^^^241^249^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairY =  yy;^244^^^^^241^249^this.crosshairY = candidateY;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.distance = transY;^246^^^^^241^249^this.distance = d;^[CLASS] CrosshairState  [METHOD] updateCrosshairY [RETURN_TYPE] void   double candidateY int rangeAxisIndex [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^return anchor;^260^^^^^259^261^return this.anchor;^[CLASS] CrosshairState  [METHOD] getAnchor [RETURN_TYPE] Point2D   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.anchor =  null;^277^^^^^276^278^this.anchor = anchor;^[CLASS] CrosshairState  [METHOD] setAnchor [RETURN_TYPE] void   Point2D anchor [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorX = x;this.anchor = anchor;^277^^^^^276^278^this.anchor = anchor;^[CLASS] CrosshairState  [METHOD] setAnchor [RETURN_TYPE] void   Point2D anchor [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorY = y;this.anchor = anchor;^277^^^^^276^278^this.anchor = anchor;^[CLASS] CrosshairState  [METHOD] setAnchor [RETURN_TYPE] void   Point2D anchor [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^return transY;^288^^^^^287^289^return this.anchorX;^[CLASS] CrosshairState  [METHOD] getAnchorX [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^return yy;^288^^^^^287^289^return this.anchorX;^[CLASS] CrosshairState  [METHOD] getAnchorX [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.anchorX = yy;^301^^^^^300^302^this.anchorX = x;^[CLASS] CrosshairState  [METHOD] setAnchorX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.anchorX =  transX;^301^^^^^300^302^this.anchorX = x;^[CLASS] CrosshairState  [METHOD] setAnchorX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorY = y;this.anchorX = x;^301^^^^^300^302^this.anchorX = x;^[CLASS] CrosshairState  [METHOD] setAnchorX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchor = anchor;this.anchorX = x;^301^^^^^300^302^this.anchorX = x;^[CLASS] CrosshairState  [METHOD] setAnchorX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.anchorX = x;^301^^^^^300^302^this.anchorX = x;^[CLASS] CrosshairState  [METHOD] setAnchorX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.anchorX = x;^301^^^^^300^302^this.anchorX = x;^[CLASS] CrosshairState  [METHOD] setAnchorX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^return distance;^312^^^^^311^313^return this.anchorY;^[CLASS] CrosshairState  [METHOD] getAnchorY [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.anchorY = transX;^325^^^^^324^326^this.anchorY = y;^[CLASS] CrosshairState  [METHOD] setAnchorY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.anchorY =  yy;^325^^^^^324^326^this.anchorY = y;^[CLASS] CrosshairState  [METHOD] setAnchorY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorX = x;this.anchorY = y;^325^^^^^324^326^this.anchorY = y;^[CLASS] CrosshairState  [METHOD] setAnchorY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchor = anchor;this.anchorY = y;^325^^^^^324^326^this.anchorY = y;^[CLASS] CrosshairState  [METHOD] setAnchorY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.anchorY = y;^325^^^^^324^326^this.anchorY = y;^[CLASS] CrosshairState  [METHOD] setAnchorY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.anchorY = y;^325^^^^^324^326^this.anchorY = y;^[CLASS] CrosshairState  [METHOD] setAnchorY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^return distance;^336^^^^^335^337^return this.crosshairX;^[CLASS] CrosshairState  [METHOD] getCrosshairX [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^return temp;^336^^^^^335^337^return this.crosshairX;^[CLASS] CrosshairState  [METHOD] getCrosshairX [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairX = distance;^351^^^^^350^352^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] setCrosshairX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorX = x;this.crosshairX = x;^351^^^^^350^352^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] setCrosshairX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorY = y;this.crosshairX = x;^351^^^^^350^352^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] setCrosshairX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = candidateY;this.crosshairX = x;^351^^^^^350^352^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] setCrosshairX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = y;this.crosshairX = x;^351^^^^^350^352^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] setCrosshairX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.distance = d;this.crosshairX = x;^351^^^^^350^352^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] setCrosshairX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = candidateX;this.crosshairX = x;^351^^^^^350^352^this.crosshairX = x;^[CLASS] CrosshairState  [METHOD] setCrosshairX [RETURN_TYPE] void   double x [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^return transX;^363^^^^^362^364^return this.crosshairY;^[CLASS] CrosshairState  [METHOD] getCrosshairY [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^return transY;^363^^^^^362^364^return this.crosshairY;^[CLASS] CrosshairState  [METHOD] getCrosshairY [RETURN_TYPE] double   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^this.crosshairY = temp;^377^^^^^376^378^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] setCrosshairY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P8_Replace_Mix]^this.crosshairY =  yy;^377^^^^^376^378^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] setCrosshairY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorX = x;this.crosshairY = y;^377^^^^^376^378^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] setCrosshairY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.anchorY = y;this.crosshairY = y;^377^^^^^376^378^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] setCrosshairY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairY = candidateY;this.crosshairY = y;^377^^^^^376^378^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] setCrosshairY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = x;this.crosshairY = y;^377^^^^^376^378^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] setCrosshairY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.distance = d;this.crosshairY = y;^377^^^^^376^378^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] setCrosshairY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P11_Insert_Donor_Statement]^this.crosshairX = candidateX;this.crosshairY = y;^377^^^^^376^378^this.crosshairY = y;^[CLASS] CrosshairState  [METHOD] setCrosshairY [RETURN_TYPE] void   double y [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^return rangeAxisIndex;^388^^^^^387^389^return this.domainAxisIndex;^[CLASS] CrosshairState  [METHOD] getDomainAxisIndex [RETURN_TYPE] int   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
[P5_Replace_Variable]^return rangeAxisIndex;^399^^^^^398^400^return this.rangeAxisIndex;^[CLASS] CrosshairState  [METHOD] getRangeAxisIndex [RETURN_TYPE] int   [VARIABLES] boolean  calculateDistanceInDataSpace  Point2D  anchor  double  anchorX  anchorY  candidateX  candidateY  crosshairX  crosshairY  d  distance  temp  transX  transY  x  xx  y  yy  int  domainAxisIndex  rangeAxisIndex  
