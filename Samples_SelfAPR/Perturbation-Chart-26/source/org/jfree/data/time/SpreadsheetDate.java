[P1_Replace_Type]^private static final  short  serialVersionUID = -2039586705374454461L;^85^^^^^80^90^private static final long serialVersionUID = -2039586705374454461L;^[CLASS] SpreadsheetDate   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -2039586705374454461;^85^^^^^80^90^private static final long serialVersionUID = -2039586705374454461L;^[CLASS] SpreadsheetDate   [VARIABLES] 
[P1_Replace_Type]^private final  short  serial;^91^^^^^86^96^private final int serial;^[CLASS] SpreadsheetDate   [VARIABLES] 
[P1_Replace_Type]^private final  short  day;^94^^^^^89^99^private final int day;^[CLASS] SpreadsheetDate   [VARIABLES] 
[P1_Replace_Type]^private final  short  month;^97^^^^^92^102^private final int month;^[CLASS] SpreadsheetDate   [VARIABLES] 
[P1_Replace_Type]^private final  short  year;^100^^^^^95^105^private final int year;^[CLASS] SpreadsheetDate   [VARIABLES] 
[P8_Replace_Mix]^private final  long  year;^100^^^^^95^105^private final int year;^[CLASS] SpreadsheetDate   [VARIABLES] 
[P2_Replace_Operator]^if  (  ( year >= 1900 )  ||  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( year == 1900 )  &&  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( year >= 1900 )  &&  ( year == 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^if  (  ( year >= year )  &&  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^if  (  ( year >= 1900 )  &&  ( year <= year )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( serial >= 1900 )  &&  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  (  ( year >= 1900 )  ) {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  (   ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  ( year >= 1900 )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  ( year <= 9999 )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P8_Replace_Mix]^if  (  ( year >= 1577 )  &&  ( year <= 9999 )  )  {^111^^^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P15_Unwrap_Block]^this.year = year;^111^112^113^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  { this.year = year; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P16_Remove_Block]^^111^112^113^^^96^126^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  { this.year = year; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P13_Insert_Block]^if  (  ( serial >=  ( SERIAL_LOWER_BOUND )  )  &&  ( serial <=  ( SERIAL_UPPER_BOUND )  )  )  {     this.serial = serial; }else {     throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ; }^111^^^^^96^126^[Delete]^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P13_Insert_Block]^if  (  ( month >=  ( MonthConstants.JANUARY )  )  &&  ( month <=  ( MonthConstants.DECEMBER )  )  )  {     this.month = month; }else {     throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ; }^111^^^^^96^126^[Delete]^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " 'year' argument must be in range 19" ) ;^115^116^117^^^111^118^throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." )  ;^115^116^117^^^111^118^throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P13_Insert_Block]^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {     this.year = year; }else {     throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ; }^115^^^^^111^118^[Delete]^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "0 the 'year' argument must be in range 1900 to 9999." ) ;^115^116^117^^^111^118^throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.year = serial;^112^^^^^97^127^this.year = year;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P11_Insert_Donor_Statement]^this.day = day;this.year = year;^112^^^^^97^127^this.year = year;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P11_Insert_Donor_Statement]^this.serial = serial;this.year = year;^112^^^^^97^127^this.year = year;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "999" ) ;^115^116^117^^^100^130^throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." )  ;^115^116^117^^^100^130^throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P13_Insert_Block]^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {     this.year = year; }else {     throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ; }^115^^^^^100^130^[Delete]^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "year' argument must be in range 1" ) ;^115^116^117^^^100^130^throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ; ;^115^116^117^^^100^130^throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( month >= MonthConstants.JANUARY ) ||  ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( month > MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month < MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( year >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( month >= 1 ) &&  ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= null )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( MonthConstants.DECEMBER >= MonthConstants.JANUARY ) &&  ( month <= month )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( month >= MonthConstants.DECEMBER ) &&  ( month <= MonthConstants.JANUARY )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  (  ( month >= MonthConstants.JANUARY ) ) {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  (   ( month <= MonthConstants.DECEMBER )  )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  ( month >= MonthConstants.JANUARY )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  ( month <= MonthConstants.DECEMBER )  {^120^121^^^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P15_Unwrap_Block]^this.month = month;^120^121^122^123^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  { this.month = month; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P16_Remove_Block]^^120^121^122^123^^105^135^if  (  ( month >= MonthConstants.JANUARY ) &&  ( month <= MonthConstants.DECEMBER )  )  { this.month = month; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12.gument must be in the rang" ) ;^125^126^127^^^120^128^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." )  ;^125^126^127^^^120^128^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e he 'month' argument must be in the range 1 to 12." ) ;^125^126^127^^^120^128^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.month = year;^122^^^^^120^128^this.month = month;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P8_Replace_Mix]^this.month =  null;^122^^^^^120^128^this.month = month;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P11_Insert_Donor_Statement]^this.month = mm - 1;this.month = month;^122^^^^^120^128^this.month = month;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P8_Replace_Mix]^this.month =  year;^122^^^^^107^137^this.month = month;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P11_Insert_Donor_Statement]^this.month = mm - 1;this.month = month;^122^^^^^107^137^this.month = month;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "onth' arhe 'month' argument must be in the range 1 to 12." ) ;^125^126^127^^^110^140^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." )  ;^125^126^127^^^110^140^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12.the ran" ) ;^125^126^127^^^110^140^throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( day >= 1 )  ||  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( day == 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( day >= 1 )  &&  ( day < SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P3_Replace_Literal]^if  (  ( day >= -3 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P4_Replace_Constructor]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth (  year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P4_Replace_Constructor]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( year >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( serial, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( month >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( day, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( year, month )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  (  ( day >= 1 )  ) {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  (   ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  ( day >= 1 )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P6_Replace_Expression]^if  ( day <= lastDayOfMonth ( month, year ) )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P8_Replace_Mix]^if  (  ( day >= 1L )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P15_Unwrap_Block]^this.day = day;^130^131^132^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  { this.day = day; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P16_Remove_Block]^^130^131^132^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  { this.day = day; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.day = year;^131^^^^^116^146^this.day = day;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P11_Insert_Donor_Statement]^this.year = year;this.day = day;^131^^^^^116^146^this.day = day;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P11_Insert_Donor_Statement]^this.serial = serial;this.day = day;^131^^^^^116^146^this.day = day;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P8_Replace_Mix]^return true;^134^^^^^119^149^throw new IllegalArgumentException  (" ")  ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, serial )  )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P7_Replace_Invocation]^if  (  ( day >= 1 )  &&  ( day <= SerialDate .leapYearCount ( day )   )  )  {^130^^^^^115^145^if  (  ( day >= 1 )  &&  ( day <= SerialDate.lastDayOfMonth ( month, year )  )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P13_Insert_Block]^if  ( isLeapYear ( y )  )  {     mm = mm + 1; }^130^^^^^115^145^[Delete]^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( year, month, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( day, year, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( day, month, serial ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial (  month, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( day,  year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( day, month ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( month, day, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( day, year, month ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P7_Replace_Invocation]^this.serial = SpreadsheetDate ( day, month, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( serial, month, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( day, serial, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P5_Replace_Variable]^this.serial = calcSerial ( year, month, day ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P8_Replace_Mix]^this.serial = SpreadsheetDate ( year, month, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P14_Delete_Statement]^^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P11_Insert_Donor_Statement]^final int ss2 = calcSerial ( 1, 1, this.year ) ;this.serial = calcSerial ( day, month, year ) ;^138^^^^^123^153^this.serial = calcSerial ( day, month, year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int,int,int)   final int day final int month final int year [VARIABLES] long  serialVersionUID  int  day  month  serial  year  boolean  
[P2_Replace_Operator]^if  (  ( serial >= SERIAL_LOWER_BOUND )  ||  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^if  (  ( serial == SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial == SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^if  (  ( ss2 >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^if  (  ( SERIAL_LOWER_BOUND >= serial )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^if  (  ( serial >= SERIAL_UPPER_BOUND )  &&  ( serial <= SERIAL_LOWER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P6_Replace_Expression]^if  (  ( serial >= SERIAL_LOWER_BOUND )  ) {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P6_Replace_Expression]^if  (   ( serial <= SERIAL_UPPER_BOUND )  )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P6_Replace_Expression]^if  ( serial >= SERIAL_LOWER_BOUND )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P6_Replace_Expression]^if  ( serial <= SERIAL_UPPER_BOUND )  {^150^^^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P15_Unwrap_Block]^this.serial = serial;^150^151^152^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  { this.serial = serial; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P16_Remove_Block]^^150^151^152^^^135^165^if  (  ( serial >= SERIAL_LOWER_BOUND )  &&  ( serial <= SERIAL_UPPER_BOUND )  )  { this.serial = serial; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P13_Insert_Block]^if  (  ( year >= 1900 )  &&  ( year <= 9999 )  )  {     this.year = year; }else {     throw new IllegalArgumentException ( "The 'year' argument must be in range 1900 to 9999." ) ; }^150^^^^^135^165^[Delete]^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P13_Insert_Block]^if  (  ( month >=  ( MonthConstants.JANUARY )  )  &&  ( month <=  ( MonthConstants.DECEMBER )  )  )  {     this.month = month; }else {     throw new IllegalArgumentException ( "The 'month' argument must be in the range 1 to 12." ) ; }^150^^^^^135^165^[Delete]^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "must be in range 2 topreadsheetDate: Serial must be in range 2 to 2958465." ) ;^154^155^^^^150^156^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^throw new IllegalArgumentException ( ": Serial m" ) ;^154^155^^^^150^156^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.serial = year;^151^^^^^136^166^this.serial = serial;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^this.serial =  overestimatedYYYY;^151^^^^^136^166^this.serial = serial;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.day = day;this.serial = serial;^151^^^^^136^166^this.serial = serial;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = year;this.serial = serial;^151^^^^^136^166^this.serial = serial;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^this.serial =  ss2;^151^^^^^136^166^this.serial = serial;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "adpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^154^155^^^^139^169^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465.t be in range 2 " ) ;^154^155^^^^139^169^throw new IllegalArgumentException ( "SpreadsheetDate: Serial must be in range 2 to 2958465." ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^final  short  days = this.serial - SERIAL_LOWER_BOUND;^160^^^^^145^175^final int days = this.serial - SERIAL_LOWER_BOUND;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^final int days = this.serial  !=  SERIAL_LOWER_BOUND;^160^^^^^145^175^final int days = this.serial - SERIAL_LOWER_BOUND;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^final int days = serial - SERIAL_LOWER_BOUND;^160^^^^^145^175^final int days = this.serial - SERIAL_LOWER_BOUND;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^final int days = SERIAL_LOWER_BOUND - this.serial;^160^^^^^145^175^final int days = this.serial - SERIAL_LOWER_BOUND;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^final int days = sss - SERIAL_LOWER_BOUND;^160^^^^^145^175^final int days = this.serial - SERIAL_LOWER_BOUND;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^final  short  overestimatedYYYY = 1900 +  ( days / 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^final int overestimatedYYYY = 1900 +  ^  ( days / 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^final int overestimatedYYYY = 1900 +  ( days * 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^final int overestimatedYYYY = 1894 +  ( days / 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^final int overestimatedYYYY = 1900 +  ( days /  ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^final int overestimatedYYYY = 1900 +  ( ss1 / 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^162^^^^^147^177^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^final  long  leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^163^^^^^148^178^final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^final int leaps = SerialDate.leapYearCount ( year ) ;^163^^^^^148^178^final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P7_Replace_Invocation]^final int leaps = SerialDate.isLeapYear ( overestimatedYYYY ) ;^163^^^^^148^178^final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^final int leaps = SerialDate.isLeapYear ( underestimatedYYYY ) ;^163^^^^^148^178^final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^final int leaps = SerialDate.isLeapYear ( year ) ;^163^^^^^148^178^final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P14_Delete_Statement]^^163^^^^^148^178^final int leaps = SerialDate.leapYearCount ( overestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^final  long  nonleapdays = days - leaps;^164^^^^^149^179^final int nonleapdays = days - leaps;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^final int nonleapdays = days   instanceof   leaps;^164^^^^^149^179^final int nonleapdays = days - leaps;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^final int nonleapdays = ss1 - leaps;^164^^^^^149^179^final int nonleapdays = days - leaps;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^final int nonleapdays = days - ss1;^164^^^^^149^179^final int nonleapdays = days - leaps;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^final int nonleapdays = leaps - days;^164^^^^^149^179^final int nonleapdays = days - leaps;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^short  underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^int underestimatedYYYY = 1900 +  >  ( nonleapdays / 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^int underestimatedYYYY = 1900 +  ( nonleapdays + 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int underestimatedYYYY = 1903 +  ( nonleapdays / 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int underestimatedYYYY = 1900 +  ( nonleapdays / 357 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^int underestimatedYYYY = 1900 +  ( serial / 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^int underestimatedYYYY = 1900 +  ( ss2 / 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^final int overestimatedYYYY = 1900 +  ( days / 365 ) ;int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^166^^^^^151^181^int underestimatedYYYY = 1900 +  ( nonleapdays / 365 ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^while  ( ss1 < this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^while  ( ss-3 <= this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^while  ( ss-4 <= this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^while  ( serial <= this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^while  ( this.serial <= ss1 )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^while  ( ss2 <= this.serial )  {^173^^^^^158^188^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^underestimatedYYYY = underestimatedYYYY ;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^underestimatedYYYY = ss2 + 1;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^underestimatedYYYY = underestimatedYYYY + 0;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY - 1;underestimatedYYYY = underestimatedYYYY + 1;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY;underestimatedYYYY = underestimatedYYYY + 1;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssday = calcSerial ( day, day, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssleaps = calcSerial ( leaps, leaps, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^ss1 = calcSerial ( 1, 1, ss1 ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P7_Replace_Invocation]^ss1 = SpreadsheetDate ( 1, 1, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^ss0 = calcSerial ( 0, 0, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY - 1;ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssoverestimatedYYYY = calcSerial ( overestimatedYYYY, overestimatedYYYY, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssyear = calcSerial ( year, year, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^ss1 = calcSerial ( 1, 1, ss2 ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^ss1 = calcSerial ( 1, 1, serial ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P14_Delete_Statement]^^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^if  ( underestimatedYYYY <= overestimatedYYYY )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^if  ( overestimatedYYYY == overestimatedYYYY )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^if  ( underestimatedYYYY == underestimatedYYYY )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^if  ( overestimatedYYYY == underestimatedYYYY )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P6_Replace_Expression]^if  ( ss1 <= this.serial )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P6_Replace_Expression]^if  ( underestimatedYYYY + 1 )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P6_Replace_Expression]^if  ( underestimatedYYYY - 1 )  {^168^^^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P15_Unwrap_Block]^this.year = underestimatedYYYY;^168^169^170^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  { this.year = underestimatedYYYY; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P16_Remove_Block]^^168^169^170^^^153^183^if  ( underestimatedYYYY == overestimatedYYYY )  { this.year = underestimatedYYYY; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^while  ( ss1 > this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^while  ( ss7 <= this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^while  ( sssss <= this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^while  ( ss6 <= this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^while  ( overestimatedYYYY <= this.serial )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^while  ( ss1 <= overestimatedYYYY )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^while  ( ss1 <= year )  {^173^^^^^168^178^while  ( ss1 <= this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^underestimatedYYYY = underestimatedYYYY + ss2;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^underestimatedYYYY = overestimatedYYYY + 1;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^underestimatedYYYY = underestimatedYYYY + 4;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY - 1;underestimatedYYYY = underestimatedYYYY + 1;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY;underestimatedYYYY = underestimatedYYYY + 1;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ss = calcSerial ( , , underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ss-2 = calcSerial ( -2, -2, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^ss1 = calcSerial ( 1, 1, ss1 ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P7_Replace_Invocation]^ss1 = SpreadsheetDate ( 1, 1, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^ss1L = calcSerial ( 1L, 1L, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY - 1;ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ss0 = calcSerial ( 0, 0, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ss2 = calcSerial ( 2, 2, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^ss1 = SpreadsheetDate ( 1, 1, sss ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P14_Delete_Statement]^^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^underestimatedYYYY = underestimatedYYYY ;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^underestimatedYYYY = underestimatedYYYY + 0;^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P12_Insert_Condition]^if  ( underestimatedYYYY == overestimatedYYYY )  { underestimatedYYYY = underestimatedYYYY + 1; }^174^^^^^168^178^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssoverestimatedYYYY = calcSerial ( overestimatedYYYY, overestimatedYYYY, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssserial = calcSerial ( serial, serial, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^this.year = underestimatedYYYY  >  1;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^this.year = underestimatedYYYY - leaps;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.year = overestimatedYYYY - 1;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^this.year = underestimatedYYYY - 3;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;this.year = underestimatedYYYY - 1;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY;this.year = underestimatedYYYY - 1;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^underestimatedYYYY = underestimatedYYYY + 1;this.year = underestimatedYYYY - 1;^177^^^^^168^178^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^long  ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int ssserial = calcSerial ( serial, serial, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int ss9 = calcSerial ( 9, 9, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^int ss1 = calcSerial ( 1, 1, serial ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P7_Replace_Invocation]^int ss1 = SpreadsheetDate ( 1, 1, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^int ss1 = SpreadsheetDate ( 1, 1, overestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^final int ss2 = calcSerial ( 1, 1, this.year ) ;int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int ssnonleapdays = calcSerial ( nonleapdays, nonleapdays, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^int ss1 = calcSerial ( 1, 1, ss1 ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^int ss1 = SpreadsheetDate ( 1, 1, ss1 ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P14_Delete_Statement]^^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^172^^^^^168^178^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssunderestimatedYYYY = calcSerial ( underestimatedYYYY, underestimatedYYYY, underestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^ss1 = SpreadsheetDate ( 1, 1, overestimatedYYYY ) ;^175^^^^^168^178^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.year = overestimatedYYYY;^169^^^^^154^184^this.year = underestimatedYYYY;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^this.year =  ss2;^169^^^^^154^184^this.year = underestimatedYYYY;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY - 1;this.year = underestimatedYYYY;^169^^^^^154^184^this.year = underestimatedYYYY;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^underestimatedYYYY = underestimatedYYYY + 1;this.year = underestimatedYYYY;^169^^^^^154^184^this.year = underestimatedYYYY;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^this.year =  year;^169^^^^^154^184^this.year = underestimatedYYYY;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^underestimatedYYYY = serial + 1;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^underestimatedYYYY = underestimatedYYYY + 1 * 1;^174^^^^^159^189^underestimatedYYYY = underestimatedYYYY + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ss6 = calcSerial ( 6, 6, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssunderestimatedYYYY = calcSerial ( underestimatedYYYY, underestimatedYYYY, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^ss4 = calcSerial ( 4, 4, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^this.year = underestimatedYYYY  <=  1;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^this.year = underestimatedYYYY - underestimatedYYYY;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.year = ss2 - 1;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^this.year = underestimatedYYYY - 1 + 4;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;this.year = underestimatedYYYY - 1;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.year = underestimatedYYYY;this.year = underestimatedYYYY - 1;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^underestimatedYYYY = underestimatedYYYY + 1;this.year = underestimatedYYYY - 1;^177^^^^^162^192^this.year = underestimatedYYYY - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^short  ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int ssmm = calcSerial ( mm, mm, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int ss4 = calcSerial ( 4, 4, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^int ss1 = calcSerial ( 1, 1, overestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P7_Replace_Invocation]^int ss1 = SpreadsheetDate ( 1, 1, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^int ss1 = calcSerial ( 1, 1, serial ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^final int ss2 = calcSerial ( 1, 1, this.year ) ;int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int ss-2 = calcSerial ( -2, -2, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int ssnonleapdays = calcSerial ( nonleapdays, nonleapdays, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^int ss1 = calcSerial ( 1, 1, ss1 ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P14_Delete_Statement]^^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^172^^^^^157^187^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^ssmm = calcSerial ( mm, mm, underestimatedYYYY ) ;^175^^^^^160^190^ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^final  long  ss2 = calcSerial ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^final int ss2 = calcSerial ( leaps, leaps, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^final int ss2 = calcSerial ( day, day, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^final int ss2 = calcSerial ( 1, 1, overestimatedYYYY ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P7_Replace_Invocation]^final int ss2 = isInRange ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^final int ss2 = calcSerial ( 1, 1, sss ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^final int s1 = d1.toSerial (  ) ;final int ss2 = calcSerial ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^final int s2 = d2.toSerial (  ) ;final int ss2 = calcSerial ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^final int end = Math.max ( s1, s2 ) ;final int ss2 = calcSerial ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^int ss1 = calcSerial ( 1, 1, underestimatedYYYY ) ;final int ss2 = calcSerial ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^final int start = Math.min ( s1, s2 ) ;final int ss2 = calcSerial ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^final int s = toSerial (  ) ;final int ss2 = calcSerial ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^final int ss2 = calcSerial ( underestimatedYYYY, underestimatedYYYY, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^final int ss2 = calcSerial ( days, days, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^final int ss2 = calcSerial ( 1, 1, serial ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P14_Delete_Statement]^^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.serial = calcSerial ( day, month, year ) ;final int ss2 = calcSerial ( 1, 1, this.year ) ;^180^^^^^165^195^final int ss2 = calcSerial ( 1, 1, this.year ) ;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];int[] daysToEndOfPrecedingMonth = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;^182^183^^^^167^197^int[] daysToEndOfPrecedingMonth = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^if  ( isLeapYear ( overestimatedYYYY )  )  {^185^^^^^170^200^if  ( isLeapYear ( this.year )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P15_Unwrap_Block]^daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;^185^186^187^188^^170^200^if  ( isLeapYear ( this.year )  )  { daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P16_Remove_Block]^^185^186^187^188^^170^200^if  ( isLeapYear ( this.year )  )  { daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH; }^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^daysToEndOfPrecedingMonth  = null ;^186^187^^^^171^201^daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P13_Insert_Block]^if  ( isLeapYear ( this.year )  )  {     daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH; }^186^^^^^171^201^[Delete]^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^daysToEndOfPrecedingMonth  =  daysToEndOfPrecedingMonth ;^186^187^^^^171^201^daysToEndOfPrecedingMonth = LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^if  ( isLeapYear ( ss2 )  )  {^185^^^^^170^200^if  ( isLeapYear ( this.year )  )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^long  mm = 1;^191^^^^^176^206^int mm = 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int mm = days;^191^^^^^176^206^int mm = 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P1_Replace_Type]^short  sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^int sss = ss2 + daysToEndOfPrecedingMonth[mm]  <<  1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^int sss = ss2  <=  daysToEndOfPrecedingMonth[mm] - 1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - serial;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^int sss = ss1 + daysToEndOfPrecedingMonth[mm] - 1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^int sss = overestimatedYYYY + daysToEndOfPrecedingMonth[mm] - 1;^192^^^^^177^207^int sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^while  ( sss == this.serial )  {^193^^^^^178^208^while  ( sss < this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^while  ( overestimatedYYYY < this.serial )  {^193^^^^^178^208^while  ( sss < this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^while  ( sss < year )  {^193^^^^^178^208^while  ( sss < this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^while  ( this.serial < sss )  {^193^^^^^178^208^while  ( sss < this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^while  ( sss < underestimatedYYYY )  {^193^^^^^178^208^while  ( sss < this.serial )  {^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^mm = mm + sss;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^mm = ss2 + 1;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^mm = mm + 1 + 2;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^sss = ss2 + daysToEndOfPrecedingMonth[mm]  &  1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^sss = ss2  &&  daysToEndOfPrecedingMonth[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^sss = ss2 + daysToEndOfPrecedingMonth[mm] ;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^sss = year + daysToEndOfPrecedingMonth[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^sss = daysToEndOfPrecedingMonth + ss2[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1L;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^mm = mm ;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^mm = ss1 + 1;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^mm = mm + 1L;^194^^^^^179^209^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^sss = ss2 + daysToEndOfPrecedingMonth[mm]  !=  1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^sss = ss2  ||  daysToEndOfPrecedingMonth[mm] - 1;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 4;^195^^^^^180^210^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^this.month = mm  <<  1;^197^^^^^182^212^this.month = mm - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^this.month = mm - underestimatedYYYY;^197^^^^^182^212^this.month = mm - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.month = sss - 1;^197^^^^^182^212^this.month = mm - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^this.month = mm - 2;^197^^^^^182^212^this.month = mm - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^this.month = month;this.month = mm - 1;^197^^^^^182^212^this.month = mm - 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^this.day = this.serial  ||  ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^this.day = this.serial  >>  ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P3_Replace_Literal]^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] ;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.day = this.serial - ss1 - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.day = overestimatedYYYY - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.day = ss2 - this.serial - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^this.day = this.serial - daysToEndOfPrecedingMonth - ss2[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P8_Replace_Mix]^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 0;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P11_Insert_Donor_Statement]^sss = ss2 + daysToEndOfPrecedingMonth[mm] - 1;this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^200^201^^^^185^215^this.day = this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;^[CLASS] SpreadsheetDate  [METHOD] <init> [RETURN_TYPE] SpreadsheetDate(int)   final int serial [VARIABLES] int[]  daysToEndOfPrecedingMonth  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P5_Replace_Variable]^return year;^213^^^^^212^214^return this.serial;^[CLASS] SpreadsheetDate  [METHOD] toSerial [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P8_Replace_Mix]^return underestimatedYYYY;^213^^^^^212^214^return this.serial;^[CLASS] SpreadsheetDate  [METHOD] toSerial [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P7_Replace_Invocation]^final Calendar calendar = Calendar.getTime (  ) ;^222^^^^^221^225^final Calendar calendar = Calendar.getInstance (  ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P14_Delete_Statement]^^222^223^^^^221^225^final Calendar calendar = Calendar.getInstance (  ) ; calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P2_Replace_Operator]^calendar.set ( getYYYY (  ) , getMonth (  )   <=  1, getDayOfMonth (  ) , 0, 0, 0 ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( getYYYY (  ) , getMonth (  )  - days, getDayOfMonth (  ) , 0, 0, 0 ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , overestimatedYYYY, overestimatedYYYY, overestimatedYYYY ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P3_Replace_Literal]^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , month, month, month ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P7_Replace_Invocation]^calendar.set ( getMonth (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P7_Replace_Invocation]^calendar.set ( getYYYY (  ) , getDayOfMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P7_Replace_Invocation]^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getMonth (  ) , 0, 0, 0 ) ;^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P14_Delete_Statement]^^223^^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P14_Delete_Statement]^^223^224^^^^221^225^calendar.set ( getYYYY (  ) , getMonth (  )  - 1, getDayOfMonth (  ) , 0, 0, 0 ) ; return calendar.getTime (  ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P14_Delete_Statement]^^224^^^^^221^225^return calendar.getTime (  ) ;^[CLASS] SpreadsheetDate  [METHOD] toDate [RETURN_TYPE] Date   [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  Calendar  calendar  
[P5_Replace_Variable]^return sss;^233^^^^^232^234^return this.year;^[CLASS] SpreadsheetDate  [METHOD] getYYYY [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P8_Replace_Mix]^return overestimatedYYYY;^233^^^^^232^234^return this.year;^[CLASS] SpreadsheetDate  [METHOD] getYYYY [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P5_Replace_Variable]^return overestimatedYYYY;^242^^^^^241^243^return this.month;^[CLASS] SpreadsheetDate  [METHOD] getMonth [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P8_Replace_Mix]^return ss1;^242^^^^^241^243^return this.month;^[CLASS] SpreadsheetDate  [METHOD] getMonth [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P5_Replace_Variable]^return overestimatedYYYY;^251^^^^^250^252^return this.day;^[CLASS] SpreadsheetDate  [METHOD] getDayOfMonth [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P8_Replace_Mix]^return serial;^251^^^^^250^252^return this.day;^[CLASS] SpreadsheetDate  [METHOD] getDayOfMonth [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P2_Replace_Operator]^return  >=  ( this.serial + 6 )  % 7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P2_Replace_Operator]^return  ( this.serial + 6 )   &  7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P2_Replace_Operator]^return  ( this.serial  >=  6 )  % 7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P3_Replace_Literal]^return  ( this.serial + day )  % 7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P3_Replace_Literal]^return  ( this.serial + 6 )  % 16 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P3_Replace_Literal]^return  ( this.serial + 6 )  % 7 ;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P5_Replace_Variable]^return  ( ss1 + 6 )  % 7 + 1;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P8_Replace_Mix]^return  ( this.serial  !=  6 )  % 7  !=  1;;^265^^^^^264^266^return  ( this.serial + 6 )  % 7 + 1;^[CLASS] SpreadsheetDate  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P2_Replace_Operator]^if  ( object  >=  SerialDate )  {^281^^^^^279^289^if  ( object instanceof SerialDate )  {^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P6_Replace_Expression]^if  ( s.toSerial() == this.toSerial() )  {^281^^^^^279^289^if  ( object instanceof SerialDate )  {^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P15_Unwrap_Block]^final org.jfree.data.time.SerialDate s = ((org.jfree.data.time.SerialDate) (object)); return (s.toSerial()) == (this.toSerial());^281^282^283^284^^279^289^if  ( object instanceof SerialDate )  { final SerialDate s =  ( SerialDate )  object; return  ( s.toSerial (  )  == this.toSerial (  )  ) ; }^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P16_Remove_Block]^^281^282^283^284^^279^289^if  ( object instanceof SerialDate )  { final SerialDate s =  ( SerialDate )  object; return  ( s.toSerial (  )  == this.toSerial (  )  ) ; }^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P3_Replace_Literal]^return true;^286^^^^^279^289^return false;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P2_Replace_Operator]^return  ( s.toSerial (  )  >= this.toSerial (  )  ) ;^283^^^^^279^289^return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P7_Replace_Invocation]^return  ( s.isLeapYear (  )  == this.toSerial (  )  ) ;^283^^^^^279^289^return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P7_Replace_Invocation]^return  ( s.getYYYY (  )  == this.toSerial (  )  ) ;^283^^^^^279^289^return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P7_Replace_Invocation]^return  ( s .SerialDate (  )   == this^283^^^^^279^289^return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P11_Insert_Donor_Statement]^final int s = toSerial (  ) ;final SerialDate s =  ( SerialDate )  object;^282^^^^^279^289^final SerialDate s =  ( SerialDate )  object;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P14_Delete_Statement]^^283^^^^^279^289^return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P2_Replace_Operator]^return  ( s.toSerial (  )  <= this.toSerial (  )  ) ;^283^^^^^279^289^return  ( s.toSerial (  )  == this.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  object  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  s  
[P7_Replace_Invocation]^return getYYYY (  ) ;^297^^^^^296^298^return toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P14_Delete_Statement]^^297^^^^^296^298^return toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  boolean  
[P2_Replace_Operator]^return this.serial  >=  other.toSerial (  ) ;^310^^^^^309^311^return this.serial - other.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] compare [RETURN_TYPE] int   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return other - this.serial.toSerial (  ) ;^310^^^^^309^311^return this.serial - other.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] compare [RETURN_TYPE] int   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return this.serial - other.isLeapYear (  ) ;^310^^^^^309^311^return this.serial - other.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] compare [RETURN_TYPE] int   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P8_Replace_Mix]^return this.serial - other .SerialDate (  )  ;^310^^^^^309^311^return this.serial - other.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] compare [RETURN_TYPE] int   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P14_Delete_Statement]^^310^^^^^309^311^return this.serial - other.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] compare [RETURN_TYPE] int   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return isBefore (  ( SerialDate )  other ) ;^322^^^^^321^323^return compare (  ( SerialDate )  other ) ;^[CLASS] SpreadsheetDate  [METHOD] compareTo [RETURN_TYPE] int   Object other [VARIABLES] Object  other  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P14_Delete_Statement]^^322^^^^^321^323^return compare (  ( SerialDate )  other ) ;^[CLASS] SpreadsheetDate  [METHOD] compareTo [RETURN_TYPE] int   Object other [VARIABLES] Object  other  boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  
[P2_Replace_Operator]^return  ( this.serial <= other.toSerial (  )  ) ;^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( serial == other.toSerial (  )  ) ;^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( other == this.serial.toSerial (  )  ) ;^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial == other.isLeapYear (  )  ) ;^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial == other .SerialDate (  )   ) ;^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P14_Delete_Statement]^^335^^^^^334^336^return  ( this.serial == other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOn [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P2_Replace_Operator]^return  ( this.serial == other.toSerial (  )  ) ;^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( underestimatedYYYY < other.toSerial (  )  ) ;^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( other < this.serial.toSerial (  )  ) ;^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial < other.isLeapYear (  )  ) ;^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial < other .SerialDate (  )   ) ;^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P14_Delete_Statement]^^348^^^^^347^349^return  ( this.serial < other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P2_Replace_Operator]^return  ( this.serial < other.toSerial (  )  ) ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( serial <= other.toSerial (  )  ) ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( other <= this.serial.toSerial (  )  ) ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial <= other.isLeapYear (  )  ) ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P8_Replace_Mix]^return  (overestimatedYYYY  ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial <= other .SerialDate (  )   ) ;^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P14_Delete_Statement]^^361^^^^^360^362^return  ( this.serial <= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrBefore [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P2_Replace_Operator]^return  ( this.serial < other.toSerial (  )  ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( ss1 > other.toSerial (  )  ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( other > this.serial.toSerial (  )  ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial > other.isLeapYear (  )  ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial > other .SerialDate (  )   ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P8_Replace_Mix]^return  ( serial > other.isLeapYear (  )  ) ;^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P14_Delete_Statement]^^374^^^^^373^375^return  ( this.serial > other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P2_Replace_Operator]^return  ( this.serial > other.toSerial (  )  ) ;^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( overestimatedYYYY >= other.toSerial (  )  ) ;^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return  ( other >= this.serial.toSerial (  )  ) ;^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial >= other.isLeapYear (  )  ) ;^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P7_Replace_Invocation]^return  ( this.serial >= other .SerialDate (  )   ) ;^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P14_Delete_Statement]^^387^^^^^386^388^return  ( this.serial >= other.toSerial (  )  ) ;^[CLASS] SpreadsheetDate  [METHOD] isOnOrAfter [RETURN_TYPE] boolean   SerialDate other [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  other  
[P5_Replace_Variable]^return isInRange (  d2, SerialDate.INCLUDE_BOTH ) ;^401^^^^^400^402^return isInRange ( d1, d2, SerialDate.INCLUDE_BOTH ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return isInRange ( d1,  SerialDate.INCLUDE_BOTH ) ;^401^^^^^400^402^return isInRange ( d1, d2, SerialDate.INCLUDE_BOTH ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return isInRange ( d2, d1, SerialDate.INCLUDE_BOTH ) ;^401^^^^^400^402^return isInRange ( d1, d2, SerialDate.INCLUDE_BOTH ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  d1  d2  
[P12_Insert_Condition]^if  ( include == SerialDate.INCLUDE_BOTH )  { return isInRange ( d1, d2, SerialDate.INCLUDE_BOTH ) ; }^401^^^^^400^402^return isInRange ( d1, d2, SerialDate.INCLUDE_BOTH ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  d1  d2  
[P14_Delete_Statement]^^401^^^^^400^402^return isInRange ( d1, d2, SerialDate.INCLUDE_BOTH ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 [VARIABLES] boolean  long  serialVersionUID  int  day  days  leaps  mm  month  nonleapdays  overestimatedYYYY  serial  ss1  ss2  sss  underestimatedYYYY  year  SerialDate  d1  d2  
[P1_Replace_Type]^final  long  s1 = d1.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int s1 = d2.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P7_Replace_Invocation]^final int s1 = d1.isLeapYear (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int ss2 = calcSerial ( 1, 1, this.year ) ;final int s1 = d1.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s2 = d2.toSerial (  ) ;final int s1 = d1.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int end = Math.max ( s1, s2 ) ;final int s1 = d1.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int start = Math.min ( s1, s2 ) ;final int s1 = d1.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s = toSerial (  ) ;final int s1 = d1.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P7_Replace_Invocation]^final int s1 = d1 .SerialDate (  )  ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P14_Delete_Statement]^^419^420^^^^417^437^final int s1 = d1.toSerial (  ) ; final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^return toSerial (  ) ;final int s1 = d1.toSerial (  ) ;^419^^^^^417^437^final int s1 = d1.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P1_Replace_Type]^final  short  s2 = d2.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int s2 = d1.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P7_Replace_Invocation]^final int s2 = d2.isLeapYear (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s1 = d1.toSerial (  ) ;final int s2 = d2.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int ss2 = calcSerial ( 1, 1, this.year ) ;final int s2 = d2.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int end = Math.max ( s1, s2 ) ;final int s2 = d2.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int start = Math.min ( s1, s2 ) ;final int s2 = d2.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s = toSerial (  ) ;final int s2 = d2.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P14_Delete_Statement]^^420^421^^^^417^437^final int s2 = d2.toSerial (  ) ; final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^return toSerial (  ) ;final int s2 = d2.toSerial (  ) ;^420^^^^^417^437^final int s2 = d2.toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P1_Replace_Type]^final  long  start = Math.min ( s1, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int start = Math.min ( s2, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int start = Math.min ( s1, ss2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int start = Math.min (  s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int start = Math.min ( s1 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int start = Math.min ( s2, s1 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P7_Replace_Invocation]^final int start = Math.max ( s1, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s1 = d1.toSerial (  ) ;final int start = Math.min ( s1, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int ss2 = calcSerial ( 1, 1, this.year ) ;final int start = Math.min ( s1, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s2 = d2.toSerial (  ) ;final int start = Math.min ( s1, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int end = Math.max ( s1, s2 ) ;final int start = Math.min ( s1, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s = toSerial (  ) ;final int start = Math.min ( s1, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int start = Math.min ( ss2, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int start = Math.min ( s1, serial ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^final int start = Math.min ( s, s2 ) ;^421^^^^^417^437^final int start = Math.min ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P14_Delete_Statement]^^421^422^^^^417^437^final int start = Math.min ( s1, s2 ) ; final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P1_Replace_Type]^final  long  end = Math.max ( s1, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int end = Math.max ( serial, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int end = Math.max ( s1, s1 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int end = Math.max (  s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int end = Math.max ( s1 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int end = Math.max ( s2, s1 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P7_Replace_Invocation]^final int end = Math.min ( s1, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P7_Replace_Invocation]^final int end = Math .min ( s , nonleapdays )  ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s1 = d1.toSerial (  ) ;final int end = Math.max ( s1, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int ss2 = calcSerial ( 1, 1, this.year ) ;final int end = Math.max ( s1, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s2 = d2.toSerial (  ) ;final int end = Math.max ( s1, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int start = Math.min ( s1, s2 ) ;final int end = Math.max ( s1, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s = toSerial (  ) ;final int end = Math.max ( s1, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int end = Math.max ( ss1, s2 ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^final int end = Math.max ( s1, s ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P7_Replace_Invocation]^final int end = Math .min ( ss1 , days )  ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^final int end = Math.min ( s1, year ) ;^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P14_Delete_Statement]^^422^^^^^417^437^final int end = Math.max ( s1, s2 ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P1_Replace_Type]^final  short  s = toSerial (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P7_Replace_Invocation]^final int s = getYYYY (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s1 = d1.toSerial (  ) ;final int s = toSerial (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int ss2 = calcSerial ( 1, 1, this.year ) ;final int s = toSerial (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int s2 = d2.toSerial (  ) ;final int s = toSerial (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int end = Math.max ( s1, s2 ) ;final int s = toSerial (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final SerialDate s =  ( SerialDate )  object;final int s = toSerial (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^final int start = Math.min ( s1, s2 ) ;final int s = toSerial (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P14_Delete_Statement]^^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P11_Insert_Donor_Statement]^return toSerial (  ) ;final int s = toSerial (  ) ;^424^^^^^417^437^final int s = toSerial (  ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^if  ( include != SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^if  ( include >= SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^if  ( ss1 == SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( s >= start && s <= end )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( s >= start )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( s <= end )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( include == SerialDate.INCLUDE_FIRST )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( s >= start && s < end )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( s < end )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( include == SerialDate.INCLUDE_SECOND )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( s > start && s <= end )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( s > start )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^if  ( s > start && s < end )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^if  ( serial == SerialDate.INCLUDE_BOTH )  {^425^^^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P15_Unwrap_Block]^return (s >= start) && (s <= end);^425^426^427^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  { return  ( s >= start && s <= end ) ; }^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P16_Remove_Block]^^425^426^427^^^417^437^if  ( include == SerialDate.INCLUDE_BOTH )  { return  ( s >= start && s <= end ) ; }^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P13_Insert_Block]^if  ( include ==  ( SerialDate.INCLUDE_FIRST )  )  {     return  ( s >= start )  &&  ( s < end ) ; }else     if  ( include ==  ( SerialDate.INCLUDE_SECOND )  )  {         return  ( s > start )  &&  ( s <= end ) ;     }else {         return  ( s > start )  &&  ( s < end ) ;     }^425^^^^^417^437^[Delete]^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^else if  ( include <= SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^else if  ( include > SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^else if  ( serial == SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s >= start && s < end )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s >= start )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s < end )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( include == SerialDate.INCLUDE_SECOND )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s > start && s <= end )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s > start )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s <= end )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s > start && s < end )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^if  ( serial == SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P15_Unwrap_Block]^return (s >= start) && (s < end);^428^429^430^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  { return  ( s >= start && s < end ) ; }^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P16_Remove_Block]^^428^429^430^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  { return  ( s >= start && s < end ) ; }^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^else if  ( include <= SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^else if  ( year == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^else if  ( include == this )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s > start && s <= end )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s > start )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s <= end )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s > start && s < end )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P6_Replace_Expression]^else if  ( s < end )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^else if  ( ss2 == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P9_Replace_Statement]^else if  ( include == SerialDate.INCLUDE_FIRST )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P15_Unwrap_Block]^return (s > start) && (s <= end);^431^432^433^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  { return  ( s > start && s <= end ) ; }^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P16_Remove_Block]^^431^432^433^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  { return  ( s > start && s <= end ) ; }^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s > start || s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s >= start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s > start && s <= end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s1 > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > serial && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > start && s < ss1 ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( end > start && s < s ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( start > s && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return  ( s > start || s ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s > start || s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s >= start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s > start && s < end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s2 > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > s2 && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > start && s <= s1 ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( end > start && s <= s ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > end && s <= start ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return  ( s ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s < start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( year > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > ss2 && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > start && s <= s2 ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( start > s && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return   s ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s > start && s == end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > s2 && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > start && s < year ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > end && s < start ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return  ( serial ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s >= start || s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s > start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s >= start && s <= end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( sss >= start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= s1 && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= start && s < s2 ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( start >= s && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= end && s < start ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( end >= start && s < s ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return false ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^else if  ( include >= SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^else if  ( serial == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^else if  ( s2 == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s < start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( ss2 > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > year && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > start && s < ss2 ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return true ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s == start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( ss2 > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > s1 && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > start && s <= serial ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s == start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s1 >= start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= s2 && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= start && s < sss ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return true ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s1 > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > underestimatedYYYY && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s == start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( ss1 > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > ss1 && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > start && s < serial ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return  ( s ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s >= start || s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s > start && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s >= start && s < end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( serial >= start && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= serial && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= start && s <= ss2 ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( start >= s && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= end && s <= start ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return false ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^else if  ( include >= SerialDate.INCLUDE_FIRST )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^else if  ( include == 4 )  {^428^^^^^417^437^else if  ( include == SerialDate.INCLUDE_FIRST )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( year > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > s1 && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > start && s < start ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return false ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( ss1 > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > serial && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return false ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( serial > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > ss2 && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( year >= start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= year && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= start && s < s1 ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^else if  ( SerialDate.INCLUDE_SECOND == include )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^if  ( include == SerialDate.INCLUDE_SECOND )  {^431^^^^^417^437^else if  ( include == SerialDate.INCLUDE_SECOND )  {^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s2 > start && s < end ) ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return   s ;^435^^^^^417^437^return  ( s > start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P2_Replace_Operator]^return  ( s >= start && s == end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s2 >= start && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= ss2 && s <= end ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( end >= start && s <= s ) ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P8_Replace_Mix]^return  ( s ;^426^^^^^417^437^return  ( s >= start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s2 >= start && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= ss2 && s < end ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s >= start && s < ss2 ) ;^429^^^^^417^437^return  ( s >= start && s < end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( serial > start && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P5_Replace_Variable]^return  ( s > sss && s <= end ) ;^432^^^^^417^437^return  ( s > start && s <= end ) ;^[CLASS] SpreadsheetDate  [METHOD] isInRange [RETURN_TYPE] boolean   SerialDate d1 SerialDate d2 final int include [VARIABLES] boolean  long  serialVersionUID  int  day  days  end  include  leaps  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  year  SerialDate  d1  d2  
[P1_Replace_Type]^final  long  yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P2_Replace_Operator]^final int yy =  <<  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P2_Replace_Operator]^final + int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P2_Replace_Operator]^final int yy =  (  ( y  >=  1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P2_Replace_Operator]^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y  <  1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P3_Replace_Literal]^final int yy =  (  ( y - s1 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P3_Replace_Literal]^final int yy =  (  ( y - 1900 )  * yy )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P3_Replace_Literal]^final int yy =  (  ( y - 900 )  * 365 )  + SerialDate.leapYearCount ( y -  ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^final int sy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^final int ss2y =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P2_Replace_Operator]^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y  &&  1 ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P3_Replace_Literal]^final int yy =  (  ( y - include900 )  * 365 )  + SerialDate.leapYearCount ( y - include ) ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P7_Replace_Invocation]^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate .isLeapYear ( end )  ;^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P14_Delete_Statement]^^451^^^^^450^460^final int yy =  (  ( y - 1900 )  * 365 )  + SerialDate.leapYearCount ( y - 1 ) ;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P1_Replace_Type]^long  mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^452^^^^^450^460^int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^int ss2m = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^452^^^^^450^460^int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^int SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTHm = m[m];^452^^^^^450^460^int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^int ss1m = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^452^^^^^450^460^int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P11_Insert_Donor_Statement]^int[] daysToEndOfPrecedingMonth = AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^452^^^^^450^460^int mm = SerialDate.AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH[m];^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P2_Replace_Operator]^if  ( m >= MonthConstants.FEBRUARY )  {^453^^^^^450^460^if  ( m > MonthConstants.FEBRUARY )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^if  ( ss1 > MonthConstants.FEBRUARY )  {^453^^^^^450^460^if  ( m > MonthConstants.FEBRUARY )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^if  ( MonthConstants.FEBRUARY > m )  {^453^^^^^450^460^if  ( m > MonthConstants.FEBRUARY )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P6_Replace_Expression]^if  ( mm + 1 )  {^453^^^^^450^460^if  ( m > MonthConstants.FEBRUARY )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^if  ( underestimatedYYYY > MonthConstants.FEBRUARY )  {^453^^^^^450^460^if  ( m > MonthConstants.FEBRUARY )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P15_Unwrap_Block]^if (org.jfree.data.time.SerialDate.isLeapYear(y)) {    mm = mm + 1;};^453^454^455^456^^450^460^if  ( m > MonthConstants.FEBRUARY )  { if  ( SerialDate.isLeapYear ( y )  )  { mm = mm + 1; }^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P16_Remove_Block]^^453^454^455^456^^450^460^if  ( m > MonthConstants.FEBRUARY )  { if  ( SerialDate.isLeapYear ( y )  )  { mm = mm + 1; }^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P13_Insert_Block]^if  ( isLeapYear ( y )  )  {     mm = mm + 1; }^453^^^^^450^460^[Delete]^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^if  ( SerialDate.isLeapYear ( serial )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P7_Replace_Invocation]^if  ( SerialDate.leapYearCount ( y )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^if  ( SerialDate.leapYearCount ( s2 )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P15_Unwrap_Block]^mm = mm + 1;^454^455^456^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  { mm = mm + 1; }^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P16_Remove_Block]^^454^455^456^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  { mm = mm + 1; }^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P13_Insert_Block]^if  ( m >  ( MonthConstants.FEBRUARY )  )  {     if  ( isLeapYear ( y )  )  {         mm = mm + 1;     } }^454^^^^^450^460^[Delete]^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P3_Replace_Literal]^mm = mm ;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^mm = sss + 1;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^mm = mm + 2;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P3_Replace_Literal]^mm = mm + ;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^mm = s2 + 1;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^mm = mm + 0;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^if  ( SerialDate.isLeapYear ( s1 )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P13_Insert_Block]^if  ( isLeapYear ( y )  )  {     mm = mm + 1; }^454^^^^^450^460^[Delete]^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^if  ( SerialDate.isLeapYear ( ss1 )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^if  ( SerialDate.isLeapYear ( sss )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P3_Replace_Literal]^mm = mm + start;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^mm = ss1 + 1;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^mm = mm + 1L;^455^^^^^450^460^mm = mm + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^if  ( SerialDate.isLeapYear ( s2 )  )  {^454^^^^^450^460^if  ( SerialDate.isLeapYear ( y )  )  {^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P1_Replace_Type]^final  short  dd = d;^458^^^^^450^460^final int dd = d;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^final int startd = d;^458^^^^^450^460^final int dd = d;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^final int s2d = d;^458^^^^^450^460^final int dd = d;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P2_Replace_Operator]^return yy  >>  mm  >>  dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P2_Replace_Operator]^return yy   instanceof   mm + dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P3_Replace_Literal]^return yy + mm + dd + end;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^return s2 + mm + dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^return yy + y + dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^return yy + mm + serial + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^return dd + mm + yy + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P5_Replace_Variable]^return mm + yy + dd + 1;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
[P8_Replace_Mix]^return yy + serial + dd +ss1L;^459^^^^^450^460^return yy + mm + dd + 1;^[CLASS] SpreadsheetDate  [METHOD] calcSerial [RETURN_TYPE] int   final int d final int m final int y [VARIABLES] long  serialVersionUID  int  d  day  days  dd  end  include  leaps  m  mm  month  nonleapdays  overestimatedYYYY  s  s1  s2  serial  ss1  ss2  sss  start  underestimatedYYYY  y  year  yy  boolean  
