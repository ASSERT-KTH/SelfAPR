[P3_Replace_Literal]^return calculateMean ( values, false ) ;^73^^^^^72^74^return calculateMean ( values, true ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values [VARIABLES] Number[]  values  boolean  
[P14_Delete_Statement]^^73^^^^^72^74^return calculateMean ( values, true ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values [VARIABLES] Number[]  values  boolean  
[P2_Replace_Operator]^if  ( values != null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P8_Replace_Mix]^if  ( values == this )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( object == null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( values[i] != null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data2 == null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( yData == null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data1 == null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data == null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( xData == null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^92^^^^^89^114^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'values' argument.");^92^93^94^^^89^114^if  ( values == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P16_Remove_Block]^^92^93^94^^^89^114^if  ( values == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^93^^^^^89^114^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^93^^^^^89^114^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^93^^^^^89^114^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^93^^^^^89^114^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^93^^^^^89^114^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^93^^^^^89^114^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^93^^^^^89^114^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P1_Replace_Type]^int sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double current;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double total = 0.0;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double x = 0.0;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double y = 0.0;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double result = Double.NaN;double sum = 0.0;^95^^^^^89^114^double sum = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P1_Replace_Type]^int current;^96^^^^^89^114^double current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double x = 0.0;double current;^96^^^^^89^114^double current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double sum = 0.0;double current;^96^^^^^89^114^double current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double y = 0.0;double current;^96^^^^^89^114^double current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P1_Replace_Type]^short  counter = 0;^97^^^^^89^114^int counter = 0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P3_Replace_Literal]^int counter = -1;^97^^^^^89^114^int counter = 0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^int count = 0;int counter = 0;^97^^^^^89^114^int counter = 0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^int counter;int counter = 0;^97^^^^^89^114^int counter = 0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P2_Replace_Operator]^if  ( values[i] == null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P8_Replace_Mix]^if  ( values[i] != false )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( values == null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( object == null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data2 == null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( values != null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data1 == null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data == null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^100^^^^^89^114^if  ( values[i] != null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P15_Unwrap_Block]^current = values[i].doubleValue();^100^101^102^^^89^114^if  ( values[i] != null )  { current = values[i].doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P16_Remove_Block]^^100^101^102^^^89^114^if  ( values[i] != null )  { current = values[i].doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P8_Replace_Mix]^current  =  current ;^104^^^^^89^114^current = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P8_Replace_Mix]^current =  null[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^result = value.doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P14_Delete_Statement]^^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double diff = data[counter].doubleValue (  )  - avg;current = values[i].doubleValue (  ) ;^101^^^^^89^114^current = values[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P2_Replace_Operator]^if  ( includeNullAndNaN && !Double.isNaN ( current )  )  {^107^^^^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^if  ( includeNullAndNaN || !Double.isNaN ( result )  )  {^107^^^^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^if  ( current || !Double.isNaN ( includeNullAndNaN )  )  {^107^^^^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P6_Replace_Expression]^if  ( includeNullAndNaN ) {^107^^^^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P6_Replace_Expression]^if  (  !Double.isNaN ( current )  )  {^107^^^^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P6_Replace_Expression]^if  ( sum + current )  {^107^^^^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P15_Unwrap_Block]^sum = sum + current; counter++;^107^108^109^110^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  { sum = sum + current; counter++; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P16_Remove_Block]^^107^108^109^110^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  { sum = sum + current; counter++; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^sum = result + current;^108^^^^^89^114^sum = sum + current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^sum = sum + result;^108^^^^^89^114^sum = sum + current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^sum = current + sum;^108^^^^^89^114^sum = sum + current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^sumY = sumY + y;sum = sum + current;^108^^^^^89^114^sum = sum + current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^sum = sum + diff * diff;sum = sum + current;^108^^^^^89^114^sum = sum + current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^sumX = sumX + x;sum = sum + current;^108^^^^^89^114^sum = sum + current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^sum = sum / period;sum = sum + current;^108^^^^^89^114^sum = sum + current;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P1_Replace_Type]^for  (  short  i = 0; i < values.length; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= values.length; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < values.length; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P3_Replace_Literal]^for  ( int i = 7; i < values.length; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^for  ( counternt i = 0; i < values.length; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^for  ( int i = 0; i < counter; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^for  ( valuesnt i = 0; i < i.length; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^if  ( includeNullAndNaN || !Double.isNaN ( sum )  )  {^107^^^^^89^114^if  ( includeNullAndNaN || !Double.isNaN ( current )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P8_Replace_Mix]^current ;^104^^^^^89^114^current = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P1_Replace_Type]^for  (  long  i = 0; i < values.length; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P3_Replace_Literal]^for  ( int i = 4; i < values.length; i++ )  {^98^^^^^89^114^for  ( int i = 0; i < values.length; i++ )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P1_Replace_Type]^int result =  ( sum / counter ) ;^112^^^^^89^114^double result =  ( sum / counter ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P2_Replace_Operator]^double result =  ( sum + counter ) ;^112^^^^^89^114^double result =  ( sum / counter ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^double result =  ( current / counter ) ;^112^^^^^89^114^double result =  ( sum / counter ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^double result =  ( sum / i ) ;^112^^^^^89^114^double result =  ( sum / counter ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^double result =  ( counter / sum ) ;^112^^^^^89^114^double result =  ( sum / counter ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double[] result = new double[2];double result =  ( sum / counter ) ;^112^^^^^89^114^double result =  ( sum / counter ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P11_Insert_Donor_Statement]^double result = Double.NaN;double result =  ( sum / counter ) ;^112^^^^^89^114^double result =  ( sum / counter ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P5_Replace_Variable]^return sum;^113^^^^^89^114^return result;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Number[] values boolean includeNullAndNaN [VARIABLES] Number[]  values  boolean  includeNullAndNaN  double  current  result  sum  int  counter  i  
[P3_Replace_Literal]^return calculateMean ( values, false ) ;^124^^^^^123^125^return calculateMean ( values, true ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values [VARIABLES] boolean  Collection  values  
[P7_Replace_Invocation]^return calculateMedian ( values, true ) ;^124^^^^^123^125^return calculateMean ( values, true ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values [VARIABLES] boolean  Collection  values  
[P14_Delete_Statement]^^124^^^^^123^125^return calculateMean ( values, true ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values [VARIABLES] boolean  Collection  values  
[P2_Replace_Operator]^if  ( values != null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^if  ( values == this )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( object == null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( values[i] != null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data2 == null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( yData == null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data1 == null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data == null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( xData == null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^143^^^^^128^158^if  ( values == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'values' argument.");^143^144^145^^^128^158^if  ( values == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P16_Remove_Block]^^143^144^145^^^128^158^if  ( values == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^144^^^^^129^159^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^144^^^^^129^159^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^144^^^^^129^159^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^144^^^^^129^159^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^144^^^^^129^159^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^144^^^^^129^159^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^144^^^^^129^159^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; ;^144^^^^^129^159^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P1_Replace_Type]^short  count = 0;^146^^^^^131^161^int count = 0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^int count = 8;^146^^^^^131^161^int count = 0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^int counter = 0;int count = 0;^146^^^^^131^161^int count = 0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^int counter;int count = 0;^146^^^^^131^161^int count = 0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P1_Replace_Type]^int total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double x = 0.0;double total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double sum = 0.0;double total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double y = 0.0;double total = 0.0;^147^^^^^132^162^double total = 0.0;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^int count = values.size (  ) ;Iterator iterator = values.iterator (  ) ;^148^^^^^133^163^Iterator iterator = values.iterator (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^int itemCount = values.size (  ) ;Iterator iterator = values.iterator (  ) ;^148^^^^^133^163^Iterator iterator = values.iterator (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^148^^^^^133^163^Iterator iterator = values.iterator (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^if  ( object != null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( object instanceof Number )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( total + number.doubleValue() )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( count + 1 )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^if  ( object == true )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( values == null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( values[i] != null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data2 == null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( values != null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( yData == null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data1 == null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data == null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( xData == null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P15_Unwrap_Block]^if (includeNullAndNaN) {    return java.lang.Double.NaN;};^151^152^153^154^^136^166^if  ( object == null )  { if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P16_Remove_Block]^^151^152^153^154^^136^166^if  ( object == null )  { if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^if  ( object  <<  Number )  {^157^^^^^151^170^if  ( object instanceof Number )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( total + number.doubleValue() )  {^157^^^^^151^170^if  ( object instanceof Number )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( count + 1 )  {^157^^^^^151^170^if  ( object instanceof Number )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^if  ( Double.isvalue ( value )  )  {^160^^^^^151^170^if  ( Double.isNaN ( value )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( count + 1 )  {^160^^^^^151^170^if  ( Double.isNaN ( value )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P15_Unwrap_Block]^if (includeNullAndNaN) {    return java.lang.Double.NaN;};^160^161^162^163^^151^170^if  ( Double.isNaN ( value )  )  { if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P16_Remove_Block]^^160^161^162^163^^151^170^if  ( Double.isNaN ( value )  )  { if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P13_Insert_Block]^if  ( object instanceof Number )  {     Number number =  (  ( Number )   ( object )  ) ;     double value = number.doubleValue (  ) ;     if  ( isNaN ( value )  )  {         if  ( includeNullAndNaN )  {             return NaN;         }     }else {         total = total +  ( number.doubleValue (  )  ) ;         count = count + 1;     } }^160^^^^^151^170^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  &  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^total = value + number.doubleValue (  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^total = number + total.doubleValue (  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^count = count ;^167^^^^^151^170^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 0;^167^^^^^151^170^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^166^167^^^^151^170^total = total + number.doubleValue (  ) ; count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^if  ( includeNullAndvalue )  {^161^^^^^151^170^if  ( includeNullAndNaN )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P15_Unwrap_Block]^return java.lang.Double.NaN;^161^162^163^^^151^170^if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P16_Remove_Block]^^161^162^163^^^151^170^if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (   instanceof   ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^count = count + count;^167^^^^^151^170^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 4;^167^^^^^151^170^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number number =  ( Number )  object;^158^^^^^151^170^Number number =  ( Number )  object;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number number =  ( Number )  object;^158^^^^^151^170^Number number =  ( Number )  object;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number number =  ( Number )  object;^158^^^^^151^170^Number number =  ( Number )  object;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P1_Replace_Type]^int value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double diff = data[counter].doubleValue (  )  - avg;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^result = value.doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^if  ( Double.isNaN ( total )  )  {^160^^^^^151^170^if  ( Double.isNaN ( value )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  <  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 3;^167^^^^^151^170^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  ==  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^if  ( includeNullAndvalue )  {^152^^^^^137^167^if  ( includeNullAndNaN )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P15_Unwrap_Block]^return java.lang.Double.NaN;^152^153^154^^^137^167^if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P16_Remove_Block]^^152^153^154^^^137^167^if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^if  ( object  &  Number )  {^157^^^^^142^172^if  ( object instanceof Number )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( total + number.doubleValue() )  {^157^^^^^142^172^if  ( object instanceof Number )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( count + 1 )  {^157^^^^^142^172^if  ( object instanceof Number )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P6_Replace_Expression]^if  ( count + 1 )  {^160^^^^^145^175^if  ( Double.isNaN ( value )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P15_Unwrap_Block]^if (includeNullAndNaN) {    return java.lang.Double.NaN;};^160^161^162^163^^145^175^if  ( Double.isNaN ( value )  )  { if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P16_Remove_Block]^^160^161^162^163^^145^175^if  ( Double.isNaN ( value )  )  { if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P13_Insert_Block]^if  ( object instanceof Number )  {     Number number =  (  ( Number )   ( object )  ) ;     double value = number.doubleValue (  ) ;     if  ( isNaN ( value )  )  {         if  ( includeNullAndNaN )  {             return NaN;         }     }else {         total = total +  ( number.doubleValue (  )  ) ;         count = count + 1;     } }^160^^^^^145^175^[Delete]^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  &  ) ;^166^^^^^160^168^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^total = value + number.doubleValue (  ) ;^166^^^^^160^168^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^total = number + total.doubleValue (  ) ;^166^^^^^160^168^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^count = count + count;^167^^^^^160^168^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 1 % 3;^167^^^^^160^168^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^166^^^^^160^168^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^if  ( includeNullAndvalue )  {^161^^^^^146^176^if  ( includeNullAndNaN )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P15_Unwrap_Block]^return java.lang.Double.NaN;^161^162^163^^^146^176^if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P16_Remove_Block]^^161^162^163^^^146^176^if  ( includeNullAndNaN )  { return Double.NaN; }^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  <<  ) ;^166^^^^^151^181^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^total = value + number.doubleValue (  ) ;^166^^^^^151^181^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^total = number + total.doubleValue (  ) ;^166^^^^^151^181^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^count = count ;^167^^^^^152^182^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 1L;^167^^^^^152^182^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number number =  ( Number )  object;^158^^^^^143^173^Number number =  ( Number )  object;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number number =  ( Number )  object;^158^^^^^143^173^Number number =  ( Number )  object;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number number =  ( Number )  object;^158^^^^^143^173^Number number =  ( Number )  object;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P1_Replace_Type]^int value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^double diff = data[counter].doubleValue (  )  - avg;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^result = value.doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;double value = number.doubleValue (  ) ;^159^^^^^144^174^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^if  ( Double.isNaN ( total )  )  {^160^^^^^145^175^if  ( Double.isNaN ( value )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^166^167^^^^151^181^total = total + number.doubleValue (  ) ; count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^if  ( Double.isvalue ( value )  )  {^160^^^^^145^175^if  ( Double.isNaN ( value )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  |  ) ;^166^^^^^160^168^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 2;^167^^^^^160^168^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  !=  ) ;^166^^^^^151^181^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 0;^167^^^^^152^182^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^150^^^^^135^165^Object object = iterator.next (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^166^^^^^151^181^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^if  ( object == false )  {^151^^^^^136^166^if  ( object == null )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^if  ( object  ||  Number )  {^157^^^^^151^170^if  ( object instanceof Number )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  <=  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^total =  null + number.doubleValue (  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 1L;^167^^^^^151^170^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 2;^167^^^^^151^170^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P1_Replace_Type]^float value = number.doubleValue (  ) ;^159^^^^^151^170^double value = number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  |  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  >  ) ;^166^^^^^151^170^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 1 / 1;^167^^^^^151^170^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^if  ( object  >>  Number )  {^157^^^^^142^172^if  ( object instanceof Number )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^count = count + ;^167^^^^^160^168^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 1 / 0;^167^^^^^160^168^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  &&  ) ;^166^^^^^151^181^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^count = count + 1 >>> 3;^167^^^^^152^182^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  <=  ) ;^166^^^^^160^168^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^count = count ;^167^^^^^160^168^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^166^167^^^^160^168^total = total + number.doubleValue (  ) ; count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^total = total + number.doubleValue (  ==  ) ;^166^^^^^151^181^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^total =  null + number.doubleValue (  ) ;^166^^^^^151^181^total = total + number.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^count = count + count;^167^^^^^152^182^count = count + 1;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P7_Replace_Invocation]^Object object = iterator .hasNext (  )  ;^150^^^^^135^165^Object object = iterator.next (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^while  ( iterator .next (  )   )  {^149^^^^^134^164^while  ( iterator.hasNext (  )  )  {^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P14_Delete_Statement]^^149^150^^^^134^164^while  ( iterator.hasNext (  )  )  { Object object = iterator.next (  ) ;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P2_Replace_Operator]^return total * count;^172^^^^^157^187^return total / count;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^return value / count;^172^^^^^157^187^return total / count;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P5_Replace_Variable]^return count / total;^172^^^^^157^187^return total / count;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P8_Replace_Mix]^returnvalue  ;^172^^^^^157^187^return total / count;^[CLASS] Statistics  [METHOD] calculateMean [RETURN_TYPE] double   Collection values boolean includeNullAndNaN [VARIABLES] boolean  includeNullAndNaN  Number  number  double  total  value  Iterator  iterator  Collection  values  Object  object  int  count  
[P3_Replace_Literal]^return calculateMedian ( values, false ) ;^187^^^^^186^188^return calculateMedian ( values, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values [VARIABLES] boolean  List  values  
[P7_Replace_Invocation]^return calculateMean ( values, true ) ;^187^^^^^186^188^return calculateMedian ( values, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values [VARIABLES] boolean  List  values  
[P14_Delete_Statement]^^187^^^^^186^188^return calculateMedian ( values, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values [VARIABLES] boolean  List  values  
[P1_Replace_Type]^float result = Double.NaN;^203^^^^^188^218^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double result = Double.NaN;^203^^^^^188^218^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double sum = 0.0;double result = Double.NaN;^203^^^^^188^218^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double result = Double.NaN;^203^^^^^188^218^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double[] result = new double[2];double result = Double.NaN;^203^^^^^188^218^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double result =  ( sum / counter ) ;double result = Double.NaN;^203^^^^^188^218^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^if  ( values == null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^if  ( copy != null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^if  ( value2s != null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( i < itemCount )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count > 0 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count % 2 == 1 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count % 2 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count > 1 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count - 1 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count / 2 - 1 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count / 2 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( value1.doubleValue() + value2.doubleValue() / 2.0 )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( value1.doubleValue (  )  + value2.doubleValue (  ) )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( copy != this )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( object == null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( values[i] != null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( data2 == null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( yData == null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( data1 == null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( data == null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( xData == null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^204^^^^^189^219^if  ( values != null )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^if  ( valuesAndSort )  {^205^^^^^190^220^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^if  ( copy )  {^205^^^^^190^220^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P15_Unwrap_Block]^int itemCount = values.size(); java.util.List copy = new java.util.ArrayList(itemCount); for (int i = 0; i < itemCount; i++) {    copy.add(i, values.get(i));}; java.util.Collections.sort(copy); values = copy;^205^206^207^208^209^190^220^if  ( copyAndSort )  { int itemCount = values.size (  ) ; List copy = new ArrayList ( itemCount ) ; for  ( int i = 0; i < itemCount; i++ )  { copy.add ( i, values.get ( i )  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P16_Remove_Block]^^205^206^207^208^209^190^220^if  ( copyAndSort )  { int itemCount = values.size (  ) ; List copy = new ArrayList ( itemCount ) ; for  ( int i = 0; i < itemCount; i++ )  { copy.add ( i, values.get ( i )  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^for  (  short  i = 0; i < itemCount; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^for  ( int i = 0; i <= itemCount; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^for  ( int i = count; i < itemCount; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^for  ( itemCountnt i = 0; i < itemCount; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^for  ( int i = 0; i < count; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^for  ( itemCountnt i = 0; i < i; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^copy.add ( itemCount, values.get ( i )  ) ;^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^copy.add (  values.get ( i )  ) ;^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^copy.add ( i.get ( i )  ) ;^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P7_Replace_Invocation]^copy.add ( i, values.add ( i )  ) ;^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^working.add ( values.get ( i )  ) ;copy.add ( i, values.get ( i )  ) ;^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^copy.add ( i, copy.get ( i )  ) ;^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^copy.add ( values, i.get ( i )  ) ;^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^copy.add ( itemCount, values.add ( i )  ) ;^209^^^^^194^224^copy.add ( i, values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^values = values;^212^^^^^197^227^values = copy;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^values =  null;^212^^^^^197^227^values = copy;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^List copy = new  Set  ( itemCount ) ;^207^^^^^192^222^List copy = new ArrayList ( itemCount ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^List copy = new ArrayList ( i ) ;^207^^^^^192^222^List copy = new ArrayList ( itemCount ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^short  itemCount = values.size (  ) ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int itemCount = values.size() - 3 ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P7_Replace_Invocation]^int itemCount = values.add (  ) ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^int itemCount = copy.size (  ) ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^int count = values.size (  ) ;int itemCount = values.size (  ) ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Iterator iterator = values.iterator (  ) ;int itemCount = values.size (  ) ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^Set  copy = new Array Set  ( itemCount ) ;^207^^^^^192^222^List copy = new ArrayList ( itemCount ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^List working = new ArrayList ( end - start + 1 ) ;List copy = new ArrayList ( itemCount ) ;^207^^^^^192^222^List copy = new ArrayList ( itemCount ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^for  ( int i = -3; i < itemCount; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int itemCount = values.size() - 0 ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^int itemCount = copy.add (  ) ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Collections.sort ( values ) ;^211^^^^^196^226^Collections.sort ( copy ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^211^^^^^196^226^Collections.sort ( copy ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Collections.sort ( working ) ;Collections.sort ( copy ) ;^211^^^^^196^226^Collections.sort ( copy ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^if  ( count >= 0 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > itemCount )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > 7 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^if  ( itemCount > 0 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count % 2 == 1 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count % 2 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count > 1 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count - 1 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count / 2 - 1 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count / 2 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( value1.doubleValue() + value2.doubleValue() / 2.0 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( value1.doubleValue (  )  + value2.doubleValue (  ) )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( count > 4 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P15_Unwrap_Block]^if ((count % 2) == 1) {    if (count > 1) {        java.lang.Number value = ((java.lang.Number) (values.get(((count - 1) / 2))));        result = value.doubleValue();    }else {        java.lang.Number value = ((java.lang.Number) (values.get(0)));        result = value.doubleValue();    }}else {    java.lang.Number value1 = ((java.lang.Number) (values.get(((count / 2) - 1))));    java.lang.Number value2 = ((java.lang.Number) (values.get((count / 2))));    result = ((value1.doubleValue()) + (value2.doubleValue())) / 2.0;};^215^216^217^218^219^200^230^if  ( count > 0 )  { if  ( count % 2 == 1 )  { if  ( count > 1 )  { Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P16_Remove_Block]^^215^216^217^218^219^200^230^if  ( count > 0 )  { if  ( count % 2 == 1 )  { if  ( count > 1 )  { Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^if  ( count % 2 > 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^if  ( count  >  2 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % -4 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == 3 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == -7 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == count )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 9 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % -2 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % count == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^if  ( itemCount % 2 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count % 2 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count > 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count - 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count / 2 - 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count / 2 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( value1.doubleValue() + value2.doubleValue() / 2.0 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( value1.doubleValue (  )  + value2.doubleValue (  ) )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( count % 2 % 3 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( count > 0 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P15_Unwrap_Block]^if (count > 1) {    java.lang.Number value = ((java.lang.Number) (values.get(((count - 1) / 2))));    result = value.doubleValue();}else {    java.lang.Number value = ((java.lang.Number) (values.get(0)));    result = value.doubleValue();};^216^217^218^219^220^201^231^if  ( count % 2 == 1 )  { if  ( count > 1 )  { Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P16_Remove_Block]^^216^217^218^219^220^201^231^if  ( count % 2 == 1 )  { if  ( count > 1 )  { Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) + 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   ||  value2.doubleValue (  )  ) / 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 6.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value1.doubleValue (  )  + value.doubleValue (  )  ) / 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value2.doubleValue (  )  + value1.doubleValue (  )  ) / 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0D;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  ||  1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count * 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / 4 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valuecount =  ( Number )  values.get ( count / 2 - count ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value1 =  ( Number )  copy.get ( count / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value1 =  ( Number )  count.get ( values / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^Number value1 =  ( Number )  values.get ( itemCount / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( count + 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value7 =  ( Number )  values.get ( count / 7 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value2 =  ( Number )  copy.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( itemCount / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value2 =  ( Number )  count.get ( values / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number number =  ( Number )  object;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  &  1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count + 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / -1 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / 2  ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^227^228^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ; Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value4 =  ( Number )  values.get ( count / 4 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value2.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value1.doubleValue (  )  + value1.doubleValue (  )  ) / 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^if  ( count >= 1 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > itemCount )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > 6 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^if  ( itemCount > 1 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P6_Replace_Expression]^if  ( count - 1 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( count > 4 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( count % 2 == 1 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P9_Replace_Statement]^if  ( count > 0 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P15_Unwrap_Block]^java.lang.Number value = ((java.lang.Number) (values.get(((count - 1) / 2)))); result = value.doubleValue();^217^218^219^220^^202^232^if  ( count > 1 )  { Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P16_Remove_Block]^^217^218^219^220^^202^232^if  ( count > 1 )  { Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result = value2.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( -5 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value =  ( Number )  copy.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P7_Replace_Invocation]^Number value =  ( Number )  values.add ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^Number value =  ( Number )  copy.add ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number number =  ( Number )  object;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^222^223^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ; result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^217^224^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result = value2.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count - 1 )  + 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  >=  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count  )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / -5 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value =  ( Number )  copy.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value =  ( Number )  values.get (  ( itemCount - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value =  ( Number )  count.get (  ( values - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count - 1 )  - 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  !=  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / count ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;result = value.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^result =  null.doubleValue (  ) ;^219^^^^^204^234^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result = value2.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^result =  null.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count   instanceof   1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - count )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / 10 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( i ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value =  ( Number )  copy.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P7_Replace_Invocation]^Number value =  ( Number )  values.add ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^Number value =  ( Number )  copy.add ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number number =  ( Number )  object;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( 0 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count - 1 )  * 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  |  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - itemCount )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / 8 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( count ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^222^223^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ; result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;result = value.doubleValue (  ) ;^223^^^^^208^238^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > 8 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( 9 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  <<  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - i )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  <=  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count -  )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) - 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   >=  value2.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 0.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value2.doubleValue (  )  + value1.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0D;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  ||  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( -9 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  >>  1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count + 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / 3 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / 2  ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value1 =  ( Number )  copy.get ( count / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( itemCount / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value1 =  ( Number )  count.get ( values / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( count + 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value-2 =  ( Number )  values.get ( count / -2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value2 =  ( Number )  copy.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( itemCount / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^Number value2 =  ( Number )  count.get ( values / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number number =  ( Number )  object;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( count / 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / i ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( 5 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  &&  1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count - 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / i - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^227^228^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ; Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( count - 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valuei =  ( Number )  values.get ( count / i ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value2.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value1.doubleValue (  )  + value1.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^if  ( count % 2 != 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^if  ( count  &&  2 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 3 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == -8 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == -2 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == itemCount )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % i == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 6 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == i )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( itemCount % 4 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) - 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 0.4;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 4.0d;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  ^  1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count - 2 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / i - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valueitemCount =  ( Number )  values.get ( count / itemCount ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  |  1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valuei =  ( Number )  values.get ( count / 2 - i ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valuecount =  ( Number )  values.get ( count / count ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > -5 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > 5 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( itemCount > 3 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( i ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / -7 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / 3 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  &  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / -2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( count > 3 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( 7 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  >  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / itemCount ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  ==  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^for  (  long  i = 0; i < itemCount; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   ==  value2.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 10.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^result =  ( value1.doubleValue (  )  + value.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^long  itemCount = values.size (  ) ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int itemCount = values.size() - 4 ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^short  count = values.size (  ) ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int count = values.size() + 5 ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P5_Replace_Variable]^int count = copy.size (  ) ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P7_Replace_Invocation]^int count = values.add (  ) ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^Iterator iterator = values.iterator (  ) ;int count = values.size (  ) ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P11_Insert_Donor_Statement]^int itemCount = values.size (  ) ;int count = values.size (  ) ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  ^  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2   instanceof   1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / -5 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( count * 2 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valueitemCount =  ( Number )  values.get ( count / itemCount ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int itemCount = values.size() + 5 ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int count = values.size() - 4 ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^218^219^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  <<  1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count * 2 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / itemCount - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valuei =  ( Number )  values.get ( count / 2 - i ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valuecount =  ( Number )  values.get ( count / count ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^List copy = new  List  ( itemCount ) ;^207^^^^^192^222^List copy = new ArrayList ( itemCount ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int itemCount = values.size() + 1 ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > count )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( count > 2 )  {^215^^^^^200^230^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^if  ( count  ^  2 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % itemCount == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == 10 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % -1 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 10 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( itemCount % 2 >> 3 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) * 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 16.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 3.0d;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( count - 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value-5 =  ( Number )  values.get ( count / -5 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value5 =  ( Number )  values.get ( count / 5 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > i )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( 5 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( -8 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / 11 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  >>  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value =  ( Number )  values.get (  ( count  &&  1 )  / 2 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( 2 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > count )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) + 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   ||  value2.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 8.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 3.0d;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / -1 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  &  1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value10 =  ( Number )  values.get ( count / 10 ) ;^228^^^^^213^243^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( itemCount ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  >=  1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / -1 - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % -3 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 2 == -5 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % -5 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count % 7 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( count % 2 - 0 == 1 )  {^216^^^^^201^231^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   >=  value2.doubleValue (  )  ) / 2.0;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 0.25;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 1.0d;^229^230^^^^216^231^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / -4 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( count * 2 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / 1 ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  <=  1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / -6 - 1 ) ;^227^^^^^216^231^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valuei =  ( Number )  values.get ( count / i ) ;^228^^^^^216^231^Number value2 =  ( Number )  values.get ( count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count > 7 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P8_Replace_Mix]^if  ( itemCount > 4 )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( 8 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( itemCount ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( 3 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^if  ( count >  )  {^217^^^^^202^232^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( -1 ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ) ;^222^^^^^217^224^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / 6 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^for  ( int i = ; i < itemCount; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   <=  value2.doubleValue (  )  ) / 2.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 1.0;^229^230^^^^214^244^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int itemCount = values.size() - 8 ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P1_Replace_Type]^LinkedHashSet  copy = new Array LinkedHashSet  ( itemCount ) ;^207^^^^^192^222^List copy = new ArrayList ( itemCount ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^for  ( int i = 4; i < itemCount; i++ )  {^208^^^^^193^223^for  ( int i = 0; i < itemCount; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int count = values.size() - 8 ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / -3 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( count / 2  ==  1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number valueitemCount =  ( Number )  values.get ( count / 2 - itemCount ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int itemCount = values.size() - 9 ;^206^^^^^191^221^int itemCount = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P14_Delete_Statement]^^206^207^^^^191^221^int itemCount = values.size (  ) ; List copy = new ArrayList ( itemCount ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^int count = values.size() - 0 ;^214^^^^^199^229^int count = values.size (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get (  ( count - 1 )  / -4 ) ;^218^^^^^203^233^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( -8 ) ;^222^^^^^207^237^Number value =  ( Number )  values.get ( 0 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( count / count - 1 ) ;^227^^^^^212^242^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  copy  values  int  count  i  itemCount  
[P3_Replace_Literal]^return calculateMedian ( values, start, end, false ) ;^249^^^^^248^250^return calculateMedian ( values, start, end, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end [VARIABLES] boolean  List  values  int  end  start  
[P5_Replace_Variable]^return calculateMedian (  start, end, true ) ;^249^^^^^248^250^return calculateMedian ( values, start, end, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end [VARIABLES] boolean  List  values  int  end  start  
[P5_Replace_Variable]^return calculateMedian ( values,  end, true ) ;^249^^^^^248^250^return calculateMedian ( values, start, end, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end [VARIABLES] boolean  List  values  int  end  start  
[P5_Replace_Variable]^return calculateMedian ( values, start,  true ) ;^249^^^^^248^250^return calculateMedian ( values, start, end, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end [VARIABLES] boolean  List  values  int  end  start  
[P5_Replace_Variable]^return calculateMedian ( start, values, end, true ) ;^249^^^^^248^250^return calculateMedian ( values, start, end, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end [VARIABLES] boolean  List  values  int  end  start  
[P5_Replace_Variable]^return calculateMedian ( values, end, start, true ) ;^249^^^^^248^250^return calculateMedian ( values, start, end, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end [VARIABLES] boolean  List  values  int  end  start  
[P5_Replace_Variable]^return calculateMedian ( end, start, values, true ) ;^249^^^^^248^250^return calculateMedian ( values, start, end, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end [VARIABLES] boolean  List  values  int  end  start  
[P14_Delete_Statement]^^249^^^^^248^250^return calculateMedian ( values, start, end, true ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end [VARIABLES] boolean  List  values  int  end  start  
[P1_Replace_Type]^int result = Double.NaN;^268^^^^^253^283^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double result = Double.NaN;^268^^^^^253^283^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double sum = 0.0;double result = Double.NaN;^268^^^^^253^283^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double result = Double.NaN;^268^^^^^253^283^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double[] result = new double[2];double result = Double.NaN;^268^^^^^253^283^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double result =  ( sum / counter ) ;double result = Double.NaN;^268^^^^^253^283^double result = Double.NaN;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( end - start )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( i <= end )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( end - start + 1 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count > 0 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count % 2 == 1 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count % 2 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count > 1 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count - 1 )  / 2 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count / 2 )  - 1 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start + count / 2 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count / 2 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue() + value2.doubleValue() / 2.0 )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue (  )  + value2.doubleValue (  ) )  {^269^^^^^254^284^if  ( copyAndSort )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P15_Unwrap_Block]^java.util.List working = new java.util.ArrayList(((end - start) + 1)); for (int i = start; i <= end; i++) {    working.add(values.get(i));}; java.util.Collections.sort(working); result = org.jfree.data.statistics.Statistics.calculateMedian(working, false);^269^270^271^272^273^254^284^if  ( copyAndSort )  { List working = new ArrayList ( end - start + 1 ) ; for  ( int i = start; i <= end; i++ )  { working.add ( values.get ( i )  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P16_Remove_Block]^^269^270^271^272^273^254^284^if  ( copyAndSort )  { List working = new ArrayList ( end - start + 1 ) ; for  ( int i = start; i <= end; i++ )  { working.add ( values.get ( i )  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count >= 0 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > -4 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^if  ( start > 0 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count % 2 == 1 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count % 2 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count > 1 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count - 1 )  / 2 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count / 2 )  - 1 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start + count / 2 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count / 2 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue() + value2.doubleValue() / 2.0 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue (  )  + value2.doubleValue (  ) )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( start > 0 - 4 )  {^279^^^^^269^298^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count % 2 != 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count  <  2 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % -2 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == 7 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == 3 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == -5 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % -3 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 9 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == -7 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^if  ( start % 2 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count % 2 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count > 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count - 1 )  / 2 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count / 2 )  - 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start + count / 2 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count / 2 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue() + value2.doubleValue() / 2.0 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue (  )  + value2.doubleValue (  ) )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count % 3 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P9_Replace_Statement]^if  ( count > 0 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P15_Unwrap_Block]^if (count > 1) {    java.lang.Number value = ((java.lang.Number) (values.get((start + ((count - 1) / 2)))));    result = value.doubleValue();}else {    java.lang.Number value = ((java.lang.Number) (values.get(start)));    result = value.doubleValue();};^280^281^282^283^284^269^298^if  ( count % 2 == 1 )  { if  ( count > 1 )  { Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P16_Remove_Block]^^280^281^282^283^284^269^298^if  ( count % 2 == 1 )  { if  ( count > 1 )  { Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  - 2.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   <<  value2.doubleValue (  )  )  / 2.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 8.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value1.doubleValue (  )  + value.doubleValue (  )  )  / 2.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value2.doubleValue (  )  + value1.doubleValue (  )  )  / 2.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0D;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  <<  1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  &  count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count - 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 5 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start + count / 2 -  ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  working.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( i + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( start + start / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  count.get ( start + values / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( count + start / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  &  count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start + count - 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valuecount =  ( Number )  values.get ( start + count / count ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  working.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( i + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( start + start / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  count.get ( start + values / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( count + start / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  >>  1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  <  count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count + 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / count - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valuestart =  ( Number )  values.get ( start + count / 2 - start ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  start.get ( values + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^292^293^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ; Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  <=  count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start + count * 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value5 =  ( Number )  values.get ( start + count / 5 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( start + i / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( value2.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^295^^^^^280^296^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^295^^^^^280^296^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^295^^^^^280^296^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( value1.doubleValue (  )  + value1.doubleValue (  )  )  / 2.0;^295^^^^^280^296^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count == 1 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > end )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > -1 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^if  ( start > 1 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count - 1 )  / 2 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count > 1L )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P9_Replace_Statement]^if  ( count % 2 == 1 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P9_Replace_Statement]^if  ( count > 0 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P15_Unwrap_Block]^java.lang.Number value = ((java.lang.Number) (values.get((start + ((count - 1) / 2))))); result = value.doubleValue();^281^282^283^284^285^269^298^if  ( count > 1 )  { Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P16_Remove_Block]^^281^282^283^284^285^269^298^if  ( count > 1 )  { Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result = value2.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  working.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( i ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  start.get ( values ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P7_Replace_Invocation]^Number value =  ( Number )  values.add ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number number =  ( Number )  object;Number value =  ( Number )  values.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^Number value =  ( Number )  working.add ( start ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^287^288^^^^281^289^Number value =  ( Number )  values.get ( start ) ; result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result = value2.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  |   ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  * 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  ^  1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count  )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / -6 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  working.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( i +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( start +  ( start - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  count.get ( start +  ( values - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  start.get ( values +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( count +  ( start - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  ^   ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count - 1 )  * 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  >=  1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count  )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / i ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  working.get ( start +  ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  values.get ( i +  ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  start.get ( values +  ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  values.get ( count +  ( start - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^=  ( Number )  values.get ( start +  ( i - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result = value2.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start   instanceof    ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  - 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  &  1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  working.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( i ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  start.get ( values ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P7_Replace_Invocation]^Number value =  ( Number )  values.add ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number number =  ( Number )  object;Number value =  ( Number )  values.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  ==   ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count - 1 )  + 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  <=  1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / -7 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  count.get ( start +  ( values - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^287^288^^^^269^298^Number value =  ( Number )  values.get ( start ) ; result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count >= 1 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > 10 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > -6 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count > 1 % 3 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^Number value =  ( Number )  values.add ( i ) ;^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  ||   ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  >  1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - start )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / end ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^283^284^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  - 2.0;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   >=  value2.doubleValue (  )  )  / 2.0;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 12.0;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value1.doubleValue (  )  + value.doubleValue (  )  )  / 2.0;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value2.doubleValue (  )  + value1.doubleValue (  )  )  / 2.0;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 3.0d;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  !=   ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  + 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count   instanceof   1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 8 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^Number value =  ( Number )  values.add ( i ) ;^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  ||  1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  ||  count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count - 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / end - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 2  ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  working.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( i + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( start + start / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  count.get ( start + values / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( count + start / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  >>  count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start + count - 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value0 =  ( Number )  values.get ( start + count / 0 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  working.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( i + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( start + start / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  start.get ( values + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( count + start / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  &&   ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count - 1 )  - 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  <  1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - start )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  /  ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  &&  1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  >  count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count + 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count /  - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( start + i / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  start.get ( values + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  ^  count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valuei =  ( Number )  values.get ( start + count / i ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( start + i / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( value2.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^295^^^^^269^298^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^295^^^^^269^298^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^295^^^^^269^298^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( value1.doubleValue (  )  + value1.doubleValue (  )  )  / 2.0;^295^^^^^269^298^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count   instanceof   2 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % end == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == 8 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == end )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 4 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == start )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count % 2 << 2 == 1 )  {^280^^^^^269^298^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   ==  value2.doubleValue (  )  )  / 2.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 0.2222222222222222;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0d;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  !=  1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  >=  count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 2  ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  ||  count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start + count + 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value-7 =  ( Number )  values.get ( start + count / -7 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  start.get ( values + count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  &  1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count * 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / start - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( start + i / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  &&  count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value10 =  ( Number )  values.get ( start + count / 10 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > -8 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > count )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( start > 1L )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  null.doubleValue (  ) ;^288^^^^^281^289^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^287^^^^^281^289^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / count ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  <   ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count   instanceof   1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count -  )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / end ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^=  ( Number )  values.get ( start +  ( start - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  >=   ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  >=  1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - count )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / i ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  !=   ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  &&  1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / count ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > 9 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > start )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count > 2 )  {^281^^^^^269^298^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  &&   ( count - 1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  |  1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / start ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  >   ( count - 1 )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  null.doubleValue (  ) ;^288^^^^^269^298^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  + 2.0;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   !=  value2.doubleValue (  )  )  / 2.0;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 0.6666666666666666;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0d;^294^295^^^^269^298^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P1_Replace_Type]^short  count = end - start + 1;^278^^^^^269^298^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^int count = end  &&  start + 1;^278^^^^^269^298^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^int count = end - start ;^278^^^^^269^298^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^int count = end - i + 1;^278^^^^^269^298^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^int count = start - end + 1;^278^^^^^269^298^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  &&  1 )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - end )  / 2 ) ;^282^283^^^^269^298^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  !=  count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 5 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valueend =  ( Number )  values.get ( start + count / 2 - end ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  &&  count / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start + count + 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value4 =  ( Number )  values.get ( start + count / 4 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  count.get ( start + values / 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - count )  / 2 ) ;^283^^^^^269^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^287^^^^^269^298^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  ^  1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  &&  count / 2 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 7 - 1 ) ;^292^^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^292^293^^^^269^298^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ; Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start + count * 2 ) ;^293^^^^^269^298^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P1_Replace_Type]^for  (  long  i = start; i <= end; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^for  ( int i = start; i < end; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^for  ( int i = end; i <= end; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^for  ( startnt i = start; i <= end; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^for  ( int i = start; i <= start; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^for  ( int i = end; i <= start; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^for  ( startnt i = i; i <= end; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^for  ( endnt i = start; i <= i; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^working.add ( values.get ( start )  ) ;^272^^^^^257^287^working.add ( values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^working.add ( i.get ( values )  ) ;^272^^^^^257^287^working.add ( values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P7_Replace_Invocation]^working.add ( values.add ( i )  ) ;^272^^^^^257^287^working.add ( values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^272^^^^^257^287^working.add ( values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^copy.add ( i, values.get ( i )  ) ;working.add ( values.get ( i )  ) ;^272^^^^^257^287^working.add ( values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^working.add ( working.get ( i )  ) ;^272^^^^^257^287^working.add ( values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^result = calculateMedian ( working, true ) ;^275^^^^^260^290^result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result = calculateMedian ( values, false ) ;^275^^^^^260^290^result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P7_Replace_Invocation]^result = calculateMean ( working, false ) ;^275^^^^^260^290^result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P1_Replace_Type]^List working = new  LinkedHashSet  ( end - start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^List working = new ArrayList ( end - start  <  1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^List working = new ArrayList ( end  !=  start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^List working = new ArrayList ( end - start + start ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^List working = new ArrayList ( end - i + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^List working = new ArrayList ( start - end + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P1_Replace_Type]^ArrayList  working = new Array ArrayList  ( end - start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^List working = new ArrayList ( end - start  ||  1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^List working = new ArrayList ( end  <=  start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^List working = new ArrayList ( end - start + end ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^List working = new ArrayList ( start - start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^List copy = new ArrayList ( itemCount ) ;List working = new ArrayList ( end - start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Collections.sort ( values ) ;^274^^^^^259^289^Collections.sort ( working ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^274^^^^^259^289^Collections.sort ( working ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Collections.sort ( copy ) ;Collections.sort ( working ) ;^274^^^^^259^289^Collections.sort ( working ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result = calculateMean ( values, false ) ;^275^^^^^260^290^result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^275^^^^^260^290^result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^return calculateMedian ( values, start, end, true ) ;result = calculateMedian ( working, false ) ;^275^^^^^260^290^result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^return calculateMean ( values, true ) ;result = calculateMedian ( working, false ) ;^275^^^^^260^290^result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^return calculateMedian ( values, true ) ;result = calculateMedian ( working, false ) ;^275^^^^^260^290^result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count < 0 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count >= 0 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^if  ( start > 0 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count % 2 == 1 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count % 2 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count > 1 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count - 1 )  / 2 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count / 2 )  - 1 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start + count / 2 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count / 2 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue() + value2.doubleValue() / 2.0 )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue (  )  + value2.doubleValue (  ) )  {^279^^^^^264^294^if  ( count > 0 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count % 2 != 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count  ||  2 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % start == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == -2 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == count )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == i )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % -2 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 7 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == end )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^if  ( start % 2 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count % 2 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count > 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count - 1 )  / 2 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count / 2 )  - 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start + count / 2 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count / 2 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue() + value2.doubleValue() / 2.0 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( value1.doubleValue (  )  + value2.doubleValue (  ) )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count % 3 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P9_Replace_Statement]^if  ( count > 0 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P15_Unwrap_Block]^if (count > 1) {    java.lang.Number value = ((java.lang.Number) (values.get((start + ((count - 1) / 2)))));    result = value.doubleValue();}else {    java.lang.Number value = ((java.lang.Number) (values.get(start)));    result = value.doubleValue();};^280^281^282^283^284^265^295^if  ( count % 2 == 1 )  { if  ( count > 1 )  { Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P16_Remove_Block]^^280^281^282^283^284^265^295^if  ( count % 2 == 1 )  { if  ( count > 1 )  { Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 6.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 3.0d;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  <=  count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  <  count / 2 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valueend =  ( Number )  values.get ( start + count / end ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  ^  1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  |  count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 3 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valuei =  ( Number )  values.get ( start + count / 2 - i ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value-3 =  ( Number )  values.get ( start + count / -3 ) ;^293^^^^^280^296^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count >= 1 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > -8 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > end )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( start +  ( count - 1 )  / 2 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 / 2 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P6_Replace_Expression]^if  ( count - 1 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count > 3 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P9_Replace_Statement]^if  ( count % 2 == 1 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P9_Replace_Statement]^if  ( count > 0 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P15_Unwrap_Block]^java.lang.Number value = ((java.lang.Number) (values.get((start + ((count - 1) / 2))))); result = value.doubleValue();^281^282^283^284^285^266^296^if  ( count > 1 )  { Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P16_Remove_Block]^^281^282^283^284^285^266^296^if  ( count > 1 )  { Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result = value2.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  >>   ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  * 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  &&  1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count  )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / start ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( i +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  start.get ( values +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( count +  ( start - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^Number value =  ( Number )  working.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  ==   ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count - 1 )  - 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count   instanceof   1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count  )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / start ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  working.get ( start +  ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  values.get ( i +  ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  values.get ( start +  ( i - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  count.get ( start +  ( values - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  values.get ( count +  ( start - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^283^284^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ; result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;result = value.doubleValue (  ) ;^284^^^^^269^299^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result = value2.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sx = sx + xData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^current = values[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^y = data2[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^x = data1[i].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^total = total + number.doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sy = sy + yData[counter].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^sum += yData[i + j].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^result[i][0] = xData[i + period].doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  ^   ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  + 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count   instanceof   1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 1 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( start +  ( start - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  values.get ( i ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  start.get ( values ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P7_Replace_Invocation]^Number value =  ( Number )  values.add ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^Number value =  ( Number )  values.add ( i ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number number =  ( Number )  object;Number value =  ( Number )  values.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value =  ( Number )  values.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  <   ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count - 1 )  * 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  >=  1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / -6 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( Number )  start.get ( values +  ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  working.get ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^287^288^^^^272^302^Number value =  ( Number )  values.get ( start ) ; result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;result = value.doubleValue (  ) ;^288^^^^^273^303^result = value.doubleValue (  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count < 1 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > -1 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > 7 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^if  ( start > 1 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( start > 3 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  <<   ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / -5 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value =  ( Number )  count.get ( start +  ( values - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  >   ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count - 1 )  + 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  <<  1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - count )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  * 2.0;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   >>  value2.doubleValue (  )  )  / 2.0;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 0.25;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value1.doubleValue (  )  + value.doubleValue (  )  )  / 2.0;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^result =  ( value2.doubleValue (  )  + value1.doubleValue (  )  )  / 2.0;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 0.0d;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start   instanceof    ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  - 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  >=  1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 8 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^Number value =  ( Number )  working.add ( start ) ;^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  ==  1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  <  count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count + 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / -4 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 2  ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  working.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( i + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( start + start / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  start.get ( values + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( count + start / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  <  count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start + count * 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valuei =  ( Number )  values.get ( start + count / i ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( i + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  count.get ( start + values / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( count + start / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^Number value2 =  ( Number )  working.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value1 =  ( Number )  values.get ( count / 2 - 1 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value2 =  ( Number )  values.get ( count / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( start ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get ( 0 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^Number value =  ( Number )  values.get (  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  >=   ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  &  1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / i ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^287^^^^^272^302^Number value =  ( Number )  values.get ( start ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  <  1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  |  count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count * 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / end - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value1 =  ( Number )  values.get ( start + i / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  <=  count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 1 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( start + i / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( value2.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^295^^^^^280^310^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^295^^^^^280^310^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P11_Insert_Donor_Statement]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  ) / 2.0;=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^295^^^^^280^310^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^=  ( value1.doubleValue (  )  + value1.doubleValue (  )  )  / 2.0;^295^^^^^280^310^=  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( count  <<  2 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % end == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == start )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == -3 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % -7 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % i == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 2 == 0 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count % 5 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count % 4 == 1 )  {^280^^^^^265^295^if  ( count % 2 == 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  + 2.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   &  value2.doubleValue (  )  )  / 2.0;^294^295^^^^280^296^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  <<  count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  >  1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  ==  count / 2 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 9 - 1 ) ;^292^^^^^280^296^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^if  ( count > start )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( count > 1 << 2 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - start )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / count ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  <  1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - start )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / 5 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  ||   ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  >  1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  <<   ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  >>  1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / -7 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^if  ( start > 0 )  {^281^^^^^266^296^if  ( count > 1 )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  ||  1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  /  ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start +  ( count  >  1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - i )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / end ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^=  ( Number )  values.get ( start +  ( start - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P1_Replace_Type]^for  (  short  i = start; i <= end; i++ )  {^271^^^^^256^286^for  ( int i = start; i <= end; i++ )  {^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  - 2.0;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^result =  ( value1.doubleValue (  )   >  value2.doubleValue (  )  )  / 2.0;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 4.0d;^294^295^^^^279^309^result =  ( value1.doubleValue (  )  + value2.doubleValue (  )  )  / 2.0;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P1_Replace_Type]^List working = new  LinkedList  ( end - start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^List working = new ArrayList ( end  >=  start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^List working = new ArrayList ( end - start + i ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^List working = new ArrayList ( i - start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P1_Replace_Type]^Set  working = new Array Set  ( end - start + 1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^List working = new ArrayList ( end - start  &  1 ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^List working = new ArrayList ( end - start + count ) ;^270^^^^^255^285^List working = new ArrayList ( end - start + 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P1_Replace_Type]^long  count = end - start + 1;^278^^^^^263^293^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^int count = end  !=  start + 1;^278^^^^^263^293^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^int count = end - start ;^278^^^^^263^293^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^int count = start - start + 1;^278^^^^^263^293^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^int count = end - i + 1;^278^^^^^263^293^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^int count = start - end + 1;^278^^^^^263^293^int count = end - start + 1;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start  <=   ( count - 1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value =  ( Number )  values.get ( start +  ( count  ^  1 )  / 2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / -2 ) ;^282^283^^^^267^297^Number value =  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  ^  1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  >=  count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / 6 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valuei =  ( Number )  values.get ( start + count / 2 - i ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  >  count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start + count + 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value0 =  ( Number )  values.get ( start + count / 0 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P5_Replace_Variable]^Number value2 =  ( Number )  values.get ( start + start / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P8_Replace_Mix]^working.add ( values.add ( start )  ) ;^272^^^^^257^287^working.add ( values.get ( i )  ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P14_Delete_Statement]^^274^275^^^^259^289^Collections.sort ( working ) ; result = calculateMedian ( working, false ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^=  ( Number )  values.get ( start  ^   ( count - 1 )  / 2 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^=  ( Number )  values.get ( start +  ( count - 1 )  / 1 ) ;^283^^^^^268^298^=  ( Number )  values.get ( start +  ( count - 1 )  / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start + count / 2  >>  1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value1 =  ( Number )  values.get ( start  ||  count / 2 - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number value1 =  ( Number )  values.get ( start + count / start - 1 ) ;^292^^^^^277^307^Number value1 =  ( Number )  values.get ( start + count / 2 - 1 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^Number value2 =  ( Number )  values.get ( start  >=  count / 2 ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P3_Replace_Literal]^Number valuecount =  ( Number )  values.get ( start + count / count ) ;^293^^^^^278^308^Number value2 =  ( Number )  values.get ( start + count / 2 ) ;^[CLASS] Statistics  [METHOD] calculateMedian [RETURN_TYPE] double   List values int start int end boolean copyAndSort [VARIABLES] boolean  copyAndSort  Number  value  value1  value2  double  result  List  values  working  int  count  end  i  start  
[P2_Replace_Operator]^if  ( data != null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P8_Replace_Mix]^if  ( data == false )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( values == null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( object == null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( values[i] != null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( data2 == null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( values != null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( yData == null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( data1 == null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( xData == null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^312^^^^^311^326^if  ( data == null )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'data' array.");^312^313^314^^^311^326^if  ( data == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P16_Remove_Block]^^312^313^314^^^311^326^if  ( data == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( period >  ( xData.length )  )  {     throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  (  ( data1.length )  !=  ( data2.length )  )  {     throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Array lengths must be equal." ) ; }^312^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^313^^^^^311^326^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^313^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^313^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^313^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^313^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^313^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^313^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^313^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P8_Replace_Mix]^return 0;^313^^^^^311^326^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^if  ( data.length != 0 )  {^315^^^^^311^326^if  ( data.length == 0 )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^if  ( counter == 0 )  {^315^^^^^311^326^if  ( data.length == 0 )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^if  ( data.length.length == 0 )  {^315^^^^^311^326^if  ( data.length == 0 )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^if  ( data == 0 )  {^315^^^^^311^326^if  ( data.length == 0 )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P8_Replace_Mix]^if  ( data.length == 0  )  {^315^^^^^311^326^if  ( data.length == 0 )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Zero length 'data' array.");^315^316^317^^^311^326^if  ( data.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P16_Remove_Block]^^315^316^317^^^311^326^if  ( data.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^316^^^^^311^326^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^316^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^316^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; ;^316^^^^^311^326^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^316^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^316^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^316^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^316^^^^^311^326^[Delete]^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P1_Replace_Type]^int avg = calculateMean ( data ) ;^318^^^^^311^326^double avg = calculateMean ( data ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P7_Replace_Invocation]^double avg = getStdDev ( data ) ;^318^^^^^311^326^double avg = calculateMean ( data ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P14_Delete_Statement]^^318^319^^^^311^326^double avg = calculateMean ( data ) ; double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P1_Replace_Type]^int sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double current;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double total = 0.0;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double x = 0.0;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double y = 0.0;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double result = Double.NaN;double sum = 0.0;^319^^^^^311^326^double sum = 0.0;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P1_Replace_Type]^for  (  short  counter = 0; counter < data.length; counter++ )  {^321^^^^^311^326^for  ( int counter = 0; counter < data.length; counter++ )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^for  ( int counter = 0; counter <= data.length; counter++ )  {^321^^^^^311^326^for  ( int counter = 0; counter < data.length; counter++ )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^for  &&  ( int counter = 0; counter < data.length; counter++ )  {^321^^^^^311^326^for  ( int counter = 0; counter < data.length; counter++ )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P3_Replace_Literal]^for  ( int counter = counter; counter < data.length; counter++ )  {^321^^^^^311^326^for  ( int counter = 0; counter < data.length; counter++ )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^for  ( int counter = 0; counter < data.length.length; counter++ )  {^321^^^^^311^326^for  ( int counter = 0; counter < data.length; counter++ )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^sum / = sum + diff * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^sum = avg + diff * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^sum = sum + avg * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^sum = diff + sum * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P8_Replace_Mix]^sum =  diff + diff * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^sumX2 = sumX2 +  ( x * x ) ;sum = sum + diff * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^sum = sum + current;sum = sum + diff * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^sumY2 = sumY2 +  ( y * y ) ;sum = sum + diff * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^sumXY = sumXY +  ( x * y ) ;sum = sum + diff * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^sum = sum / period;sum = sum + diff * diff;^323^^^^^311^326^sum = sum + diff * diff;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P1_Replace_Type]^int diff = data[counter].doubleValue (  )  - avg;^322^^^^^311^326^double diff = data[counter].doubleValue (  )  - avg;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^double diff = data[counter].doubleValue (  )   >  avg;^322^^^^^311^326^double diff = data[counter].doubleValue (  )  - avg;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^double diff = data[counter].doubleValue (  )  - sum;^322^^^^^311^326^double diff = data[counter].doubleValue (  )  - avg;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^double diff = avg[counter].doubleValue (  )  - data;^322^^^^^311^326^double diff = data[counter].doubleValue (  )  - avg;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P11_Insert_Donor_Statement]^double value = number.doubleValue (  ) ;double diff = data[counter].doubleValue (  )  - avg;^322^^^^^311^326^double diff = data[counter].doubleValue (  )  - avg;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P14_Delete_Statement]^^322^323^324^^^311^326^double diff = data[counter].doubleValue (  )  - avg; sum = sum + diff * diff; }^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P1_Replace_Type]^for  (  long  counter = 0; counter < data.length; counter++ )  {^321^^^^^311^326^for  ( int counter = 0; counter < data.length; counter++ )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P3_Replace_Literal]^for  ( int counter = -1; counter < data.length; counter++ )  {^321^^^^^311^326^for  ( int counter = 0; counter < data.length; counter++ )  {^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^double diff = data[counter].doubleValue (  )   ||  avg;^322^^^^^311^326^double diff = data[counter].doubleValue (  )  - avg;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^return Math.sqrt ( sum *  ( data.length - 1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^return Math.sqrt ( sum /  ( data.length  &  1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P3_Replace_Literal]^return Math.sqrt ( sum /  ( data.length - counter )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^return Math.sqrt ( diff /  ( data.length - 1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^return Math.sqrt ( sum /  ( counter - 1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^return Math.sqrt ( data.length /  ( sum - 1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^return Math.sqrt ( data /  ( sum.length - 1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^return Math.sqrt ( sum /  ( data - 1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P8_Replace_Mix]^return Math.sqrt ( sum /  ( data.length + 2 - 1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P3_Replace_Literal]^return Math.sqrt ( sum /  ( data.length  )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P5_Replace_Variable]^return Math.sqrt ( sum /  ( data.length.length - 1 )  ) ;^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P14_Delete_Statement]^^325^^^^^311^326^return Math.sqrt ( sum /  ( data.length - 1 )  ) ;^[CLASS] Statistics  [METHOD] getStdDev [RETURN_TYPE] double   Number[] data [VARIABLES] Number[]  data  boolean  double  avg  diff  sum  int  counter  
[P2_Replace_Operator]^if  ( xData != null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^if  ( yData == null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P8_Replace_Mix]^if  ( xData == this )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( values == null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( object == null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data2 == null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( values != null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data1 == null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data == null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^339^^^^^337^358^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'xData' argument.");^339^340^341^^^337^358^if  ( xData == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P16_Remove_Block]^^339^340^341^^^337^358^if  ( xData == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^340^^^^^337^358^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^340^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^340^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^340^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^340^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^340^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^340^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P8_Replace_Mix]^return true;^340^^^^^337^358^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^340^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P2_Replace_Operator]^if  ( yData != null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P8_Replace_Mix]^if  ( xData == this )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( values == null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( object == null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data2 == null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( values != null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data1 == null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data == null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( xData == null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^342^^^^^337^358^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'yData' argument.");^342^343^344^^^337^358^if  ( yData == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P16_Remove_Block]^^342^343^344^^^337^358^if  ( yData == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^343^^^^^337^358^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^343^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^343^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^343^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^343^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^343^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^343^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^343^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; ;^343^^^^^337^358^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P2_Replace_Operator]^if  ( xData.length == yData.length )  {^345^^^^^337^358^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^if  ( yData.length != yData.length )  {^345^^^^^337^358^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^if  ( xData.length.length != yData.length )  {^345^^^^^337^358^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^if  ( yData.length != xData.length )  {^345^^^^^337^358^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P8_Replace_Mix]^if  ( xData.length = yData.length )  {^345^^^^^337^358^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P9_Replace_Statement]^if  ( data1.length != data2.length )  {^345^^^^^337^358^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Statistics.getLinearFit(): array lengths must be equal.");^345^346^347^348^^337^358^if  ( xData.length != yData.length )  { throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P16_Remove_Block]^^345^346^347^348^^337^358^if  ( xData.length != yData.length )  { throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( period >  ( xData.length )  )  {     throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  (  ( data1.length )  !=  ( data2.length )  )  {     throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Array lengths must be equal." ) ; }^345^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Array lengths must be equal." )  : array lengths must be equal." ) ;^346^347^^^^337^358^throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^346^^^^^337^358^[Delete]^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^346^347^^^^337^358^throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P11_Insert_Donor_Statement]^double[][] result = new double[xData.length - period][2];double[] result = new double[2];^350^^^^^337^358^double[] result = new double[2];^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P11_Insert_Donor_Statement]^double result =  ( sum / counter ) ;double[] result = new double[2];^350^^^^^337^358^double[] result = new double[2];^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P11_Insert_Donor_Statement]^double result = Double.NaN;double[] result = new double[2];^350^^^^^337^358^double[] result = new double[2];^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P3_Replace_Literal]^result[3] = getSlope ( xData, yData ) ;^352^^^^^337^358^result[1] = getSlope ( xData, yData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^result[1] = getSlope (  yData ) ;^352^^^^^337^358^result[1] = getSlope ( xData, yData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^result[1] = getSlope ( xData ) ;^352^^^^^337^358^result[1] = getSlope ( xData, yData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^result[1] = getSlope ( yData, xData ) ;^352^^^^^337^358^result[1] = getSlope ( xData, yData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P7_Replace_Invocation]^result[1] = getLinearFit ( xData, yData ) ;^352^^^^^337^358^result[1] = getSlope ( xData, yData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P14_Delete_Statement]^^352^^^^^337^358^result[1] = getSlope ( xData, yData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P2_Replace_Operator]^result[0] = calculateMean ( yData )   &  result[1] * calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P2_Replace_Operator]^result[0] = calculateMean ( yData )  - result[1] - calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P3_Replace_Literal]^result[] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P3_Replace_Literal]^result[0] = calculateMean ( yData )  - result[8] * calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^result[0] = calculateMean ( result )  - yData[1] * calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^result[0] = calculateMean ( xData )  - result[1] * calculateMean ( yData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^result[0] = calculateMean ( yData )  - xData[1] * calculateMean ( result ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P7_Replace_Invocation]^result[0] = getStdDev ( yData )  - result[1] * calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P8_Replace_Mix]^result[0 >>> 4] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^result[0] = calculateMean ( xData )  - result[1] * calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P8_Replace_Mix]^result[0] = getStdDev ( xData )  - result[1] * calculateMean ( xData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P14_Delete_Statement]^^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P5_Replace_Variable]^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( yData ) ;^354^^^^^337^358^result[0] = calculateMean ( yData )  - result[1] * calculateMean ( xData ) ;^[CLASS] Statistics  [METHOD] getLinearFit [RETURN_TYPE] double[]   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double[]  result  
[P2_Replace_Operator]^if  ( xData != null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^if  ( yData == null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^if  ( xData == false )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( values == null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( object == null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data2 == null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( values != null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data1 == null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data == null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^370^^^^^355^385^if  ( xData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'xData' argument.");^370^371^372^^^355^385^if  ( xData == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P16_Remove_Block]^^370^371^372^^^355^385^if  ( xData == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^371^^^^^356^386^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^371^^^^^356^386^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^371^^^^^356^386^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^371^^^^^356^386^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^371^^^^^356^386^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^371^^^^^356^386^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^371^^^^^356^386^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^371^^^^^356^386^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; ;^371^^^^^356^386^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^if  ( yData != null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^if  ( xData == null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^if  ( yData == true )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( values == null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( object == null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data2 == null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( values != null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data1 == null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data == null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^373^^^^^358^388^if  ( yData == null )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'yData' argument.");^373^374^375^^^358^388^if  ( yData == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P16_Remove_Block]^^373^374^375^^^358^388^if  ( yData == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^374^^^^^359^389^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^374^^^^^359^389^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^374^^^^^359^389^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^374^^^^^359^389^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^374^^^^^359^389^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^374^^^^^359^389^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^374^^^^^359^389^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^374^^^^^359^389^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^if  ( xData.length < yData.length )  {^376^^^^^361^391^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^if  ( xData.length != xData.length )  {^376^^^^^361^391^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^if  ( xData.length != counter )  {^376^^^^^361^391^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^if  ( yData.length != xData.length )  {^376^^^^^361^391^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^if  ( counter != yData.length )  {^376^^^^^361^391^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P9_Replace_Statement]^if  ( data1.length != data2.length )  {^376^^^^^361^391^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Array lengths must be equal.");^376^377^378^^^361^391^if  ( xData.length != yData.length )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P16_Remove_Block]^^376^377^378^^^361^391^if  ( xData.length != yData.length )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( period >  ( xData.length )  )  {     throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  (  ( data1.length )  !=  ( data2.length )  )  {     throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^376^^^^^361^391^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Zero length 'data' array." )   ;^377^^^^^362^392^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Array lengths must be equal." ) ; }^377^^^^^362^392^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^377^^^^^362^392^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^377^^^^^362^392^[Delete]^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^return 0;^377^^^^^362^392^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P1_Replace_Type]^int sx = 0.0, sxx = 0.0, sxy = 0.0, sy = 0.0;^389^^^^^374^404^double sx = 0.0, sxx = 0.0, sxy = 0.0, sy = 0.0;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P1_Replace_Type]^float sx = 0.0, sxx = 0.0, sxy = 0.0, sy = 0.0;^389^^^^^374^404^double sx = 0.0, sxx = 0.0, sxy = 0.0, sy = 0.0;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P1_Replace_Type]^short  counter;^390^^^^^375^405^int counter;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P11_Insert_Donor_Statement]^int count = 0;int counter;^390^^^^^375^405^int counter;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P11_Insert_Donor_Statement]^int counter = 0;int counter;^390^^^^^375^405^int counter;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^for  ( counter = 0; counter > xData.length; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^for  ^  ( counter = 0; counter < xData.length; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^for  &  ( counter = 0; counter < xData.length; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^for  <=  ( counter = 0; counter < xData.length; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^for  <<  ( counter = 0; counter < xData.length; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P3_Replace_Literal]^for  ( counter = -6; counter < xData.length; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^for  ( counter = 0; counter < counter; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^for  ( xData.length = 0; counter < counter; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^sx = sx + xData[counter].doubleValue (  ^  ) ;^392^^^^^377^407^sx = sx + xData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sx = sy + xData[counter].doubleValue (  ) ;^392^^^^^377^407^sx = sx + xData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sx = sx + yData[counter].doubleValue (  ) ;^392^^^^^377^407^sx = sx + xData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sx = xData + sx[counter].doubleValue (  ) ;^392^^^^^377^407^sx = sx + xData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ||  ) , 2 ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P3_Replace_Literal]^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 4 ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sxx = sy + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sxx = sxx + Math.pow ( yData[counter].doubleValue (  ) , 2 ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sxx = xData + Math.pow ( sxx[counter].doubleValue (  ) , 2 ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 1 ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^sxy = sxy + yData[counter].doubleValue (  >  )  sy = sy + yData[counter].doubleValue (  ) ;^394^395^396^^^379^409^sxy = sxy + yData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sxy = sy + yData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^394^395^396^^^379^409^sxy = sxy + yData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sxy = yData + sxy[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^394^395^396^^^379^409^sxy = sxy + yData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^sxy =  sy + yData[counter].doubleValue (  )  sy^394^395^396^^^379^409^sxy = sxy + yData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^sy = sy + yData[counter].doubleValue (  ^  ) ;^396^^^^^381^411^sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sy = sxy + yData[counter].doubleValue (  ) ;^396^^^^^381^411^sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sy = sy + xData[counter].doubleValue (  ) ;^396^^^^^381^411^sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sy = yData + sy[counter].doubleValue (  ) ;^396^^^^^381^411^sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P14_Delete_Statement]^^392^^^^^377^407^sx = sx + xData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P14_Delete_Statement]^^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^sxy = sxy + xData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^394^395^396^^^379^409^sxy = sxy + yData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P14_Delete_Statement]^^394^395^396^^^379^409^sxy = sxy + yData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P14_Delete_Statement]^^396^^^^^381^411^sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P3_Replace_Literal]^for  ( counter = counter; counter < xData.length; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^for  ( counter = 0 ; counter < xData.length; counter++ )  {^391^^^^^376^406^for  ( counter = 0; counter < xData.length; counter++ )  {^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^sx = sx + xData[counter].doubleValue (   instanceof   ) ;^392^^^^^377^407^sx = sx + xData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^sxx = sxx + Math.pow ( xData[counter].doubleValue (  <<  ) , 2 ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P3_Replace_Literal]^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 7 ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^sxy = sxy + yData[counter].doubleValue (  ^  )  sy = sy + yData[counter].doubleValue (  ) ;^394^395^396^^^379^409^sxy = sxy + yData[counter].doubleValue (  )  sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^sy = sy + yData[counter].doubleValue (  >  ) ;^396^^^^^381^411^sy = sy + yData[counter].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P3_Replace_Literal]^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , counter ) ;^393^^^^^378^408^sxx = sxx + Math.pow ( xData[counter].doubleValue (  ) , 2 ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^return  ( sxy -  ( sx * sy )  - counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^return  ( sxy   instanceof    ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^return  ( sxy -  ( sx * sy )  * counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^return  ( sxy -  ( sx - sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx  >   ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx - sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^return  ( sxx -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^return  ( syy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^return  ( sxy -  ( sx * sxy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^return  ( sxy -  ( sx * sy )  / counter )  /  ( sy -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^return  ( sy -  ( sx * sxy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^return  ( sxxy -  ( sx * sy )  / counter )  /  ( sx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^return  ( syy -  ( sx * sx )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P5_Replace_Variable]^return  ( countery -  ( sx * sy )  / sx )  /  ( sxx -  ( sx * sx )  / counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P8_Replace_Mix]^return  ( sxy -  ( sx * sy )  - counter )  -  ( sxx -  ( sx * sx )  - counter ) ;^398^^^^^383^413^return  ( sxy -  ( sx * sy )  / counter )  /  ( sxx -  ( sx * sx )  / counter ) ;^[CLASS] Statistics  [METHOD] getSlope [RETURN_TYPE] double   Number[] xData Number[] yData [VARIABLES] Number[]  xData  yData  boolean  double  sx  sxx  sxy  sy  int  counter  
[P2_Replace_Operator]^if  ( data1 != null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data2 == null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^if  ( data1 == this )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values == null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( object == null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values[i] != null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values != null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( yData == null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data == null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( xData == null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^416^^^^^401^431^if  ( data1 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'data1' argument.");^416^417^418^^^401^431^if  ( data1 == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P16_Remove_Block]^^416^417^418^^^401^431^if  ( data1 == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( period >  ( xData.length )  )  {     throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( data1.length )  !=  ( data2.length )  )  {     throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Array lengths must be equal." ) ; }^416^^^^^401^431^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'data2' argument." )   ;^417^^^^^402^432^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^417^^^^^402^432^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^417^^^^^402^432^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^417^^^^^402^432^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^417^^^^^402^432^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^417^^^^^402^432^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^417^^^^^402^432^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^417^^^^^402^432^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^if  ( data2 != null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data1 == null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^if  ( data2 == true )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values == null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( object == null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values[i] != null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data1[i] != null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values != null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( yData == null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data == null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( xData == null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data2[i] != null )  {^419^^^^^404^434^if  ( data2 == null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'data2' argument.");^419^420^421^^^404^434^if  ( data2 == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P16_Remove_Block]^^419^420^421^^^404^434^if  ( data2 == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Zero length 'data' array." )   ;^420^^^^^405^435^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^420^^^^^405^435^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^420^^^^^405^435^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^420^^^^^405^435^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^420^^^^^405^435^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^420^^^^^405^435^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^420^^^^^405^435^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^420^^^^^405^435^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^if  ( data1.length >= data2.length )  {^422^^^^^407^437^if  ( data1.length != data2.length )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data2.length != data2.length )  {^422^^^^^407^437^if  ( data1.length != data2.length )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data1.length != n )  {^422^^^^^407^437^if  ( data1.length != data2.length )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data2.length != data1.length )  {^422^^^^^407^437^if  ( data1.length != data2.length )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data2 != data1.length.length )  {^422^^^^^407^437^if  ( data1.length != data2.length )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data2.length.length != data1 )  {^422^^^^^407^437^if  ( data1.length != data2.length )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^if  ( n != data2.length )  {^422^^^^^407^437^if  ( data1.length != data2.length )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( xData.length != yData.length )  {^422^^^^^407^437^if  ( data1.length != data2.length )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("'data1' and 'data2' arrays must have same length.");^422^423^424^425^426^407^437^if  ( data1.length != data2.length )  { throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P16_Remove_Block]^^422^423^424^425^426^407^437^if  ( data1.length != data2.length )  { throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( period >  ( xData.length )  )  {     throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Array lengths must be equal." ) ; }^422^^^^^407^437^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length.d 'data2' arra" ) ;^423^424^425^^^408^438^throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( data1.length )  !=  ( data2.length )  )  {     throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^423^^^^^408^438^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length.t have same lengt" ) ;^423^424^425^^^408^438^throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nd 'data2' arrays must have samdata1' and 'data2' arrays must have same length." ) ;^423^424^425^^^408^438^throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " and 'data2' arrays must have " ) ;^423^424^425^^^408^438^throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^short  n = data1.length;^427^^^^^412^442^int n = data1.length;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^int n = data2.length;^427^^^^^412^442^int n = data1.length;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^int n = i;^427^^^^^412^442^int n = data1.length;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^int n = data1.length.length;^427^^^^^412^442^int n = data1.length;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^int n = data1;^427^^^^^412^442^int n = data1.length;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^int sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double total = 0.0;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double x = 0.0;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sum = 0.0;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double y = 0.0;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double result = Double.NaN;double sumX = 0.0;^428^^^^^413^443^double sumX = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^int sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double total = 0.0;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double x = 0.0;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sum = 0.0;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double y = 0.0;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double result = Double.NaN;double sumY = 0.0;^429^^^^^414^444^double sumY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^int sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double total = 0.0;double sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double x = 0.0;double sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sum = 0.0;double sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double y = 0.0;double sumX2 = 0.0;^430^^^^^415^445^double sumX2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^int sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double total = 0.0;double sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double x = 0.0;double sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sum = 0.0;double sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double y = 0.0;double sumY2 = 0.0;^431^^^^^416^446^double sumY2 = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^int sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double total = 0.0;double sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double x = 0.0;double sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sum = 0.0;double sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double y = 0.0;double sumXY = 0.0;^432^^^^^417^447^double sumXY = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^if  ( data1[i] == null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data2[i] != null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^if  ( data1[i] != false )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values == null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( object == null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values[i] != null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data2 == null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values != null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( yData == null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data1 == null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data == null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( xData == null )  {^435^^^^^420^450^if  ( data1[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P15_Unwrap_Block]^x = data1[i].doubleValue();^435^436^437^^^420^450^if  ( data1[i] != null )  { x = data1[i].doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P16_Remove_Block]^^435^436^437^^^420^450^if  ( data1[i] != null )  { x = data1[i].doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( data2[i] )  != null )  {     y = data2[i].doubleValue (  ) ; }^435^^^^^420^450^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^x = data2[i].doubleValue (  ) ;^436^^^^^421^451^x = data1[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^x =  null[i].doubleValue (  ) ;^436^^^^^421^451^x = data1[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P14_Delete_Statement]^^436^^^^^421^451^x = data1[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^if  ( data2[i] == null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^if  ( data1[i] != null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^if  ( data2[i] != this )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values == null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( object == null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values[i] != null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data2 == null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( values != null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( yData == null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data1 == null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( data == null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P9_Replace_Statement]^if  ( xData == null )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P15_Unwrap_Block]^y = data2[i].doubleValue();^439^440^441^^^424^454^if  ( data2[i] != null )  { y = data2[i].doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P16_Remove_Block]^^439^440^441^^^424^454^if  ( data2[i] != null )  { y = data2[i].doubleValue (  ) ; }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P13_Insert_Block]^if  (  ( data1[i] )  != null )  {     x = data1[i].doubleValue (  ) ; }^439^^^^^424^454^[Delete]^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^y = data1[i].doubleValue (  ) ;^440^^^^^425^455^y = data2[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P14_Delete_Statement]^^440^^^^^425^455^y = data2[i].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^for  (  long  i = 0; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^for  ( int i = 0; i > n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^for   instanceof   ( int i = 0; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^for  |  ( int i = 0; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^for  &&  ( int i = 0; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P3_Replace_Literal]^for  ( int i = i; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^for  ( nnt i = 0; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^for  ( nnt i = 0; i < i; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^if  ( data2[i] != false )  {^439^^^^^424^454^if  ( data2[i] != null )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumX = y + x;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumX = sumX + sumY2;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumX = x + sumX;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^sumX =  x + x;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumX2 = sumX2 +  ( x * x ) ;sumX = sumX + x;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sum = sum + current;sumX = sumX + x;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumY = sumY + y;sumX = sumX + x;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumXY = sumXY +  ( x * y ) ;sumX = sumX + x;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sum = sum / period;sumX = sumX + x;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumY = sumY + sumY2;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumY = y + sumY;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^sumY =  y + y;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sum = sum + current;sumY = sumY + y;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumY2 = sumY2 +  ( y * y ) ;sumY = sumY + y;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumX = sumX + x;sumY = sumY + y;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumXY = sumXY +  ( x * y ) ;sumY = sumY + y;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sum = sum / period;sumY = sumY + y;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumXY = sumXY +  ==  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumXY = sumXY +  ( x - y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumXY = x +  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumXY = sumXY +  ( y * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumXY = x +  ( sumXY * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumXY = sumXY +  ( y * x ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumXY = y +  ( x * sumXY ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^sumXY =  sumY2 +  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumX2 = sumX2 +  ( x * x ) ;sumXY = sumXY +  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumY = sumY + y;sumXY = sumXY +  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sum = sum + diff * diff;sumXY = sumXY +  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumY2 = sumY2 +  ( y * y ) ;sumXY = sumXY +  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumX = sumX + x;sumXY = sumXY +  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumX2 = sumX2 +  |  ( x * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumX2 = sumX2 +  ( x + x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumX2 = sumY2 +  ( x * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumX2 = sumX2 +  ( y * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumX2 = x +  ( sumX2 * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^sumX2 =  x +  ( x * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sum = sum + diff * diff;sumX2 = sumX2 +  ( x * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumY2 = sumY2 +  ( y * y ) ;sumX2 = sumX2 +  ( x * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumX = sumX + x;sumX2 = sumX2 +  ( x * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumXY = sumXY +  ( x * y ) ;sumX2 = sumX2 +  ( x * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumY2 = sumY2 +  >=  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumY2 = sumY2 +  ( y + y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumY2 = sumY +  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumY2 = sumY2 +  ( sumY * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumY2 = y +  ( sumY2 * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^sumY2 =  y +  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumX2 = sumX2 +  ( x * x ) ;sumY2 = sumY2 +  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumY = sumY + y;sumY2 = sumY2 +  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sum = sum + diff * diff;sumY2 = sumY2 +  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^sumXY = sumXY +  ( x * y ) ;sumY2 = sumY2 +  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^float x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double current;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double total = 0.0;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sum = 0.0;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double y = 0.0;double x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^int y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double current;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double total = 0.0;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double x = 0.0;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sum = 0.0;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double y = 0.0;^438^^^^^423^453^double y = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^sumX =  null + x;^442^^^^^427^457^sumX = sumX + x;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumY = x + y;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumY = sumY + x;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^sumY =  null + y;^443^^^^^428^458^sumY = sumY + y;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumXY = sumXY +  <=  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumXY = sumXY +  ( x / y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumXY = sumXY +  ( sumY2 * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^sumXY =  y +  ( x * y ) ;^444^^^^^429^459^sumXY = sumXY +  ( x * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumX2 = sumX2 +  &&  ( x * x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumX2 = sumX2 +  ( x - x ) ;^445^^^^^430^460^sumX2 = sumX2 +  ( x * x ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^sumY2 = sumY2 +  <<  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^sumY2 = x +  ( y * y ) ;^446^^^^^431^461^sumY2 = sumY2 +  ( y * y ) ;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^for  (  short  i = 0; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P3_Replace_Literal]^for  ( int i = 3; i < n; i++ )  {^433^^^^^418^448^for  ( int i = 0; i < n; i++ )  {^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P1_Replace_Type]^int x = 0.0;^434^^^^^419^449^double x = 0.0;^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY - sumX * sumY )  * Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY  >  sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n / sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY - sumX / sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return + ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2  >=  sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n - sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX / sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return - ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return / ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( i * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * y - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * yY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * sumXY - sumX * x )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * x - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * sumX - sumXY * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * sumX2Y - sumX * sumY )  / Math.pow (  ( n * sumX - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * sumX2 - sumX * sumY )  / Math.pow (  ( n * sumXY - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P8_Replace_Mix]^return  ( n * sumXY - sumX * sumY )  * Math.pow (  ( n * y - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2  <  sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX + sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^return  ( n * sumXY  &  sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * y - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P5_Replace_Variable]^return  ( n * sumXY - sumX * y )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^448^449^450^^^433^463^return  ( n * sumXY - sumX * sumY )  / Math.pow (  ( n * sumX2 - sumX * sumX )  }^[CLASS] Statistics  [METHOD] getCorrelation [RETURN_TYPE] double   Number[] data1 Number[] data2 [VARIABLES] Number[]  data1  data2  boolean  double  sumX  sumX2  sumXY  sumY  sumY2  x  y  int  i  n  
[P2_Replace_Operator]^if  ( xData.length <= yData.length )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( xData.length != xData.length )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( period != yData.length )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( xData.length != period )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( yData.length.length != xData )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( yData.length != xData.length )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( xData != yData.length )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( xData.length != yData )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P9_Replace_Statement]^if  ( data1.length != data2.length )  {^467^^^^^464^490^if  ( xData.length != yData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Array lengths must be equal.");^467^468^469^^^464^490^if  ( xData.length != yData.length )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P16_Remove_Block]^^467^468^469^^^464^490^if  ( xData.length != yData.length )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( period >  ( xData.length )  )  {     throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( data1.length )  !=  ( data2.length )  )  {     throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^467^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Zero length 'data' array." )   ;^468^^^^^464^490^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Array lengths must be equal." ) ; }^468^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P8_Replace_Mix]^return ;^468^^^^^464^490^throw new IllegalArgumentException  (" ")  ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^468^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^468^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^if  ( period >= xData.length )  {^471^^^^^464^490^if  ( period > xData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( j > xData.length )  {^471^^^^^464^490^if  ( period > xData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( period > yData.length )  {^471^^^^^464^490^if  ( period > xData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( period > period )  {^471^^^^^464^490^if  ( period > xData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( xData.length > period )  {^471^^^^^464^490^if  ( period > xData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( period > xData.length.length )  {^471^^^^^464^490^if  ( period > xData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^if  ( period > xData )  {^471^^^^^464^490^if  ( period > xData.length )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Period can't be longer than dataset.");^471^472^473^474^475^464^490^if  ( period > xData.length )  { throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P16_Remove_Block]^^471^472^473^474^475^464^490^if  ( period > xData.length )  { throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( data1 == null )  {     throw new IllegalArgumentException ( "Null 'data1' argument." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( data.length )  == 0 )  {     throw new IllegalArgumentException ( "Zero length 'data' array." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( yData == null )  {     throw new IllegalArgumentException ( "Null 'yData' argument." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( data == null )  {     throw new IllegalArgumentException ( "Null 'data' array." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( values == null )  {     throw new IllegalArgumentException ( "Null 'values' argument." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Statistics.getLinearFit (  ) : array lengths must be equal." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( xData == null )  {     throw new IllegalArgumentException ( "Null 'xData' argument." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( data1.length )  !=  ( data2.length )  )  {     throw new IllegalArgumentException ( "'data1' and 'data2' arrays must have same length." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( data2 == null )  {     throw new IllegalArgumentException ( "Null 'data2' argument." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  (  ( xData.length )  !=  ( yData.length )  )  {     throw new IllegalArgumentException ( "Array lengths must be equal." ) ; }^471^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Period can't be longer than dataset. l" ) ;^472^473^474^^^464^490^throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P13_Insert_Block]^if  ( period >  ( xData.length )  )  {     throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ; }^472^^^^^464^490^[Delete]^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Period can't be longer than dataset.t be longer" ) ;^472^473^474^^^464^490^throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Period can't be longer than dataset.od can't " ) ;^472^473^474^^^464^490^throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "od can't beriod can't be longer than dataset." ) ;^472^473^474^^^464^490^throw new IllegalArgumentException ( "Period can't be longer than dataset." ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^double[][] result = new double[xData.length  &  period][2];^477^^^^^464^490^double[][] result = new double[xData.length - period][2];^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^double[][] result = new double[xData.length - period][j];^477^^^^^464^490^double[][] result = new double[xData.length - period][2];^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^double[][] result = new double[xData.length - j][2];^477^^^^^464^490^double[][] result = new double[xData.length - period][2];^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^double[][] result = new double[period - period][2];^477^^^^^464^490^double[][] result = new double[xData.length - period][2];^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double[] result = new double[2];double[][] result = new double[xData.length - period][2];^477^^^^^464^490^double[][] result = new double[xData.length - period][2];^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P1_Replace_Type]^for  (  long  i = 0; i < result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  ( int i = 0; i <= result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  <  ( int i = 0; i < result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  &  ( int i = 0; i < result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  ||  ( int i = 0; i < result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^for  ( int i = ; i < result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^for  ( int i = j; i < result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^for  ( int i = 8; i < result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^for  ( periodnt i = 0; i < result.length; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^for  ( int i = 0; i < period; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^for  ( result.lengthnt i = 0; i < i; i++ )  {^478^^^^^464^490^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P1_Replace_Type]^for  (  long  j = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  ( int j = 0; j == period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  >>  ( int j = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  |  ( int j = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^for  ( int j = 2; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^for  ( periodnt j = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^for  ( int period = 0; j < j; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^for  ( periodnt j = 0; j < i; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^for  ( jnt i = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum += yData[i + j].doubleValue (  ==  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^sum += xData[i + j].doubleValue (  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^sum += yData[period + j].doubleValue (  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^sum += yData[i + period].doubleValue (  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^sum += j[i + yData].doubleValue (  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P14_Delete_Statement]^^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^result[i][0] = xData[i + period].doubleValue (  &&  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^result[i][1] = xData[i + period].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^result[i][0] = xData[j + period].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^result[i][0] = yData[i + period].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^result[i][0] = xData[i + j].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^result[i][0] = period[i + xData].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P8_Replace_Mix]^result[i][0 >> 0] = xData[i + period].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum += yData[i + j].doubleValue (  >=  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum = sum - period;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^sum = period / sum;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P8_Replace_Mix]^sum =  null / period;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^sum = sum + current;sum = sum / period;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^sumY = sumY + y;sum = sum / period;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^sum = sum + diff * diff;sum = sum / period;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^sumX = sumX + x;sum = sum / period;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^result[i][-8] = sum;^486^^^^^464^490^result[i][1] = sum;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P8_Replace_Mix]^result[i][0] = sum;^486^^^^^464^490^result[i][1] = sum;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P1_Replace_Type]^int sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double current;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double sumX = 0.0;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double sumXY = 0.0;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double sumY2 = 0.0;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double total = 0.0;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double x = 0.0;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double sumY = 0.0;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double sumX2 = 0.0;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double y = 0.0;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P11_Insert_Donor_Statement]^double result = Double.NaN;double sum = 0.0;^481^^^^^464^490^double sum = 0.0;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P1_Replace_Type]^for  (  short  j = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^for  ( int j = i; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^result[i][0] = xData[i + period].doubleValue (  ^  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^result[i][0] = xData[period + period].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P14_Delete_Statement]^^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum += yData[i + j].doubleValue (  ^  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  ( int j = 0; j <= period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for   instanceof   ( int j = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^for  !=  ( int j = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^for  ( int j = j; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^for  ( int period = 0; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum += yData[i + j].doubleValue (  <<  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum += yData[i + j].doubleValue (  &  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^result[i][0] = xData[i + period].doubleValue (  >>  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^result[i][] = xData[i + period].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P8_Replace_Mix]^result[i][0L] = xData[i + period].doubleValue (  ) ;^479^^^^^464^490^result[i][0] = xData[i + period].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum += yData[i + j].doubleValue (  ||  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum = sum * period;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P5_Replace_Variable]^sum = sum / j;^485^^^^^464^490^sum = sum / period;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^result[i][period] = sum;^486^^^^^464^490^result[i][1] = sum;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P8_Replace_Mix]^result[i][2] = sum;^486^^^^^464^490^result[i][1] = sum;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P3_Replace_Literal]^for  ( int j = period; j < period; j++ )  {^482^^^^^464^490^for  ( int j = 0; j < period; j++ )  {^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
[P2_Replace_Operator]^sum += yData[i + j].doubleValue (  >  ) ;^483^^^^^464^490^sum += yData[i + j].doubleValue (  ) ;^[CLASS] Statistics  [METHOD] getMovingAverage [RETURN_TYPE] double[][]   Number[] xData Number[] yData int period [VARIABLES] Number[]  xData  yData  boolean  double  sum  double[][]  result  int  i  j  period  
