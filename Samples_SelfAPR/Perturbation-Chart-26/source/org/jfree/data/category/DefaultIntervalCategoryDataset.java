[P5_Replace_Variable]^this ( DataUtilities.createNumberArray2D ( ends ) , DataUtilities.createNumberArray2D ( starts )  ) ;^88^89^^^^87^90^this ( DataUtilities.createNumberArray2D ( starts ) , DataUtilities.createNumberArray2D ( ends )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] DefaultIntervalCategoryDataset(double[][],double[][])   double[][] starts double[][] ends [VARIABLES] double[][]  ends  starts  Number[][]  endData  startData  boolean  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^88^89^^^^87^90^this ( DataUtilities.createNumberArray2D ( starts ) , DataUtilities.createNumberArray2D ( ends )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] DefaultIntervalCategoryDataset(double[][],double[][])   double[][] starts double[][] ends [VARIABLES] double[][]  ends  starts  Number[][]  endData  startData  boolean  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this ( DataUtilities.createNumberArray2D ( ends ) , DataUtilities.createNumberArray2D ( ends )  ) ;^88^89^^^^87^90^this ( DataUtilities.createNumberArray2D ( starts ) , DataUtilities.createNumberArray2D ( ends )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] DefaultIntervalCategoryDataset(double[][],double[][])   double[][] starts double[][] ends [VARIABLES] double[][]  ends  starts  Number[][]  endData  startData  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^DataUtilities.createNumberArray2D ( starts )  ) ;^89^^^^^87^90^DataUtilities.createNumberArray2D ( ends )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] DefaultIntervalCategoryDataset(double[][],double[][])   double[][] starts double[][] ends [VARIABLES] double[][]  ends  starts  Number[][]  endData  startData  boolean  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^89^^^^^87^90^DataUtilities.createNumberArray2D ( ends )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] DefaultIntervalCategoryDataset(double[][],double[][])   double[][] starts double[][] ends [VARIABLES] double[][]  ends  starts  Number[][]  endData  startData  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this ( null, null, startData, ends ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^this ( null, null, starts, startData ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^this ( null, null,  ends ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^this ( null, null, starts ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^this ( null, null, ends, starts ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P14_Delete_Statement]^^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P11_Insert_Donor_Statement]^this ( seriesNames, null, starts, ends ) ;this ( null, null, starts, ends ) ;^104^^^^^103^105^this ( null, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^this ( seriesNames, null, startData, ends ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this ( seriesNames, null, starts, startData ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this (  null, starts, ends ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this ( seriesNames, null,  ends ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this ( seriesNames, null, starts ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this ( ends, null, starts, seriesNames ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this ( seriesNames, null, ends, starts ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this ( null, null, starts, ends ) ;this ( seriesNames, null, starts, ends ) ;^122^^^^^118^124^this ( seriesNames, null, starts, ends ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   String[] seriesNames Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  String[]  seriesNames  boolean  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.startData = startData;^141^^^^^126^156^this.startData = starts;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.endData = ends;this.startData = starts;^141^^^^^126^156^this.startData = starts;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.endData = starts;^142^^^^^127^157^this.endData = ends;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.startData = starts;this.endData = ends;^142^^^^^127^157^this.endData = ends;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( starts != null || ends != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( starts == null && ends != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( starts != null && ends == null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( startData != null && ends != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( starts != null && starts != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( ends != null && starts != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( starts != null ) {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (  ends != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( seriesCount != ends.length )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset: the number " + ("of series in the start value dataset does " + "not match the number of series in the end ") + "value dataset." )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset." )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "of series in the start value dataset does " + "not match the number of series in the end " )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( seriesCount > 0 )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( seriesKeys != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( seriesKeys.length != seriesCount )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "The number of series keys does not " + "match the number of series in the data." )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( default-prefix") + " " )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( categoryCount != ends[0].length )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset: the " + ("number of categories in the start value " + "dataset does not match the number of ") + "categories in the end value dataset." )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset." )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "number of categories in the start value " + "dataset does not match the number of " )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( categoryKeys != null )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( categoryKeys.length != categoryCount )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "The number of category keys does not match " + "the number of categories in the data." )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  (  starts != this )  {^144^^^^^129^159^if  ( starts != null && ends != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesCount <= ends.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryCount != ends.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesCount != starts.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesCount != seriesCount )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( ends.length != seriesCount )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( ends != seriesCount.length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesCount != ends )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset: the number " + ("of series in the start value dataset does " + "not match the number of series in the end ") + "value dataset." )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset." )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "of series in the start value dataset does " + "not match the number of series in the end " )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryCount != ends[0].length )  {^150^^^^^135^165^if  ( seriesCount != ends.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryCount !=  ( ends[0].length )  )  {     String errMsg = "DefaultIntervalCategoryDataset: the " +  (  ( "number of categories in the start value " + "dataset does not match the number of " )  + "categories in the end value dataset." ) ;     throw new IllegalArgumentException ( errMsg ) ; }^150^^^^^135^165^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^char errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does "  <  "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "tIntervalCategoryD" + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does o" + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "number of series in tot match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataalue dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesCount !=  ( ends.length )  )  {     String errMsg = "DefaultIntervalCategoryDataset: the number " +  (  ( "of series in the start value dataset does " + "not match the number of series in the end " )  + "value dataset." ) ;     throw new IllegalArgumentException ( errMsg ) ; }^151^^^^^136^166^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryCount !=  ( ends[0].length )  )  {     String errMsg = "DefaultIntervalCategoryDataset: the " +  (  ( "number of categories in the start value " + "dataset does not match the number of " )  + "categories in the end value dataset." ) ;     throw new IllegalArgumentException ( errMsg ) ; }^151^^^^^136^166^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesCount >= 0 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( seriesCount > -2 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( seriesCount > 5 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( seriesCount > 9 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryCount > 0 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( seriesKeys != null )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( seriesKeys.length != seriesCount )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "The number of series keys does not " + "match the number of series in the data." )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( default-prefix") + " " )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( categoryCount != ends[0].length )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset: the " + ("number of categories in the start value " + "dataset does not match the number of ") + "categories in the end value dataset." )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset." )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "number of categories in the start value " + "dataset does not match the number of " )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( categoryKeys != null )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( categoryKeys.length != categoryCount )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "The number of category keys does not match " + "the number of categories in the data." )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesCount > 2 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesIndex < 0 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( getSeriesCount (  )  > 0 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.seriesKeys = this;^201^^^^^186^216^this.seriesKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.categoryKeys = null;this.seriesKeys = null;^201^^^^^186^216^this.seriesKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.seriesKeys = seriesKeys;this.seriesKeys = null;^201^^^^^186^216^this.seriesKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.categoryKeys = true;^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.categoryKeys = categoryKeys;this.categoryKeys = null;^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.seriesKeys = null;this.categoryKeys = null;^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( categoryKeys != null )  { this.categoryKeys = null; }^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( this.categoryKeys == null )  { this.categoryKeys = null; }^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( categoryKeys == null )  { this.categoryKeys = null; }^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( categoryKeys[i] == null )  { this.categoryKeys = null; }^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesKeys == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( seriesKeys.length != seriesCount )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "The number of series keys does not " + "match the number of series in the data." )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( default-prefix") + " " )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryKeys != this )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.categoryKeys == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array1 == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys[i] == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( columnKey == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.seriesKeys == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array2 == null )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys ( seriesCount, errMsg ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys (  prefix ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys ( seriesCount ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys ( prefix, seriesCount ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^this.seriesKeys = getValue ( seriesCount, prefix ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.seriesKeys =  generateKeys ( categoryCount, prefix ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^char prefix = resources.getchar ( "series.default-prefix" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "series.default-prefix" )  >>  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "seri" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "series.default-prefix" )  + "";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^String prefix = resources .getBundle ( prefix )   + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^String prefix = resources.getString ( "categories.default-prefix" )  + " ";String prefix = resources.getString ( "series.default-prefix" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "efault-pref" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^String prefix = resources .getBundle ( baseName )   + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.seriesKeys = getValue ( seriesCount, errMsg ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesKeys.length >= seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryKeys.length != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKeys.length != categoryCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryCount != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKeys.length.length != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesCount != seriesKeys.length )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "The number of series keys does not " + "match the number of series in the data." )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys.length != categoryCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys.length != getSeriesCount (  )  )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("The number of series keys does not " + "match the number of series in the data."));^162^163^164^165^166^147^177^if  ( seriesKeys.length != seriesCount )  { throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^162^163^164^165^166^147^177^if  ( seriesKeys.length != seriesCount )  { throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^162^^^^^147^177^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^162^^^^^147^177^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^162^^^^^147^177^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^162^^^^^147^177^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^162^^^^^147^177^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^162^^^^^147^177^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  >>  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not The number of s" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "oatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number of series keys does not match the data." )  ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^163^^^^^148^178^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^163^^^^^148^178^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  ^  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.match " ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = categoryKeys;^168^^^^^153^183^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.seriesKeys =  null;^168^^^^^153^183^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.categoryKeys = categoryKeys;this.seriesKeys = seriesKeys;^168^^^^^153^183^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.seriesKeys = null;this.seriesKeys = seriesKeys;^168^^^^^153^183^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  ||  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " nu" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.tch" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  <=  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " number " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "hatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesCount.length != seriesKeys )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he number" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "n the daatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.h the number of series in the" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryCount >= ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( categoryCount != ends[-9].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesCount != ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryCount != starts[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( ends != categoryCount[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( ends[0].length != ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset: the " + ("number of categories in the start value " + "dataset does not match the number of ") + "categories in the end value dataset." )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset." )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "number of categories in the start value " + "dataset does not match the number of " )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryCount != ends[0 ].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesCount != ends.length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesCount !=  ( ends.length )  )  {     String errMsg = "DefaultIntervalCategoryDataset: the number " +  (  ( "of series in the start value dataset does " + "not match the number of series in the end " )  + "value dataset." ) ;     throw new IllegalArgumentException ( errMsg ) ; }^178^^^^^163^193^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^char errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  ^  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "a" + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value in the " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "taset does not match the nu" + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.egories in the";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryCount !=  ( ends[0].length )  )  {     String errMsg = "DefaultIntervalCategoryDataset: the " +  (  ( "number of categories in the start value " + "dataset does not match the number of " )  + "categories in the end value dataset." ) ;     throw new IllegalArgumentException ( errMsg ) ; }^179^^^^^164^194^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryKeys == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKeys != null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( categoryKeys.length != categoryCount )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "The number of category keys does not match " + "the number of categories in the data." )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( default-prefix") + " " )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesKeys != true )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.categoryKeys == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array1 == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys[i] == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( columnKey == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.seriesKeys == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array2 == null )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^if ((categoryKeys.length) != categoryCount) {    throw new java.lang.IllegalArgumentException(("The number of category keys does not match " + "the number of categories in the data."));}; this.categoryKeys = categoryKeys;^185^186^187^188^189^170^200^if  ( categoryKeys != null )  { if  ( categoryKeys.length != categoryCount )  { throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^185^186^187^188^189^170^200^if  ( categoryKeys != null )  { if  ( categoryKeys.length != categoryCount )  { throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys ( seriesCount, prefix ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys (  prefix ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys ( categoryCount ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys ( prefix, categoryCount ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^this.categoryKeys = getValue ( categoryCount, prefix ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( categoryKeys.length != categoryCount )  { this.categoryKeys = generateKeys ( categoryCount, prefix ) ; }^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^char prefix = resources.getchar ( "categories.default-prefix" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  |  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "-ategories.default-prefix" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^String prefix = resources .getBundle ( prefix )   + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^String prefix = resources.getString ( "series.default-prefix" )  + " ";String prefix = resources.getString ( "categories.default-prefix" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "s.default-" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^String prefix = resources .getBundle ( errMsg )   + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^String prefix = resources .getBundle ( baseName )   + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys ( categoryCount, errMsg ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryKeys.length == categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryKeys.length != seriesCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryKeys.length.length != categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryCount != categoryKeys.length )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryKeys != categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "The number of category keys does not match " + "the number of categories in the data." )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesCount != categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys.length != this.startData[0].length )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys.length != seriesCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("The number of category keys does not match " + "the number of categories in the data."));^186^187^188^189^190^171^201^if  ( categoryKeys.length != categoryCount )  { throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^186^187^188^189^190^171^201^if  ( categoryKeys.length != categoryCount )  { throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^186^^^^^171^201^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^186^^^^^171^201^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^186^^^^^171^201^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^186^^^^^171^201^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^186^^^^^171^201^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^186^^^^^171^201^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^186^^^^^171^201^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  <=  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match ot" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the numbhe number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  )  ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^187^^^^^172^202^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^187^^^^^172^202^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  ==  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "erhe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "ategori" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.categoryKeys =  seriesKeys;^191^^^^^176^206^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.categoryKeys = null;this.categoryKeys = categoryKeys;^191^^^^^176^206^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.seriesKeys = seriesKeys;this.categoryKeys = categoryKeys;^191^^^^^176^206^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  |  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "of c" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "of che number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "   instanceof   "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys dhe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.the number " ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKeys.length != categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  <  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "gory keys does " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  <<  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match f categor" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.e n" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys ( categoryCount, prefix ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys ( seriesCount, errMsg ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys (  prefix ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys ( seriesCount ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.seriesKeys = generateKeys ( prefix, seriesCount ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^this.seriesKeys = getValue ( seriesCount, prefix ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys ( seriesCount, prefix ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys ( categoryCount, errMsg ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys (  prefix ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys ( categoryCount ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = generateKeys ( prefix, categoryCount ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^this.categoryKeys = getValue ( categoryCount, prefix ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.categoryKeys =  generateKeys ( null, prefix ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( categoryKeys.length != categoryCount )  { this.categoryKeys = generateKeys ( categoryCount, prefix ) ; }^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  <  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " series " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "tatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  >  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match he number o" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + " the dahe number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^char prefix = resources.getchar ( "series.default-prefix" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "series.default-prefix" )  ||  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "ereries.default-prefix" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "series.default-prefix" )  + "";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^String prefix = resources.getString ( "categories.default-prefix" )  + " ";String prefix = resources.getString ( "series.default-prefix" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^short  categoryCount = starts[0].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^int categoryCount = starts[categoryCount].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int categoryCount = startData[0].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int categoryCount = starts[0].length[0].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int seriesCount = starts.length;int categoryCount = starts[0].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( categoryKeys.length != this.startData[0].length )  { int categoryCount = starts[0].length; }^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( categoryCount != ends[0].length )  { int categoryCount = starts[0].length; }^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  <=  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "ter" + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "ategorie" + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of a" + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "es in the end va";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^char prefix = resources.getchar ( "categories.default-prefix" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  >  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "categorieategories.default-prefix" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "categories.default-prefix" )  + "";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^String prefix = resources.getString ( "series.default-prefix" )  + " ";String prefix = resources.getString ( "categories.default-prefix" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "h the number of series in the datatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "umbehe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.the number of categories" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "series.default-prefixdefau" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^String prefix = resources .getBundle ( baseName )   + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "gories.default-pre" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^String prefix = resources .getBundle ( baseName )   + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^196^^^^^181^211^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesKeys != false )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "series.default-prefix" )  &&  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "series.def" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "ult-pre" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.seriesKeys = getValue ( categoryCount, prefix ) ;^173^^^^^160^174^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesKeys.length == seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  >  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "r of series keys does he number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + " the number of serieatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " series kehe number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.ber of series in the" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  >=  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of she number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "number of series iatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  |  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " number of series keys he number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.match the" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesCount != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ber ohe number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "atcatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not  number of" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "the number of series in th" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryCount == ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( categoryCount != ends[seriesCount].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  <<  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the DefaultIntervalCategory" + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "e " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "datas" + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "in the end value dataseategories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^183^^^^^168^198^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  <=  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "categories.default-prefixc" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "caategories.default-prefix" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.categoryKeys = getValue ( categoryCount, errMsg ) ;^196^^^^^185^197^this.categoryKeys = generateKeys ( categoryCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryKeys.length <= categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryCount.length != categoryKeys )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  ^  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match n" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number " ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "egory keys does nohe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "ber of he number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  >>  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match T" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of cahe number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  >=  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match he numbe" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.ber of categorie" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  &&  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "h" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "of categories in the dahe number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the n" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.categoryKeys =  null;^191^^^^^176^206^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( seriesKeys == null )  { this.seriesKeys = null; }^201^^^^^186^216^this.seriesKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( seriesKeys != null )  { this.seriesKeys = null; }^201^^^^^186^216^this.seriesKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( this.seriesKeys == null )  { this.seriesKeys = null; }^201^^^^^186^216^this.seriesKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.categoryKeys = false;^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "r of seriehe number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.he number of series in" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he numbhe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^char baseName = "org.jfree.data.resources.DataPackageResources";^146^^^^^131^161^String baseName = "org.jfree.data.resources.DataPackageResources";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String baseName = "org.jfree.data.resources.DataPackageResou";^146^^^^^131^161^String baseName = "org.jfree.data.resources.DataPackageResources";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^ResourceBundle resources = ResourceBundle.getBundle ( prefix ) ;^147^^^^^132^162^ResourceBundle resources = ResourceBundle.getBundle ( baseName ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^ResourceBundle resources = ResourceBundle.getString ( baseName ) ;^147^^^^^132^162^ResourceBundle resources = ResourceBundle.getBundle ( baseName ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^long  seriesCount = starts.length;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int seriesCount = startData.length;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int seriesCount = categoryCount;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int seriesCount = starts.length.length;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int seriesCount = starts;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int categoryCount = starts[0].length;int seriesCount = starts.length;^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( seriesCount != ends.length )  { int seriesCount = starts.length; }^149^^^^^134^164^int seriesCount = starts.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does "  &&  "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "ryDataset:" + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does taset do" + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "h the number ot match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "ue data";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "series.default-prefix" )  <=  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "s.defaeries.default-prefix" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^long  categoryCount = starts[0].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^int categoryCount = starts[seriesCount].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the IntervalCategory" + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "u" + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "ataset doesataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "ies in the end valuategories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  !=  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "gorategories.default-prefix" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^String prefix = resources .getBundle ( prefix )   + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "series ke" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + " number of satch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  &  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categori" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^ResourceBundle resources = ResourceBundle .getString ( prefix )  ;^147^^^^^132^162^ResourceBundle resources = ResourceBundle.getBundle ( baseName ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^147^^^^^132^162^ResourceBundle resources = ResourceBundle.getBundle ( baseName ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "s.default-eries.default-prefix" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^String prefix = resources .getBundle ( prefix )   + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^String prefix = resources .getBundle ( errMsg )   + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "cateategories.default-prefix" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does "  ^  "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "tegoryDataset: the numb" + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "series f series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end  match the number of ser" + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "aalue dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^return false;^155^^^^^140^170^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( seriesCount > -1 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( seriesCount > categoryCount )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesCount > 4 )  {^157^^^^^142^172^if  ( seriesCount > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.seriesKeys = false;^201^^^^^186^216^this.seriesKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.categoryKeys = this;^202^^^^^187^217^this.categoryKeys = null;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesKeys != true )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "series.default-prefix" )  ==  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "eri" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "series.default-prefixries.def" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^String prefix = resources .getBundle ( errMsg )   + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKeys != seriesCount )  {^162^^^^^147^177^if  ( seriesKeys.length != seriesCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "keys does no" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "he nuatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "   instanceof   "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " keys doeshe number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.match the number of" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not  " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "aatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  !=  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "series keys does " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "tch the number of" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^return true;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he number he number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "th" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  &  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "keys doehe number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "er of satch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryCount <= ends[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( categoryCount != ends[categoryCount].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryCount != ends[0].length[0].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  ==  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "efaultefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value number of categori" + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "da" + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "ata";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryKeys != false )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "-" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "categories.default-prefix" )  + "";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "fauategories.default-prefix" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "number of cathe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categor" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match egory k" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + " dat" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nhe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "athe number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match Th" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "n the dhe number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryKeys.length < categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Thhe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.t" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  !=  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match cat" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "i" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.he " ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "egory khe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "t" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "series.default-prefix" )  &  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "ries." )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^int categoryCount = starts[-5].length;^177^^^^^162^192^int categoryCount = starts[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value "  &  "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "valCategoryDa" + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "umber of categories iumber of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "es" + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "c";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "categories.default-prefix" )   instanceof   + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "caategories.default-prefix" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^String prefix = resources .getBundle ( errMsg )   + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "umber ofhe number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "a" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e nuhe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.umber " ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "series.default-prefixs" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.seriesKeys = getValue ( seriesCount, errMsg ) ;^173^^^^^158^188^this.seriesKeys = generateKeys ( seriesCount, prefix ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "c" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryKeys != true )  {^160^^^^^145^175^if  ( seriesKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "series.default-prefix" )  |  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "eries.defauleries.default-prefix" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "series.default-prefixs.defaul" )  + " ";^171^172^^^^160^174^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not ies key" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of series keys does not "  &&  "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not of seri" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "h the number of series in atch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "e numbe" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " series keys does nhe number of series keys does not " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data. series in the" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not se" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the numatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "u" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "he daatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( categoryCount != ends[7].length )  {^178^^^^^163^193^if  ( categoryCount != ends[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the DefaultI" + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "umber of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "doe" + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + " tategories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryKeys != this )  {^185^^^^^170^200^if  ( categoryKeys != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "ies.ategories.default-prefix" )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "categories." )  + " ";^194^195^^^^185^197^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "er of category keys does not mahe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "umbhe number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "The number of category keys does not match "  ||  "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "umber of category keys does he number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.u" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ber of ca" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "es he number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "umber of category keys do" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "thhe number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryKeys.length > categoryCount )  {^186^^^^^171^201^if  ( categoryKeys.length != categoryCount )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ategory keys does not he number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "c" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "umber of category keys does not he number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.umber of categories in" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ber of " + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data.matc" ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "he nhe number of category keys does not match " + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "he number of categories in the da" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String baseName = "free.data.resources.DataPackageResourg.jfree.data.resources.DataPackageResources";^146^^^^^131^161^String baseName = "org.jfree.data.resources.DataPackageResources";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does "  |  "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "ltIntervalCategoryDataset: the numbefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "start v" + "not match the number of series in the end " + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end not match" + "value dataset.";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "atase";^151^152^153^154^^136^166^String errMsg = "DefaultIntervalCategoryDataset: the number " + "of series in the start value dataset does " + "not match the number of series in the end " + "value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "efault-preferies.default-prefix" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the ltIntervalCateg" + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value tegories in the start" + "dataset does not match the number of " + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of et does" + "categories in the end value dataset.";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.categ";^179^180^181^182^^164^194^String errMsg = "DefaultIntervalCategoryDataset: the " + "number of categories in the start value " + "dataset does not match the number of " + "categories in the end value dataset.";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^String prefix = resources.getString ( "categories.default-prefix" )  ==  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "categories.default-prefixries" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not er of series keys does" + "match the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not " + "f series iatch the number of series in the data." ) ;^163^164^165^^^148^178^throw new IllegalArgumentException ( "The number of series keys does not " + "match the number of series in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match e number o" + "the number of categories in the data." ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data.of cate" ) ;^187^188^189^^^172^202^throw new IllegalArgumentException ( "The number of category keys does not match " + "the number of categories in the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "ries.default-prefi" )  + " ";^171^172^^^^156^186^String prefix = resources.getString ( "series.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^String prefix = resources.getString ( "efault-p" )  + " ";^194^195^^^^179^209^String prefix = resources.getString ( "categories.default-prefix" )  + " ";^[CLASS] DefaultIntervalCategoryDataset  [METHOD] <init> [RETURN_TYPE] Number[][])   Comparable[] seriesKeys Comparable[] categoryKeys Number[][] starts Number[][] ends [VARIABLES] Number[][]  endData  ends  startData  starts  ResourceBundle  resources  String  baseName  errMsg  prefix  boolean  int  categoryCount  seriesCount  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^long  result = 0;^217^^^^^216^222^int result = 0;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^int result = -2;^217^^^^^216^222^int result = 0;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int result = -1;int result = 0;^217^^^^^216^222^int result = 0;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( this.startData == null )  {^218^^^^^216^222^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( starts != null )  {^218^^^^^216^222^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( this.startData != this )  {^218^^^^^216^222^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.categoryKeys == null )  {^218^^^^^216^222^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.seriesKeys == null )  {^218^^^^^216^222^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^result = this.startData.length;^218^219^220^^^216^222^if  ( this.startData != null )  { result = this.startData.length; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^218^219^220^^^216^222^if  ( this.startData != null )  { result = this.startData.length; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( this.startData )  != null )  {     if  (  ( getSeriesCount (  )  )  > 0 )  {         result = length;     } }^218^^^^^216^222^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( getSeriesCount (  )  )  > 0 )  {     result = length; }^218^^^^^216^222^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^result = starts.length;^219^^^^^216^222^result = this.startData.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^result  =  result ;^219^^^^^216^222^result = this.startData.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^result = this.startData[0].length;result = this.startData.length;^219^^^^^216^222^result = this.startData.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^result  = null ;^219^^^^^216^222^result = this.startData.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^long  result = -1;^235^^^^^234^243^int result = -1;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^int result = -;^235^^^^^234^243^int result = -1;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int result = 0;int result = -1;^235^^^^^234^243^int result = -1;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKey.equals ( seriesKeys[i] )  )  {^237^^^^^234^243^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( this.seriesKeys.equals ( seriesKey[i] )  )  {^237^^^^^234^243^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( category.equals ( this.categoryKeys[i] )  )  {^237^^^^^234^243^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^result = i; break;^237^238^239^240^^234^243^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  { result = i; break; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^237^238^239^240^^234^243^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  { result = i; break; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( category.equals ( this.categoryKeys[i] )  )  {     result = i;     break; }^237^^^^^234^243^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^result = result;^238^^^^^234^243^result = i;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^result =  null;^238^^^^^234^243^result = i;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^result[i] = name;result = i;^238^^^^^234^243^result = i;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^for  (  short  i = 0; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^for  ( int i = 0; i <= this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^for  ( int i = -7; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( resultnt i = 0; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( int i = 0; i < seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( this.seriesKeysnt i = 0; i < i.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^for  (  long  i = 0; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^for  ( int i = result; i < this.seriesKeys.length; i++ )  {^236^^^^^234^243^for  ( int i = 0; i < this.seriesKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  ( seriesKey .equals ( null )   )  {^237^^^^^234^243^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return i;^242^^^^^234^243^return result;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesIndex [RETURN_TYPE] int   Comparable seriesKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  seriesKey  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series >= getSeriesCount (  )  )  &&  ( series < 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < getSeriesCount (  )  )  ||  ( series < 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series >= getSeriesCount (  )  )  ||  ( series == 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < -1 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (  ( series >= getSeriesCount (  )  )  ) {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (   ( series < 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series >= getSeriesCount (  ) )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series < 0 )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "No such series : " + series )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  (  ( series >= getRowCount (  )  )  ||  ( series < 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 4 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^255^^^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("No such series : " + series));^255^256^257^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^255^256^257^^^254^259^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( row >=  ( getRowCount (  )  )  )  ||  ( row < 0 )  )  {     throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^255^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^256^^^^^254^259^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^return ;^256^^^^^254^259^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^return seriesKeys[series];^258^^^^^254^259^return this.seriesKeys[series];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getSeriesKey [RETURN_TYPE] Comparable   int series [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesKeys != null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^if  ( categoryKeys == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P8_Replace_Mix]^if  ( seriesKeys == false )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( this.categoryKeys == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( array1 == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( array == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( categoryKeys[i] == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( columnKey == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( this.seriesKeys == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( array2 == null )  {^271^^^^^270^280^if  ( seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'seriesKeys' argument.");^271^272^273^^^270^280^if  ( seriesKeys == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P16_Remove_Block]^^271^272^273^^^270^280^if  ( seriesKeys == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( row >=  ( getRowCount (  )  )  )  ||  ( row < 0 )  )  {     throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^271^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'categoryKeys' argument." )   ;^272^^^^^270^280^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^272^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^272^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^272^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^272^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P2_Replace_Operator]^if  ( seriesKeys.length == getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^if  ( categoryKeys.length != getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^if  ( seriesKeys.length.length != getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^if  ( seriesKeys != getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P7_Replace_Invocation]^if  ( seriesKeys.length != getRowCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P8_Replace_Mix]^if  ( 4 != getSeriesCount (  )  )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( seriesKeys.length != seriesCount )  {^274^^^^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number of series keys does not match the data.");^274^275^276^277^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  { throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P16_Remove_Block]^^274^275^276^277^^270^280^if  ( seriesKeys.length != getSeriesCount (  )  )  { throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( row >=  ( getRowCount (  )  )  )  ||  ( row < 0 )  )  {     throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^274^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The numbe" ) ;^275^276^^^^270^280^throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  )  ;^275^276^^^^270^280^throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^275^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^275^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^275^^^^^270^280^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of series keys does not match the data.eys " ) ;^275^276^^^^270^280^throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ries keys does not match he number of series keys does not match the data." ) ;^275^276^^^^270^280^throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( " keyhe number of series keys does not match the data." ) ;^275^276^^^^270^280^throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^this.seriesKeys = categoryKeys;^278^^^^^270^280^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P11_Insert_Donor_Statement]^this.categoryKeys = categoryKeys;this.seriesKeys = seriesKeys;^278^^^^^270^280^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P11_Insert_Donor_Statement]^this.seriesKeys = null;this.seriesKeys = seriesKeys;^278^^^^^270^280^this.seriesKeys = seriesKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P14_Delete_Statement]^^279^^^^^270^280^fireDatasetChanged (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setSeriesKeys [RETURN_TYPE] void   Comparable[] seriesKeys [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P1_Replace_Type]^long  result = 0;^290^^^^^289^297^int result = 0;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^int result = result;^290^^^^^289^297^int result = 0;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int result = -1;int result = 0;^290^^^^^289^297^int result = 0;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( this.startData == null )  {^291^^^^^289^297^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( startData != null )  {^291^^^^^289^297^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( getSeriesCount() > 0 )  {^291^^^^^289^297^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( this.startData != this )  {^291^^^^^289^297^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.categoryKeys == null )  {^291^^^^^289^297^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.seriesKeys == null )  {^291^^^^^289^297^if  ( this.startData != null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^if ((getSeriesCount()) > 0) {    result = this.startData[0].length;};^291^292^293^294^^289^297^if  ( this.startData != null )  { if  ( getSeriesCount (  )  > 0 )  { result = this.startData[0].length; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^291^292^293^294^^289^297^if  ( this.startData != null )  { if  ( getSeriesCount (  )  > 0 )  { result = this.startData[0].length; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( this.startData )  != null )  {     result = length; }^291^^^^^289^297^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( getSeriesCount (  )  )  > 0 )  {     result = length; }^291^^^^^289^297^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( getSeriesCount (  )  == 0 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( getSeriesCount (  )  > result )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  ( getRowCount (  )  > 0 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( getRowCount (  )  > 0 >>> 3 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesCount > 0 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^result = this.startData[0].length;^292^293^294^^^289^297^if  ( getSeriesCount (  )  > 0 )  { result = this.startData[0].length; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^292^293^294^^^289^297^if  ( getSeriesCount (  )  > 0 )  { result = this.startData[0].length; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( this.startData )  != null )  {     if  (  ( getSeriesCount (  )  )  > 0 )  {         result = length;     } }^292^^^^^289^297^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( this.startData )  != null )  {     result = length; }^292^^^^^289^297^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^result = this.startData[].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^result = starts[0].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^result = this.startData[0 ].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^result = this.startData.length;result = this.startData[0].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P12_Insert_Condition]^if  ( categoryKeys.length != this.startData[0].length )  { result = this.startData[0].length; }^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^result = this.startData[-1].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( getSeriesCount (  )  > -4 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( getRowCount (  )  > 0 + 3 )  {^292^^^^^289^297^if  ( getSeriesCount (  )  > 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^result = this.startData[result].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^result = this.startData[5].length;^293^^^^^289^297^result = this.startData[0].length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  result  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( this.categoryKeys != null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^if  ( seriesKeys == null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P8_Replace_Mix]^if  ( this.categoryKeys == false )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( categoryKeys == null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( seriesKeys != null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( this.startData != null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( categoryKeys[i] == null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( this.seriesKeys == null )  {^310^^^^^307^317^if  ( this.categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P15_Unwrap_Block]^return new java.util.ArrayList();^310^311^312^^^307^317^if  ( this.categoryKeys == null )  { return new ArrayList (  ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P16_Remove_Block]^^310^311^312^^^307^317^if  ( this.categoryKeys == null )  { return new ArrayList (  ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( this.seriesKeys )  == null )  {     return new ArrayList (  ) ; }else {     return unmodifiableList ( asList ( this.seriesKeys )  ) ; }^310^^^^^307^317^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P5_Replace_Variable]^return Collections.unmodifiableList ( Arrays.asList ( seriesKeys )  ) ;^314^315^^^^307^317^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( this.categoryKeys )  == null )  {     return new ArrayList (  ) ; }else {     return unmodifiableList ( asList ( this.categoryKeys )  ) ; }^314^^^^^307^317^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P14_Delete_Statement]^^314^315^316^^^307^317^return Collections.unmodifiableList ( Arrays.asList ( this.categoryKeys )  ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P1_Replace_Type]^return new  Set  (  ) ;^311^^^^^307^317^return new ArrayList (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P1_Replace_Type]^return new  LinkedList  (  ) ;^311^^^^^307^317^return new ArrayList (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P1_Replace_Type]^return new  List  (  ) ;^311^^^^^307^317^return new ArrayList (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  seriesKeys  boolean  
[P2_Replace_Operator]^if  ( categoryKeys != null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKeys == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryKeys == false )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.categoryKeys == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array1 == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys != null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys[i] == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( columnKey == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.seriesKeys == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( array2 == null )  {^329^^^^^328^345^if  ( categoryKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'categoryKeys' argument.");^329^330^331^^^328^345^if  ( categoryKeys == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^329^330^331^^^328^345^if  ( categoryKeys == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( row >=  ( getRowCount (  )  )  )  ||  ( row < 0 )  )  {     throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^329^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'seriesKeys' argument." )   ;^330^^^^^328^345^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^330^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^330^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^330^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^330^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryKeys.length == this.startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( categoryKeys.length != this.startData[i].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKeys.length != this.startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryKeys.i != this.startData[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( categoryKeys.length != starts[0].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryKeys.length != this.startData[0 ].length )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys.length != categoryCount )  {^332^^^^^328^345^if  ( categoryKeys.length != this.startData[0].length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The number of categories does not match the data.");^332^333^334^335^^328^345^if  ( categoryKeys.length != this.startData[0].length )  { throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^332^333^334^335^^328^345^if  ( categoryKeys.length != this.startData[0].length )  { throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^332^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^332^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^332^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( row >=  ( getRowCount (  )  )  )  ||  ( row < 0 )  )  {     throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^332^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^332^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^332^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^332^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^332^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of categories does not match the data.s does not m" ) ;^333^334^^^^328^345^throw new IllegalArgumentException ( "The number of categories does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "The number of series keys does not match the data." )  ;^333^334^^^^328^345^throw new IllegalArgumentException ( "The number of categories does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^333^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^333^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ber o" ) ;^333^334^^^^328^345^throw new IllegalArgumentException ( "The number of categories does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^333^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of categories does not match the data.T" ) ;^333^334^^^^328^345^throw new IllegalArgumentException ( "The number of categories does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The number of categories does not match the data.er of " ) ;^333^334^^^^328^345^throw new IllegalArgumentException ( "The number of categories does not match the data." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryKeys[i] != null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryKeys[i] == true )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys == null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( this.categoryKeys == null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys == null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys != null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( columnKey == null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.setCategoryKeys(): " + "null category not permitted."));^337^338^339^340^341^328^345^if  ( categoryKeys[i] == null )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^337^338^339^340^341^328^345^if  ( categoryKeys[i] == null )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^337^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^337^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^337^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^337^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^337^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^337^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^337^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^337^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  <  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "ul" ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  )  : " + "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^338^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^338^^^^^328^345^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  ^  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + " category not ull category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^for  (  long  i = 0; i < categoryKeys.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^for  ( int i = 0; i <= categoryKeys.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < categoryKeys.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( int i = 0; i < seriesKeys.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( categoryKeys.lengthnt i = 0; i < i; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( int i = 0; i < categoryKeys.length.length; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( int i = 0; i < categoryKeys; i++ )  {^336^^^^^328^345^for  ( int i = 0; i < categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesKeys[i] == null )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesKeys[i] == this )  {^337^^^^^328^345^if  ( categoryKeys[i] == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  !=  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "ull caull category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "   instanceof   "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "tegory no" ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  ==  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "u" ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "ll category noull category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  <=  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted.ul" ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : "  >>  "null category not permitted." ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "l" ) ;^338^339^340^^^328^345^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^this.categoryKeys = seriesKeys;^343^^^^^328^345^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.categoryKeys = null;this.categoryKeys = categoryKeys;^343^^^^^328^345^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.seriesKeys = seriesKeys;this.categoryKeys = categoryKeys;^343^^^^^328^345^this.categoryKeys = categoryKeys;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^344^^^^^328^345^fireDatasetChanged (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setCategoryKeys [RETURN_TYPE] void   Comparable[] categoryKeys [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^short  seriesIndex = getSeriesIndex ( series ) ;^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int categoryIndex = getSeriesIndex ( series ) ;^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^int seriesIndex = getRowIndex ( series ) ;^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int categoryIndex = getCategoryIndex ( category ) ;int seriesIndex = getSeriesIndex ( series ) ;^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int itemIndex = getColumnIndex ( category ) ;int seriesIndex = getSeriesIndex ( series ) ;^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^int categoryIndex = getRowIndex ( series ) ;^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^return getSeriesIndex ( rowKey ) ;int seriesIndex = getSeriesIndex ( series ) ;^361^^^^^360^370^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesIndex <= 0 )  {^362^^^^^360^370^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( seriesIndex < -2 )  {^362^^^^^360^370^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( itemIndex < 0 )  {^362^^^^^360^370^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( itemIndex < 4 )  {^362^^^^^360^370^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesCount > 0 )  {^362^^^^^360^370^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryIndex < 0 )  {^362^^^^^360^370^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new org.jfree.data.UnknownKeyException("Unknown 'series' key.");^362^363^364^^^360^370^if  ( seriesIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^362^363^364^^^360^370^if  ( seriesIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^362^^^^^360^370^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^362^^^^^360^370^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new UnknownKeyException ( "Unknown 'category' key." )   ;^363^^^^^360^370^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^363^^^^^360^370^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^363^^^^^360^370^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new UnknownKeyException  (" ")  ;^363^^^^^360^370^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^363^^^^^360^370^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^short  itemIndex = getColumnIndex ( category ) ;^365^^^^^360^370^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int itemIndex = getColumnIndex ( series ) ;^365^^^^^360^370^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^int itemIndex = getRowIndex ( category ) ;^365^^^^^360^370^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int categoryIndex = getCategoryIndex ( category ) ;int itemIndex = getColumnIndex ( category ) ;^365^^^^^360^370^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int seriesIndex = getSeriesIndex ( series ) ;int itemIndex = getColumnIndex ( category ) ;^365^^^^^360^370^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^365^^^^^360^370^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( itemIndex == 0 )  {^366^^^^^360^370^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( itemIndex < seriesIndex )  {^366^^^^^360^370^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesIndex < 0 )  {^366^^^^^360^370^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( itemIndex < 0 - 0 )  {^366^^^^^360^370^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryIndex < 0 )  {^366^^^^^360^370^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new org.jfree.data.UnknownKeyException("Unknown 'category' key.");^366^367^368^^^360^370^if  ( itemIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^366^367^368^^^360^370^if  ( itemIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^366^^^^^360^370^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new UnknownKeyException ( "Unknown 'series' key." )   ;^367^^^^^360^370^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^367^^^^^360^370^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^367^^^^^360^370^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new UnknownKeyException  (" ")  ;^367^^^^^360^370^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getValue (  itemIndex ) ;^369^^^^^360^370^return getValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getValue ( seriesIndex ) ;^369^^^^^360^370^return getValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getValue ( itemIndex, seriesIndex ) ;^369^^^^^360^370^return getValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^return getEndValue ( seriesIndex, itemIndex ) ;^369^^^^^360^370^return getValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^369^^^^^360^370^return getValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getEndValue (  category ) ;^386^^^^^385^387^return getEndValue ( series, category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getEndValue ( series ) ;^386^^^^^385^387^return getEndValue ( series, category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getEndValue ( category, series ) ;^386^^^^^385^387^return getEndValue ( series, category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^return getValue ( series, category ) ;^386^^^^^385^387^return getEndValue ( series, category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^386^^^^^385^387^return getEndValue ( series, category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^short  seriesIndex = getSeriesIndex ( series ) ;^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int categoryIndex = getSeriesIndex ( series ) ;^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^int seriesIndex = getRowIndex ( series ) ;^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^int categoryIndex = getRowIndex ( series ) ;^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int categoryIndex = getCategoryIndex ( category ) ;int seriesIndex = getSeriesIndex ( series ) ;^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int itemIndex = getColumnIndex ( category ) ;int seriesIndex = getSeriesIndex ( series ) ;^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^return getSeriesIndex ( rowKey ) ;int seriesIndex = getSeriesIndex ( series ) ;^401^^^^^400^410^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesIndex <= 0 )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( seriesIndex < itemIndex )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( itemIndex < 0 )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesIndex < 0 >>> 4 )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesCount > 0 )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryIndex < 0 )  {^402^^^^^400^410^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new org.jfree.data.UnknownKeyException("Unknown 'series' key.");^402^403^404^^^400^410^if  ( seriesIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^402^403^404^^^400^410^if  ( seriesIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^402^^^^^400^410^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^402^^^^^400^410^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new UnknownKeyException ( "Unknown 'category' key." )   ;^403^^^^^400^410^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^403^^^^^400^410^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^403^^^^^400^410^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new UnknownKeyException  (" ")  ;^403^^^^^400^410^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^short  itemIndex = getColumnIndex ( category ) ;^405^^^^^400^410^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int itemIndex = getColumnIndex ( series ) ;^405^^^^^400^410^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^int itemIndex = getRowIndex ( category ) ;^405^^^^^400^410^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^int itemIndex = getRowIndex ( series ) ;^405^^^^^400^410^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int categoryIndex = getCategoryIndex ( category ) ;int itemIndex = getColumnIndex ( category ) ;^405^^^^^400^410^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int seriesIndex = getSeriesIndex ( series ) ;int itemIndex = getColumnIndex ( category ) ;^405^^^^^400^410^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^405^^^^^400^410^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( itemIndex <= 0 )  {^406^^^^^400^410^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( itemIndex < -8 )  {^406^^^^^400^410^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesIndex < 0 )  {^406^^^^^400^410^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( seriesIndex < 2 )  {^406^^^^^400^410^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryIndex < 0 )  {^406^^^^^400^410^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new org.jfree.data.UnknownKeyException("Unknown 'category' key.");^406^407^408^^^400^410^if  ( itemIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^406^407^408^^^400^410^if  ( itemIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^406^^^^^400^410^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new UnknownKeyException ( "Unknown 'series' key." )   ;^407^^^^^400^410^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^407^^^^^400^410^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^407^^^^^400^410^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new UnknownKeyException  (" ")  ;^407^^^^^400^410^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^407^^^^^400^410^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getStartValue (  itemIndex ) ;^409^^^^^400^410^return getStartValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getStartValue ( seriesIndex ) ;^409^^^^^400^410^return getStartValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getStartValue ( itemIndex, seriesIndex ) ;^409^^^^^400^410^return getStartValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^return getValue ( seriesIndex, itemIndex ) ;^409^^^^^400^410^return getStartValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^409^^^^^400^410^return getStartValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  &&  ( series >= getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series <= 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  ||  ( series == getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( series < -7 )  ||  ( series >= getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  (  ( category < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (  ( series < 0 )  ) {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (   ( series >= getSeriesCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series < 0 )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series >= getSeriesCount (  ) )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  (  ( series < 0 )  ||  ( series >= getRowCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  (  ( series < 4 )  ) {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^426^^^^^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.getValue(): " + "series index out of range."));^426^427^428^429^430^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^426^427^428^429^430^423^441^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^426^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^426^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^426^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^426^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^426^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^426^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^426^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  <  "series index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index oeries index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  )  : " + "series index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^427^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^427^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^427^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^427^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^427^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  &&  "series index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range.in" ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  ^  "series index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + " of ra" ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  &  "series index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "ies index out of rangeries index out of range." ) ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^return ;^427^428^429^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( category < 0 )  &&  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( category == 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( category < 0 )  ||  ( category > getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( category < 9 )  ||  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  (  ( series < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (  ( category < 0 )  ) {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (   ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( category < 0 )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( category >= getCategoryCount (  ) )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  (  ( category < 0 )  ||  ( category >= getSeriesCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  (  ( series < 1 )  ||  ( category >= getCategoryCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^432^^^^^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.getValue(): " + "category index out of range."));^432^433^434^435^436^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^432^433^434^435^436^423^441^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^432^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^432^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^432^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^432^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^432^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^432^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^432^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  ||  "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "y indexategory index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  )  : " + "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^433^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^433^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^433^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^433^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^433^^^^^423^441^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  |  "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category in" ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  >>  "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "tegory index out of rategory index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  !=  "category index out of range." ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range.egory index o" ) ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^433^434^435^^^423^441^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return starts[series][category];^439^^^^^423^441^return this.startData[series][category];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^return startData[series][category];^439^^^^^423^441^return this.startData[series][category];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getStartValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^long  seriesIndex = getSeriesIndex ( series ) ;^454^^^^^453^463^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int categoryIndex = getSeriesIndex ( series ) ;^454^^^^^453^463^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^int seriesIndex = getRowIndex ( series ) ;^454^^^^^453^463^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int categoryIndex = getCategoryIndex ( category ) ;int seriesIndex = getSeriesIndex ( series ) ;^454^^^^^453^463^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int itemIndex = getColumnIndex ( category ) ;int seriesIndex = getSeriesIndex ( series ) ;^454^^^^^453^463^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^454^^^^^453^463^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^return getSeriesIndex ( rowKey ) ;int seriesIndex = getSeriesIndex ( series ) ;^454^^^^^453^463^int seriesIndex = getSeriesIndex ( series ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( seriesIndex <= 0 )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( seriesIndex < seriesIndex )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( itemIndex < 0 )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( itemIndex < 0 % 3 )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesCount > 0 )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryIndex < 0 )  {^455^^^^^453^463^if  ( seriesIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new org.jfree.data.UnknownKeyException("Unknown 'series' key.");^455^456^457^^^453^463^if  ( seriesIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^455^456^457^^^453^463^if  ( seriesIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^455^^^^^453^463^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^455^^^^^453^463^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new UnknownKeyException ( "Unknown 'category' key." )   ;^456^^^^^453^463^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^456^^^^^453^463^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^456^^^^^453^463^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^return 0;^456^^^^^453^463^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new UnknownKeyException  (" ")  ;^456^^^^^453^463^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^456^^^^^453^463^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^short  itemIndex = getColumnIndex ( category ) ;^458^^^^^453^463^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^int itemIndex = getColumnIndex ( series ) ;^458^^^^^453^463^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^int itemIndex = getRowIndex ( category ) ;^458^^^^^453^463^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int categoryIndex = getCategoryIndex ( category ) ;int itemIndex = getColumnIndex ( category ) ;^458^^^^^453^463^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int seriesIndex = getSeriesIndex ( series ) ;int itemIndex = getColumnIndex ( category ) ;^458^^^^^453^463^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^int itemIndex = getRowIndex ( series ) ;^458^^^^^453^463^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^458^^^^^453^463^int itemIndex = getColumnIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( itemIndex <= 0 )  {^459^^^^^453^463^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( itemIndex < seriesIndex )  {^459^^^^^453^463^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( seriesIndex < 0 )  {^459^^^^^453^463^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( itemIndex < 0L )  {^459^^^^^453^463^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( categoryIndex < 0 )  {^459^^^^^453^463^if  ( itemIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new org.jfree.data.UnknownKeyException("Unknown 'category' key.");^459^460^461^^^453^463^if  ( itemIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^459^460^461^^^453^463^if  ( itemIndex < 0 )  { throw new UnknownKeyException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^459^^^^^453^463^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new UnknownKeyException ( "Unknown 'series' key." )   ;^460^^^^^453^463^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'series' key." ) ; }^460^^^^^453^463^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( itemIndex < 0 )  {     throw new UnknownKeyException ( "Unknown 'category' key." ) ; }^460^^^^^453^463^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^460^^^^^453^463^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new UnknownKeyException  (" ")  ;^460^^^^^453^463^throw new UnknownKeyException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getEndValue (  itemIndex ) ;^462^^^^^453^463^return getEndValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getEndValue ( seriesIndex ) ;^462^^^^^453^463^return getEndValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return getEndValue ( itemIndex, seriesIndex ) ;^462^^^^^453^463^return getEndValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^return getValue ( seriesIndex, itemIndex ) ;^462^^^^^453^463^return getEndValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^462^^^^^453^463^return getEndValue ( seriesIndex, itemIndex ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   Comparable series Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  series  boolean  int  itemIndex  seriesIndex  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  &&  ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series <= 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( series < series )  ||  ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  (  ( category < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (  ( series < 0 )  ) {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (   ( series >= getSeriesCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series < 0 )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series >= getSeriesCount (  ) )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  (  ( series < 0 )  ||  ( series >= getRowCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  (  ( series < 3 )  ) {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^476^^^^^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.getValue(): " + "series index out of range."));^476^477^478^479^480^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^476^477^478^479^480^475^489^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^476^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  != seriesCount )  {     throw new IllegalArgumentException (  ( "The number of series keys does not " + "match the number of series in the data." )  ) ; }^476^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^476^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^476^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^476^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^476^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^476^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  <  "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "of eries index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  )  : " + "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^477^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^477^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^477^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^477^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^477^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  &  "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "u" ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  >>  "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range.series index out of range" ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  ==  "series index out of range." ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + " out of" ) ;^477^478^479^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( category < 0 )  &&  ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( category <= 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( category < 0 )  ||  ( category > getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( category < -4 )  ||  ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  (  ( series < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (  ( category < 0 )  ) {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (   ( category >= getCategoryCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( category < 0 )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( category >= getCategoryCount (  ) )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  (  ( category < 0 )  ||  ( category >= getSeriesCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  (  ( category < 0 - 2 )  ) {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^482^^^^^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.getValue(): " + "category index out of range."));^482^483^484^485^486^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^482^483^484^485^486^475^489^if  (  ( category < 0 )  ||  ( category >= getCategoryCount (  )  )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^482^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^482^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^482^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^482^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^482^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^482^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^482^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  ||  "category index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + " index oategory index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  )  : " + "category index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^483^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^483^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^483^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^483^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^483^^^^^475^489^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  ^  "category index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "egory in" ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  |  "category index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range.egor" ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : "  >  "category index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + " out ategory index out of range." ) ;^483^484^485^^^475^489^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^return startData[series][category];^488^^^^^475^489^return this.endData[series][category];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getEndValue [RETURN_TYPE] Number   int series int category [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  category  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  &&  ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series <= 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )   &  1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( series < -7 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - series )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  (  ( categoryIndex < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (  ( series < 0 )  ) {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (   ( series > getSeriesCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series < 0 )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series >  ( getSeriesCount (  )  )  - 1 )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( getSeriesCount (  )  - 1 )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  (  ( series < 0 )  ||  ( series > getRowCount (  )  - 1 )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  (  ( categoryIndex < 3 )  ) {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^504^^^^^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.setValue: " + "series outside valid range."));^504^505^506^507^508^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^504^505^506^507^508^501^522^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^504^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^504^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^504^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^504^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^504^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^504^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >=  "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: DefaultIntervalCateg" + "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range.outs" ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  )  ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^505^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^505^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^505^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^505^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^505^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >  "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Dataset.setValu" + "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "s" ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ^  "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ultIefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "utside " ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ||  "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ltIntervalCateg" + "series outside valid range." ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range.ries ou" ) ;^505^506^507^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^short  categoryIndex = getCategoryIndex ( category ) ;^511^^^^^501^522^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^int categoryIndex = getSeriesIndex ( category ) ;^511^^^^^501^522^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int itemIndex = getColumnIndex ( category ) ;int categoryIndex = getCategoryIndex ( category ) ;^511^^^^^501^522^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int seriesIndex = getSeriesIndex ( series ) ;int categoryIndex = getCategoryIndex ( category ) ;^511^^^^^501^522^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^511^^^^^501^522^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^return getCategoryIndex ( columnKey ) ;int categoryIndex = getCategoryIndex ( category ) ;^511^^^^^501^522^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryIndex == 0 )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( categoryIndex < -4 )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( series < 0 )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( series < 2 )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( itemIndex < 0 )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesIndex < 0 )  {^512^^^^^501^522^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.setValue: " + "unrecognised category."));^512^513^514^515^516^501^522^if  ( categoryIndex < 0 )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^512^513^514^515^516^501^522^if  ( categoryIndex < 0 )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^512^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  &&  "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: De" + "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "reconrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  )  ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^513^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^513^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^513^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^513^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^513^^^^^501^522^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >=  "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "eefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "cognised " ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^throw new IllegalArgumentException ( "The number of category keys does not match " ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ==  "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: DefaultIntervalCatego" + "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category.ecognise" ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >  "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: ultInterval" + "unrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "recnrecognised category." ) ;^513^514^515^^^501^522^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.startData[series][categoryIndex]  =  this.startData[series][categoryIndex] ;^519^^^^^501^522^this.startData[series][categoryIndex] = value;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.endData[series][categoryIndex] = value;this.startData[series][categoryIndex] = value;^519^^^^^501^522^this.startData[series][categoryIndex] = value;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^520^^^^^501^522^fireDatasetChanged (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setStartValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  &&  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series <= 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  ||  ( series == getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )    instanceof   1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( series < -8 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )   )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  (  ( categoryIndex < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (  ( series < 0 )  ) {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  (   ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series < 0 )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( series >  ( getSeriesCount (  )  )  - 1 )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( getSeriesCount (  )  - 1 )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^if  (  ( series < 0 )  ||  ( series > getRowCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  (  ( series < 1 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  (  ( series < 0 )  ||  ( series >= getSeriesCount (  )  )  )  {^537^^^^^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.setValue: " + "series outside valid range."));^537^538^539^540^541^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^537^538^539^540^541^534^555^if  (  ( series < 0 )  ||  ( series > getSeriesCount (  )  - 1 )  )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^537^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^537^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^537^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^537^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^537^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^537^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ||  "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: nte" + "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range.s" ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  )  ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^538^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^538^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^538^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^538^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^538^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >>  "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "efaultIntervalCaefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "s outeries outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ^  "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: efau" + "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "erie" ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >  "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: D" + "series outside valid range." ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + " valid" ) ;^538^539^540^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^short  categoryIndex = getCategoryIndex ( category ) ;^544^^^^^534^555^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P7_Replace_Invocation]^int categoryIndex = getSeriesIndex ( category ) ;^544^^^^^534^555^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int itemIndex = getColumnIndex ( category ) ;int categoryIndex = getCategoryIndex ( category ) ;^544^^^^^534^555^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int seriesIndex = getSeriesIndex ( series ) ;int categoryIndex = getCategoryIndex ( category ) ;^544^^^^^534^555^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^544^^^^^534^555^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^return getCategoryIndex ( columnKey ) ;int categoryIndex = getCategoryIndex ( category ) ;^544^^^^^534^555^int categoryIndex = getCategoryIndex ( category ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^if  ( categoryIndex <= 0 )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^if  ( categoryIndex < 7 )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( series < 0 )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P6_Replace_Expression]^if  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^if  ( categoryIndex < 0 << 0 )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( itemIndex < 0 )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesIndex < 0 )  {^545^^^^^534^555^if  ( categoryIndex < 0 )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("DefaultIntervalCategoryDataset.setValue: " + "unrecognised category."));^545^546^547^548^549^534^555^if  ( categoryIndex < 0 )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^545^546^547^548^549^534^555^if  ( categoryIndex < 0 )  { throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  != categoryCount )  {     throw new IllegalArgumentException (  ( "The number of category keys does not match " + "the number of categories in the data." )  ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^545^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ||  "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "lCategoryDataset.setVal" + "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category.u" ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  )  ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^546^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >=  ( getSeriesCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "series index out of range." )  ) ; }^546^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( series < 0 )  ||  ( series >  (  ( getSeriesCount (  )  )  - 1 )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "series outside valid range." )  ) ; }^546^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^546^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  (  ( category < 0 )  ||  ( category >=  ( getCategoryCount (  )  )  )  )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.getValue (  ) : " + "category index out of range." )  ) ; }^546^^^^^534^555^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  >>  "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "tefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "   instanceof   "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ltIntervalCategoryDataset.setVefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category.nrecognised c" ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: "  ==  "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "efa" + "unrecognised category." ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category.co" ) ;^546^547^548^^^534^555^throw new IllegalArgumentException ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^this.endData[series][categoryIndex]  =  this.endData[series][categoryIndex] ;^552^^^^^534^555^this.endData[series][categoryIndex] = value;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^this.startData[series][categoryIndex] = value;this.endData[series][categoryIndex] = value;^552^^^^^534^555^this.endData[series][categoryIndex] = value;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P14_Delete_Statement]^^553^^^^^534^555^fireDatasetChanged (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] setEndValue [RETURN_TYPE] void   int series Comparable category Number value [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  Number  value  int  categoryIndex  series  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^long  result = -1;^567^^^^^566^575^int result = -1;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^int result = -result;^567^^^^^566^575^int result = -1;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^int result = 0;int result = -1;^567^^^^^566^575^int result = -1;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( category.equals ( seriesKeys[i] )  )  {^569^^^^^566^575^if  ( category.equals ( this.categoryKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^if  ( this.categoryKeys.equals ( category[i] )  )  {^569^^^^^566^575^if  ( category.equals ( this.categoryKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {^569^^^^^566^575^if  ( category.equals ( this.categoryKeys[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P15_Unwrap_Block]^result = i; break;^569^570^571^572^^566^575^if  ( category.equals ( this.categoryKeys[i] )  )  { result = i; break; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P16_Remove_Block]^^569^570^571^572^^566^575^if  ( category.equals ( this.categoryKeys[i] )  )  { result = i; break; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( seriesKey.equals ( this.seriesKeys[i] )  )  {     result = i;     break; }^569^^^^^566^575^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^result = result;^570^^^^^566^575^result = i;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P8_Replace_Mix]^result =  null;^570^^^^^566^575^result = i;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^result[i] = name;result = i;^570^^^^^566^575^result = i;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^for  (  short  i = 0; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P2_Replace_Operator]^for  ( int i = 0; i <= this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^for  ( int i = 8; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( resultnt i = 0; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( int i = 0; i < seriesKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^for  ( this.categoryKeysnt i = 0; i < i.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P13_Insert_Block]^if  ( category.equals ( this.categoryKeys[i] )  )  {     result = i;     break; }^569^^^^^566^575^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P1_Replace_Type]^for  (  long  i = 0; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P3_Replace_Literal]^for  ( int i = i; i < this.categoryKeys.length; i++ )  {^568^^^^^566^575^for  ( int i = 0; i < this.categoryKeys.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P5_Replace_Variable]^return i;^574^^^^^566^575^return result;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getCategoryIndex [RETURN_TYPE] int   Comparable category [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  category  boolean  int  i  result  Comparable[]  categoryKeys  seriesKeys  
[P11_Insert_Donor_Statement]^Number[][] result = new Number[array.length][];Comparable[] result = new Comparable[count];^587^^^^^586^594^Comparable[] result = new Comparable[count];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P1_Replace_Type]^char name;^588^^^^^586^594^String name;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P1_Replace_Type]^for  (  short  i = 0; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^for  ( int i = 0; i <= count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^for   instanceof   ( int i = 0; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^for  ==  ( int i = 0; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^for  ( int i = i; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^for  ( countnt i = 0; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^for  ( countnt i = 0; i < i; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^name = prefix +  >  ( i + 1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^name = prefix +  ( i  |  1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^name = prefix +  ( i  ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^name = name +  ( i + 1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^name = prefix +  ( count + 1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^name = i +  ( prefix + 1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^name = prefix +  ( i + 4 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^result[i]  = null ;^591^^^^^586^594^result[i] = name;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^result[i] = copychild;result[i] = name;^591^^^^^586^594^result[i] = name;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^result = i;result[i] = name;^591^^^^^586^594^result[i] = name;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^name = prefix +  ( i  <=  1 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^name = prefix +  ( i + 1 / 0 ) ;^590^^^^^586^594^name = prefix +  ( i + 1 ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^result[i] = prefix;^591^^^^^586^594^result[i] = name;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^result[i] ;^591^^^^^586^594^result[i] = name;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^for  ( int i = count; i < count; i++ )  {^589^^^^^586^594^for  ( int i = 0; i < count; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^return seriesKeys;^593^^^^^586^594^return result;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] generateKeys [RETURN_TYPE] Comparable[]   int count String prefix [VARIABLES] Number[][]  endData  ends  startData  starts  String  name  prefix  boolean  int  count  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^return seriesKeys[column];^606^^^^^605^607^return this.categoryKeys[column];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnKey [RETURN_TYPE] Comparable   int column [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  column  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  ( columnKey != null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  ( columnKey == this )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys == null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys == null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( array1 == null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys != null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( array == null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys[i] == null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( array2 == null )  {^619^^^^^618^623^if  ( columnKey == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'columnKey' argument.");^619^620^621^^^618^623^if  ( columnKey == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^619^620^621^^^618^623^if  ( columnKey == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( row >=  ( getRowCount (  )  )  )  ||  ( row < 0 )  )  {     throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys[i] )  == null )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setCategoryKeys (  ) : " + "null category not permitted." )  ) ; }^619^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'seriesKeys' argument." )   ;^620^^^^^618^623^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^620^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^620^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^620^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^620^^^^^618^623^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^return getSeriesIndex ( columnKey ) ;^622^^^^^618^623^return getCategoryIndex ( columnKey ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P14_Delete_Statement]^^622^^^^^618^623^return getCategoryIndex ( columnKey ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnIndex [RETURN_TYPE] int   Comparable columnKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  columnKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^return getRowIndex ( rowKey ) ;^635^^^^^634^636^return getSeriesIndex ( rowKey ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowIndex [RETURN_TYPE] int   Comparable rowKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  rowKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P14_Delete_Statement]^^635^^^^^634^636^return getSeriesIndex ( rowKey ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowIndex [RETURN_TYPE] int   Comparable rowKey [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable  rowKey  boolean  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  ( this.seriesKeys != null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P5_Replace_Variable]^if  ( seriesKeys == null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P8_Replace_Mix]^if  ( this.seriesKeys == true )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( this.categoryKeys == null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( categoryKeys == null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( seriesKeys != null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P9_Replace_Statement]^if  ( this.startData != null )  {^649^^^^^646^655^if  ( this.seriesKeys == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P15_Unwrap_Block]^return new java.util.ArrayList();^649^650^651^^^646^655^if  ( this.seriesKeys == null )  { return new java.util.ArrayList (  ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P16_Remove_Block]^^649^650^651^^^646^655^if  ( this.seriesKeys == null )  { return new java.util.ArrayList (  ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( this.categoryKeys )  == null )  {     return new ArrayList (  ) ; }else {     return unmodifiableList ( asList ( this.categoryKeys )  ) ; }^649^^^^^646^655^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P5_Replace_Variable]^return Collections.unmodifiableList ( Arrays.asList ( seriesKeys )  ) ;^653^^^^^646^655^return Collections.unmodifiableList ( Arrays.asList ( this.seriesKeys )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P13_Insert_Block]^if  (  ( this.seriesKeys )  == null )  {     return new ArrayList (  ) ; }else {     return unmodifiableList ( asList ( this.seriesKeys )  ) ; }^653^^^^^646^655^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P5_Replace_Variable]^return Collections.unmodifiableList ( Arrays.asList ( result )  ) ;^653^^^^^646^655^return Collections.unmodifiableList ( Arrays.asList ( this.seriesKeys )  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P14_Delete_Statement]^^653^654^^^^646^655^return Collections.unmodifiableList ( Arrays.asList ( this.seriesKeys )  ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P1_Replace_Type]^return new java.util. List  (  ) ;^650^^^^^646^655^return new java.util.ArrayList (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P1_Replace_Type]^return new java.util. LinkedHashSet  (  ) ;^650^^^^^646^655^return new java.util.ArrayList (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P1_Replace_Type]^return new java.util. LinkedList  (  ) ;^650^^^^^646^655^return new java.util.ArrayList (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P1_Replace_Type]^return new java.util. Set  (  ) ;^650^^^^^646^655^return new java.util.ArrayList (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKeys [RETURN_TYPE] List   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P2_Replace_Operator]^if  (  ( row >= getRowCount (  )  )  &&  ( row < 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  (  ( row > getRowCount (  )  )  ||  ( row < 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  (  ( row >= getRowCount (  )  )  ||  ( row <= 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^if  (  ( row >= getRowCount (  )  )  ||  ( row <  )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P6_Replace_Expression]^if  (  ( row >= getRowCount (  )  )  ) {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P6_Replace_Expression]^if  (   ( row < 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P6_Replace_Expression]^if  ( row >= getRowCount (  ) )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P6_Replace_Expression]^if  ( row < 0 )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^if  (  ( row >= getSeriesCount (  )  )  ||  ( row < 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0L )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  (  ( series >= getSeriesCount (  )  )  ||  ( series < 0 )  )  {^667^^^^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("The 'row' argument is out of bounds.");^667^668^669^670^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  { throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^667^668^669^670^^666^672^if  (  ( row >= getRowCount (  )  )  ||  ( row < 0 )  )  { throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^667^^^^^666^672^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( categoryKeys.length )  !=  ( length )  )  {     throw new IllegalArgumentException ( "The number of categories does not match the data." ) ; }^667^^^^^666^672^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^667^^^^^666^672^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^667^^^^^666^672^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^667^^^^^666^672^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^667^^^^^666^672^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^667^^^^^666^672^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "The 'row' argument is out of bounds.out of bo" ) ;^668^669^^^^666^672^throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( row >=  ( getRowCount (  )  )  )  ||  ( row < 0 )  )  {     throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^668^^^^^666^672^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nt is out of bounhe 'row' argument is out of bounds." ) ;^668^669^^^^666^672^throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "'row' ahe 'row' argument is out of bounds." ) ;^668^669^^^^666^672^throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "nt is out " ) ;^668^669^^^^666^672^throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^return seriesKeys[row];^671^^^^^666^672^return this.seriesKeys[row];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowKey [RETURN_TYPE] Comparable   int row [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  int  row  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^return seriesKeys.length;^684^^^^^683^685^return this.categoryKeys.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P8_Replace_Mix]^return result.length;^684^^^^^683^685^return this.categoryKeys.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getColumnCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P5_Replace_Variable]^return seriesKeys.length;^696^^^^^695^697^return this.seriesKeys.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P8_Replace_Mix]^return result.length;^696^^^^^695^697^return this.seriesKeys.length;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] getRowCount [RETURN_TYPE] int   [VARIABLES] Number[][]  endData  ends  startData  starts  Comparable[]  categoryKeys  result  seriesKeys  boolean  
[P2_Replace_Operator]^if  ( obj >= this )  {^707^^^^^706^729^if  ( obj == this )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return true;^707^708^709^^^706^729^if  ( obj == this )  { return true; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^707^708^709^^^706^729^if  ( obj == this )  { return true; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array1 == null )  {     return array2 == null; }^707^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array2 == null )  {     return false; }^707^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return false;^708^^^^^706^729^return true;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  ( ! ( obj  >>  DefaultIntervalCategoryDataset )  )  {^710^^^^^706^729^if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  (  ( obj instanceof DefaultIntervalCategoryDataset )  )  {^710^^^^^706^729^if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return false;^710^711^712^^^706^729^if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^710^711^712^^^706^729^if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equal ( this.endData, that.endData )  )  )  {     return false; }^710^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( this.categoryKeys, that.categoryKeys )  )  )  {     return false; }^710^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equal ( this.startData, that.startData )  )  )  {     return false; }^710^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return true;^711^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;DefaultIntervalCategoryDataset that =  ( DefaultIntervalCategoryDataset )  obj;^713^714^^^^706^729^DefaultIntervalCategoryDataset that =  ( DefaultIntervalCategoryDataset )  obj;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( seriesKeys, that.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.seriesKeys, seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.seriesKeys.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals (  that.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( that, this.seriesKeys.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( that.seriesKeys, this.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.seriesKeys, that )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^if  ( !Arrays.asList ( this.seriesKeys, that.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  ( !Arrays.equals ( this.seriesKeys, result )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return false;^715^716^717^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^715^716^717^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( array1[i], array2[i] )  )  )  {     return false; }^715^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( this.categoryKeys, that.categoryKeys )  )  )  {     return false; }^715^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return true;^716^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( result, that.seriesKeys )  )  {^715^^^^^706^729^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( this.seriesKeys, that.seriesKeys )  )  )  {     return false; }^715^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( seriesKeys, that.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.categoryKeys, seriesKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.categoryKeys.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals (  that.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( that, this.categoryKeys.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( that.categoryKeys, this.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^if  ( !Arrays.asList ( this.categoryKeys, that.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  ( !Arrays.asList ( this.categoryKeys, seriesKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( !Arrays.equals ( this.seriesKeys, that.seriesKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return false;^718^719^720^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^718^719^720^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( array1[i], array2[i] )  )  )  {     return false; }^718^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( this.seriesKeys, that.seriesKeys )  )  )  {     return false; }^718^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  {     return false; }^718^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return true;^719^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( this.categoryKeys, that )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  ( !Arrays.equals ( result, that.categoryKeys )  )  {^718^^^^^706^729^if  ( !Arrays.equals ( this.categoryKeys, that.categoryKeys )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( this.categoryKeys, that.categoryKeys )  )  )  {     return false; }^718^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( starts, that.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.startData, startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.startData.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal (  that.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.startData, that.startData.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( that, this.startData.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.startData, that )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^if  ( !clone ( this.startData, that.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  ( !equal ( startData, that.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( !equal ( this.endData, that.endData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return false;^721^722^723^^^706^729^if  ( !equal ( this.startData, that.startData )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^721^722^723^^^706^729^if  ( !equal ( this.startData, that.startData )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equal ( this.endData, that.endData )  )  )  {     return false; }^721^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  {     return false; }^721^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return true;^722^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.startData, starts )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( that.startData, this.startData )  )  {^721^^^^^706^729^if  ( !equal ( this.startData, that.startData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equal ( this.startData, that.startData )  )  )  {     return false; }^721^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( startData, that.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.endData, startData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.endData.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal (  that.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.endData, that.endData.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( that, this.endData.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( that.endData, this.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^if  ( !clone ( this.endData, that.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( !equal ( this.startData, that.startData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return false;^724^725^726^^^706^729^if  ( !equal ( this.endData, that.endData )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^724^725^726^^^706^729^if  ( !equal ( this.endData, that.endData )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( obj instanceof DefaultIntervalCategoryDataset )  )  {     return false; }^724^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equal ( this.startData, that.startData )  )  )  {     return false; }^724^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return true;^725^^^^^706^729^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( starts, that.endData )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !equal ( this.endData, starts )  )  {^724^^^^^706^729^if  ( !equal ( this.endData, that.endData )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equal ( this.endData, that.endData )  )  )  {     return false; }^724^^^^^706^729^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return false;^728^^^^^706^729^return true;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Number[][]  endData  ends  startData  starts  Object  obj  boolean  DefaultIntervalCategoryDataset  that  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super.equals (  ) ;^740^741^^^^739^747^DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super .clone ( starts )  ;^740^741^^^^739^747^DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^DefaultIntervalCategoryDataset that =  ( DefaultIntervalCategoryDataset )  obj;DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;^740^741^^^^739^747^DefaultIntervalCategoryDataset clone =  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^=  ( DefaultIntervalCategoryDataset )  super.equals (  ) ;^741^^^^^739^747^=  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^=  ( DefaultIntervalCategoryDataset )  super .clone ( endData )  ;^741^^^^^739^747^=  ( DefaultIntervalCategoryDataset )  super.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P14_Delete_Statement]^^741^742^^^^739^747^=  ( DefaultIntervalCategoryDataset )  super.clone (  ) ; clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^clone.categoryKeys =  ( Comparable[] )  seriesKeys.clone (  ) ;^742^^^^^739^747^clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^clone.categoryKeys =   ( Comparable[] )  this.categoryKeys.null (  ) ;^742^^^^^739^747^clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^742^^^^^739^747^clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^clone.categoryKeys =  ( Comparable[] )  result.clone (  ) ;^742^^^^^739^747^clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P14_Delete_Statement]^^742^^^^^739^747^clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^clone.seriesKeys =  ( Comparable[] )  seriesKeys.clone (  ) ;^743^^^^^739^747^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^clone.seriesKeys =   ( Comparable[] )  this.seriesKeys.null (  ) ;^743^^^^^739^747^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^clone.categoryKeys =  ( Comparable[] )  this.categoryKeys.clone (  ) ;clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^743^^^^^739^747^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^clone.seriesKeys =  ( Comparable[] )  result .clone (  )  ;^743^^^^^739^747^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P14_Delete_Statement]^^743^^^^^739^747^clone.seriesKeys =  ( Comparable[] )  this.seriesKeys.clone (  ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^clone.startData = clone ( startData ) ;^744^^^^^739^747^clone.startData = clone ( this.startData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^clone.startData = this.startData ( clone ) ;^744^^^^^739^747^clone.startData = clone ( this.startData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^getCategoryCount.startData = clone ( this.startData ) ;^744^^^^^739^747^clone.startData = clone ( this.startData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^clone.startData =  null ( this.startData ) ;^744^^^^^739^747^clone.startData = clone ( this.startData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^clone.endData = clone ( this.endData ) ;clone.startData = clone ( this.startData ) ;^744^^^^^739^747^clone.startData = clone ( this.startData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^clone.startData = clone ( starts ) ;^744^^^^^739^747^clone.startData = clone ( this.startData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P14_Delete_Statement]^^744^745^^^^739^747^clone.startData = clone ( this.startData ) ; clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^clone.endData = clone ( startData ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^clone.endData = this.endData ( clone ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P7_Replace_Invocation]^getCategoryCount.endData = clone ( this.endData ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^clone.endData =  null ( this.endData ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^clone.startData = clone ( this.startData ) ;clone.endData = clone ( this.endData ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^clone.endData = clone ( starts ) ;^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P14_Delete_Statement]^^745^^^^^739^747^clone.endData = clone ( this.endData ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Object   [VARIABLES] Number[][]  endData  ends  startData  starts  boolean  DefaultIntervalCategoryDataset  clone  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  ( array1 != null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( starts == null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P6_Replace_Expression]^if  ( array2 == null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  ( array1 == true )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys == null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys == null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys != null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( array == null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( columnKey == null )  {^758^^^^^757^773^if  ( array1 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return array2 == null;^758^759^760^^^757^773^if  ( array1 == null )  { return  ( array2 == null ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^758^759^760^^^757^773^if  ( array1 == null )  { return  ( array2 == null ) ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^758^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array2 == null )  {     return false; }^758^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^return  ( array2 != null ) ;^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^return  ( startData == null ) ;^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^return true ;^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P12_Insert_Condition]^if  ( array1 == null )  { return  ( array2 == null ) ; }^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P12_Insert_Condition]^if  ( array == null )  { return  ( array2 == null ) ; }^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P12_Insert_Condition]^if  ( array2 == null )  { return  ( array2 == null ) ; }^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^return false ;^759^^^^^757^773^return  ( array2 == null ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  ( array2 != null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  ( array2 == false )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys == null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys == null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( array1 == null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys != null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( array == null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( columnKey == null )  {^761^^^^^757^773^if  ( array2 == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return false;^761^762^763^^^757^773^if  ( array2 == null )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^761^762^763^^^757^773^if  ( array2 == null )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( array1.length )  !=  ( array2.length )  )  {     return false; }^761^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array1 == null )  {     return array2 == null; }^761^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( obj ==  ( this )  )  {     return true; }^761^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return true;^762^^^^^757^773^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  ( array1.length == array2.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( starts.length != array2.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( array1.length != starts.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( i != array2.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( array1.length != i )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( array2.length.length != array1 )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( array2.length != array1.length )  {^764^^^^^757^773^if  ( array1.length != array2.length )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return false;^764^765^766^^^757^773^if  ( array1.length != array2.length )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^764^765^766^^^757^773^if  ( array1.length != array2.length )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( array1[i], array2[i] )  )  )  {     return false; }^764^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array2 == null )  {     return false; }^764^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return true;^765^^^^^757^773^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( starts[i], array2[i] )  )  {^768^^^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( array1[i], starts[i] )  )  {^768^^^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( array1[i][i] )  )  {^768^^^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( !Arrays.equals ( array2[i], array1[i] )  )  {^768^^^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^return false;^768^769^770^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^768^769^770^^^757^773^if  ( !Arrays.equals ( array1[i], array2[i] )  )  { return false; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( array1.length )  !=  ( array2.length )  )  {     return false; }^768^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( this.seriesKeys, that.seriesKeys )  )  )  {     return false; }^768^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( this.categoryKeys, that.categoryKeys )  )  )  {     return false; }^768^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return true;^769^^^^^757^773^return false;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P1_Replace_Type]^for  (  long  i = 0; i < array1.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^for  ( int i = 0; i <= array1.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^for  ( int i = 3; i < array1.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^for  ( int i = 0; i < starts.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^for  ( array1.lengthnt i = 0; i < i; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^for  ( int i = 0; i < startData.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( ! ( equals ( array1[i], array2[i] )  )  )  {     return false; }^768^^^^^757^773^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P1_Replace_Type]^for  (  short  i = 0; i < array1.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^for  ( int i = 4; i < array1.length; i++ )  {^767^^^^^757^773^for  ( int i = 0; i < array1.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^return false;^772^^^^^757^773^return true;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] equal [RETURN_TYPE] boolean   Number[][] array1 Number[][] array2 [VARIABLES] Number[][]  array1  array2  endData  ends  startData  starts  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^if  ( array != null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^if  ( starts == null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^if  ( array == true )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys != null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys == null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( categoryKeys == null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( array1 == null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( seriesKeys != null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( columnKey == null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P9_Replace_Statement]^if  ( array2 == null )  {^783^^^^^782^794^if  ( array == null )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Null 'array' argument.");^783^784^785^^^782^794^if  ( array == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P16_Remove_Block]^^783^784^785^^^782^794^if  ( array == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( seriesKeys.length )  !=  ( getSeriesCount (  )  )  )  {     throw new IllegalArgumentException ( "The number of series keys does not match the data." ) ; }^783^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^783^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( row >=  ( getRowCount (  )  )  )  ||  ( row < 0 )  )  {     throw new IllegalArgumentException ( "The 'row' argument is out of bounds." ) ; }^783^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( categoryIndex < 0 )  {     throw new IllegalArgumentException (  ( "DefaultIntervalCategoryDataset.setValue: " + "unrecognised category." )  ) ; }^783^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  (  ( series >=  ( getSeriesCount (  )  )  )  ||  ( series < 0 )  )  {     throw new IllegalArgumentException (  ( "No such series : " + series )  ) ; }^783^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^783^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^783^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "Null 'seriesKeys' argument." )   ;^784^^^^^782^794^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( categoryKeys == null )  {     throw new IllegalArgumentException ( "Null 'categoryKeys' argument." ) ; }^784^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( columnKey == null )  {     throw new IllegalArgumentException ( "Null 'columnKey' argument." ) ; }^784^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( array == null )  {     throw new IllegalArgumentException ( "Null 'array' argument." ) ; }^784^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P13_Insert_Block]^if  ( seriesKeys == null )  {     throw new IllegalArgumentException ( "Null 'seriesKeys' argument." ) ; }^784^^^^^782^794^[Delete]^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^return ;^784^^^^^782^794^throw new IllegalArgumentException  (" ")  ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^Comparable[] result = new Comparable[count];Number[][] result = new Number[array.length][];^786^^^^^782^794^Number[][] result = new Number[array.length][];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^Number[] copychild = new Number[child.length];Number[][] result = new Number[array.length][];^786^^^^^782^794^Number[][] result = new Number[array.length][];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P1_Replace_Type]^for  (  long  i = 0; i < array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P2_Replace_Operator]^for  ( int i = 0; i > array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^for  ( int i = -7; i < array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^for  ( int i = -6; i < array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^for  ( int i = i; i < array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^for  ( int i = 0; i < result.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^for  ( int i = 0; i < starts.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^result[i] = child;^791^^^^^782^794^result[i] = copychild;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^result[i]  = null ;^791^^^^^782^794^result[i] = copychild;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^result[i] = name;result[i] = copychild;^791^^^^^782^794^result[i] = copychild;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^Number[] child = starts[i];^788^^^^^782^794^Number[] child = array[i];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P11_Insert_Donor_Statement]^Number[][] result = new Number[array.length][];Number[] copychild = new Number[child.length];^789^^^^^782^794^Number[] copychild = new Number[child.length];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^System.arraycopy ( child, -7, copychild, -7, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^System.arraycopy ( child, -9, copychild, -9, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^System.arraycopy ( child, 0, copychild, 0, i ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^System.arraycopy (  0, copychild, 0, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^System.arraycopy ( child, 0,  0, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^System.arraycopy ( child, 0, copychild, 0 ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^System.arraycopy ( copychild, 0, child, 0, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^System.arraycopy ( child, 0, child.length, 0, copychild ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P14_Delete_Statement]^^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P1_Replace_Type]^for  (  short  i = 0; i < array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^for  ( int i = -3; i < array.length; i++ )  {^787^^^^^782^794^for  ( int i = 0; i < array.length; i++ )  {^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^Number[] child = startData[i];^788^^^^^782^794^Number[] child = array[i];^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^System.arraycopy ( child, i, copychild, i, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P3_Replace_Literal]^System.arraycopy ( child, 6, copychild, 6, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^System.arraycopy ( child.length, 0, copychild, 0, child ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P8_Replace_Mix]^System.arraycopy ( copychild, 0, copychild, 0, child.length ) ;^790^^^^^782^794^System.arraycopy ( child, 0, copychild, 0, child.length ) ;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
[P5_Replace_Variable]^return ends;^793^^^^^782^794^return result;^[CLASS] DefaultIntervalCategoryDataset  [METHOD] clone [RETURN_TYPE] Number[][]   Number[][] array [VARIABLES] Number[][]  array  array1  array2  endData  ends  result  startData  starts  Number[]  child  copychild  boolean  int  i  Comparable[]  categoryKeys  result  seriesKeys  
