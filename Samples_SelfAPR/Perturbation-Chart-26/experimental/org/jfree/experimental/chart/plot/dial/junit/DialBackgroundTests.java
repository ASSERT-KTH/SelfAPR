[P14_Delete_Statement]^^83^^^^^82^84^super ( name ) ;^[CLASS] DialBackgroundTests  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] boolean  String  name  
[P5_Replace_Variable]^return new TestSuite ( DialBackgroundTests.this ) ;^74^^^^^73^75^return new TestSuite ( DialBackgroundTests.class ) ;^[CLASS] DialBackgroundTests  [METHOD] suite [RETURN_TYPE] Test   [VARIABLES] boolean  
[P4_Replace_Constructor]^DialBackground b1 = new DialBackground ( red )  ;^90^^^^^89^109^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground (  ) ;DialBackground b1 = new DialBackground (  ) ;^90^^^^^89^109^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^DialBackground b1 = new DialBackground ( Color.red ) ;DialBackground b1 = new DialBackground (  ) ;^90^^^^^89^109^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground ( Color.red ) ;DialBackground b1 = new DialBackground (  ) ;^90^^^^^89^109^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P4_Replace_Constructor]^DialBackground b2 = new DialBackground ( red )  ;^91^^^^^89^109^DialBackground b2 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^DialBackground b1 = new DialBackground (  ) ;DialBackground b2 = new DialBackground (  ) ;^91^^^^^89^109^DialBackground b2 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^DialBackground b1 = new DialBackground ( Color.red ) ;DialBackground b2 = new DialBackground (  ) ;^91^^^^^89^109^DialBackground b2 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground ( Color.red ) ;DialBackground b2 = new DialBackground (  ) ;^91^^^^^89^109^DialBackground b2 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^DialBackground b2 = null;DialBackground b2 = new DialBackground (  ) ;^91^^^^^89^109^DialBackground b2 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P5_Replace_Variable]^assertTrue ( b2.equals ( b1 )  ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertEquals ( b1.equals ( b2 )  ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertTrue ( b1 .getClass (  )   ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P14_Delete_Statement]^^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^92^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P4_Replace_Constructor]^b1.setPaint ( b1.setPaint (  new GradientPaint ( 1.0F, 2.0F, red, 3.0F, 4.0F, green )   ) ;^95^96^^^^89^109^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P5_Replace_Variable]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.yellow )  ) ;^95^96^^^^89^109^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P8_Replace_Mix]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.2 )  ) ;^95^96^^^^89^109^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P14_Delete_Statement]^^95^96^^^^89^109^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P5_Replace_Variable]^assertFalse ( b2.equals ( b1 )  ) ;^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertEquals ( b1.equals ( b2 )  ) ;^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertFalse ( b1 .getClass (  )   ) ;^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P14_Delete_Statement]^^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertFalse ( b1.equals ( b2 )  ) ;^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertFalse ( b1.equals ( b2 )  ) ;^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertFalse ( b1.equals ( b2 )  ) ;^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( b1.equals ( b2 )  ) ;^97^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P4_Replace_Constructor]^b2.setPaint ( b2.setPaint (  new GradientPaint ( 1.0F, 2.0F, red, 3.0F, 4.0F, green )   ) ;^98^99^^^^89^109^b2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P5_Replace_Variable]^b2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.yellow )  ) ;^98^99^^^^89^109^b2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P14_Delete_Statement]^^98^99^^^^89^109^b2.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P5_Replace_Variable]^assertTrue ( b2.equals ( b1 )  ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertEquals ( b1.equals ( b2 )  ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertTrue ( b1 .getClass (  )   ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P14_Delete_Statement]^^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^100^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^b1.setPaint ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^103^104^^^^89^109^b1.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P5_Replace_Variable]^assertFalse ( b2.equals ( b1 )  ) ;^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertEquals ( b1.equals ( b2 )  ) ;^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertFalse ( b1 .getClass (  )   ) ;^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P14_Delete_Statement]^^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertFalse ( b1.equals ( b2 )  ) ;^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertFalse ( b1.equals ( b2 )  ) ;^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertFalse ( b1.equals ( b2 )  ) ;^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( b1.equals ( b2 )  ) ;^105^^^^^89^109^assertFalse ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^b2.setPaint ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^106^107^^^^89^109^b2.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P14_Delete_Statement]^^106^107^108^109^^89^109^b2.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ; assertTrue ( b1.equals ( b2 )  ) ; }^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P5_Replace_Variable]^assertTrue ( b2.equals ( b1 )  ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertEquals ( b1.equals ( b2 )  ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P7_Replace_Invocation]^assertTrue ( b1 .getClass (  )   ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P14_Delete_Statement]^^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^108^^^^^89^109^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  
[P4_Replace_Constructor]^DialBackground b1 = new DialBackground (  )  ;^115^^^^^114^121^DialBackground b1 = new DialBackground ( Color.red ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground (  ) ;DialBackground b1 = new DialBackground ( Color.red ) ;^115^^^^^114^121^DialBackground b1 = new DialBackground ( Color.red ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^DialBackground b1 = new DialBackground (  ) ;DialBackground b1 = new DialBackground ( Color.red ) ;^115^^^^^114^121^DialBackground b1 = new DialBackground ( Color.red ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground ( Color.red ) ;DialBackground b1 = new DialBackground ( Color.red ) ;^115^^^^^114^121^DialBackground b1 = new DialBackground ( Color.red ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P4_Replace_Constructor]^DialBackground b2 = new DialBackground (  )  ;^116^^^^^114^121^DialBackground b2 = new DialBackground ( Color.red ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground (  ) ;DialBackground b2 = new DialBackground ( Color.red ) ;^116^^^^^114^121^DialBackground b2 = new DialBackground ( Color.red ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^DialBackground b1 = new DialBackground (  ) ;DialBackground b2 = new DialBackground ( Color.red ) ;^116^^^^^114^121^DialBackground b2 = new DialBackground ( Color.red ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^DialBackground b1 = new DialBackground ( Color.red ) ;DialBackground b2 = new DialBackground ( Color.red ) ;^116^^^^^114^121^DialBackground b2 = new DialBackground ( Color.red ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P5_Replace_Variable]^assertTrue ( b2.equals ( b1 )  ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P7_Replace_Invocation]^assertEquals ( b1.equals ( b2 )  ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P7_Replace_Invocation]^assertTrue ( b1 .getClass (  )   ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P14_Delete_Statement]^^117^118^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ; int h1 = b1.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P14_Delete_Statement]^^117^^^^^114^121^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P1_Replace_Type]^short  h1 = b1.hashCode (  ) ;^118^^^^^114^121^int h1 = b1.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P5_Replace_Variable]^int h1 = b2.hashCode (  ) ;^118^^^^^114^121^int h1 = b1.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P7_Replace_Invocation]^int h1 = b1.DialBackground (  ) ;^118^^^^^114^121^int h1 = b1.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P7_Replace_Invocation]^int h1 = b1 .clone (  )  ;^118^^^^^114^121^int h1 = b1.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^int h2 = b2.hashCode (  ) ;int h1 = b1.hashCode (  ) ;^118^^^^^114^121^int h1 = b1.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P14_Delete_Statement]^^118^^^^^114^121^int h1 = b1.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P1_Replace_Type]^short  h2 = b2.hashCode (  ) ;^119^^^^^114^121^int h2 = b2.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P5_Replace_Variable]^int h2 = b1.hashCode (  ) ;^119^^^^^114^121^int h2 = b2.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P7_Replace_Invocation]^int h2 = b2.DialBackground (  ) ;^119^^^^^114^121^int h2 = b2.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^int h1 = b1.hashCode (  ) ;int h2 = b2.hashCode (  ) ;^119^^^^^114^121^int h2 = b2.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P8_Replace_Mix]^int h2 = b1 .clone (  )  ;^119^^^^^114^121^int h2 = b2.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P14_Delete_Statement]^^119^^^^^114^121^int h2 = b2.hashCode (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P5_Replace_Variable]^assertEquals (  h2 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P5_Replace_Variable]^assertEquals ( h1 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P5_Replace_Variable]^assertEquals ( h2, h1 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P14_Delete_Statement]^^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertEquals ( h1, h2 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertEquals ( h1, h2 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertEquals ( h1, h2 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertEquals ( h1, h2 ) ;^120^^^^^114^121^assertEquals ( h1, h2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  int  h1  h2  
[P4_Replace_Constructor]^DialBackground b1 = new DialBackground ( red )  ;^128^^^^^126^156^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground (  ) ;DialBackground b1 = new DialBackground (  ) ;^128^^^^^126^156^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^DialBackground b1 = new DialBackground ( Color.red ) ;DialBackground b1 = new DialBackground (  ) ;^128^^^^^126^156^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground ( Color.red ) ;DialBackground b1 = new DialBackground (  ) ;^128^^^^^126^156^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground (  ) ;DialBackground b2 = null;^129^^^^^126^156^DialBackground b2 = null;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^b2 =  ( DialBackground )  b2.clone (  ) ;^131^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^b2 =  ( DialBackground )  b1.DialBackground (  ) ;^131^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P8_Replace_Mix]^b2 =   ( DialBackground )  null.clone (  ) ;^131^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^b2 =  ( DialBackground )  in.readObject (  ) ;b2 =  ( DialBackground )  b1.clone (  ) ;^131^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^b1 = new DialBackground (  ) ;b2 =  ( DialBackground )  b1.clone (  ) ;^131^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^131^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^b2 =  ( DialBackground )  b1 .hashCode (  )  ;^131^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^134^^^^^126^156^e.printStackTrace (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P2_Replace_Operator]^assertTrue ( b1 == b2 ) ;^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b2 != b1 ) ;^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( b1 != b2 ) ;^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertTrue ( b1 != b2 ) ;^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertTrue ( b1 != b2 ) ;^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertTrue ( b1 != b2 ) ;^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( b1 != b2 ) ;^136^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P2_Replace_Operator]^assertTrue ( b1.getClass (  )  != b2.getClass (  )  ) ;^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b2.getClass (  )  == b1.getClass (  )  ) ;^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( b1.getClass (  )  == b2.getClass (  )  ) ;^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( b1.DialBackground (  )  == b2.getClass (  )  ) ;^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( b1 .equals ( b1 )   == b2^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^137^138^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ; assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b2.getClass (  )  == b2.getClass (  )  ) ;^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b1.getClass (  )  == b1.getClass (  )  ) ;^137^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b2.equals ( b1 )  ) ;^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( b1.equals ( b2 )  ) ;^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^138^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P4_Replace_Constructor]^b1 = b1 =  new DialBackground ( red )  ;^141^^^^^126^156^b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P8_Replace_Mix]^b1 =  new DialBackground ( red )  ;^141^^^^^126^156^b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^b2 =  ( DialBackground )  b1.clone (  ) ;b1 = new DialBackground (  ) ;^141^^^^^126^156^b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^b2 =  ( DialBackground )  in.readObject (  ) ;b1 = new DialBackground (  ) ;^141^^^^^126^156^b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P4_Replace_Constructor]^b1.setPaint ( b1.setPaint (  new GradientPaint ( 1.0F, 2.0F, red, 3.0F, 4.0F, yellow )   ) ;^142^143^^^^126^156^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^142^143^^^^126^156^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.this )  ) ;^142^143^^^^126^156^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^142^143^^^^126^156^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^b1.setPaint ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^144^145^^^^126^156^b1.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^144^145^146^147^148^126^156^b1.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ; b2 = null; try { b2 =  ( DialBackground )  b1.clone (  ) ; }^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P8_Replace_Mix]^b2 = false;^146^^^^^126^156^b2 = null;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^b2 =  ( DialBackground )  b2.clone (  ) ;^148^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^b2 =  ( DialBackground )  b1.DialBackground (  ) ;^148^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P8_Replace_Mix]^b2 =   ( DialBackground )  null.clone (  ) ;^148^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^b2 =  ( DialBackground )  in.readObject (  ) ;b2 =  ( DialBackground )  b1.clone (  ) ;^148^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^b1 = new DialBackground (  ) ;b2 =  ( DialBackground )  b1.clone (  ) ;^148^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^148^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^b2 =  ( DialBackground )  b1 .hashCode (  )  ;^148^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P8_Replace_Mix]^b2 =  ( DialBackground )  b2 .hashCode (  )  ;^148^^^^^126^156^b2 =  ( DialBackground )  b1.clone (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^151^^^^^126^156^e.printStackTrace (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P2_Replace_Operator]^assertTrue ( b1 == b2 ) ;^153^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b2 != b1 ) ;^153^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( b1 != b2 ) ;^153^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^153^154^^^^126^156^assertTrue ( b1 != b2 ) ; assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertTrue ( b1 != b2 ) ;^153^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertTrue ( b1 != b2 ) ;^153^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertTrue ( b1 != b2 ) ;^153^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( b1 != b2 ) ;^153^^^^^126^156^assertTrue ( b1 != b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P2_Replace_Operator]^assertTrue ( b1.getClass (  )  <= b2.getClass (  )  ) ;^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b2.getClass (  )  == b1.getClass (  )  ) ;^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( b1.getClass (  )  == b2.getClass (  )  ) ;^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( b1.DialBackground (  )  == b2.getClass (  )  ) ;^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( b1 .equals ( b1 )   == b2^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b2.getClass (  )  == b2.getClass (  )  ) ;^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b1.getClass (  )  == b1.getClass (  )  ) ;^154^^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^154^155^^^^126^156^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ; assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( b2.equals ( b1 )  ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( b1.equals ( b2 )  ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( b1 .getClass (  )   ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P14_Delete_Statement]^^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1.getClass (  )  == b2.getClass (  )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( b1, b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertTrue ( b1.equals ( b2 )  ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( b1.equals ( b2 )  ) ;^155^^^^^126^156^assertTrue ( b1.equals ( b2 )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  CloneNotSupportedException  e  
[P4_Replace_Constructor]^DialBackground b1 = new DialBackground ( red )  ;^164^^^^^149^179^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground (  ) ;DialBackground b1 = new DialBackground (  ) ;^164^^^^^149^179^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^DialBackground b1 = new DialBackground ( Color.red ) ;DialBackground b1 = new DialBackground (  ) ;^164^^^^^149^179^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground ( Color.red ) ;DialBackground b1 = new DialBackground (  ) ;^164^^^^^149^179^DialBackground b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^DialBackground b2 = new DialBackground (  ) ;DialBackground b2 = null;^165^^^^^150^180^DialBackground b2 = null;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^b2 =   ( DialBackground )  null.readObject (  ) ;^175^^^^^160^190^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^b2 =  ( DialBackground )  b1.clone (  ) ;b2 =  ( DialBackground )  in.readObject (  ) ;^175^^^^^160^190^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^b1 = new DialBackground (  ) ;b2 =  ( DialBackground )  in.readObject (  ) ;^175^^^^^160^190^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^174^^^^^159^189^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^out.writeObject ( b2 ) ;^170^^^^^155^185^out.writeObject ( b1 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^170^^^^^155^185^out.writeObject ( b1 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.writeObject ( b1 ) ;^170^^^^^155^185^out.writeObject ( b1 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^out.writeObject (  ) ;^171^^^^^156^186^out.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^171^^^^^156^186^out.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^in.close (  ) ;out.close (  ) ;^171^^^^^156^186^out.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.writeObject ( b1 ) ;out.close (  ) ;^171^^^^^156^186^out.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^174^^^^^159^189^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^b2 =  ( DialBackground )  in .close (  )  ;^175^^^^^160^190^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^175^176^^^^160^190^b2 =  ( DialBackground )  in.readObject (  ) ; in.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^176^^^^^161^191^in.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.close (  ) ;in.close (  ) ;^176^^^^^161^191^in.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^173^174^^^^158^188^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^out .close (  )  ;^170^^^^^155^185^out.writeObject ( b1 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^174^175^^^^159^189^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ; b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^175^^^^^160^190^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^179^^^^^164^194^e.printStackTrace (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals (  b2 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals ( b1 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals ( b2, b1 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertEquals ( b1, b2 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertEquals ( b1, b2 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertEquals ( b1, b2 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertEquals ( b1, b2 ) ;^181^^^^^166^196^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P4_Replace_Constructor]^b1 = b1 =  new DialBackground ( red )  ;^184^^^^^169^199^b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^b1 =  new DialBackground ( red )  ;^184^^^^^169^199^b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^b2 =  ( DialBackground )  b1.clone (  ) ;b1 = new DialBackground (  ) ;^184^^^^^169^199^b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^b2 =  ( DialBackground )  in.readObject (  ) ;b1 = new DialBackground (  ) ;^184^^^^^169^199^b1 = new DialBackground (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P4_Replace_Constructor]^b1.setPaint ( b1.setPaint (  new GradientPaint ( 1.0F, 2.0F, red, 3.0F, 4.0F, yellow )   ) ;^185^186^^^^170^200^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^185^186^^^^170^200^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.this )  ) ;^185^186^^^^170^200^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^185^186^^^^170^200^b1.setPaint ( new GradientPaint ( 1.0f, 2.0f, Color.red, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^b1.setPaint ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^187^188^^^^172^202^b1.setGradientPaintTransformer ( new StandardGradientPaintTransformer ( GradientPaintTransformType.CENTER_VERTICAL )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^b2 = true;^189^^^^^174^204^b2 = null;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^b2 =   ( DialBackground )  null.readObject (  ) ;^199^^^^^184^214^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^b2 =  ( DialBackground )  b1.clone (  ) ;b2 =  ( DialBackground )  in.readObject (  ) ;^199^^^^^184^214^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^b1 = new DialBackground (  ) ;b2 =  ( DialBackground )  in.readObject (  ) ;^199^^^^^184^214^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^197^198^^^^182^212^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^198^^^^^183^213^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^out.writeObject ( b2 ) ;^194^^^^^179^209^out.writeObject ( b1 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^194^^^^^179^209^out.writeObject ( b1 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.writeObject ( b1 ) ;^194^^^^^179^209^out.writeObject ( b1 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^out.writeObject (  ) ;^195^^^^^180^210^out.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^195^^^^^180^210^out.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^in.close (  ) ;out.close (  ) ;^195^^^^^180^210^out.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.writeObject ( b1 ) ;out.close (  ) ;^195^^^^^180^210^out.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^198^199^^^^183^213^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ; b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^b2 =  ( DialBackground )  in .close (  )  ;^199^^^^^184^214^b2 =  ( DialBackground )  in.readObject (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^199^200^^^^184^214^b2 =  ( DialBackground )  in.readObject (  ) ; in.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^200^^^^^185^215^in.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.close (  ) ;in.close (  ) ;^200^^^^^185^215^in.close (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^203^^^^^188^218^e.printStackTrace (  ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals (  b2 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals ( b1 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals ( b2, b1 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1.equals ( b2 )  ) ;assertEquals ( b1, b2 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertTrue ( b1 != b2 ) ;assertEquals ( b1, b2 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertFalse ( b1.equals ( b2 )  ) ;assertEquals ( b1, b2 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertEquals ( b1, b2 ) ;^205^^^^^190^220^assertEquals ( b1, b2 ) ;^[CLASS] DialBackgroundTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] DialBackground  b1  b2  boolean  ObjectOutput  out  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
