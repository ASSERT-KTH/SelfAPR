[P14_Delete_Statement]^^81^^^^^80^82^super ( name ) ;^[CLASS] SimpleDialFrameTests  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] boolean  String  name  
[P8_Replace_Mix]^return new TestSuite ( SimpleDialFrameTests.1 ) ;^72^^^^^71^73^return new TestSuite ( SimpleDialFrameTests.class ) ;^[CLASS] SimpleDialFrameTests  [METHOD] suite [RETURN_TYPE] Test   [VARIABLES] boolean  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^88^^^^^73^103^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = null;SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^88^^^^^73^103^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^89^^^^^74^104^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = null;SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^89^^^^^74^104^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertTrue ( f2.equals ( f1 )  ) ;^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertTrue ( f1 .getClass (  )   ) ;^90^^^^^75^105^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P3_Replace_Literal]^f1.setRadius ( 0.05 ) ;^93^^^^^78^108^f1.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^f1 .equals ( f2 )  ;^93^^^^^78^108^f1.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^93^^^^^78^108^f1.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^f2.setRadius ( 0.2 ) ;f1.setRadius ( 0.2 ) ;^93^^^^^78^108^f1.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertFalse ( f2.equals ( f1 )  ) ;^94^^^^^79^109^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^94^^^^^79^109^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^94^95^^^^79^109^assertFalse ( f1.equals ( f2 )  ) ; f2.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.equals ( f2 )  ) ;assertFalse ( f1.equals ( f2 )  ) ;^94^^^^^79^109^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^94^^^^^79^109^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^94^^^^^79^109^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^94^^^^^79^109^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P3_Replace_Literal]^f2.setRadius ( 0.04 ) ;^95^^^^^80^110^f2.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P8_Replace_Mix]^f2 .equals ( f1 )  ;^95^^^^^80^110^f2.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^95^^^^^80^110^f2.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^f1.setRadius ( 0.2 ) ;f2.setRadius ( 0.2 ) ;^95^^^^^80^110^f2.setRadius ( 0.2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertTrue ( f2.equals ( f1 )  ) ;^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertTrue ( f1 .getClass (  )   ) ;^96^^^^^81^111^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P4_Replace_Constructor]^f1.setBackgroundPaint ( f1.setBackgroundPaint (  new GradientPaint ( 1.0F, 2.0F, blue, 3.0F, 4.0F, green )   ) ;^99^100^^^^84^114^f1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^f1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.yellow )  ) ;^99^100^^^^84^114^f1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^99^100^^^^84^114^f1.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertFalse ( f2.equals ( f1 )  ) ;^101^^^^^86^116^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^101^^^^^86^116^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^101^^^^^86^116^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.equals ( f2 )  ) ;assertFalse ( f1.equals ( f2 )  ) ;^101^^^^^86^116^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^101^^^^^86^116^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^101^^^^^86^116^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^101^^^^^86^116^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P4_Replace_Constructor]^f2.setBackgroundPaint ( f2.setBackgroundPaint (  new GradientPaint ( 1.0F, 2.0F, blue, 3.0F, 4.0F, green )   ) ;^102^103^^^^87^117^f2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^f2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.yellow )  ) ;^102^103^^^^87^117^f2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^102^103^^^^87^117^f2.setBackgroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.white, 3.0f, 4.0f, Color.yellow )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertTrue ( f2.equals ( f1 )  ) ;^104^^^^^89^119^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^104^^^^^89^119^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^104^^^^^89^119^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^104^^^^^89^119^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^104^^^^^89^119^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^104^^^^^89^119^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^104^^^^^89^119^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^104^^^^^89^119^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P3_Replace_Literal]^f1.setoregroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^107^108^^^^92^122^f1.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P4_Replace_Constructor]^f1.setForegroundPaint ( f1.setForegroundPaint (  new GradientPaint ( 1.0F, 2.0F, white, 3.0F, 4.0F, yellow )   ) ;^107^108^^^^92^122^f1.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^f1.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^107^108^^^^92^122^f1.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^107^108^^^^92^122^f1.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertFalse ( f2.equals ( f1 )  ) ;^109^^^^^94^124^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^109^^^^^94^124^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertFalse ( f1 .getClass (  )   ) ;^109^^^^^94^124^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^109^^^^^94^124^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.equals ( f2 )  ) ;assertFalse ( f1.equals ( f2 )  ) ;^109^^^^^94^124^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^109^^^^^94^124^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^109^^^^^94^124^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^109^^^^^94^124^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P3_Replace_Literal]^f2.setoregroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^110^111^^^^95^125^f2.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P4_Replace_Constructor]^f2.setForegroundPaint ( f2.setForegroundPaint (  new GradientPaint ( 1.0F, 2.0F, white, 3.0F, 4.0F, yellow )   ) ;^110^111^^^^95^125^f2.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^f2.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color. 3.0f, 4.0f, Color.green )  ) ;^110^111^^^^95^125^f2.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P8_Replace_Mix]^f2 .setBackgroundPaint ( this )  ;^110^111^^^^95^125^f2.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^110^111^^^^95^125^f2.setForegroundPaint ( new GradientPaint ( 1.0f, 2.0f, Color.blue, 3.0f, 4.0f, Color.green )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertTrue ( f2.equals ( f1 )  ) ;^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P8_Replace_Mix]^assertTrue ( f1 .getClass (  )   ) ;^112^^^^^97^127^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^115^116^^^^100^130^f1.setStroke ( new BasicStroke ( 2.4f )  ) ; assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertFalse ( f2.equals ( f1 )  ) ;^116^^^^^101^131^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^116^^^^^101^131^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^116^^^^^101^131^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.equals ( f2 )  ) ;assertFalse ( f1.equals ( f2 )  ) ;^116^^^^^101^131^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^116^^^^^101^131^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^116^^^^^101^131^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertFalse ( f1.equals ( f2 )  ) ;^116^^^^^101^131^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertFalse ( f1 .getClass (  )   ) ;^116^^^^^101^131^assertFalse ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^117^118^^^^102^132^f2.setStroke ( new BasicStroke ( 2.4f )  ) ; assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P5_Replace_Variable]^assertTrue ( f2.equals ( f1 )  ) ;^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P14_Delete_Statement]^^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P8_Replace_Mix]^assertTrue ( f1 .getClass (  )   ) ;^118^^^^^103^133^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testEquals [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^125^^^^^124^131^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = null;SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^125^^^^^124^131^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^126^^^^^124^131^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = null;SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^126^^^^^124^131^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P5_Replace_Variable]^assertTrue ( f2.equals ( f1 )  ) ;^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P7_Replace_Invocation]^assertTrue ( f1 .getClass (  )   ) ;^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P14_Delete_Statement]^^127^128^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ; int h1 = f1.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P14_Delete_Statement]^^127^^^^^124^131^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P1_Replace_Type]^short  h1 = f1.hashCode (  ) ;^128^^^^^124^131^int h1 = f1.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P7_Replace_Invocation]^int h1 = f1.setRadius (  ) ;^128^^^^^124^131^int h1 = f1.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P8_Replace_Mix]^int h1 = f2.setRadius (  ) ;^128^^^^^124^131^int h1 = f1.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^int h2 = f2.hashCode (  ) ;int h1 = f1.hashCode (  ) ;^128^^^^^124^131^int h1 = f1.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P5_Replace_Variable]^int h1 = f2.hashCode (  ) ;^128^^^^^124^131^int h1 = f1.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P14_Delete_Statement]^^128^129^^^^124^131^int h1 = f1.hashCode (  ) ; int h2 = f2.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P1_Replace_Type]^short  h2 = f2.hashCode (  ) ;^129^^^^^124^131^int h2 = f2.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P5_Replace_Variable]^int h2 = f1.hashCode (  ) ;^129^^^^^124^131^int h2 = f2.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P7_Replace_Invocation]^int h2 = f2.setRadius (  ) ;^129^^^^^124^131^int h2 = f2.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^int h1 = f1.hashCode (  ) ;int h2 = f2.hashCode (  ) ;^129^^^^^124^131^int h2 = f2.hashCode (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P14_Delete_Statement]^^129^130^^^^124^131^int h2 = f2.hashCode (  ) ; assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P5_Replace_Variable]^assertEquals (  h2 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P5_Replace_Variable]^assertEquals ( h1 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P5_Replace_Variable]^assertEquals ( h2, h1 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P14_Delete_Statement]^^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( f1.equals ( f2 )  ) ;assertEquals ( h1, h2 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertEquals ( h1, h2 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertEquals ( h1, h2 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertEquals ( h1, h2 ) ;^130^^^^^124^131^assertEquals ( h1, h2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testHashCode [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  int  h1  h2  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^137^^^^^136^148^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = null;SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^137^^^^^136^148^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;SimpleDialFrame f2 = null;^138^^^^^136^148^SimpleDialFrame f2 = null;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;SimpleDialFrame f2 = null;^138^^^^^136^148^SimpleDialFrame f2 = null;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P5_Replace_Variable]^f2 =  ( SimpleDialFrame )  f2.clone (  ) ;^140^^^^^136^148^f2 =  ( SimpleDialFrame )  f1.clone (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P7_Replace_Invocation]^f2 =  ( SimpleDialFrame )  f1.setRadius (  ) ;^140^^^^^136^148^f2 =  ( SimpleDialFrame )  f1.clone (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P7_Replace_Invocation]^f2 =  ( SimpleDialFrame )  f1 .hashCode (  )  ;^140^^^^^136^148^f2 =  ( SimpleDialFrame )  f1.clone (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P8_Replace_Mix]^f2 =   ( SimpleDialFrame )  null.clone (  ) ;^140^^^^^136^148^f2 =  ( SimpleDialFrame )  f1.clone (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^f2 =  ( SimpleDialFrame )  in.readObject (  ) ;f2 =  ( SimpleDialFrame )  f1.clone (  ) ;^140^^^^^136^148^f2 =  ( SimpleDialFrame )  f1.clone (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P14_Delete_Statement]^^140^^^^^136^148^f2 =  ( SimpleDialFrame )  f1.clone (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P14_Delete_Statement]^^143^^^^^136^148^e.printStackTrace (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P2_Replace_Operator]^assertTrue ( f1 >= f2 ) ;^145^^^^^136^148^assertTrue ( f1 != f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( f2 != f1 ) ;^145^^^^^136^148^assertTrue ( f1 != f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( f1 != f2 ) ;^145^^^^^136^148^assertTrue ( f1 != f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P14_Delete_Statement]^^145^^^^^136^148^assertTrue ( f1 != f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( f1.equals ( f2 )  ) ;assertTrue ( f1 != f2 ) ;^145^^^^^136^148^assertTrue ( f1 != f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertTrue ( f1 != f2 ) ;^145^^^^^136^148^assertTrue ( f1 != f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( f1 != f2 ) ;^145^^^^^136^148^assertTrue ( f1 != f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertTrue ( f1 != f2 ) ;^145^^^^^136^148^assertTrue ( f1 != f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P2_Replace_Operator]^assertTrue ( f1.getClass (  )  >= f2.getClass (  )  ) ;^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( f2.getClass (  )  == f1.getClass (  )  ) ;^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( f1.getClass (  )  == f2.getClass (  )  ) ;^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( f1.setRadius (  )  == f2.getClass (  )  ) ;^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( f1 .equals ( f2 )   == f2^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P14_Delete_Statement]^^146^147^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ; assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( f1.equals ( f2 )  ) ;assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( f2.getClass (  )  == f2.getClass (  )  ) ;^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P8_Replace_Mix]^assertTrue ( f2.setRadius (  )  == f2.getClass (  )  ) ;^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( f1.getClass (  )  == f1.getClass (  )  ) ;^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertTrue ( f1 .equals ( f1 )   == f2^146^^^^^136^148^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P5_Replace_Variable]^assertTrue ( f2.equals ( f1 )  ) ;^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P7_Replace_Invocation]^assertEquals ( f1.equals ( f2 )  ) ;^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P8_Replace_Mix]^assertTrue ( f1 .getClass (  )   ) ;^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P14_Delete_Statement]^^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( f1, f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( f1.getClass (  )  == f2.getClass (  )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertTrue ( f1.equals ( f2 )  ) ;^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertTrue ( f1.equals ( f2 )  ) ;^147^^^^^136^148^assertTrue ( f1.equals ( f2 )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testCloning [RETURN_TYPE] void   [VARIABLES] boolean  SimpleDialFrame  f1  f2  CloneNotSupportedException  e  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^155^^^^^154^173^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = null;SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^155^^^^^154^173^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^SimpleDialFrame f1 = new SimpleDialFrame (  ) ;SimpleDialFrame f2 = null;^156^^^^^154^173^SimpleDialFrame f2 = null;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^SimpleDialFrame f2 = new SimpleDialFrame (  ) ;SimpleDialFrame f2 = null;^156^^^^^154^173^SimpleDialFrame f2 = null;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^f2 =   ( SimpleDialFrame )  null.readObject (  ) ;^166^^^^^154^173^f2 =  ( SimpleDialFrame )  in.readObject (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^f2 =  ( SimpleDialFrame )  f1.clone (  ) ;f2 =  ( SimpleDialFrame )  in.readObject (  ) ;^166^^^^^154^173^f2 =  ( SimpleDialFrame )  in.readObject (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^165^^^^^154^173^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer .ByteArrayOutputStream (  )   )  ) ;^164^165^^^^154^173^ObjectInput in = new ObjectInputStream ( new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^out.writeObject ( f2 ) ;^161^^^^^154^173^out.writeObject ( f1 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^161^162^^^^154^173^out.writeObject ( f1 ) ; out.close (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.writeObject ( f1 ) ;^161^^^^^154^173^out.writeObject ( f1 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P7_Replace_Invocation]^out.writeObject (  ) ;^162^^^^^154^173^out.close (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^162^^^^^154^173^out.close (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^in.close (  ) ;out.close (  ) ;^162^^^^^154^173^out.close (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.writeObject ( f1 ) ;out.close (  ) ;^162^^^^^154^173^out.close (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^165^166^^^^154^173^new ByteArrayInputStream ( buffer.toByteArray (  )  )  ) ; f2 =  ( SimpleDialFrame )  in.readObject (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P8_Replace_Mix]^f2 =  ( SimpleDialFrame )  in .close (  )  ;^166^^^^^154^173^f2 =  ( SimpleDialFrame )  in.readObject (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^166^^^^^154^173^f2 =  ( SimpleDialFrame )  in.readObject (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^167^^^^^154^173^in.close (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^out.close (  ) ;in.close (  ) ;^167^^^^^154^173^in.close (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^161^^^^^154^173^out.writeObject ( f1 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^166^167^^^^154^173^f2 =  ( SimpleDialFrame )  in.readObject (  ) ; in.close (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^170^^^^^154^173^e.printStackTrace (  ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals (  f2 ) ;^172^^^^^154^173^assertEquals ( f1, f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals ( f1 ) ;^172^^^^^154^173^assertEquals ( f1, f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P5_Replace_Variable]^assertEquals ( f2, f1 ) ;^172^^^^^154^173^assertEquals ( f1, f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P14_Delete_Statement]^^172^^^^^154^173^assertEquals ( f1, f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertTrue ( f1.equals ( f2 )  ) ;assertEquals ( f1, f2 ) ;^172^^^^^154^173^assertEquals ( f1, f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertEquals ( h1, h2 ) ;assertEquals ( f1, f2 ) ;^172^^^^^154^173^assertEquals ( f1, f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertFalse ( f1.equals ( f2 )  ) ;assertEquals ( f1, f2 ) ;^172^^^^^154^173^assertEquals ( f1, f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
[P11_Insert_Donor_Statement]^assertTrue ( f1 != f2 ) ;assertEquals ( f1, f2 ) ;^172^^^^^154^173^assertEquals ( f1, f2 ) ;^[CLASS] SimpleDialFrameTests  [METHOD] testSerialization [RETURN_TYPE] void   [VARIABLES] boolean  ObjectOutput  out  SimpleDialFrame  f1  f2  ByteArrayOutputStream  buffer  ObjectInput  in  Exception  e  
