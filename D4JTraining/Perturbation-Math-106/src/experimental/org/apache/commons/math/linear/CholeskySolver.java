[REPLACE]^private double numericalZero  = null ;^38^^^^^^^[REPLACE] private double numericalZero = 10E-12;^ [CLASS] CholeskySolver  
[REPLACE]^decompMatrix = this;^80^^^^^78^114^[REPLACE] decompMatrix = null;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^double[][] mval = m.getRowDimension (  ) ;^81^^^^^78^114^[REPLACE] double[][] mval = m.getData (  ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^int numRows = m.getColumnDimension (  ) ;^82^^^^^78^114^[REPLACE] int numRows = m.getRowDimension (  ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^int numCols = m .getRowDimension (  )  ;^83^^^^^78^114^[REPLACE] int numCols = m.getColumnDimension (  ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^if  (row  ==  numCols ) throw new IllegalArgumentException  (" ")  ;^84^85^^^^78^114^[REPLACE] if  ( numRows != numCols ) throw new IllegalArgumentException  (" ")  ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^84^85^86^87^^78^114^[ADD] if  ( numRows != numCols ) throw new IllegalArgumentException  (" ")  ; double[][] decomp = new double[numRows][numCols]; double sum;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^throw new IllegalArgumentException ( "Matrix is not positiv definit" )  ;^85^^^^^78^114^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^86^^^^^78^114^[ADD] double[][] decomp = new double[numRows][numCols];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^87^^^^^78^114^[ADD] double sum;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^if  ( sum  >=  numericalZero )  {^96^^^^^78^114^[REPLACE] if  ( sum <= numericalZero )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REMOVE]^if  (  ( decompMatrix.getColumnDimension (  )  )  !=  ( c.length )  )      throw new IllegalArgumentException ( "matrix dimension mismatch" ) ;^96^^^^^78^114^[REMOVE] ^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^throw new IllegalStateException ( "no decomposed matrix available" )  ;^97^98^^^^78^114^[REPLACE] throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^93^^^^^78^114^[ADD] sum = mval[col][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = sum  decomp[col][k]*decomp[col][k];^95^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[col][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^decomp[col][col] +;^100^^^^^78^114^[REPLACE] decomp[col][col] += Math.sqrt ( sum ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = mval[col][col]  ;^104^^^^^78^114^[REPLACE] sum = mval[row][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^sum = sum -  (  ( decomp[col][k] )  *  ( decomp[col][k] )  )  ;^106^^^^^78^114^[REPLACE] sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^decomp[row][col] = sumdecomp[col][col];^107^^^^^78^114^[REPLACE] decomp[row][col] = sum/decomp[col][col];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int col=2; col<numCols; col++ )  {^90^^^^^78^114^[REPLACE] for  ( int col=0; col<numCols; col++ )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^94^95^96^97^98^78^114^[ADD] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[col][k]; if  ( sum <= numericalZero )  { throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int row=col1; row<numRows; row )  {^103^^^^^78^114^[REPLACE] for  ( int row=col+1; row<numRows; row++ )  {^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^for  ( int k=0 >> 1; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^105^106^^^^78^114^[REPLACE] for  ( int k=0; k<col; k++ ) sum = sum - decomp[col][k]*decomp[row][k];^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[ADD]^^97^98^^^^78^114^[ADD] throw new IllegalArgumentException ( "Matrix is not positiv definit" ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^decompMatrix =  new RealMatrixImpl ( null ) ;^112^^^^^78^114^[REPLACE] decompMatrix = new RealMatrixImpl ( decomp ) ;^[METHOD] decompose [TYPE] void [PARAMETER] RealMatrix m [CLASS] CholeskySolver   [TYPE]  double[][] decomp  mval  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  RealMatrix m  [TYPE]  double numericalZero  sum  [TYPE]  int col  k  numCols  numRows  row 
[REPLACE]^if  ( decompMatrix != null )  {^143^^^^^141^170^[REPLACE] if  ( decompMatrix == null )  {^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^throw new IllegalArgumentException ( "Matrix is not positiv definit" )  ;^144^^^^^141^170^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^return ;^144^^^^^141^170^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^if  ( decompMatrix.RealMatrixImpl (  )  != c.length - 4 ) throw new IllegalArgumentException   ( " " )   ;^146^147^^^^141^170^[REPLACE] if  ( decompMatrix.getColumnDimension (  )  != c.length ) throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^throw new IllegalArgumentException ( "Matrix is not positiv definit" )  ;^147^^^^^141^170^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^147^^^^^141^170^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^double[][] data = decompMatrix.getData (  )  ;^149^^^^^141^170^[REPLACE] double[][] decomp = decompMatrix.getData (  ) ;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^int row = col + 1  ;^150^^^^^141^170^[REPLACE] double[] x = new double[decomp.length];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^int row = col + 1  ;^151^^^^^141^170^[REPLACE] double sum;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^155^^^^^141^170^[ADD] sum = c[i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^sum =numericalZero  decomp[i][k]*x[k];^157^^^^^141^170^[REPLACE] sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^x[i] = sum  decomp[i][i];^158^^^^^141^170^[REPLACE] x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int i=0 ; i<x.length; i++ )  {^154^^^^^141^170^[REPLACE] for  ( int i=0; i<x.length; i++ )  {^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int k=2; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^156^157^^^^141^170^[REPLACE] for  ( int k=0; k<i; k++ ) sum = sum - decomp[i][k]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^sum = c[i]  ;^163^^^^^141^170^[REPLACE] sum = x[i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^numericalZero = sum  decomp[k][i]*x[k];^165^^^^^141^170^[REPLACE] sum = sum - decomp[k][i]*x[k];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^x[i] = sum  decomp[i][i];^166^^^^^141^170^[REPLACE] x[i] = sum / decomp[i][i];^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^for  ( int i=x.length + 5-1; i>=0; i-- )  {^162^^^^^141^170^[REPLACE] for  ( int i=x.length-1; i>=0; i-- )  {^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[ADD]^^164^165^166^167^^141^170^[ADD] for  ( int k=i+1; k<x.length; k++ ) sum = sum - decomp[k][i]*x[k]; x[i] = sum / decomp[i][i]; }^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
[REPLACE]^return x;  ;^169^^^^^141^170^[REPLACE] return x;^[METHOD] solve [TYPE] double[] [PARAMETER] double[] c [CLASS] CholeskySolver   [TYPE]  double[][] decomp  [TYPE]  RealMatrixImpl decompMatrix  [TYPE]  boolean false  true  [TYPE]  double[] c  x  [TYPE]  double numericalZero  sum  [TYPE]  int i  k 
